var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.073,1,0.779]],["body/components/AckButtonComponent.html",[0,0.145,1,1.251,2,0.122,3,0.092,4,0.792,5,1.553,6,0.761,7,0.077,8,5.163,9,5.64,10,2.474,11,0.331,12,1.679,13,0.715,14,3.38,15,3.326,16,3.025,17,3.116,18,4.257,19,0.951,20,1.151,21,4.939,22,0.825,23,1.627,24,1.435,25,1.514,26,0.992,27,3.823,28,0.992,29,3.823,30,0.308,31,0.874,32,1.249,33,3.905,34,0.803,35,6.199,36,5.369,37,5.369,38,1.251,39,3.241,40,1.798,41,0.925,42,0.546,43,3.01,44,6.28,45,6.28,46,0.706,47,4.257,48,0.636,49,0.7,50,0.951,51,0.016,52,0.689,53,0.803,54,0.767,55,1.351,56,2.943,57,0.925,58,4.313,59,2.841,60,4.822,61,5.369,62,2.68,63,1.798,64,1.678,65,3.475,66,2.407,67,4.915,68,0.774,69,2.512,70,1.727,71,3.475,72,1.991,73,4.822,74,1.798,75,3.475,76,1.316,77,1.798,78,3.823,79,3.823,80,3.241,81,3.823,82,4.257,83,4.257,84,0.93,85,3.475,86,3.823,87,5.369,88,3.475,89,1.61,90,4.087,91,3.241,92,3.241,93,3.025,94,3.01,95,0.245,96,0.122,97,3.01,98,2.474,99,0.894,100,0.106,101,0.007,102,1.011,103,1.214,104,1.008,105,3.01,106,3.01,107,3.01,108,0.912,109,2.474,110,1.186,111,3.01,112,2.703,113,3.475,114,3.475,115,0.472,116,1.167,117,1.167,118,1.121,119,1.471,120,0.825,121,1.167,122,0.701,123,0.825,124,0.673,125,0.825,126,0.518,127,0.825,128,0.701,129,0.825,130,0.701,131,1.103,132,1.471,133,0.673,134,0.825,135,0.731,136,1.354,137,0.701,138,1.354,139,0.701,140,1.354,141,0.701,142,0.825,143,0.701,144,0.825,145,0.701,146,0.792,147,0.701,148,0.825,149,0.673,150,0.825,151,0.701,152,0.701,153,0.673,154,0.825,155,0.701,156,0.701,157,0.825,158,0.673,159,0.825,160,0.701,161,0.673,162,0.825,163,0.673,164,0.592,165,1.167,166,0.673,167,0.761,168,0.701,169,1.269,170,0.761,171,1.199,172,0.673,173,0.825,174,0.701,175,0.472,176,0.731,177,0.701,178,0.992,179,0.825,180,0.701,181,0.701,182,0.701,183,0.645,184,0.701,185,0.701,186,0.792,187,0.825,188,0.01,189,0.01]],["title/modules/ActionsModule.html",[190,0.779,191,1.992]],["body/modules/ActionsModule.html",[1,1.587,2,0.163,3,0.123,7,0.103,9,3.623,25,1.209,33,3.82,51,0.016,57,0.695,95,0.317,96,0.163,98,3.316,100,0.214,101,0.009,115,0.633,122,1.587,124,1.433,126,0.695,143,1.587,160,1.587,161,1.522,185,1.587,186,1.062,188,0.012,189,0.012,190,1.209,191,4.224,192,1.406,193,2.683,194,1.887,195,2.459,196,4.033,197,4.033,198,4.033,199,4.033,200,4.033,201,3.449,202,3.138,203,3.449,204,2.539,205,1.887,206,1.729,207,4.657,208,2.539,209,2.791,210,1.974,211,4.657,212,4.657,213,6.621,214,3.623,215,3.623,216,3.316,217,4.657,218,1.729,219,4.659,220,4.265,221,2.692,222,4.265,223,2.403,224,2.539,225,1.729,226,2.281,227,2.403,228,2.692,229,2.692,230,4.657]],["title/components/AlarmComponent.html",[0,0.073,126,0.576]],["body/components/AlarmComponent.html",[0,0.146,1,0.647,2,0.112,3,0.084,4,0.731,5,0.761,6,0.702,7,0.071,11,0.186,12,0.702,13,0.792,17,1.966,19,0.898,20,1.1,22,0.761,23,1.618,24,1.427,25,1.205,26,0.936,28,0.936,30,0.284,31,0.825,32,1.528,34,0.6,38,1.205,40,2.094,41,0.988,42,0.606,46,0.733,48,0.415,49,0.456,51,0.016,52,0.776,53,0.773,54,0.851,57,0.945,63,1.976,64,2.039,66,2.67,68,0.761,69,2.208,70,1.899,72,1.879,74,1.345,76,1.241,77,1.345,84,0.523,93,2.855,95,0.183,96,0.112,99,0.824,100,0.142,101,0.013,102,0.523,103,1.347,108,0.595,115,0.435,116,1.101,117,1.101,118,1.057,119,1.418,120,0.761,121,1.101,122,0.647,123,0.761,124,0.62,125,0.761,126,0.891,127,0.761,128,0.647,129,0.761,130,0.647,131,1.063,132,1.418,133,0.62,134,0.761,135,0.674,136,1.294,137,0.647,138,1.294,139,0.647,140,1.294,141,0.647,142,0.761,143,0.647,144,0.761,145,0.647,146,0.731,147,0.647,148,0.761,149,0.62,150,0.761,151,0.647,152,0.647,153,0.62,154,0.761,155,0.647,156,0.647,157,0.761,158,0.62,159,0.761,160,0.647,161,0.62,162,0.761,163,0.62,164,1.018,165,1.101,166,0.62,167,0.702,168,0.647,169,1.242,170,0.702,171,1.146,172,0.62,173,0.761,174,0.647,175,0.435,176,0.674,177,0.647,178,0.936,179,0.761,180,0.647,181,0.647,182,0.647,183,0.595,184,0.647,185,0.647,186,0.731,187,0.761,188,0.009,189,0.009,192,0.967,231,2.493,232,2.393,233,2.815,234,1.981,235,3.88,236,4.017,237,4.017,238,5.723,239,4.24,240,5.45,241,5.45,242,5.45,243,4.72,244,4.72,245,6.668,246,4.72,247,3.88,248,5.063,249,3.664,250,4.638,251,1.146,252,3.204,253,1.664,254,2.801,255,3.204,256,2.272,257,1.966,258,3.204,259,1.583,260,4.253,261,4.253,262,3.302,263,3.302,264,1.727,265,1.753,266,3.204,267,5.174,268,3.204,269,3.204,270,3.204,271,4.638,272,2.775,273,1.301,274,3.204,275,2.716,276,1.972,277,3.204,278,1.19,279,2.493,280,3.204,281,2.208,282,3.204,283,3.204,284,4.24,285,3.204,286,4.017,287,4.017,288,4.017,289,2.681,290,4.017,291,1.852,292,1.972,293,1.19,294,2.493,295,2.161,296,2.393,297,2.393,298,2.393,299,2.393,300,2.161,301,2.272,302,0.893,303,3.594,304,1.654,305,1.007,306,1.747,307,2.113,308,2.113,309,2.775,310,4.638]],["title/components/AlarmHeaderComponent.html",[0,0.073,128,0.779]],["body/components/AlarmHeaderComponent.html",[0,0.147,1,0.633,2,0.11,3,0.083,4,0.716,5,0.745,6,0.687,7,0.069,11,0.182,12,0.687,13,0.731,17,2.781,19,0.884,20,1.087,22,0.745,23,1.616,24,1.425,25,0.922,26,0.922,28,0.922,30,0.278,34,0.766,38,1.194,40,2.052,41,0.991,42,0.599,46,0.742,48,0.592,49,0.651,51,0.016,52,0.845,53,0.406,54,0.713,57,0.938,63,1.325,64,1.559,68,0.8,69,2.658,70,2.002,72,2.658,74,1.716,76,1.223,77,1.325,84,0.512,95,0.18,96,0.11,99,0.807,100,0.096,101,0.012,104,0.91,108,0.848,109,4.212,110,2.239,111,2.719,115,0.426,116,1.084,117,1.084,118,1.042,119,1.404,120,0.745,121,1.084,122,0.633,123,0.745,124,0.608,125,0.745,126,0.468,127,0.745,128,1.194,129,0.745,130,0.633,131,1.053,132,1.404,133,0.608,134,0.745,135,0.66,136,1.279,137,0.633,138,1.279,139,0.633,140,1.279,141,0.633,142,0.745,143,0.633,144,0.745,145,0.633,146,0.716,147,0.633,148,0.745,149,0.608,150,0.745,151,0.633,152,0.633,153,0.608,154,0.745,155,0.633,156,0.633,157,0.745,158,0.608,159,0.745,160,0.633,161,0.608,162,0.745,163,0.608,164,0.918,165,1.084,166,0.608,167,0.687,168,0.633,169,1.235,170,0.687,171,1.132,172,0.608,173,0.745,174,0.633,175,0.426,176,0.66,177,0.633,178,0.922,179,0.745,180,0.633,181,0.633,182,0.633,183,0.583,184,0.633,185,0.633,186,0.716,187,0.745,188,0.012,189,0.009,192,1.379,233,2.029,234,2.116,239,4.602,243,5.124,244,5.124,247,3.835,248,3.253,259,1.559,260,3.253,261,4.671,262,3.253,263,3.253,264,1.582,265,1.82,273,1.167,278,1.696,279,3.554,291,1.814,311,6.308,312,5.665,313,2.719,314,4.671,315,2.491,316,4.569,317,4.569,318,5.916,319,6.287,320,6.287,321,4.569,322,3.139,323,3.957,324,5.124,325,4.569,326,3.139,327,5.124,328,3.957,329,3.139,330,3.139,331,1.436,332,4.569,333,4.569,334,3.957,335,3.139,336,2.812,337,3.139,338,3.139,339,3.226,340,3.139,341,5.387,342,4.569,343,3.835,344,4.569,345,2.719,346,2.719,347,2.719,348,3.139,349,5.445,350,2.442,351,2.719,352,4.569,353,2.719,354,2.719,355,4.569,356,2.719,357,2.719,358,1.463,359,4.569,360,6.287,361,5.387,362,2.719,363,3.139,364,4.569,365,3.139,366,2.442,367,4.569]],["title/classes/AlarmImageSet.html",[101,0.007,254,1.636]],["body/classes/AlarmImageSet.html",[0,0.141,2,0.139,3,0.104,7,0.088,11,0.312,13,0.832,17,1.678,19,0.766,20,1.085,23,0.798,24,0.704,26,0.798,28,0.798,30,0.351,31,0.957,32,1.755,38,0.798,40,2.097,41,0.993,42,0.598,46,0.722,48,0.696,49,0.766,50,0.766,51,0.016,52,0.679,53,0.966,54,0.839,57,1.055,63,2.134,64,1.836,66,1.938,70,1.498,72,1.603,76,1.059,77,1.148,93,2.436,95,0.212,96,0.139,99,1.018,100,0.165,101,0.013,102,0.646,103,0.978,108,0.735,126,0.59,164,0.674,188,0.01,189,0.01,231,3.078,232,2.042,233,2.388,234,1.826,235,4.35,236,3.427,237,3.427,238,4.658,245,6.899,246,3.427,247,2.817,248,4.35,249,2.287,251,0.978,253,1.498,254,2.997,256,1.938,257,1.678,259,1.351,260,2.817,261,2.817,262,2.817,263,2.817,264,1.801,265,1.018,267,4.658,273,1.426,275,2.933,286,3.427,287,3.427,288,3.427,289,2.287,290,3.427,291,2.287,292,3.311,293,1.997,294,4.183,295,3.295,296,3.649,297,3.649,298,3.649,299,3.649,300,3.295,301,3.463,302,1.498,303,4.52,304,2.775,305,1.691,306,2.932,307,3.546,308,2.609,309,3.427,368,5.378,369,3.957,370,3.957,371,3.957,372,3.957,373,3.957,374,3.957,375,3.957]],["title/classes/AlarmItemFlatNode.html",[101,0.007,376,2.748]],["body/classes/AlarmItemFlatNode.html",[0,0.122,2,0.096,3,0.109,6,1.627,7,0.091,8,3.935,11,0.158,13,0.625,17,1.158,19,0.529,20,0.831,23,0.551,24,0.486,25,1.197,26,0.551,28,0.551,30,0.242,31,0.733,38,0.551,40,1.195,41,0.915,46,0.52,48,0.533,51,0.016,52,0.552,53,0.716,55,0.529,63,1.808,66,1.338,68,0.805,69,2.899,70,1.857,72,2.239,74,1.978,76,1.103,84,0.672,95,0.263,96,0.144,99,0.702,100,0.152,101,0.011,102,1.203,103,0.675,104,2.169,108,0.765,110,1.694,124,0.529,153,1.07,175,0.905,188,0.011,189,0.008,192,0.824,216,3.935,251,0.675,257,1.158,259,0.932,264,1.26,265,0.702,273,1.055,276,2.536,278,2.316,281,2.527,302,1.9,304,2.126,331,1.295,358,3.017,376,5.413,377,2.124,378,4.851,379,4.856,380,7.046,381,5.406,382,6.552,383,2.104,384,2.731,385,2.731,386,4.017,387,2.731,388,3.533,389,2.382,390,3.569,391,0.648,392,2.365,393,2.365,394,3.569,395,2.365,396,3.569,397,3.569,398,2.124,399,2.365,400,2.707,401,1.338,402,1.213,403,1.943,404,1.106,405,4.609,406,5.401,407,2.365,408,2.575,409,1.578,410,2.365,411,2.365,412,3.205,413,2.124,414,2.717,415,3.033,416,2.365,417,2.365,418,1.877,419,4.787,420,3.205,421,1.489,422,1.944,423,2.365,424,4.298,425,2.365,426,2.124,427,2.365,428,1.944,429,2.365,430,4.298,431,2.365,432,2.365,433,3.86,434,2.365,435,2.365,436,2.365,437,2.365,438,2.365,439,2.365,440,2.365,441,1.106,442,2.124,443,3.055,444,3.205,445,2.365,446,3.569,447,1.801,448,2.365,449,3.569,450,2.365,451,2.365,452,3.569,453,2.365,454,2.365,455,2.365,456,3.569,457,2.365,458,2.365,459,2.365,460,2.365,461,2.365,462,2.247,463,2.124,464,2.365,465,4.298,466,2.365,467,2.365,468,2.365,469,3.569,470,2.536,471,2.365,472,2.365,473,2.365,474,2.365,475,2.365,476,2.365,477,2.365,478,2.365,479,3.205,480,3.569,481,2.365,482,2.934,483,2.365,484,2.365,485,3.055,486,3.569,487,2.365,488,2.365,489,2.365,490,2.365,491,2.365,492,2.365,493,2.365,494,2.365,495,2.365,496,2.365,497,2.365,498,2.365,499,3.569,500,2.365,501,2.365,502,2.124,503,3.569,504,2.365,505,3.86,506,5.137,507,2.365,508,4.787,509,1.801,510,2.365,511,3.569,512,2.365,513,1.338,514,2.365,515,3.205,516,2.365,517,2.124,518,5.772,519,2.365,520,3.569,521,2.365,522,2.365,523,2.365,524,3.569,525,2.365,526,2.365,527,3.205,528,6.197,529,2.365,530,4.787,531,2.365,532,3.569,533,2.124,534,2.365,535,4.298,536,4.787,537,2.365,538,2.365,539,2.365,540,2.365,541,2.365,542,1.681,543,2.365,544,2.365,545,2.365,546,2.365,547,2.365,548,2.365,549,1.578,550,2.365,551,2.365,552,2.365,553,2.365,554,2.365,555,2.365]],["title/classes/AlarmItemNode.html",[101,0.007,405,2.748]],["body/classes/AlarmItemNode.html",[0,0.123,2,0.097,3,0.109,6,1.629,7,0.092,8,3.554,11,0.16,13,0.628,17,1.169,19,0.534,20,0.838,23,0.556,24,0.491,25,1.202,26,0.556,28,0.556,30,0.244,31,0.739,38,0.556,40,1.204,41,0.923,46,0.47,48,0.537,51,0.016,52,0.555,53,0.646,55,0.534,63,1.815,66,1.351,68,0.806,69,2.823,70,1.809,72,2.25,74,1.938,76,1.111,84,0.677,95,0.264,96,0.145,99,0.709,100,0.153,101,0.011,102,1.205,103,0.681,104,2.172,108,0.771,110,1.704,124,0.534,153,1.075,175,0.908,188,0.011,189,0.008,192,0.833,216,3.554,251,0.681,257,1.169,259,0.941,264,1.266,265,0.709,273,1.06,276,2.555,278,2.412,281,2.536,302,1.905,304,2.142,331,1.305,358,3.027,376,5.394,377,2.145,378,4.634,379,4.869,380,7.046,381,4.634,382,6.342,383,1.76,386,3.864,388,3.554,389,2.399,390,3.595,391,0.655,392,2.388,393,2.388,394,3.595,395,2.388,396,3.595,397,3.595,398,2.145,399,2.388,400,2.721,401,1.351,402,1.225,403,1.951,404,1.117,405,4.961,406,6.034,407,2.388,408,2.588,409,1.594,410,2.388,411,2.388,412,3.229,413,2.145,414,2.737,415,3.04,416,2.388,417,2.388,418,1.884,419,4.81,420,3.229,421,1.503,422,1.963,423,2.388,424,4.323,425,2.388,426,2.145,427,2.388,428,1.963,429,2.388,430,4.323,431,2.388,432,2.388,433,3.883,434,2.388,435,2.388,436,2.388,437,2.388,438,2.388,439,2.388,440,2.388,441,1.117,442,2.145,443,3.073,444,3.229,445,2.388,446,3.595,447,1.818,448,2.388,449,3.595,450,2.388,451,2.388,452,3.595,453,2.388,454,2.388,455,2.388,456,3.595,457,2.388,458,2.388,459,2.388,460,2.388,461,2.388,462,2.263,463,2.145,464,2.388,465,4.323,466,2.388,467,2.388,468,2.388,469,3.595,470,2.555,471,2.388,472,2.388,473,2.388,474,2.388,475,2.388,476,2.388,477,2.388,478,2.388,479,3.229,480,3.595,481,2.388,482,2.955,483,2.388,484,2.388,485,3.066,486,3.595,487,2.388,488,2.388,489,2.388,490,2.388,491,2.388,492,2.388,493,2.388,494,2.388,495,2.388,496,2.388,497,2.388,498,2.388,499,3.595,500,2.388,501,2.388,502,2.145,503,3.595,504,2.388,505,3.883,506,5.159,507,2.388,508,4.81,509,1.818,510,2.388,511,3.595,512,2.388,513,1.351,514,2.388,515,3.229,516,2.388,517,2.145,518,5.789,519,2.388,520,3.595,521,2.388,522,2.388,523,2.388,524,3.595,525,2.388,526,2.388,527,3.229,528,6.21,529,2.388,530,4.81,531,2.388,532,3.595,533,2.145,534,2.388,535,4.323,536,4.81,537,2.388,538,2.388,539,2.388,540,2.388,541,2.388,542,1.697,543,2.388,544,2.388,545,2.388,546,2.388,547,2.388,548,2.388,549,1.594,550,2.388,551,2.388,552,2.388,553,2.388,554,2.388,555,2.388,556,2.758,557,2.758]],["title/classes/AlarmSounds.html",[101,0.007,558,3.002]],["body/classes/AlarmSounds.html",[2,0.071,3,0.053,7,0.149,11,0.189,13,0.672,14,1.103,15,0.991,16,2.006,17,2.454,25,0.658,30,0.289,31,0.58,32,1.455,34,0.53,41,0.987,42,0.225,46,0.566,48,0.262,49,0.288,50,0.392,51,0.016,52,0.691,53,0.875,54,0.639,55,1.235,57,0.927,62,1.103,63,1.892,64,2.178,68,0.8,69,1.659,70,1.533,72,1.321,74,1.596,77,1.187,79,2.536,89,1.068,91,3.395,95,0.257,96,0.071,99,0.52,100,0.1,101,0.01,102,1.221,103,1.012,104,2.087,108,1.301,110,0.69,164,0.986,171,0.425,175,0.638,188,0.006,189,0.006,192,0.611,205,0.82,225,0.751,234,0.563,253,0.908,257,0.857,259,1.878,264,1.54,265,1.324,273,1.347,275,1.21,278,2.236,281,1.659,291,1.169,292,2.006,293,1.21,295,0.942,302,1.612,304,2.657,306,1.777,328,4.766,331,1.954,336,1.245,350,3.185,358,0.942,383,2.183,386,1.884,391,0.774,400,0.991,401,0.991,402,0.898,403,1.068,414,1.334,415,0.857,418,1.596,422,1.44,441,2.23,443,1.245,447,1.334,462,2.232,463,3.185,470,3.169,485,2.522,513,0.991,549,3.181,558,2.536,559,1.752,560,2.536,561,7.716,562,2.976,563,7.08,564,6.185,565,5.013,566,6.216,567,6.216,568,5.788,569,5.788,570,3.26,571,2.023,572,3.26,573,2.023,574,3.26,575,2.023,576,3.26,577,2.023,578,3.26,579,2.023,580,3.26,581,2.023,582,3.26,583,3.26,584,3.26,585,2.536,586,3.26,587,1.44,588,2.023,589,2.023,590,5.149,591,3.546,592,3.546,593,1.169,594,1.334,595,1.818,596,0.942,597,2.915,598,0.784,599,3.169,600,2.023,601,2.086,602,2.57,603,0.991,604,2.657,605,1.44,606,4.695,607,2.023,608,2.023,609,2.023,610,2.023,611,5.757,612,3.185,613,5.195,614,2.976,615,5.149,616,2.023,617,1.573,618,2.023,619,2.023,620,2.536,621,2.023,622,1.334,623,3.26,624,2.023,625,2.023,626,2.023,627,2.023,628,2.149,629,2.023,630,1.573,631,1.752,632,1.44,633,2.023,634,3.26,635,2.023,636,2.023,637,2.023,638,3.546,639,1.908,640,3.546,641,3.26,642,2.023,643,2.023,644,1.321,645,2.536,646,2.023,647,2.023,648,1.752,649,2.023,650,2.023,651,2.023,652,2.023,653,2.536,654,4.094,655,4.695,656,4.695,657,2.023,658,4.094,659,3.26,660,2.023,661,3.26,662,3.26,663,2.023,664,3.395,665,3.26,666,2.023,667,5.503,668,4.094,669,2.023,670,3.26,671,2.023,672,2.023,673,2.023,674,2.023,675,2.023,676,2.023,677,2.023,678,2.023,679,2.023,680,2.023,681,2.023,682,2.023,683,3.26,684,3.26,685,1.44,686,2.023,687,1.573,688,1.752,689,2.023,690,1.752,691,3.26,692,2.023,693,2.023,694,2.761,695,1.44,696,2.023,697,2.023,698,2.023,699,2.94,700,2.023,701,5.788,702,2.023,703,4.094,704,3.26,705,2.023,706,2.023,707,2.023,708,4.066,709,3.389,710,3.26,711,2.023,712,2.023,713,3.26,714,1.169,715,2.023,716,2.023,717,2.023,718,2.023,719,4.459,720,2.023,721,2.023,722,3.26,723,2.023,724,2.023,725,2.023,726,2.023,727,2.023,728,1.752,729,2.023,730,3.185,731,2.023,732,1.573,733,2.023,734,1.573,735,4.094,736,2.321,737,2.149,738,2.023,739,3.26,740,3.26,741,2.023,742,1.44,743,3.546,744,3.26,745,2.023,746,3.26,747,2.023,748,3.26,749,2.023,750,2.023,751,4.094,752,4.094,753,4.695,754,2.023,755,2.023,756,3.26,757,2.023,758,2.023,759,3.26,760,2.023,761,2.023,762,2.023,763,4.094,764,3.26,765,3.26,766,2.023,767,3.546,768,2.023,769,6.382,770,4.094,771,4.695,772,4.094,773,3.26,774,2.023,775,2.023,776,2.023,777,2.023,778,2.023,779,2.023,780,2.023,781,2.023,782,2.023,783,2.023,784,1.752,785,2.023,786,1.752,787,3.26,788,2.023,789,1.245,790,2.023,791,2.023,792,3.26,793,3.26,794,1.573,795,2.023,796,2.023,797,2.023,798,2.023,799,2.023,800,2.823,801,2.023,802,2.023,803,2.023,804,3.26,805,2.023,806,2.023,807,2.023,808,2.023,809,2.023]],["title/classes/AntennaConfig.html",[101,0.007,810,2.376]],["body/classes/AntennaConfig.html",[0,0.114,2,0.134,3,0.101,7,0.085,11,0.223,13,0.555,30,0.34,31,0.937,32,1.703,34,0.497,41,0.967,42,0.426,46,0.638,48,0.497,49,0.546,51,0.016,53,0.778,55,1.252,57,0.785,64,1.797,68,0.555,70,1.069,74,1.527,77,1.966,84,0.981,89,1.256,95,0.283,96,0.134,99,0.987,100,0.161,101,0.011,102,0.626,103,1.301,104,1.876,108,1.3,126,0.572,131,1.432,169,1.151,175,0.715,183,1.116,188,0.01,189,0.01,190,0.774,218,1.424,233,3.011,253,1.951,254,2.874,256,2.579,273,1.347,275,1.955,278,1.955,293,2.232,295,2.453,296,2.717,297,2.717,298,2.717,299,2.717,300,2.453,301,2.579,302,1.467,331,2.358,336,2.361,339,2.092,391,1.25,400,3.169,401,1.879,402,1.704,418,2.031,441,2.133,485,2.579,595,3.292,596,1.788,598,1.487,601,2.436,602,1.704,603,1.879,614,2.217,644,1.554,699,2.232,714,2.217,789,2.361,810,4.312,811,2.984,812,3.102,813,4.266,814,3.528,815,3.836,816,3.241,817,3.836,818,3.836,819,2.731,820,2.731,821,2.361,822,2.984,823,2.518,824,1.788,825,2.092,826,2.529,827,2.217,828,1.98,829,2.361,830,3.323,831,2.984,832,3.323,833,3.701,834,2.092,835,2.529,836,2.217,837,3.323,838,3.323,839,1.879,840,3.323,841,3.323,842,3.323,843,2.529,844,2.731,845,2.871,846,3.749,847,2.984,848,2.731,849,2.361,850,2.984,851,3.323,852,3.323,853,3.323,854,3.323,855,3.323,856,3.323,857,2.984,858,3.323,859,2.984,860,3.323,861,2.731,862,2.731,863,3.323,864,2.731,865,2.731,866,3.323,867,4.515,868,4.266,869,5.604,870,4.266,871,3.749,872,3.749,873,3.323,874,4.147]],["title/components/AntennaMarkerComponent.html",[0,0.073,130,0.779]],["body/components/AntennaMarkerComponent.html",[0,0.136,1,0.674,2,0.117,3,0.088,4,0.762,5,0.793,6,0.732,7,0.074,11,0.277,12,0.732,13,0.744,19,0.925,20,1.126,22,0.793,23,1.623,24,1.431,25,0.964,26,0.964,28,0.964,30,0.296,31,0.85,32,1.468,34,0.619,38,1.229,40,2.083,41,0.918,42,0.531,46,0.694,48,0.619,49,0.681,50,0.647,51,0.016,52,0.716,53,0.789,54,0.521,55,1.443,57,0.498,64,1.631,68,0.706,70,0.931,76,1.279,84,0.545,89,1.827,95,0.24,96,0.117,99,0.859,100,0.102,101,0.011,102,0.78,108,0.62,115,0.454,116,1.135,117,1.135,118,1.09,119,1.446,120,0.793,121,1.135,122,0.674,123,0.793,124,0.647,125,0.793,126,0.498,127,0.793,128,0.674,129,0.793,130,1.229,131,1.414,132,1.446,133,0.647,134,0.793,135,0.702,136,1.325,137,0.674,138,1.325,139,0.674,140,1.325,141,0.674,142,0.793,143,0.674,144,0.793,145,0.674,146,0.762,147,0.674,148,0.793,149,0.647,150,0.793,151,0.674,152,0.674,153,0.647,154,0.793,155,0.674,156,0.674,157,0.793,158,0.647,159,0.793,160,0.674,161,0.647,162,0.793,163,0.647,164,0.569,165,1.135,166,0.647,167,0.732,168,0.674,169,1.256,170,0.732,171,1.173,172,0.647,173,0.793,174,0.674,175,0.454,176,0.702,177,0.674,178,0.964,179,0.793,180,0.674,181,0.674,182,0.674,183,0.62,184,0.674,185,0.674,186,0.762,187,0.793,188,0.009,189,0.009,232,3.459,234,1.331,251,1.181,256,1.637,264,1.528,265,1.657,279,3.718,291,1.931,343,2.379,345,2.894,346,2.894,347,2.894,349,5.58,350,2.599,351,2.894,353,2.894,354,2.894,356,2.894,357,2.894,358,3.503,389,1.931,403,2.48,404,1.354,418,2.196,513,2.341,814,3.763,823,2.072,828,3.561,834,3.042,836,3.874,875,5.306,876,5.797,877,5.797,878,2.203,879,3.403,880,3.403,881,6.09,882,5.58,883,5.58,884,5.58,885,4.833,886,3.341,887,3.718,888,3.341,889,6.09,890,4.78,891,6.09,892,3.341,893,4.78,894,3.341,895,6.09,896,4.78,897,4.78,898,2.599,899,4.78,900,4.737,901,2.599,902,3.341,903,3.341,904,3.341,905,3.341,906,3.341,907,7.452,908,6.09,909,3.341,910,3.341,911,4.78,912,4.139]],["title/components/AntennasComponent.html",[0,0.073,133,0.747]],["body/components/AntennasComponent.html",[0,0.149,1,0.851,2,0.148,3,0.111,4,0.962,5,1.002,6,0.924,7,0.093,11,0.245,12,0.924,13,0.709,15,2.751,19,1.087,20,1.273,22,1.002,23,1.646,24,1.452,25,1.133,26,1.133,28,1.133,30,0.374,31,0.999,34,0.727,38,1.358,41,0.778,42,0.702,46,0.633,48,0.727,49,0.8,50,0.817,51,0.016,52,0.817,53,0.727,54,0.659,57,0.629,68,0.592,76,1.503,84,1.03,95,0.222,96,0.148,100,0.129,101,0.008,102,0.688,108,1.042,110,1.917,115,0.573,116,1.333,117,1.333,118,1.28,119,1.597,120,1.002,121,1.333,122,0.851,123,1.002,124,0.817,125,1.002,126,0.629,127,1.002,128,0.851,129,1.002,130,0.851,131,1.329,132,1.597,133,1.302,134,1.002,135,0.887,136,1.498,137,0.851,138,1.498,139,0.851,140,1.498,141,0.851,142,1.002,143,0.851,144,1.002,145,0.851,146,0.962,147,0.851,148,1.002,149,0.817,150,1.002,151,0.851,152,0.851,153,0.817,154,1.002,155,0.851,156,0.851,157,1.002,158,0.817,159,1.002,160,0.851,161,0.817,162,1.002,163,0.817,164,0.719,165,1.333,166,0.817,167,0.924,168,0.851,169,1.329,170,0.924,171,1.327,172,0.817,173,1.002,174,0.851,175,0.573,176,0.887,177,0.851,178,1.133,179,1.002,180,0.851,181,0.851,182,0.851,183,0.783,184,0.851,185,0.851,186,0.962,187,1.002,188,0.011,189,0.011,234,1.564,251,1.78,264,0.962,265,1.085,415,2.852,418,1.951,549,3.246,628,3.703,810,4.597,814,3.668,913,3.655,914,4.368,915,3.062,916,5.616,917,5.616,918,5.616,919,5.616,920,6.239,921,5.616,922,5.616,923,4.22,924,5.616,925,4.22,926,4.864,927,5.827,928,3.005,929,3.655]],["title/modules/AntennasModule.html",[190,0.779,825,2.104]],["body/modules/AntennasModule.html",[2,0.173,3,0.13,7,0.109,51,0.016,95,0.316,96,0.173,100,0.219,101,0.009,115,0.671,130,1.516,131,1.271,133,1.455,135,1.58,137,1.516,139,1.6,188,0.012,189,0.012,190,1.254,191,3.878,192,1.49,193,2.757,194,2,195,2.526,201,3.501,202,3.186,203,3.501,204,2.635,205,2,206,1.833,208,2.635,209,2.897,210,2.093,225,1.833,226,2.418,227,2.548,228,2.854,229,2.854,418,1.432,825,4.459,828,3.878,876,3.84,877,3.84,928,3.515,930,4.276,931,4.276,932,4.276,933,4.276,934,4.276,935,4.344,936,4.937,937,4.937,938,4.276,939,4.276,940,3.84,941,4.276,942,3.255,943,3.84,944,4.276,945,3.84,946,3.84]],["title/injectables/AntennasService.html",[391,0.916,828,1.992]],["body/injectables/AntennasService.html",[0,0.128,2,0.119,3,0.09,7,0.075,11,0.281,13,0.647,30,0.302,31,0.862,32,1.718,34,0.795,41,0.936,42,0.539,46,0.723,48,0.627,49,0.69,50,0.659,51,0.016,52,0.379,53,0.873,54,0.531,55,1.373,57,0.723,64,1.162,68,0.711,70,0.949,74,1.635,77,2.169,84,1.1,89,1.587,95,0.274,96,0.119,99,0.876,100,0.148,101,0.009,102,0.556,103,1.518,104,1.781,108,1.252,126,0.508,131,1.416,169,1.155,175,0.835,183,1.047,188,0.009,189,0.009,190,0.978,218,1.265,233,3.15,253,1.976,254,3.059,256,2.762,264,1.401,265,1.58,273,1.235,275,1.799,278,2.281,293,2.094,295,2.258,296,2.5,297,2.5,298,2.5,299,2.5,300,2.258,301,2.373,302,1.35,331,2.23,336,2.982,339,2.642,391,1.339,400,3.304,401,1.668,402,1.513,418,1.956,441,2.489,485,3.009,595,3.205,596,1.587,598,1.32,601,2.63,602,2.152,603,1.668,614,2.801,644,1.963,699,2.054,714,2.801,789,2.982,810,4.442,811,2.649,812,2.91,813,3.195,814,1.857,816,2.096,819,2.425,820,2.425,821,2.096,822,2.649,823,2.718,824,2.258,825,2.642,826,2.246,827,1.969,828,2.5,829,2.982,830,5.32,831,3.769,832,5.32,833,3.781,834,2.642,835,3.195,836,2.801,837,5.32,838,4.196,839,2.373,840,5.32,841,5.32,842,5.32,843,3.195,844,4.374,845,3.075,846,3.45,847,2.649,848,2.425,849,2.982,850,4.778,851,2.95,852,2.95,853,2.95,854,2.95,855,2.95,856,2.95,857,2.649,858,2.95,859,2.649,860,2.95,861,4.374,862,2.425,863,2.95,864,2.425,865,4.374,866,2.95,867,4.444,868,4.05,869,5.32,870,4.05,871,3.45,872,3.45,873,2.95,874,4.011,947,2.95,948,4.845,949,3.406,950,3.406,951,3.406,952,3.406,953,3.406,954,3.406,955,3.406,956,3.406,957,3.406,958,3.406]],["title/components/AntennasSidebarComponent.html",[0,0.073,137,0.779]],["body/components/AntennasSidebarComponent.html",[0,0.138,1,0.605,2,0.105,3,0.079,4,0.684,5,0.712,6,0.657,7,0.066,11,0.375,12,0.657,13,0.737,15,2.57,19,0.855,20,1.059,22,0.712,23,1.61,24,1.42,25,0.891,26,0.891,28,0.891,30,0.266,31,0.786,32,1.414,34,0.572,38,1.168,39,2.913,40,1.679,41,0.962,42,0.491,46,0.693,48,0.749,49,0.629,50,1.195,51,0.016,52,0.802,53,0.887,54,0.963,55,1.292,57,0.447,63,1.281,64,1.508,68,0.822,69,2.126,70,1.231,74,1.281,76,1.183,77,1.679,84,0.856,90,3.817,95,0.243,96,0.105,99,0.771,100,0.092,101,0.006,102,1.089,108,1.239,110,2.203,115,0.407,116,1.049,117,1.049,118,1.007,119,1.374,120,0.712,121,1.049,122,0.605,123,0.712,124,0.58,125,0.712,126,0.659,127,0.712,128,0.605,129,0.712,130,0.605,131,1.422,132,1.374,133,0.58,134,0.712,135,0.63,136,1.245,137,1.168,138,1.245,139,0.605,140,1.245,141,0.605,142,0.712,143,0.605,144,0.712,145,0.605,146,0.684,147,0.605,148,0.712,149,0.58,150,0.712,151,0.605,152,0.605,153,0.58,154,0.712,155,0.605,156,0.605,157,0.712,158,0.58,159,0.712,160,0.605,161,0.58,162,0.712,163,0.58,164,0.511,165,1.049,166,0.58,167,0.657,168,0.605,169,1.219,170,0.657,171,1.103,172,0.58,173,0.712,174,0.605,175,0.407,176,0.63,177,0.605,178,0.891,179,0.712,180,0.605,181,0.605,182,0.605,183,0.557,184,0.605,185,0.605,186,0.684,187,0.712,188,0.009,189,0.009,218,1.113,234,1.799,251,1.092,259,1.508,264,0.684,265,0.771,273,1.188,276,2.72,278,2.71,302,0.835,331,2.03,339,2.409,388,3.735,389,3.346,403,2.47,404,1.215,415,3.093,421,2.409,628,2.913,639,1.397,644,1.79,709,2.409,810,4.739,813,2.913,823,2.737,824,2.445,828,3.867,831,3.437,875,5.294,915,2.409,920,4.544,928,2.135,929,5.345,940,5.784,959,2.135,960,2.72,961,3.437,962,3.437,963,2.28,964,4.418,965,5.013,966,5.789,967,3.827,968,5.789,969,5.246,970,2.999,971,3.827,972,3.437,973,2.999,974,3.437,975,3.146,976,2.999,977,4.418,978,2.999,979,4.418,980,4.418,981,3.146,982,4.121,983,2.999,984,2.597,985,4.418,986,4.418,987,2.999,988,6.172,989,2.999,990,2.913,991,4.418,992,2.999,993,2.999,994,3.827,995,2.597,996,2.597,997,1.469,998,1.332,999,1.635,1000,2.597,1001,2.135,1002,2.999,1003,2.999,1004,2.999,1005,2.999,1006,4.418,1007,5.789,1008,4.418,1009,4.418,1010,4.418,1011,4.418,1012,4.418]],["title/components/AntennasSummaryComponent.html",[0,0.073,139,0.779]],["body/components/AntennasSummaryComponent.html",[0,0.139,1,0.749,2,0.13,3,0.098,4,0.847,5,0.882,6,0.813,7,0.082,11,0.343,12,0.813,13,0.775,19,0.997,20,1.192,22,0.882,23,1.634,24,1.442,25,1.039,26,1.039,28,1.039,30,0.329,31,0.916,32,1.294,34,0.667,38,1.288,41,0.954,42,0.572,46,0.652,48,0.667,49,0.909,50,0.997,51,0.016,52,0.709,53,0.765,54,0.803,55,1.377,57,0.554,68,0.764,76,1.378,77,1.851,84,0.964,95,0.281,96,0.13,99,0.955,100,0.114,101,0.007,102,1.041,103,1.272,108,1.097,115,0.505,116,1.222,117,1.222,118,1.174,119,1.515,120,0.882,121,1.222,122,0.749,123,0.882,124,0.719,125,0.882,126,0.768,127,0.882,128,0.749,129,0.882,130,0.749,131,1.39,132,1.515,133,0.719,134,0.882,135,0.781,136,1.403,137,0.749,138,1.403,139,1.288,140,1.403,141,0.749,142,0.882,143,0.749,144,0.882,145,0.749,146,0.847,147,0.749,148,0.882,149,0.719,150,0.882,151,0.749,152,0.749,153,0.719,154,0.882,155,0.749,156,0.749,157,0.882,158,0.719,159,0.882,160,0.749,161,0.719,162,0.882,163,0.719,164,1.007,165,1.222,166,0.719,167,0.813,168,0.749,169,1.326,170,0.813,171,1.242,172,0.719,173,0.882,174,0.749,175,0.505,176,0.781,177,0.749,178,1.039,179,0.882,180,0.749,181,0.749,182,0.749,183,0.689,184,0.749,185,0.749,186,0.847,187,0.882,188,0.01,189,0.01,218,1.379,251,1.272,253,1.035,254,1.574,257,2.183,273,1.192,305,1.619,315,3.479,336,3.169,403,2.374,404,1.505,598,1.44,639,3.378,823,2.194,828,4.014,839,2.522,875,5.063,928,2.644,945,5.532,963,1.916,990,3.395,997,3.283,998,2.834,999,4.063,1000,3.216,1013,2.644,1014,3.395,1015,4.005,1016,4.005,1017,4.005,1018,4.005,1019,2.644,1020,3.216,1021,4.005,1022,4.005,1023,2.889,1024,3.395,1025,3.169,1026,4.938,1027,4.005,1028,3.666,1029,4.005,1030,3.714,1031,2.889,1032,2.889,1033,3.714,1034,2.644,1035,3.714,1036,2.889,1037,3.714]],["title/components/AppComponent.html",[0,0.073,141,0.779]],["body/components/AppComponent.html",[0,0.125,1,0.462,2,0.08,3,0.06,4,0.522,5,0.854,6,0.501,7,0.051,11,0.258,12,0.501,13,0.77,19,0.696,20,0.897,22,0.544,23,1.573,24,1.387,25,0.726,26,0.726,28,0.726,30,0.203,31,0.64,32,1.6,33,3.136,34,0.931,38,1.016,41,0.846,42,0.4,46,0.723,48,0.466,49,0.78,50,0.975,51,0.016,52,0.646,53,0.858,54,0.786,55,1.365,56,2.293,57,0.342,58,4.648,59,2.911,62,1.962,63,0.664,68,0.799,69,1.801,70,1.882,74,0.664,76,0.963,77,1.46,84,0.587,89,0.75,92,4.783,95,0.255,96,0.08,100,0.07,101,0.008,102,1.027,103,0.889,104,1.587,108,1.374,110,1.228,115,0.311,116,0.854,117,0.854,118,0.82,119,1.195,120,0.544,121,0.854,122,0.462,123,0.544,124,0.443,125,0.544,126,0.342,127,0.544,128,0.462,129,0.544,130,0.462,131,1.179,132,1.195,133,0.443,134,0.544,135,0.481,136,1.055,137,0.462,138,1.055,139,0.462,140,1.055,141,1.016,142,0.544,143,0.462,144,0.544,145,0.462,146,0.522,147,0.462,148,0.544,149,0.443,150,0.544,151,0.462,152,0.462,153,0.975,154,0.544,155,0.462,156,1.104,157,0.544,158,0.443,159,0.544,160,0.462,161,0.443,162,0.544,163,0.443,164,0.39,165,0.854,166,0.443,167,0.973,168,0.462,169,1.254,170,0.501,171,0.934,172,0.443,173,0.544,174,0.462,175,0.311,176,0.481,177,0.462,178,1.226,179,0.544,180,0.462,181,0.462,182,0.462,183,0.425,184,0.462,185,0.462,186,0.522,187,0.544,188,0.007,189,0.007,206,1.336,233,3.164,249,2.911,257,1.525,259,1.983,264,1.435,265,1.143,273,0.974,293,2.337,300,1.676,304,1.857,315,1.962,327,1.983,358,2.071,379,4.889,381,2.799,383,1.884,403,2.41,404,0.928,408,2.708,428,2.562,509,1.51,513,1.762,542,2.215,560,2.799,604,3.772,605,1.63,638,6.171,639,2.708,640,5.452,645,4.258,648,1.983,664,2.372,694,2.431,695,4.482,816,3.577,823,1.87,827,2.08,839,1.762,915,1.962,998,1.017,1019,1.63,1038,1.983,1039,3.83,1040,3.598,1041,3.598,1042,6.295,1043,6.474,1044,5.811,1045,6.295,1046,6.105,1047,3.843,1048,3.598,1049,3.598,1050,3.598,1051,5.032,1052,5.036,1053,6.626,1054,6.295,1055,2.29,1056,3.598,1057,3.457,1058,3.985,1059,3.116,1060,4.362,1061,3.598,1062,2.29,1063,4.137,1064,2.799,1065,3.598,1066,2.29,1067,6.295,1068,3.586,1069,5.036,1070,5.036,1071,5.036,1072,3.577,1073,3.598,1074,3.116,1075,3.598,1076,3.116,1077,3.598,1078,5.036,1079,3.598,1080,2.29,1081,3.598,1082,2.29,1083,3.321,1084,2.29,1085,2.29,1086,2.562,1087,2.29,1088,3.598,1089,4.362,1090,2.29,1091,3.598,1092,2.29,1093,3.598,1094,2.29,1095,2.29,1096,2.29,1097,2.29,1098,4.444,1099,6.474,1100,5.452,1101,4.444,1102,4.444,1103,4.444,1104,2.29,1105,5.036,1106,3.598,1107,2.29,1108,5.036,1109,2.29,1110,2.29,1111,1.63,1112,2.29,1113,1.983,1114,1.63,1115,1.63,1116,1.983,1117,1.324,1118,2.29,1119,1.781,1120,2.29,1121,2.29,1122,5.036,1123,5.036,1124,5.036,1125,2.29,1126,2.29,1127,2.29,1128,2.29,1129,2.29,1130,2.29,1131,2.29,1132,1.983,1133,1.41,1134,2.29,1135,2.29,1136,3.598,1137,4.444,1138,1.983,1139,1.983,1140,5.036,1141,3.598,1142,3.598,1143,3.598,1144,3.598,1145,4.444,1146,1.781,1147,2.29,1148,2.29,1149,3.598,1150,3.598,1151,3.598,1152,3.598,1153,3.598,1154,5.036,1155,3.598]],["title/modules/AppModule.html",[190,0.779,1156,2.748]],["body/modules/AppModule.html",[2,0.163,3,0.123,7,0.103,11,0.27,24,0.829,51,0.016,95,0.319,96,0.163,100,0.184,101,0.009,115,0.633,141,1.587,188,0.012,189,0.012,190,1.411,191,3.821,192,1.407,193,2.684,194,2.684,195,2.46,201,3.45,202,3.139,203,3.45,204,2.541,205,1.889,206,1.731,208,2.541,210,1.976,219,4.662,220,4.267,221,2.695,222,4.267,223,2.406,224,2.542,225,1.731,226,2.283,227,2.406,228,2.695,229,2.695,825,4.037,935,4.28,942,3.074,943,3.626,1039,3.464,1114,3.319,1115,3.319,1156,5.824,1157,4.037,1158,4.037,1159,4.037,1160,4.037,1161,4.882,1162,4.882,1163,4.557,1164,4.882,1165,4.882,1166,4.037,1167,4.662,1168,5.994,1169,5.191,1170,5.994,1171,5.994,1172,4.037,1173,4.037,1174,4.037,1175,4.662,1176,4.662,1177,4.037,1178,4.662,1179,4.662,1180,4.037,1181,4.662,1182,4.662]],["title/modules/AppRoutingModule.html",[190,0.779,1161,2.545]],["body/modules/AppRoutingModule.html",[0,0.147,2,0.171,3,0.129,7,0.108,51,0.016,74,1.415,95,0.318,96,0.171,100,0.189,104,1.415,115,0.663,122,1.245,126,0.728,131,0.868,133,1.195,149,1.195,152,1.512,153,0.945,156,1.245,158,1.195,161,1.195,166,1.31,167,1.069,169,0.868,172,1.195,188,0.012,189,0.012,190,1.245,192,1.474,193,2.501,194,1.978,195,2.292,202,3.176,204,2.616,205,1.978,206,1.812,208,2.616,209,2.876,210,2.069,218,1.812,225,1.812,226,2.391,227,2.519,259,2.107,685,5.573,997,3.593,998,3.006,1039,2.822,1063,4.394,1117,2.822,1133,3.005,1161,5.123,1174,4.228,1183,4.228,1184,4.228,1185,4.881,1186,4.228,1187,3.797,1188,4.881,1189,4.881,1190,4.881,1191,4.881,1192,4.881,1193,3.797,1194,4.881,1195,4.881,1196,4.881,1197,4.881,1198,3.797,1199,3.797,1200,4.881,1201,6.044,1202,4.881,1203,4.881,1204,4.881,1205,6.172,1206,4.881,1207,4.881,1208,4.881,1209,6.668,1210,4.881,1211,4.881,1212,4.881,1213,4.228,1214,4.881,1215,4.881]],["title/guards/AuthLoginGuard.html",[1201,3.002,1216,3.002]],["body/guards/AuthLoginGuard.html",[2,0.154,3,0.116,7,0.097,11,0.396,13,0.81,19,0.849,30,0.389,34,0.746,42,0.641,46,0.605,48,0.746,49,0.821,50,1.245,51,0.016,52,0.715,53,0.833,54,1.004,55,1.115,68,0.793,69,1.778,70,2.029,72,2.768,74,2.153,80,3.799,89,1.887,92,5.17,95,0.28,96,0.154,100,0.134,101,0.008,102,1.158,103,1.424,104,1.272,188,0.011,189,0.011,192,2.063,257,3.087,273,1.262,275,2.829,281,2.951,284,4.482,391,1.368,400,3.567,402,1.948,408,2.685,418,1.272,587,3.123,604,3.887,617,4.482,630,3.413,632,4.102,694,3.345,699,1.86,812,2.264,826,2.893,827,2.536,834,3.141,998,2.559,999,2.392,1039,3.949,1058,4.95,1117,2.536,1133,4.368,1201,4.482,1209,5.917,1216,5.519,1217,6.832,1218,4.387,1219,5.762,1220,5.665,1221,5.762,1222,4.387,1223,4.387,1224,3.33,1225,5.762,1226,7.096,1227,7.096,1228,4.387,1229,4.99,1230,7.283,1231,4.102,1232,5.917,1233,5.762,1234,4.387,1235,4.99,1236,6.434,1237,5.762,1238,5.762,1239,3.8,1240,4.387,1241,4.387,1242,4.387,1243,3.8,1244,4.387,1245,4.387]],["title/modules/AuthModule.html",[190,0.779,1162,2.545]],["body/modules/AuthModule.html",[2,0.201,3,0.151,7,0.127,51,0.016,95,0.313,96,0.201,100,0.209,101,0.011,115,0.779,149,1.508,188,0.013,189,0.013,190,1.374,192,1.731,193,2.945,194,2.323,195,2.129,202,3.302,204,2.888,205,2.323,206,2.129,208,2.888,209,3.174,210,2.43,220,4.85,221,3.314,222,4.85,223,2.958,224,3.125,225,2.129,226,2.808,227,2.958,1162,5.229,1246,4.965,1247,4.965,1248,5.733,1249,5.733,1250,5.733]],["title/injectables/AuthService.html",[391,0.916,604,1.992]],["body/injectables/AuthService.html",[2,0.099,3,0.075,7,0.063,11,0.367,13,0.593,30,0.251,31,0.754,32,1.111,34,0.548,42,0.471,46,0.712,48,0.729,49,0.603,50,1.224,51,0.016,52,0.78,53,0.892,54,0.987,55,1.09,63,1.471,68,0.845,69,2.791,70,1.954,72,1.716,74,1.998,84,1.124,89,1.387,95,0.259,96,0.099,100,0.087,101,0.005,102,1.069,103,0.7,104,1.954,108,0.786,110,1.732,164,1.027,188,0.008,189,0.008,206,1.573,253,0.789,259,1.446,264,0.966,265,1.089,273,1.401,275,2.09,281,1.716,302,1.762,314,3.612,383,1.796,391,1.204,400,3.488,401,1.388,402,1.258,408,1.974,414,3.712,418,0.822,441,2.842,462,2.309,470,3.465,482,3.016,509,4.852,549,2.448,562,2.448,587,3.016,593,1.638,594,1.868,595,2.5,596,1.32,597,3.016,602,2.676,604,2.186,620,3.295,645,3.295,687,6.198,694,3.539,695,4.008,734,5.241,812,3.96,826,1.868,827,1.638,845,3.573,999,2.309,1025,2.607,1051,4.876,1083,3.712,1133,3.892,1220,5.61,1224,2.932,1235,3.669,1251,2.454,1252,6.323,1253,6.323,1254,5.63,1255,4.236,1256,5.63,1257,4.876,1258,5.63,1259,5.63,1260,5.63,1261,5.63,1262,5.63,1263,4.236,1264,4.236,1265,4.236,1266,2.454,1267,4.236,1268,4.236,1269,2.833,1270,4.236,1271,2.833,1272,4.688,1273,3.669,1274,5.992,1275,7.704,1276,2.833,1277,5.836,1278,3.016,1279,2.833,1280,2.833,1281,2.833,1282,4.236,1283,6.075,1284,2.833,1285,3.712,1286,3.669,1287,2.833,1288,2.833,1289,7.121,1290,2.833,1291,2.833,1292,4.236,1293,2.833,1294,6.323,1295,6.323,1296,4.236,1297,2.833,1298,4.236,1299,2.833,1300,2.833,1301,4.236,1302,2.833,1303,2.204,1304,2.833,1305,2.833,1306,2.833,1307,2.833,1308,2.833,1309,5.073,1310,3.669,1311,5.073,1312,4.236,1313,2.833,1314,2.833,1315,2.454,1316,2.833,1317,2.833,1318,2.833,1319,2.833,1320,2.833,1321,2.833,1322,2.833,1323,4.236,1324,2.833,1325,2.833,1326,2.833,1327,2.833,1328,2.833,1329,2.833,1330,2.833,1331,2.833,1332,2.833,1333,2.833,1334,2.833,1335,2.833,1336,2.833,1337,2.833,1338,2.833,1339,2.833,1340,4.236,1341,4.236,1342,2.833,1343,2.833,1344,2.833,1345,2.833,1346,2.833,1347,2.833,1348,2.833,1349,2.833]],["title/components/ButtonsComponent.html",[0,0.073,143,0.779]],["body/components/ButtonsComponent.html",[0,0.144,1,1.306,2,0.155,3,0.117,4,1.012,5,1.054,6,0.972,7,0.098,11,0.258,12,1.63,13,0.612,14,3.166,19,1.124,20,1.306,22,1.054,23,1.651,24,1.456,25,1.172,26,1.172,28,1.172,30,0.393,34,0.889,38,1.385,40,1.99,41,0.941,42,0.719,46,0.609,48,0.752,49,0.827,51,0.016,52,0.646,53,0.575,57,0.662,63,1.684,64,1.982,68,0.468,76,1.554,77,1.684,84,0.724,95,0.229,96,0.155,99,1.142,100,0.136,101,0.008,115,0.603,116,1.378,117,1.378,118,1.324,119,1.629,120,1.054,121,1.378,122,0.896,123,1.054,124,0.859,125,1.054,126,0.662,127,1.054,128,0.896,129,1.054,130,0.896,131,1.221,132,1.629,133,0.859,134,1.054,135,0.933,136,1.536,137,0.896,138,1.536,139,0.896,140,1.536,141,0.896,142,1.054,143,1.385,144,1.054,145,0.896,146,1.012,147,0.896,148,1.054,149,0.859,150,1.054,151,0.896,152,0.896,153,0.859,154,1.054,155,0.896,156,0.896,157,1.054,158,0.859,159,1.054,160,1.306,161,0.859,162,1.054,163,0.859,164,0.757,165,1.378,166,0.859,167,0.972,168,0.896,169,1.343,170,0.972,171,1.36,172,0.859,173,1.054,174,0.896,175,0.603,176,0.933,177,0.896,178,1.172,179,1.054,180,0.896,181,0.896,182,0.896,183,0.824,184,0.896,185,0.896,186,1.012,187,1.054,188,0.011,189,0.011,253,1.618,259,1.982,305,1.826,403,1.902,1273,5.03,1350,3.846,1351,4.517,1352,5.807,1353,5.807,1354,5.807,1355,5.807,1356,5.807,1357,4.44]],["title/injectables/CdbService.html",[391,0.916,599,2.376]],["body/injectables/CdbService.html",[0,0.107,2,0.15,3,0.113,7,0.095,11,0.329,13,0.598,14,3.095,30,0.38,31,1.01,32,1.393,34,0.735,42,0.631,46,0.705,50,0.83,51,0.016,52,0.477,53,0.555,54,0.669,55,1.451,68,0.813,77,1.964,91,3.742,95,0.291,96,0.15,100,0.131,101,0.008,102,0.7,103,1.06,175,1.056,188,0.011,189,0.011,225,2.973,251,1.402,253,1.195,264,1.746,265,1.46,275,2.107,302,1.581,305,2.129,383,2.406,386,4.183,391,1.51,400,2.101,401,2.101,402,1.904,418,1.244,441,3.103,462,3.095,485,2.101,587,3.053,596,1.998,599,3.494,601,3.037,602,3.007,603,2.101,614,4.332,622,3.742,631,5.865,644,2.3,732,4.415,737,3.742,800,4.916,812,2.929,821,2.64,823,2.916,900,3.336,974,4.415,1072,3.494,1358,3.714,1359,6.771,1360,6.771,1361,6.771,1362,6.771,1363,6.771,1364,6.771,1365,3.714,1366,5.676,1367,4.288,1368,6.771,1369,5.676,1370,5.676,1371,5.865,1372,4.288,1373,5.676,1374,4.288,1375,4.288,1376,5.676,1377,4.288,1378,5.676,1379,4.288,1380,4.288,1381,4.288,1382,4.288,1383,3.053,1384,4.288,1385,4.288,1386,4.288,1387,4.288,1388,4.288,1389,4.288,1390,4.916,1391,4.288,1392,5.676,1393,4.916,1394,4.288,1395,4.288]],["title/modules/DataModule.html",[190,0.779,201,1.798]],["body/modules/DataModule.html",[2,0.191,3,0.144,7,0.121,11,0.317,51,0.016,55,1.282,95,0.31,96,0.191,100,0.218,101,0.01,115,0.743,175,0.9,188,0.013,189,0.013,190,1.494,192,1.651,193,2.683,194,2.216,195,2.645,201,3.743,204,2.807,205,2.216,206,2.031,208,2.807,209,3.086,210,2.319,292,4.076,305,2.082,403,2.523,599,4.743,601,3.122,602,2.429,603,2.679,845,3.611,1047,4.201,1303,4.254,1396,4.737,1397,4.737,1398,5.469,1399,7.123,1400,5.469,1401,5.469,1402,5.469]],["title/modules/HealthModule.html",[190,0.779,1163,2.376]],["body/modules/HealthModule.html",[0,0.126,2,0.193,3,0.146,7,0.122,11,0.321,51,0.016,64,2.274,95,0.308,96,0.193,100,0.228,101,0.011,115,0.751,145,1.623,146,1.631,188,0.013,189,0.013,190,1.499,192,1.668,193,2.899,194,2.239,195,2.052,201,3.599,203,3.599,204,2.825,205,2.239,206,2.052,208,2.825,209,3.105,210,2.343,225,2.474,228,3.194,229,3.194,305,2.095,946,4.299,1163,4.933,1403,4.786,1404,4.786,1405,5.527,1406,4.786,1407,5.527,1408,4.299]],["title/components/HealthSummaryComponent.html",[0,0.073,145,0.779]],["body/components/HealthSummaryComponent.html",[0,0.141,1,0.644,2,0.112,3,0.084,4,0.728,5,0.758,6,0.699,7,0.071,11,0.316,12,0.699,13,0.695,19,0.895,20,1.097,22,0.758,23,1.618,24,1.428,25,0.933,26,0.933,28,0.933,30,0.283,31,0.823,32,1.556,34,0.599,38,1.203,41,0.966,42,0.514,46,0.701,48,0.599,49,0.849,50,0.895,51,0.016,52,0.663,53,0.819,54,0.722,55,1.154,57,0.811,68,0.748,84,1.032,95,0.275,96,0.112,99,0.821,100,0.098,101,0.006,102,0.887,103,1.344,104,1.341,108,1.009,115,0.434,116,1.098,117,1.098,118,1.054,119,1.415,120,0.758,121,1.098,122,0.644,123,0.758,124,0.618,125,0.758,126,0.69,127,0.758,128,0.644,129,0.758,130,0.644,131,1.061,132,1.415,133,0.618,134,0.758,135,0.671,136,1.291,137,0.644,138,1.291,139,0.644,140,1.291,141,0.644,142,0.758,143,0.644,144,0.758,145,1.203,146,1.666,147,0.644,148,0.758,149,0.618,150,0.758,151,0.644,152,0.644,153,0.618,154,0.758,155,0.644,156,0.644,157,0.758,158,0.618,159,0.758,160,0.644,161,0.618,162,0.758,163,0.618,164,0.544,165,1.098,166,0.618,167,0.699,168,0.644,169,1.284,170,0.699,171,1.143,172,0.618,173,0.758,174,0.644,175,0.434,176,0.671,177,0.644,178,0.933,179,0.758,180,0.644,181,0.644,182,0.644,183,0.592,184,0.644,185,0.644,186,0.728,187,0.758,188,0.009,189,0.009,218,1.185,225,2.214,233,3.096,253,1.942,254,3.012,256,2.664,257,1.96,273,1.264,295,2.155,296,2.386,297,2.386,298,2.386,299,2.386,300,2.155,301,2.265,302,1.661,305,1.454,306,2.521,315,3.251,331,1.875,403,2.363,404,1.293,595,3.096,596,1.487,598,1.237,601,2.416,603,1.563,639,3.075,699,1.96,821,1.965,833,2.846,839,2.265,845,2.965,847,2.483,849,3.67,850,4.638,857,2.483,859,2.483,867,4.402,868,3.931,870,3.931,874,4.03,963,1.647,997,3.1,998,2.648,999,3.251,1013,2.272,1014,3.049,1015,3.597,1016,3.597,1017,3.597,1018,3.597,1019,2.272,1021,3.597,1022,3.597,1023,2.483,1024,3.049,1025,2.846,1026,4.698,1027,3.597,1028,3.292,1029,3.597,1031,2.483,1032,3.597,1034,2.272,1036,2.483,1408,5.613,1409,6.249,1410,4.245,1411,5.963,1412,5.963,1413,5.963,1414,3.192,1415,3.192,1416,3.192,1417,3.049,1418,3.192,1419,3.192,1420,3.192,1421,3.192,1422,3.192,1423,3.192,1424,3.192,1425,7.615,1426,4.245,1427,3.597,1428,3.597,1429,3.192]],["title/injectables/HttpClientService.html",[391,0.916,601,1.564]],["body/injectables/HttpClientService.html",[2,0.131,3,0.098,7,0.082,11,0.413,13,0.673,30,0.33,34,0.984,42,0.574,46,0.683,48,0.828,49,0.735,50,1.378,51,0.016,52,0.791,53,0.869,54,1.111,55,1.405,56,2.664,63,1.497,66,2.529,68,0.838,89,1.691,95,0.265,96,0.131,100,0.114,101,0.007,102,1.202,103,1.658,104,1.854,175,1.047,188,0.01,189,0.01,235,2.654,259,1.762,273,1.34,275,2.978,281,2.092,293,1.917,302,1.438,314,4.944,331,1.623,391,1.406,408,2.406,415,2.189,441,3.179,482,3.676,485,3.131,593,2.155,594,2.458,601,2.092,602,3.399,604,3.802,605,2.654,644,2.092,687,4.607,688,4.471,699,3.221,708,6.581,734,4.972,845,3.659,1060,6.459,1224,3.423,1257,5.536,1266,3.229,1277,6.285,1278,3.676,1303,4.016,1310,4.471,1315,5.536,1430,6.38,1431,3.229,1432,5.163,1433,5.163,1434,3.404,1435,5.163,1436,6.392,1437,6.392,1438,5.163,1439,3.728,1440,5.163,1441,3.728,1442,5.163,1443,3.728,1444,3.728,1445,5.163,1446,3.728,1447,5.922,1448,4.274,1449,5.163,1450,5.163,1451,3.728,1452,5.163,1453,3.728,1454,5.163,1455,3.728,1456,5.163,1457,5.163,1458,4.471,1459,3.728,1460,3.728,1461,3.728,1462,3.728,1463,7.257,1464,3.728,1465,3.728,1466,3.728,1467,3.728,1468,3.728]],["title/modules/IasMaterialModule.html",[190,0.779,202,1.636]],["body/modules/IasMaterialModule.html",[0,0.12,2,0.178,3,0.134,7,0.112,11,0.294,51,0.016,95,0.322,96,0.178,100,0.194,101,0.01,153,1.224,188,0.012,189,0.012,190,1.39,193,2.056,202,2.681,208,2.681,224,2.766,226,2.485,398,3.946,408,2.946,542,3.123,736,3.612,1113,4.394,1114,3.612,1469,5.074,1470,5.074,1471,4.919,1472,6.889,1473,5.074,1474,6.889,1475,5.074,1476,6.889,1477,5.074,1478,6.889,1479,5.074,1480,6.889,1481,5.074,1482,6.889,1483,5.074,1484,6.889,1485,5.074,1486,6.889,1487,5.074,1488,6.889,1489,5.074,1490,6.889,1491,6.889,1492,5.074,1493,6.889,1494,5.074,1495,6.889,1496,5.074,1497,6.889,1498,6.889,1499,5.074,1500,6.889,1501,5.074,1502,6.889,1503,5.074,1504,6.889,1505,5.074,1506,6.889,1507,5.074,1508,6.889,1509,5.074,1510,4.394,1511,6.889,1512,4.394,1513,3.946]],["title/classes/Iasio.html",[101,0.007,1383,2.748]],["body/classes/Iasio.html",[2,0.156,3,0.118,7,0.099,11,0.425,30,0.396,31,1.038,34,0.948,41,0.848,42,0.497,46,0.711,48,0.755,49,0.925,50,1.257,51,0.016,52,0.722,53,0.99,54,1.013,60,5.05,63,2.326,64,1.991,68,0.805,69,2.892,70,1.625,74,1.296,93,2.751,100,0.137,101,0.014,102,1.123,104,1.995,108,1.205,110,1.525,178,0.902,188,0.011,189,0.011,273,1.391,275,2.166,281,2.788,302,1.809,303,4.707,304,3.01,305,1.834,306,3.18,307,3.845,308,2.947,331,1.834,386,2.583,409,3.371,433,4.537,485,3.371,562,3.371,564,6.34,585,4.537,612,4.537,730,4.537,732,3.477,833,2.751,1383,5.763,1514,3.871,1515,6.492,1516,7.32,1517,7.32,1518,7.32,1519,7.32,1520,5.832,1521,5.832,1522,5.832,1523,4.469,1524,5.832,1525,4.469,1526,4.469,1527,5.832,1528,5.832,1529,4.469,1530,4.537,1531,5.832,1532,4.469,1533,4.469,1534,4.469,1535,4.469,1536,4.469,1537,4.469,1538,4.469,1539,4.469,1540,4.469,1541,4.469,1542,4.469]],["title/components/LegendComponent.html",[0,0.073,147,0.779]],["body/components/LegendComponent.html",[0,0.139,1,0.667,2,0.116,3,0.087,4,0.753,5,0.784,6,0.724,7,0.073,11,0.192,12,0.724,13,0.826,19,0.918,20,1.119,22,0.784,23,1.622,24,1.43,25,0.957,26,0.957,28,0.957,30,0.293,31,0.844,34,0.614,38,1.222,41,0.974,42,0.617,46,0.706,48,0.614,49,0.675,51,0.016,52,0.527,57,0.493,62,4.276,68,0.348,84,0.539,95,0.187,96,0.116,100,0.101,101,0.006,115,0.935,116,1.125,117,1.125,118,1.081,119,1.438,120,0.784,121,1.125,122,0.667,123,0.784,124,0.64,125,0.784,126,0.493,127,0.784,128,0.667,129,0.784,130,0.667,131,1.078,132,1.438,133,0.64,134,0.784,135,0.695,136,1.316,137,0.667,138,1.316,139,0.667,140,1.316,141,0.667,142,0.784,143,0.667,144,0.784,145,0.667,146,0.753,147,1.222,148,0.784,149,0.64,150,0.784,151,0.667,152,0.667,153,0.64,154,0.784,155,0.667,156,0.667,157,0.784,158,0.64,159,0.784,160,0.667,161,0.64,162,0.784,163,0.64,164,0.563,165,1.125,166,0.64,167,0.724,168,0.667,169,1.252,170,0.724,171,1.166,172,0.64,173,0.784,174,0.667,175,0.449,176,0.695,177,0.667,178,0.957,179,0.784,180,0.667,181,0.667,182,0.667,183,0.613,184,0.667,185,0.667,186,0.753,187,0.784,188,0.009,189,0.009,233,3.483,234,2.197,251,1.172,253,2.09,257,3.153,264,1.678,265,1.893,272,5.248,295,3.522,300,3.388,301,3.562,315,2.585,595,3.125,598,1.281,784,5.248,867,4.533,874,4.067,1076,4.106,1543,2.862,1544,4.742,1545,4.742,1546,6.059,1547,6.059,1548,6.059,1549,6.059,1550,6.059,1551,6.059,1552,6.059,1553,6.059,1554,6.059,1555,4.742,1556,3.304,1557,5.248,1558,3.304,1559,6.094,1560,3.304,1561,3.304,1562,6.748,1563,4.106,1564,3.304,1565,4.106,1566,3.304,1567,6.059,1568,4.106,1569,3.304,1570,4.106,1571,3.304,1572,6.059,1573,4.106,1574,3.304,1575,3.304,1576,3.304]],["title/components/LoginComponent.html",[0,0.073,149,0.747]],["body/components/LoginComponent.html",[0,0.14,1,0.617,2,0.107,3,0.081,4,0.698,5,0.726,6,0.67,7,0.068,11,0.308,12,0.67,13,0.792,19,0.868,20,1.071,22,0.726,23,1.613,24,1.422,25,0.905,26,0.905,28,0.905,30,0.271,31,0.798,32,1.424,34,0.581,38,1.179,40,1.301,41,0.377,42,0.499,46,0.712,48,0.757,49,0.639,50,0.868,51,0.016,52,0.65,53,0.87,54,0.7,55,1.259,56,2.314,57,0.456,63,1.301,66,2.197,68,0.726,70,1.479,77,1.301,84,0.954,89,1.739,92,5.018,95,0.246,96,0.107,100,0.094,101,0.006,102,1.015,103,1.108,104,0.887,108,0.985,115,0.416,116,1.065,117,1.065,118,1.023,119,1.388,120,0.726,121,1.065,122,0.617,123,0.726,124,0.592,125,0.726,126,0.456,127,0.726,128,0.617,129,0.726,130,0.617,131,1.04,132,1.388,133,0.592,134,0.726,135,0.643,136,1.26,137,0.617,138,1.26,139,0.617,140,1.26,141,0.617,142,0.726,143,0.617,144,0.726,145,0.617,146,0.698,147,0.617,148,0.726,149,1.131,150,0.726,151,0.617,152,0.617,153,0.592,154,0.726,155,0.617,156,0.617,157,0.726,158,0.592,159,0.726,160,0.617,161,0.592,162,0.726,163,0.592,164,1.198,165,1.065,166,0.592,167,0.67,168,0.617,169,1.226,170,0.67,171,1.116,172,0.592,173,0.726,174,0.617,175,0.416,176,0.643,177,0.617,178,0.905,179,0.726,180,0.617,181,0.617,182,0.617,183,0.568,184,0.617,185,0.617,186,0.698,187,0.726,188,0.009,189,0.009,195,1.971,221,1.769,223,1.579,224,2.894,225,1.665,234,1.812,253,1.479,264,0.698,265,1.153,273,0.944,275,1.136,276,2.761,281,2.521,302,1.249,408,2.9,428,4.162,441,2.368,443,4.003,509,3.854,595,2.888,604,3.948,613,4.906,644,2.368,694,3.174,695,4.906,699,1.901,736,3.193,742,5.495,789,3.598,834,3.546,960,3.598,981,4.63,999,3.187,1039,3.069,1058,3.268,1083,2.957,1086,3.193,1117,1.769,1133,4.658,1139,2.651,1224,3.069,1239,2.651,1243,3.884,1283,6.274,1285,3.854,1286,3.884,1417,2.018,1448,4.51,1577,2.651,1578,4.485,1579,4.485,1580,5.968,1581,5.968,1582,4.485,1583,3.06,1584,6.189,1585,5.39,1586,5.063,1587,4.485,1588,3.193,1589,3.06,1590,3.06,1591,3.06,1592,4.485,1593,3.06,1594,5.39,1595,5.309,1596,3.489,1597,5.846,1598,3.06,1599,4.485,1600,3.06,1601,3.06,1602,6.089,1603,3.06,1604,3.06,1605,3.06,1606,5.063,1607,3.193,1608,3.884,1609,4.485,1610,3.06,1611,2.651,1612,2.651,1613,3.06,1614,3.06,1615,3.06,1616,3.06,1617,3.06,1618,3.884,1619,3.06,1620,2.651,1621,2.381,1622,3.06,1623,3.06,1624,4.485]],["title/components/MapComponent.html",[0,0.073,151,0.779]],["body/components/MapComponent.html",[0,0.147,1,0.891,2,0.155,3,0.116,4,1.007,5,1.048,6,0.967,7,0.098,11,0.256,12,0.967,13,0.61,19,1.12,20,1.302,22,1.048,23,1.65,24,1.455,25,1.167,26,1.167,28,1.167,30,0.391,34,0.749,38,1.382,40,2.062,41,0.544,42,0.718,46,0.686,48,0.749,49,0.824,51,0.016,52,0.643,57,0.659,68,0.465,72,2.344,74,1.678,77,1.678,84,0.72,95,0.174,96,0.155,100,0.135,101,0.008,115,0.6,116,1.373,117,1.373,118,1.319,119,1.626,120,1.048,121,1.373,122,0.891,123,1.048,124,0.855,125,1.048,126,0.659,127,1.048,128,0.891,129,1.048,130,0.891,131,1.219,132,1.626,133,0.855,134,1.048,135,0.928,136,1.532,137,0.891,138,1.532,139,0.891,140,1.532,141,0.891,142,1.048,143,0.891,144,1.048,145,0.891,146,1.007,147,0.891,148,1.048,149,0.855,150,1.048,151,1.382,152,0.891,153,0.855,154,1.048,155,0.891,156,0.891,157,1.048,158,0.855,159,1.048,160,0.891,161,0.855,162,1.048,163,0.855,164,0.752,165,1.373,166,0.855,167,0.967,168,0.891,169,1.342,170,0.967,171,1.357,172,0.855,173,1.048,174,0.891,175,0.877,176,0.928,177,0.891,178,1.167,179,1.048,180,0.891,181,0.891,182,0.891,183,0.82,184,0.891,185,0.891,186,1.007,187,1.048,188,0.011,189,0.011,234,1.908,264,1.319,265,1.488,289,3.345,305,1.819,389,2.552,418,2.187,823,2.148,836,3.959,1625,3.824,1626,4.501,1627,5.786,1628,5.786,1629,6.454,1630,6.454,1631,5.786,1632,4.416,1633,4.416]],["title/modules/MapModule.html",[190,0.779,935,2.231]],["body/modules/MapModule.html",[2,0.2,3,0.15,7,0.126,51,0.016,95,0.303,96,0.2,100,0.23,101,0.011,115,0.776,151,1.629,188,0.013,189,0.013,190,1.371,192,1.724,193,2.94,194,2.314,195,2.694,204,2.881,205,2.314,206,2.121,208,2.881,209,3.167,210,2.421,935,4.61,1634,4.947,1635,4.947,1636,4.947,1637,4.947,1638,5.131,1639,5.712,1640,5.712,1641,5.712]],["title/injectables/MapService.html",[391,0.916,1638,2.545]],["body/injectables/MapService.html",[2,0.188,3,0.142,7,0.119,11,0.41,13,0.745,30,0.477,34,0.849,42,0.786,46,0.693,48,0.849,49,0.934,50,1.27,51,0.016,52,0.729,54,1.023,55,1.425,68,0.745,89,2.148,95,0.212,96,0.188,100,0.165,101,0.01,102,0.878,104,1.561,188,0.013,189,0.013,248,3.832,264,1.227,278,2.626,323,4.662,358,3.296,386,3.111,391,1.679,418,2.051,505,5.102,515,5.102,685,5.373,814,2.935,885,4.662,1638,4.324,1642,4.662,1643,6.559,1644,6.559,1645,5.383,1646,6.559,1647,5.383,1648,5.061,1649,7.547,1650,7.362,1651,5.383,1652,5.383,1653,5.383,1654,5.383,1655,4.662,1656,5.383,1657,4.187,1658,5.383,1659,5.383,1660,5.383]],["title/components/MaterialSandboxComponent.html",[0,0.073,152,0.779]],["body/components/MaterialSandboxComponent.html",[0,0.14,1,0.689,2,0.12,3,0.09,4,0.779,5,0.811,6,0.748,7,0.076,11,0.198,12,1.743,13,0.511,19,0.94,20,1.14,22,0.811,23,1.625,24,1.436,25,0.98,26,0.98,28,0.98,30,0.303,34,0.629,38,1.241,41,0.421,42,0.722,46,0.457,51,0.015,52,0.54,54,0.758,57,0.509,66,2.378,68,0.36,73,6.153,76,1.299,77,1.408,84,0.557,95,0.135,96,0.12,100,0.105,101,0.007,108,1.253,115,0.464,116,1.152,117,1.603,118,1.107,119,1.46,120,0.811,121,1.152,122,0.689,123,0.811,124,0.661,125,0.811,126,0.509,127,0.811,128,0.689,129,0.811,130,0.689,131,1.094,132,1.46,133,0.661,134,0.811,135,0.718,136,1.341,137,0.689,138,1.341,139,0.689,140,1.341,141,0.689,142,0.811,143,0.689,144,0.811,145,0.689,146,0.779,147,0.689,148,0.811,149,0.661,150,0.811,151,0.689,152,1.241,153,1.434,154,0.811,155,0.689,156,0.689,157,0.811,158,0.661,159,0.811,160,0.689,161,0.661,162,0.811,163,0.661,164,0.963,165,1.152,166,0.661,167,0.748,168,0.689,169,1.263,170,0.748,171,1.187,172,0.661,173,0.811,174,0.689,175,0.464,176,0.718,177,0.689,178,1.552,179,0.811,180,0.689,181,0.689,182,0.689,183,0.634,184,0.689,185,0.689,186,0.779,187,0.811,188,0.009,189,0.009,233,2.886,234,1.353,249,4.103,265,0.878,278,1.803,281,1.967,284,3.776,378,2.657,408,2.262,415,2.607,542,3.477,728,5.848,994,4.205,1039,2.806,1146,5.252,1193,4.394,1213,4.205,1278,3.457,1510,5.327,1594,5.848,1655,4.205,1661,4.892,1662,2.958,1663,4.855,1664,4.855,1665,4.855,1666,4.855,1667,3.416,1668,3.416,1669,6.752,1670,6.752,1671,6.752,1672,6.752,1673,6.752,1674,6.752,1675,6.752,1676,6.752,1677,6.752,1678,6.752,1679,7.6,1680,7.648,1681,6.151,1682,3.776,1683,4.205,1684,4.855,1685,5.648,1686,4.855,1687,4.855,1688,4.855,1689,6.151,1690,4.855,1691,4.855,1692,6.752,1693,7.41,1694,7.6,1695,6.151,1696,3.416,1697,6.752,1698,6.752,1699,6.752,1700,6.151,1701,4.855,1702,4.855,1703,6.151,1704,4.855,1705,4.855,1706,4.855,1707,4.205,1708,4.855,1709,4.855,1710,4.855,1711,4.205,1712,4.855,1713,4.855,1714,4.855,1715,4.855,1716,3.776,1717,3.416,1718,3.416,1719,3.416,1720,3.416,1721,3.416,1722,3.416]],["title/components/OverviewCardComponent.html",[0,0.073,155,0.779]],["body/components/OverviewCardComponent.html",[0,0.145,1,0.926,2,0.161,3,0.121,4,1.047,5,1.089,6,1.005,7,0.101,11,0.266,12,1.005,19,1.149,20,1.327,22,1.089,23,1.654,24,1.458,25,1.197,26,1.197,28,1.197,30,0.407,34,0.768,38,1.403,41,0.566,42,0.731,46,0.558,48,0.768,49,0.845,51,0.016,52,0.66,57,0.685,68,0.484,84,0.749,95,0.181,96,0.161,100,0.141,101,0.009,115,0.624,116,1.409,117,1.409,118,1.353,119,1.65,120,1.089,121,1.409,122,0.926,123,1.089,124,0.888,125,1.089,126,0.685,127,1.089,128,0.926,129,1.089,130,0.926,131,1.237,132,1.65,133,0.888,134,1.089,135,0.965,136,1.561,137,0.926,138,1.561,139,0.926,140,1.561,141,0.926,142,1.089,143,0.926,144,1.089,145,0.926,146,1.047,147,0.926,148,1.089,149,0.888,150,1.089,151,0.926,152,0.926,153,0.888,154,1.089,155,1.403,156,1.55,157,1.089,158,0.888,159,1.089,160,0.926,161,0.888,162,1.089,163,0.888,164,0.782,165,1.409,166,0.888,167,1.005,168,0.926,169,1.353,170,1.005,171,1.382,172,0.888,173,1.089,174,0.926,175,0.624,176,0.965,177,0.926,178,1.197,179,1.089,180,0.926,181,0.926,182,0.926,183,0.852,184,0.926,185,0.926,186,1.047,187,1.089,188,0.011,189,0.011,251,1.466,257,2.515,960,3.653,1014,3.912,1626,4.616,1683,6.021,1723,5.695,1724,5.115,1725,3.975,1726,5.139,1727,5.934,1728,5.934,1729,4.59,1730,4.59]],["title/components/OverviewComponent.html",[0,0.073,158,0.747]],["body/components/OverviewComponent.html",[0,0.148,1,0.929,2,0.161,3,0.121,4,1.05,5,1.093,6,1.008,7,0.102,11,0.267,12,1.008,19,1.151,20,1.329,22,1.093,23,1.654,24,1.459,25,1.199,26,1.199,28,1.199,30,0.408,34,0.77,38,1.404,41,0.567,42,0.732,46,0.559,48,0.77,49,0.847,51,0.016,52,0.661,57,0.687,68,0.485,84,0.751,95,0.182,96,0.161,100,0.141,101,0.009,115,0.625,116,1.411,117,1.411,118,1.355,119,1.652,120,1.093,121,1.411,122,0.929,123,1.093,124,0.891,125,1.093,126,0.687,127,1.093,128,0.929,129,1.093,130,0.929,131,1.313,132,1.652,133,0.891,134,1.093,135,0.968,136,1.563,137,0.929,138,1.563,139,0.929,140,1.563,141,0.929,142,1.093,143,0.929,144,1.093,145,0.929,146,1.501,147,0.929,148,1.093,149,0.891,150,1.093,151,0.929,152,0.929,153,0.891,154,1.093,155,0.929,156,1.329,157,1.093,158,1.347,159,1.093,160,0.929,161,0.891,162,1.093,163,0.891,164,0.784,165,1.411,166,0.891,167,1.008,168,0.929,169,1.379,170,1.008,171,1.384,172,0.891,173,1.093,174,0.929,175,0.625,176,0.968,177,0.929,178,1.199,179,1.093,180,0.929,181,0.929,182,0.929,183,0.854,184,0.929,185,0.929,186,1.05,187,1.093,188,0.012,189,0.012,225,2.207,251,1.469,305,1.869,639,3.243,816,3.659,999,3.241,1731,3.987,1732,5.149,1733,5.945,1734,5.945,1735,5.945,1736,4.603,1737,4.603]],["title/modules/OverviewModule.html",[190,0.779,1164,2.545]],["body/modules/OverviewModule.html",[0,0.118,2,0.175,3,0.132,7,0.11,11,0.29,46,0.589,51,0.016,59,4.145,64,2.137,95,0.313,96,0.175,100,0.22,101,0.01,115,0.679,155,1.602,156,1.49,158,1.537,188,0.012,189,0.012,190,1.521,192,1.508,193,2.771,194,2.023,195,1.854,201,3.512,202,3.195,203,3.512,204,2.654,205,2.023,206,1.854,208,2.654,209,2.917,210,2.117,225,1.854,226,2.446,227,2.577,228,2.887,229,2.887,305,1.968,737,4.128,825,4.109,829,3.854,1163,4.639,1164,5.367,1166,4.109,1173,4.325,1177,4.325,1180,4.325,1724,3.884,1738,4.325,1739,4.325,1740,4.994,1741,4.325,1742,4.994,1743,6.261,1744,5.423,1745,4.994,1746,4.994]],["title/injectables/RoutingService.html",[391,0.916,997,1.891]],["body/injectables/RoutingService.html",[2,0.154,3,0.116,7,0.097,11,0.412,13,0.608,17,3.01,30,0.389,34,0.747,41,0.843,42,0.489,46,0.709,49,0.822,50,1.323,51,0.016,52,0.76,53,0.885,54,1.067,55,1.323,57,0.96,68,0.782,81,3.419,84,1.211,89,1.439,91,3.804,92,5.025,95,0.228,96,0.154,100,0.135,101,0.008,102,1.115,108,0.816,110,1.969,131,1.026,166,1.323,169,1.026,178,0.887,188,0.011,189,0.011,251,1.425,259,2.662,264,1.559,273,1.388,275,2.706,331,2.149,391,1.529,408,2.688,442,3.419,479,3.419,639,3.511,709,3.973,997,2.826,998,1.952,1026,5.287,1058,3.551,1063,5.364,1086,4.868,1117,2.541,1119,3.419,1132,5.921,1133,3.964,1187,5.928,1231,5.553,1747,3.807,1748,5.769,1749,5.769,1750,6.837,1751,4.996,1752,6.837,1753,6.837,1754,4.996,1755,6.837,1756,5.769,1757,4.395,1758,4.395,1759,4.395,1760,5.318,1761,4.996,1762,4.395,1763,4.395,1764,4.395,1765,4.996,1766,4.395,1767,4.996,1768,4.395,1769,5.769,1770,4.395,1771,4.395,1772,4.395,1773,4.395,1774,4.395,1775,4.395]],["title/modules/SharedModule.html",[190,0.779,203,1.798]],["body/modules/SharedModule.html",[0,0.142,2,0.173,3,0.13,7,0.109,11,0.286,12,1.36,13,0.654,17,3.026,41,0.838,51,0.016,57,1.065,95,0.313,96,0.173,100,0.219,101,0.009,115,0.67,126,1.192,128,1.612,163,1.547,164,0.84,188,0.012,189,0.012,190,1.516,191,2.545,192,1.489,193,2.756,194,1.998,195,1.831,201,3.501,202,3.185,203,3.755,204,2.633,205,1.998,206,1.831,208,2.633,209,2.895,210,2.091,219,4.832,220,4.423,221,2.851,222,4.423,223,2.545,224,2.689,225,1.831,226,2.416,227,2.545,228,2.851,259,2.12,305,1.953,312,3.836,942,3.252,1199,3.836,1716,4.832,1776,4.271,1777,4.271,1778,4.932,1779,4.271,1780,4.932,1781,6.212,1782,6.212,1783,5.38,1784,6.212,1785,4.932,1786,3.511,1787,4.932]],["title/components/ShelveButtonComponent.html",[0,0.073,160,0.779]],["body/components/ShelveButtonComponent.html",[0,0.145,1,0.703,2,0.122,3,0.092,4,0.795,5,1.554,6,0.763,7,0.077,10,2.482,11,0.331,12,1.711,13,0.716,14,3.384,15,3.329,16,3.032,17,2.421,18,4.266,19,0.953,20,1.152,21,4.947,22,0.827,23,1.628,24,1.435,25,0.994,26,0.994,27,3.831,28,0.994,29,3.831,30,0.309,31,0.876,32,1.251,33,3.907,34,0.804,36,5.376,37,5.376,38,1.252,39,3.247,40,1.8,41,0.894,42,0.548,43,3.019,44,6.284,45,6.284,46,0.692,47,4.266,50,0.953,51,0.016,52,0.69,53,0.804,54,0.769,55,1.267,56,2.947,57,1.165,58,3.766,59,2.847,60,4.828,61,5.376,62,2.685,63,1.8,64,1.681,68,0.798,69,1.996,70,1.372,72,1.996,73,4.828,74,1.428,76,1.318,77,1.8,78,3.831,79,3.831,80,3.247,81,3.831,82,4.266,83,4.266,84,0.932,86,3.831,87,5.376,89,1.613,90,4.093,93,3.032,95,0.245,96,0.122,97,3.019,98,2.482,99,0.896,100,0.107,101,0.007,102,1.013,103,1.217,104,1.011,105,3.019,106,3.019,107,3.019,109,2.482,110,1.19,112,2.711,115,0.474,116,1.169,117,1.169,118,1.123,119,1.473,120,0.827,121,1.169,122,0.703,123,0.827,124,0.675,125,0.827,126,0.52,127,0.827,128,0.703,129,0.827,130,0.703,131,1.104,132,1.473,133,0.675,134,0.827,135,0.733,136,1.356,137,0.703,138,1.356,139,0.703,140,1.356,141,0.703,142,0.827,143,0.703,144,0.827,145,0.703,146,0.795,147,0.703,148,0.827,149,0.675,150,0.827,151,0.703,152,0.703,153,0.675,154,0.827,155,0.703,156,0.703,157,0.827,158,0.675,159,0.827,160,1.252,161,0.675,162,0.827,163,0.675,164,0.594,165,1.169,166,0.675,167,0.763,168,0.703,169,1.269,170,0.763,171,1.201,172,0.675,173,0.827,174,0.703,175,0.474,176,0.733,177,0.703,178,0.994,179,0.827,180,0.703,181,0.703,182,0.703,183,0.647,184,0.703,185,0.703,186,0.795,187,0.827,188,0.01,189,0.01,214,5.644,234,1.729,249,3.588,251,1.217,273,1.016,343,2.482,915,2.685,1788,6.284,1789,6.207,1790,3.486,1791,4.266,1792,4.925,1793,4.947,1794,3.486,1795,3.486,1796,3.486,1797,3.486,1798,3.486,1799,3.486]],["title/injectables/SidenavService.html",[33,1.992,391,0.916]],["body/injectables/SidenavService.html",[2,0.14,3,0.106,7,0.089,11,0.382,13,0.572,16,4.37,17,3.009,24,0.714,30,0.355,31,0.966,32,1.766,33,2.801,34,0.703,41,0.875,42,0.603,46,0.732,48,0.703,49,0.773,50,1.276,51,0.016,52,0.733,53,0.919,54,1.029,55,1.374,57,0.983,58,5.282,62,3.87,68,0.797,70,1.512,72,2.199,84,1.123,89,1.777,95,0.26,96,0.14,100,0.123,101,0.008,102,1.003,103,1.629,108,0.744,164,0.925,188,0.011,189,0.011,234,1.512,253,1.512,259,2.52,264,1.403,265,1.582,273,1.346,302,1.512,331,2.232,391,1.46,401,1.964,402,1.781,462,2.959,542,4.37,597,3.864,611,4.7,617,4.222,620,4.222,622,3.578,639,3.071,664,4.988,709,3.87,826,2.644,827,2.318,997,3.477,1034,2.855,1063,5.054,1089,6.394,1111,2.855,1231,4.693,1751,4.7,1754,4.7,1760,4.222,1761,4.7,1765,4.7,1767,4.7,1800,3.473,1801,5.427,1802,5.427,1803,6.591,1804,6.591,1805,6.591,1806,6.591,1807,5.427,1808,4.011,1809,5.427,1810,4.011,1811,4.011,1812,4.011,1813,4.011,1814,4.011,1815,5.427,1816,4.011,1817,4.011,1818,5.427,1819,4.011,1820,4.011,1821,4.011,1822,4.011,1823,4.011,1824,4.011,1825,4.011,1826,4.011,1827,4.011,1828,4.011,1829,5.427,1830,4.011,1831,4.011]],["title/components/StatusViewComponent.html",[0,0.073,163,0.747]],["body/components/StatusViewComponent.html",[0,0.144,1,0.659,2,0.114,3,0.086,4,0.745,5,0.775,6,0.715,7,0.072,11,0.19,12,0.715,17,1.993,19,0.91,20,1.112,22,0.775,23,1.62,24,1.429,25,0.949,26,0.949,28,0.949,30,0.289,31,0.836,32,1.564,34,0.609,38,1.216,40,2.034,41,0.973,42,0.612,46,0.726,51,0.016,52,0.523,53,0.827,57,0.899,63,1.363,64,1.605,68,0.495,70,1.679,72,1.905,84,0.767,95,0.238,96,0.114,99,0.84,100,0.1,101,0.006,103,1.361,108,0.606,115,0.444,116,1.116,117,1.116,118,1.072,119,1.431,120,0.775,121,1.116,122,0.659,123,0.775,124,0.632,125,0.775,126,0.701,127,0.775,128,0.659,129,0.775,130,0.659,131,1.072,132,1.431,133,0.632,134,0.775,135,0.687,136,1.308,137,0.659,138,1.308,139,0.659,140,1.308,141,0.659,142,0.775,143,0.659,144,0.775,145,0.659,146,0.745,147,0.659,148,0.775,149,0.632,150,0.775,151,0.659,152,0.659,153,0.632,154,0.775,155,0.659,156,0.659,157,0.775,158,0.632,159,0.775,160,0.659,161,0.632,162,0.775,163,1.167,164,1.168,165,1.116,166,0.632,167,0.715,168,0.659,169,1.248,170,0.715,171,1.158,172,0.632,173,0.775,174,0.659,175,0.444,176,0.687,177,0.659,178,0.949,179,0.775,180,0.659,181,0.659,182,0.659,183,0.606,184,0.659,185,0.659,186,0.745,187,0.775,188,0.009,189,0.009,218,1.213,233,3.325,234,1.31,247,3.922,251,1.162,253,2.15,254,3.174,256,2.698,257,2.82,259,1.605,260,3.347,261,3.347,262,3.347,263,3.347,264,1.599,265,1.642,273,0.836,278,1.746,291,1.888,294,3.657,295,3.194,296,2.843,297,2.843,298,2.843,299,2.843,300,2.976,301,3.128,302,1.535,595,2.088,598,1.266,639,2.191,849,2.894,867,4.552,874,2.718,960,2.894,1028,3.347,1426,4.291,1458,4.072,1557,5.531,1559,5.936,1562,6.36,1563,5.219,1565,2.829,1568,2.829,1570,2.829,1573,2.829,1626,3.657,1786,5.228,1832,6.36,1833,2.829,1834,4.702,1835,4.702,1836,6.027,1837,6.027,1838,6.027,1839,6.651,1840,6.027,1841,4.702,1842,3.266,1843,4.702,1844,6.651,1845,3.266,1846,3.266,1847,3.657,1848,3.266,1849,4.702,1850,4.702,1851,3.266,1852,3.266,1853,3.266,1854,3.266,1855,3.266,1856,2.829,1857,3.266,1858,3.266,1859,3.266]],["title/modules/TabularModule.html",[190,0.779,1165,2.545]],["body/modules/TabularModule.html",[0,0.123,2,0.186,3,0.14,7,0.117,11,0.308,51,0.016,95,0.313,96,0.186,100,0.225,101,0.01,115,0.722,147,1.544,163,1.028,166,1.549,167,1.163,188,0.013,189,0.013,190,1.479,191,3.948,192,1.603,193,2.849,194,2.152,195,1.972,202,3.244,203,3.565,204,2.757,205,2.152,206,1.972,208,2.757,209,3.031,210,2.251,225,1.972,226,2.601,227,2.741,229,3.07,293,2.415,305,2.045,315,3.546,639,3.031,942,3.502,1165,5.327,1198,4.131,1199,5.06,1786,3.781,1860,4.6,1861,4.6,1862,5.311,1863,4.6,1864,5.311,1865,5.311,1866,5.311]],["title/interfaces/TimeoutOption.html",[1867,2.104,1868,3.002]],["body/interfaces/TimeoutOption.html",[0,0.124,2,0.139,3,0.069,7,0.058,11,0.151,12,0.871,13,0.569,14,1.421,16,2.449,17,1.686,19,0.505,20,0.803,23,0.526,24,0.464,26,0.526,28,0.526,30,0.231,31,0.708,32,0.871,33,2.999,34,0.338,38,0.526,40,0.756,41,0.953,42,0.29,46,0.245,51,0.016,53,0.515,54,0.753,55,1.186,56,2.053,57,1.146,58,3.559,59,1.507,62,1.421,63,1.399,66,1.277,68,0.812,69,1.612,70,1.344,72,1.612,74,1.153,76,0.698,77,0.756,84,1.072,89,1.58,91,1.719,95,0.266,96,0.091,98,1.856,99,0.67,100,0.122,101,0.005,102,1.039,103,1.574,104,1.776,108,0.484,109,3.843,110,1.646,112,3.094,161,0.505,164,0.444,188,0.011,189,0.008,195,1.477,221,1.507,223,1.345,224,2.943,234,1.913,249,3.797,251,0.644,259,2.417,264,1.68,265,0.67,273,1.311,275,1.477,281,1.056,302,1.344,306,1.421,331,0.82,339,1.421,343,4.792,358,2.247,362,5.305,383,1.105,403,2.006,404,1.056,414,2.623,415,1.105,441,2.782,443,1.605,447,1.719,513,3.42,585,3.094,595,2.397,604,2.999,605,1.856,613,4.792,614,3.12,632,1.856,644,2.355,664,3.559,690,2.258,694,3.05,699,3.07,709,1.421,719,5.947,736,1.856,742,4.361,743,3.445,789,2.449,812,2.489,912,3.445,915,2.169,960,2.969,998,2.142,1024,2.623,1046,4.674,1047,3.169,1058,2.449,1059,2.258,1074,2.258,1116,2.258,1117,1.507,1119,3.094,1138,2.258,1220,3.094,1229,2.258,1272,3.094,1285,2.623,1390,2.258,1410,1.856,1417,1.719,1448,4.227,1580,2.258,1581,3.445,1584,5.033,1585,3.445,1586,4.177,1588,1.856,1596,2.028,1602,5.83,1606,4.674,1607,2.832,1608,4.177,1611,2.258,1612,2.258,1618,2.258,1620,2.258,1760,2.028,1791,3.445,1793,6.208,1867,2.169,1868,3.752,1869,2.258,1870,3.445,1871,6.867,1872,3.978,1873,4.823,1874,3.978,1875,3.978,1876,2.607,1877,2.607,1878,2.607,1879,2.607,1880,3.978,1881,2.607,1882,2.607,1883,2.607,1884,5.397,1885,2.607,1886,3.843,1887,2.607,1888,2.028,1889,2.607,1890,2.607,1891,2.607,1892,2.607,1893,5.397,1894,2.607,1895,2.607,1896,5.397,1897,2.607,1898,5.397,1899,2.607,1900,2.607,1901,2.607,1902,2.607,1903,3.978,1904,3.978,1905,2.607,1906,4.823,1907,2.607,1908,2.607,1909,2.607,1910,2.607,1911,2.607,1912,3.978,1913,2.607,1914,2.607,1915,2.607,1916,3.978,1917,2.258,1918,2.607,1919,3.978,1920,2.607,1921,3.978,1922,2.607,1923,3.978,1924,2.607,1925,2.607,1926,2.607,1927,2.607,1928,2.607,1929,7.082,1930,2.607,1931,3.978,1932,3.978,1933,3.978,1934,2.607,1935,2.258,1936,2.607,1937,2.607,1938,2.607,1939,2.607,1940,2.607,1941,3.445,1942,2.607,1943,2.607,1944,2.607,1945,2.607,1946,2.607,1947,2.607,1948,2.607,1949,2.607,1950,2.607,1951,2.607,1952,2.607,1953,2.607,1954,2.258,1955,2.607,1956,3.978,1957,3.978,1958,2.607,1959,2.607,1960,3.978,1961,2.607,1962,2.607,1963,6.126,1964,2.607,1965,3.978,1966,3.978,1967,2.607,1968,2.607,1969,2.607,1970,2.607,1971,2.607]],["title/interfaces/User.html",[694,1.714,1867,2.104]],["body/interfaces/User.html",[2,0.186,3,0.14,7,0.117,11,0.308,13,0.559,30,0.47,31,1.156,32,1.162,42,0.59,48,0.687,49,0.756,51,0.016,53,0.842,54,1.014,55,1.36,56,2.738,68,0.685,95,0.289,96,0.186,100,0.199,101,0.013,102,0.865,103,1.311,188,0.013,189,0.013,253,1.478,273,1.361,278,2.61,292,4.001,383,2.249,391,1.543,441,2.15,593,3.066,594,3.498,596,2.472,601,3.046,602,2.887,603,2.598,644,2.15,694,3.539,699,2.756,1047,2.892,1057,4.127,1083,5.044,1224,3.066,1417,3.498,1434,3.498,1448,4.001,1607,3.777,1621,4.127,1648,3.498,1867,3.544,1972,4.127,1973,6.625,1974,5.63,1975,4.595,1976,4.595]],["title/injectables/UserService.html",[391,0.916,1047,2.104]],["body/injectables/UserService.html",[2,0.179,3,0.135,7,0.113,11,0.369,13,0.669,30,0.453,31,1.13,32,1.514,34,0.823,42,0.706,46,0.65,48,0.823,49,0.905,50,0.989,51,0.016,52,0.568,53,0.823,54,0.991,55,1.467,56,3.278,68,0.728,95,0.285,96,0.179,100,0.195,101,0.012,102,0.834,103,1.263,188,0.012,189,0.012,253,1.424,273,1.13,278,2.815,292,3.146,383,2.693,391,1.641,441,2.574,593,2.955,594,3.37,596,2.382,601,3.147,602,3.07,603,2.504,644,2.574,694,3.598,699,2.693,1047,3.464,1057,4.942,1083,4.189,1224,3.672,1365,4.427,1417,3.37,1434,4.189,1448,3.911,1607,3.639,1621,3.976,1648,4.189,1867,2.787,1972,3.976,1973,5.502,1974,4.427,1975,6.263,1976,4.427,1977,6.353,1978,5.112]],["title/components/WeatherBackupWsMarkerComponent.html",[0,0.073,168,0.779]],["body/components/WeatherBackupWsMarkerComponent.html",[0,0.145,1,0.743,2,0.129,3,0.097,4,0.84,5,0.875,6,0.807,7,0.081,11,0.297,12,0.807,13,0.729,19,0.991,20,1.187,22,0.875,23,1.633,24,1.44,25,1.033,26,1.033,28,1.033,30,0.327,31,0.911,32,1.609,34,0.663,38,1.283,40,1.844,41,0.942,42,0.569,46,0.668,48,0.663,49,0.729,50,0.713,51,0.016,52,0.654,53,0.865,54,0.575,55,1.339,57,0.55,68,0.729,76,1.371,84,0.601,95,0.28,96,0.129,99,0.948,100,0.113,101,0.007,102,0.835,108,0.951,115,0.501,116,1.216,117,1.216,118,1.168,119,1.51,120,0.875,121,1.216,122,0.743,123,0.875,124,0.713,125,0.875,126,0.764,127,0.875,128,0.743,129,0.875,130,0.743,131,1.132,132,1.51,133,0.713,134,0.875,135,0.775,136,1.397,137,0.743,138,1.397,139,0.743,140,1.397,141,0.743,142,0.875,143,0.743,144,0.875,145,0.743,146,0.84,147,0.743,148,0.875,149,0.713,150,0.875,151,0.743,152,0.743,153,0.713,154,0.875,155,0.743,156,0.743,157,0.875,158,0.713,159,0.875,160,0.743,161,0.713,162,0.875,163,0.713,164,0.628,165,1.216,166,0.713,167,0.807,168,1.283,169,1.394,170,1.748,171,1.678,172,0.713,173,0.875,174,0.743,175,0.501,176,0.775,177,0.743,178,1.033,179,0.875,180,0.743,181,0.743,182,0.743,183,1.317,184,0.743,185,0.743,186,0.84,187,0.875,188,0.01,189,0.01,218,1.901,232,3.282,234,1.427,251,1.265,253,1.027,254,1.562,273,1.047,293,1.901,331,1.61,403,2.518,404,1.493,418,2.158,562,2.96,598,1.429,823,2.185,824,2.742,878,2.43,879,3.646,880,3.646,887,2.866,898,2.866,901,3.983,963,3.282,1410,4.528,1979,3.945,1980,4.454,1981,4.771,1982,3.393,1983,3.881,1984,2.43,1985,3.377,1986,2.883,1987,3.191,1988,3.191,1989,3.191,1990,2.009,1991,3.191]],["title/components/WeatherComponent.html",[0,0.073,172,0.747]],["body/components/WeatherComponent.html",[0,0.149,1,0.849,2,0.147,3,0.111,4,0.96,5,0.999,6,0.922,7,0.093,11,0.244,12,0.922,13,0.708,15,2.746,19,1.085,20,1.272,22,0.999,23,1.646,24,1.452,25,1.131,26,1.131,28,1.131,30,0.373,31,0.997,34,0.726,38,1.356,40,1.221,41,0.777,42,0.701,46,0.632,48,0.726,49,0.798,50,0.815,51,0.016,52,0.817,53,0.726,54,0.657,57,0.628,68,0.591,76,1.5,84,1.028,95,0.221,96,0.147,100,0.129,101,0.008,102,0.687,108,1.041,110,1.913,115,0.572,116,1.331,117,1.331,118,1.278,119,1.595,120,0.999,121,1.331,122,0.849,123,0.999,124,0.815,125,0.999,126,0.628,127,0.999,128,0.849,129,0.999,130,0.849,131,1.196,132,1.595,133,0.815,134,0.999,135,0.885,136,1.496,137,0.849,138,1.496,139,0.849,140,1.496,141,0.849,142,0.999,143,0.849,144,0.999,145,0.849,146,0.96,147,0.849,148,0.999,149,0.815,150,0.999,151,0.849,152,0.849,153,0.815,154,0.999,155,0.849,156,0.849,157,0.999,158,0.815,159,0.999,160,0.849,161,0.815,162,0.999,163,0.815,164,0.717,165,1.331,166,0.815,167,0.922,168,0.849,169,1.379,170,0.922,171,1.325,172,1.301,173,0.999,174,0.849,175,0.572,176,0.885,177,0.849,178,1.131,179,0.999,180,0.849,181,0.849,182,0.849,183,0.781,184,0.849,185,0.849,186,0.96,187,0.999,188,0.011,189,0.011,234,1.562,251,1.779,264,0.96,265,1.082,389,2.433,415,2.849,418,1.949,549,3.24,628,3.696,814,3.665,914,4.361,915,3.056,926,4.855,927,5.821,1986,3.656,1990,2.295,1992,3.645,1993,5.606,1994,5.606,1995,5.606,1996,5.606,1997,6.235,1998,5.606,1999,5.606,2000,5.606,2001,4.209,2002,4.209,2003,3.645]],["title/components/WeatherDataMarkerComponent.html",[0,0.073,174,0.779]],["body/components/WeatherDataMarkerComponent.html",[0,0.147,1,0.726,2,0.126,3,0.095,4,0.821,5,0.854,6,0.788,7,0.08,11,0.337,12,0.788,13,0.723,19,0.975,20,1.173,22,0.854,23,1.631,24,1.438,25,1.016,26,1.016,28,1.016,30,0.319,31,0.896,32,1.504,34,0.652,38,1.27,40,1.991,41,0.931,42,0.56,46,0.677,48,0.652,49,0.717,50,0.975,51,0.016,52,0.7,53,0.858,54,0.786,55,1.329,56,3.249,57,0.537,68,0.723,74,1.825,76,1.348,84,0.587,95,0.261,96,0.126,99,0.925,100,0.11,101,0.007,102,0.948,108,1.169,115,0.489,116,1.196,117,1.196,118,1.148,119,1.494,120,0.854,121,1.196,122,0.726,123,0.854,124,0.697,125,0.854,126,0.751,127,0.854,128,0.726,129,0.854,130,0.726,131,1.12,132,1.494,133,0.697,134,0.854,135,0.757,136,1.379,137,0.726,138,1.379,139,0.726,140,1.379,141,0.726,142,0.854,143,0.726,144,0.854,145,0.726,146,0.821,147,0.726,148,0.854,149,0.697,150,0.854,151,0.726,152,0.726,153,0.697,154,0.854,155,0.726,156,0.726,157,0.854,158,0.697,159,0.854,160,0.726,161,0.697,162,0.854,163,0.697,164,0.613,165,1.196,166,0.697,167,0.788,168,0.726,169,1.378,170,0.788,171,1.222,172,0.697,173,0.854,174,1.27,175,1.082,176,0.757,177,0.726,178,1.016,179,0.854,180,0.726,181,0.726,182,0.726,183,1.23,184,0.726,185,0.726,186,0.821,187,0.854,188,0.01,189,0.01,218,1.336,232,3.712,234,1.403,251,1.245,264,1.148,265,1.295,273,1.12,293,1.87,331,1.979,383,2.135,403,2.537,404,1.458,412,3.918,415,2.809,418,2.17,421,2.746,709,2.746,823,2.158,824,2.708,839,2.467,878,2.373,879,3.586,880,3.586,963,2.599,975,3.586,1001,2.562,1068,4.482,1072,3.875,1682,3.918,1783,4.363,1979,3.985,1980,4.499,1981,4.819,1982,3.38,1983,3.832,1984,2.373,1985,3.321,1986,2.846,1990,1.962,2004,5.033,2005,5.037,2006,3.599,2007,3.599,2008,3.599,2009,3.599,2010,3.599,2011,3.599]],["title/modules/WeatherModule.html",[190,0.779,1166,2.104]],["body/modules/WeatherModule.html",[0,0.11,2,0.156,3,0.117,7,0.098,11,0.258,51,0.016,59,3.363,95,0.317,96,0.156,100,0.211,101,0.008,115,0.605,168,1.475,169,1.372,170,1.274,171,1.537,172,1.416,174,1.475,175,0.79,176,1.537,177,1.475,178,1.386,180,1.475,181,1.475,182,1.475,183,1.08,184,1.577,188,0.011,189,0.011,190,1.386,191,3.774,192,1.344,193,2.626,194,1.804,195,2.406,201,3.407,202,3.1,203,3.407,204,2.466,205,1.804,206,1.653,208,2.466,209,2.711,210,1.888,223,2.298,225,1.653,226,2.181,227,2.298,228,2.574,229,2.574,293,2.16,305,1.829,418,1.993,935,4.227,939,3.856,941,5.039,942,2.936,943,3.464,944,5.612,946,3.464,1166,4.462,1980,4.23,1981,4.273,1982,3.248,1990,2.428,2012,3.856,2013,3.856,2014,4.453,2015,3.856,2016,3.856,2017,4.453,2018,5.818,2019,3.464,2020,3.464,2021,3.856,2022,4.453,2023,4.142,2024,3.464,2025,4.453]],["title/components/WeatherPrimaryWsConnectorComponent.html",[0,0.073,177,0.779]],["body/components/WeatherPrimaryWsConnectorComponent.html",[0,0.14,1,0.761,2,0.132,3,0.099,4,0.86,5,0.895,6,0.826,7,0.083,11,0.219,12,0.826,13,0.548,15,2.549,19,1.007,20,1.202,22,0.895,23,1.636,24,1.442,25,1.05,26,1.05,28,1.05,30,0.334,34,0.674,38,1.296,40,2.021,41,0.465,42,0.662,46,0.656,48,0.674,49,0.741,51,0.016,52,0.579,53,0.488,57,0.563,68,0.734,74,1.509,76,1.393,84,0.615,93,3.204,95,0.149,96,0.132,100,0.116,101,0.007,104,1.094,115,0.513,116,1.235,117,1.235,118,1.187,119,1.525,120,0.895,121,1.235,122,0.761,123,0.895,124,0.73,125,0.895,126,0.563,127,0.895,128,0.761,129,0.895,130,0.761,131,1.143,132,1.525,133,0.73,134,0.895,135,0.793,136,1.414,137,0.761,138,1.414,139,0.761,140,1.414,141,0.761,142,0.895,143,0.761,144,0.895,145,0.761,146,0.86,147,0.761,148,0.895,149,0.73,150,0.895,151,0.761,152,0.761,153,0.73,154,0.895,155,0.761,156,0.761,157,0.895,158,0.73,159,0.895,160,0.761,161,0.73,162,0.895,163,0.73,164,0.643,165,1.235,166,0.73,167,0.826,168,0.761,169,1.398,170,0.826,171,1.675,172,0.73,173,0.895,174,0.761,175,0.513,176,0.793,177,1.296,178,1.604,179,0.895,180,0.761,181,0.761,182,0.761,183,1.106,184,0.761,185,0.761,186,0.86,187,0.895,188,0.01,189,0.01,232,3.315,251,1.286,264,1.465,273,1.06,293,1.933,336,3.204,358,2.994,383,2.206,415,2.526,418,2.19,513,1.848,685,4.962,835,3.432,836,3.009,1014,3.432,1068,4.574,1100,5.161,1682,4.049,1979,3.894,1980,4.396,2004,5.161,2024,5.555,2026,3.267,2027,6.036,2028,7.476,2029,5.205,2030,5.205,2031,5.205,2032,6.425,2033,6.425,2034,5.205,2035,3.773,2036,3.773,2037,3.773,2038,5.564,2039,3.773,2040,6.425,2041,3.773,2042,3.773,2043,5.205,2044,5.205,2045,3.773]],["title/components/WeatherPrimaryWsMarkerComponent.html",[0,0.073,180,0.779]],["body/components/WeatherPrimaryWsMarkerComponent.html",[0,0.145,1,0.743,2,0.129,3,0.097,4,0.84,5,0.874,6,0.806,7,0.081,11,0.297,12,0.806,13,0.729,19,0.991,20,1.187,22,0.874,23,1.633,24,1.44,25,1.033,26,1.033,28,1.033,30,0.326,31,0.911,32,1.609,34,0.663,38,1.283,40,1.844,41,0.941,42,0.569,46,0.667,48,0.663,49,0.729,50,0.713,51,0.016,52,0.654,53,0.865,54,0.575,55,1.339,57,0.549,68,0.729,76,1.37,84,0.601,95,0.28,96,0.129,99,0.947,100,0.113,101,0.007,102,0.835,108,1.092,115,0.5,116,1.215,117,1.215,118,1.167,119,1.509,120,0.874,121,1.215,122,0.743,123,0.874,124,0.713,125,0.874,126,0.763,127,0.874,128,0.743,129,0.874,130,0.743,131,1.131,132,1.509,133,0.713,134,0.874,135,0.774,136,1.396,137,0.743,138,1.396,139,0.743,140,1.396,141,0.743,142,0.874,143,0.743,144,0.874,145,0.743,146,0.84,147,0.743,148,0.874,149,0.713,150,0.874,151,0.743,152,0.743,153,0.713,154,0.874,155,0.743,156,0.743,157,0.874,158,0.713,159,0.874,160,0.743,161,0.713,162,0.874,163,0.713,164,0.628,165,1.215,166,0.713,167,0.806,168,0.743,169,1.382,170,0.806,171,1.678,172,0.713,173,0.874,174,0.743,175,0.5,176,0.774,177,0.743,178,1.614,179,0.874,180,1.283,181,0.743,182,0.743,183,1.24,184,0.743,185,0.743,186,0.84,187,0.874,188,0.01,189,0.01,218,1.9,232,3.281,234,1.426,251,1.265,253,1.026,254,1.561,273,1.047,293,1.9,331,1.999,403,2.545,404,1.492,418,2.157,421,2.791,598,1.428,823,2.184,824,2.741,878,2.428,879,3.644,880,3.644,887,2.864,898,2.864,901,3.981,963,3.281,1410,4.527,1979,3.944,1980,4.453,1981,4.77,1982,3.393,1983,3.879,1984,2.428,1985,3.375,1986,2.882,1987,3.189,1988,3.189,1989,3.189,1990,2.008,1991,3.189]],["title/injectables/WeatherService.html",[391,0.916,1982,1.714]],["body/injectables/WeatherService.html",[0,0.11,2,0.081,3,0.061,7,0.051,11,0.293,13,0.532,30,0.395,31,0.643,32,1.735,34,0.468,41,0.887,42,0.402,46,0.714,48,0.298,49,0.328,50,0.863,51,0.016,52,0.496,53,0.914,54,0.696,55,1.284,57,0.94,63,1.464,64,0.785,68,0.699,70,0.641,74,1.293,77,1.828,80,2.381,84,0.824,89,1.183,95,0.24,96,0.081,99,0.592,100,0.111,101,0.007,102,0.824,103,1.248,104,1.047,108,1.13,110,1.723,126,0.343,131,0.643,164,1.074,169,1.223,175,0.857,183,1.294,188,0.007,189,0.007,218,0.854,232,3.005,233,3.382,251,0.892,253,2.122,254,3.293,256,3.367,264,1.151,265,1.299,273,1.255,275,1.341,281,1.463,289,2.088,293,1.341,295,2.938,296,3.254,297,3.254,298,3.254,299,3.254,300,2.938,301,3.088,302,1.884,303,2.939,304,2.301,305,0.723,306,1.255,307,1.517,308,1.517,331,2.161,339,1.969,391,1.058,400,3.313,401,1.127,402,1.022,418,1.924,441,2.555,485,2.852,595,3.471,596,1.072,598,0.892,601,2.223,602,1.604,603,1.127,614,2.088,622,2.381,644,1.463,699,2.468,714,2.088,812,2.831,813,2.939,814,2.753,816,1.416,819,1.638,820,1.638,821,1.416,823,2.162,824,1.683,829,2.223,833,2.223,834,1.969,835,2.381,836,2.088,839,1.769,843,2.381,844,3.595,845,2.431,846,2.571,848,1.638,849,3.108,861,3.595,862,1.638,864,2.571,865,3.595,867,4.658,868,4.747,870,4.747,871,2.571,872,2.571,874,4.431,947,1.993,982,4.489,1072,3.108,1166,1.969,1426,4.894,1427,4.529,1428,4.529,1588,2.571,1648,4.46,1847,2.809,1982,1.604,1986,3.25,2046,1.79,2047,4.373,2048,4.373,2049,4.373,2050,4.373,2051,4.373,2052,4.373,2053,4.373,2054,4.373,2055,4.373,2056,4.373,2057,4.373,2058,4.373,2059,4.373,2060,3.612,2061,3.612,2062,4.373,2063,3.612,2064,2.301,2065,3.128,2066,2.301,2067,3.128,2068,2.809,2069,2.301,2070,2.301,2071,3.128,2072,2.301,2073,2.301,2074,2.301,2075,4.904,2076,2.301,2077,2.301,2078,2.301,2079,2.301,2080,3.128,2081,2.301,2082,2.301,2083,4.904,2084,2.301,2085,3.128,2086,2.301,2087,2.301,2088,2.301,2089,2.301,2090,4.529,2091,4.529,2092,2.301,2093,1.79,2094,1.993,2095,1.993,2096,3.128,2097,1.993,2098,1.993,2099,1.993,2100,1.993,2101,1.993,2102,1.993,2103,1.993,2104,1.993,2105,1.993,2106,1.993,2107,1.993,2108,1.993,2109,1.993,2110,6.236,2111,1.993,2112,6.236,2113,1.993,2114,6.236,2115,1.993,2116,1.993,2117,1.993,2118,1.993,2119,6.236,2120,4.373,2121,1.993]],["title/components/WeatherSidebarComponent.html",[0,0.073,181,0.779]],["body/components/WeatherSidebarComponent.html",[0,0.138,1,0.546,2,0.095,3,0.071,4,0.617,5,0.643,6,0.593,7,0.06,11,0.361,12,1.081,13,0.761,14,2.232,15,2.418,19,0.792,20,0.996,22,0.643,23,1.597,24,1.408,25,0.826,26,0.826,28,0.826,30,0.24,31,0.728,32,1.49,34,0.53,38,1.11,39,2.699,40,1.596,41,0.914,42,0.455,46,0.68,48,0.53,49,0.583,50,1.249,51,0.016,52,0.783,53,0.925,54,1.007,55,1.364,57,0.404,63,1.187,64,1.878,68,0.796,69,2.395,70,1.533,74,1.596,76,1.096,77,1.596,84,0.805,90,3.628,95,0.262,96,0.095,99,0.696,100,0.083,101,0.005,102,1.149,103,0.669,104,1.803,108,1.097,110,2.017,115,0.368,116,0.972,117,0.972,118,0.933,119,1.306,120,0.643,121,0.972,122,0.546,123,0.643,124,0.524,125,0.643,126,0.611,127,0.643,128,0.546,129,0.643,130,0.546,131,1.344,132,1.306,133,0.524,134,0.643,135,0.569,136,1.172,137,0.546,138,1.172,139,0.546,140,1.172,141,0.546,142,0.643,143,0.546,144,0.643,145,0.546,146,0.617,147,0.546,148,0.643,149,0.524,150,0.643,151,0.546,152,0.546,153,0.524,154,0.643,155,0.546,156,0.546,157,0.643,158,0.524,159,0.643,160,0.546,161,0.524,162,0.643,163,0.524,164,0.938,165,0.972,166,0.524,167,0.593,168,0.546,169,1.411,170,0.593,171,1.038,172,0.524,173,0.643,174,0.546,175,0.671,176,0.569,177,0.546,178,0.826,179,0.643,180,0.546,181,1.11,182,0.546,183,1.437,184,0.546,185,0.546,186,0.617,187,0.643,188,0.01,189,0.008,218,1.005,223,1.397,234,1.141,249,2.366,251,1.012,253,0.754,259,2.367,264,0.617,265,0.696,273,1.329,278,2.308,302,0.754,324,3.546,331,1.954,339,2.232,383,1.735,388,3.515,389,3.181,403,2.429,404,1.097,415,2.94,421,2.232,470,3.387,598,1.05,613,4.844,628,2.699,644,1.659,694,2.192,699,1.148,709,2.232,823,2.397,824,2.3,915,3,959,1.928,960,3.826,961,3.185,962,3.185,963,2.113,965,3.546,967,3.546,971,2.345,972,3.185,974,4.597,975,2.915,982,2.915,984,2.345,990,2.699,1001,1.928,1025,2.52,1111,1.928,1371,3.546,1448,1.667,1530,5.394,1917,2.345,1954,2.345,1979,3.978,1982,3.269,1983,4.256,1984,1.785,1985,2.699,1986,3.658,1990,1.476,1997,4.276,2003,4.766,2019,4.835,2023,5.195,2122,3.546,2123,7.297,2124,4.094,2125,4.094,2126,4.937,2127,6.804,2128,6.455,2129,4.094,2130,4.094,2131,2.708,2132,2.708,2133,4.094,2134,5.503,2135,4.094,2136,2.708,2137,2.345,2138,4.094,2139,2.708,2140,4.094,2141,2.708,2142,3.546,2143,2.708,2144,2.345,2145,2.708,2146,2.345,2147,2.708,2148,2.708,2149,2.708,2150,2.708,2151,2.708,2152,2.708,2153,2.708,2154,2.708,2155,2.708,2156,2.708,2157,2.708,2158,4.094,2159,4.094,2160,2.708,2161,2.708,2162,2.708,2163,2.708,2164,2.708]],["title/classes/WeatherStationConfig.html",[101,0.007,1986,1.891]],["body/classes/WeatherStationConfig.html",[0,0.091,2,0.091,3,0.069,7,0.058,11,0.231,13,0.42,30,0.353,31,0.709,32,1.715,41,0.926,42,0.443,46,0.634,48,0.516,49,0.567,50,0.505,51,0.016,52,0.29,53,0.825,54,0.407,55,1.126,57,0.98,63,1.906,64,1.359,68,0.569,70,0.727,74,1.155,77,1.4,80,1.722,89,0.855,95,0.252,96,0.091,99,0.671,100,0.122,101,0.009,102,0.881,103,0.984,104,1.155,108,1.183,110,0.891,126,0.389,131,0.465,164,0.921,169,1.26,175,0.734,183,1.368,188,0.008,189,0.008,218,0.97,232,2.788,233,3.297,251,0.645,253,2.082,254,3.147,256,3.219,273,1.356,275,1.479,281,1.058,289,1.509,293,0.97,295,3.062,296,3.392,297,3.392,298,3.392,299,3.392,300,3.062,301,3.219,302,1.946,303,3.835,304,2.492,305,1.252,306,2.171,307,2.626,308,1.722,331,2.299,339,1.424,391,0.945,400,3.122,401,1.279,402,1.16,418,1.906,441,2.189,485,2.365,595,3.51,596,1.217,598,1.012,601,1.956,602,1.16,603,1.279,614,1.509,622,1.722,644,1.058,699,2.466,714,1.509,812,2.788,813,3.184,814,3.476,816,2.452,819,1.859,820,1.859,821,1.607,823,1.793,824,1.217,829,1.607,833,1.607,834,1.424,835,1.722,836,1.509,839,1.279,843,1.722,844,1.859,845,2.171,846,2.836,848,1.859,849,2.452,861,1.859,862,1.859,864,2.836,865,1.859,867,4.688,868,4.86,870,4.86,871,2.836,872,2.836,874,4.495,982,3.846,1072,2.452,1166,1.424,1426,5.044,1427,4.768,1428,4.768,1588,1.859,1648,4.606,1847,2.031,1982,1.16,1986,3.219,2046,2.031,2047,2.261,2048,2.261,2049,2.261,2050,2.261,2051,2.261,2052,2.261,2053,2.261,2054,2.261,2055,2.261,2056,2.261,2057,2.261,2058,2.261,2059,2.261,2062,2.261,2065,2.261,2067,2.261,2068,2.031,2071,2.261,2075,5.344,2080,2.261,2083,5.344,2085,2.261,2090,4.202,2091,4.202,2093,2.031,2094,3.449,2095,3.449,2096,5.309,2097,2.261,2098,2.261,2099,2.261,2100,2.261,2101,2.261,2102,2.261,2103,2.261,2104,2.261,2105,2.261,2106,2.261,2107,2.261,2108,2.261,2109,2.261,2110,6.384,2111,2.261,2112,6.384,2113,2.261,2114,6.384,2115,2.261,2116,2.261,2117,2.261,2118,2.261,2119,6.384,2120,4.678,2121,2.261,2165,3.983,2166,2.611,2167,2.611,2168,2.611,2169,2.611,2170,2.611]],["title/components/WeatherStationSidebarComponent.html",[0,0.073,182,0.779]],["body/components/WeatherStationSidebarComponent.html",[0,0.146,1,0.717,2,0.124,3,0.094,4,0.811,5,0.844,6,0.779,7,0.079,11,0.335,12,0.779,13,0.721,19,0.967,20,1.165,22,0.844,23,1.63,24,1.437,25,1.008,26,1.008,28,1.008,30,0.315,31,0.889,32,1.498,34,0.647,38,1.263,40,1.913,41,0.929,42,0.555,46,0.675,48,0.647,49,0.711,50,0.967,51,0.016,52,0.696,53,0.886,54,0.779,55,1.324,57,0.53,63,1.816,68,0.794,76,1.337,84,0.58,95,0.27,96,0.124,99,0.914,100,0.109,101,0.013,102,0.942,108,1.162,110,2.137,115,0.483,116,1.186,117,1.186,118,1.139,119,1.486,120,0.844,121,1.186,122,0.717,123,0.844,124,0.688,125,0.844,126,0.745,127,0.844,128,0.717,129,0.844,130,0.717,131,1.114,132,1.486,133,0.688,134,0.844,135,0.748,136,1.371,137,0.717,138,1.371,139,0.717,140,1.371,141,0.717,142,0.844,143,0.717,144,0.844,145,0.717,146,0.811,147,0.717,148,0.844,149,0.688,150,0.844,151,0.717,152,0.717,153,0.688,154,0.844,155,0.717,156,0.717,157,0.844,158,0.688,159,0.844,160,0.717,161,0.688,162,0.844,163,0.688,164,0.606,165,1.186,166,0.688,167,0.779,168,0.717,169,1.398,170,0.779,171,1.214,172,0.688,173,0.844,174,0.717,175,0.483,176,0.748,177,0.717,178,1.008,179,0.844,180,0.717,181,0.717,182,1.263,183,1.492,184,0.717,185,0.717,186,0.811,187,0.844,188,0.01,189,0.01,218,1.32,234,1.391,239,4.871,251,1.234,253,0.991,264,0.811,265,0.914,273,1.174,305,1.57,331,1.969,379,3.556,403,2.533,404,1.441,413,4.491,415,2.9,421,2.723,562,2.887,598,1.379,709,2.723,823,2.144,824,2.69,839,2.447,915,3.414,959,2.532,961,3.885,962,3.885,963,2.578,972,3.885,975,3.556,995,3.08,996,3.08,1001,2.532,1068,4.87,1979,3.974,1982,3.373,1983,3.807,1984,2.345,1985,4.129,1986,3.231,1990,1.939,2023,5.19,2122,4.326,2137,3.08,2144,3.08,2171,4.995,2172,3.556,2173,3.556,2174,3.556,2175,3.556,2176,3.556]],["title/components/WeatherSummaryComponent.html",[0,0.073,184,0.779]],["body/components/WeatherSummaryComponent.html",[0,0.139,1,0.736,2,0.128,3,0.096,4,0.832,5,0.866,6,0.799,7,0.081,11,0.34,12,0.799,13,0.772,19,0.984,20,1.181,22,0.866,23,1.632,24,1.441,25,1.026,26,1.026,28,1.026,30,0.323,31,0.905,32,1.282,34,0.658,38,1.278,41,0.946,42,0.565,46,0.649,48,0.658,49,0.902,50,1.133,51,0.016,52,0.74,53,0.82,54,0.914,55,1.37,57,0.544,68,0.76,77,2,84,0.955,89,1.917,95,0.279,96,0.128,99,0.938,100,0.112,101,0.007,102,1.033,103,1.257,108,1.087,115,0.496,116,1.207,117,1.207,118,1.16,119,1.503,120,0.866,121,1.207,122,0.736,123,0.866,124,0.706,125,0.866,126,0.758,127,0.866,128,0.736,129,0.866,130,0.736,131,1.127,132,1.503,133,0.706,134,0.866,135,0.767,136,1.39,137,0.736,138,1.39,139,0.736,140,1.39,141,0.736,142,0.866,143,0.736,144,0.866,145,0.736,146,0.832,147,0.736,148,0.866,149,0.706,150,0.866,151,0.736,152,0.736,153,0.706,154,0.866,155,0.736,156,0.736,157,0.866,158,0.706,159,0.866,160,0.736,161,0.706,162,0.866,163,0.706,164,0.622,165,1.207,166,0.706,167,0.799,168,0.736,169,1.413,170,0.799,171,1.231,172,0.706,173,0.866,174,0.736,175,0.86,176,0.767,177,0.736,178,1.026,179,0.866,180,0.736,181,0.736,182,0.736,183,0.677,184,1.278,185,0.736,186,0.832,187,0.866,188,0.01,189,0.01,218,1.355,253,1.016,257,2.156,273,1.284,305,1.599,315,3.453,403,2.364,404,1.478,598,1.414,639,3.363,823,2.174,834,3.192,839,2.491,963,2.624,990,3.353,997,3.262,998,2.812,999,4.049,1013,2.597,1014,3.353,1015,3.956,1016,3.956,1017,3.956,1019,2.597,1020,3.16,1021,3.956,1022,3.956,1023,2.838,1024,3.353,1025,3.13,1026,4.91,1027,3.956,1028,3.621,1029,3.956,1031,2.838,1032,2.838,1034,2.597,1036,2.838,1726,4.404,1979,3.858,1982,3.446,1990,1.989,2020,5.505,2075,3.956,2083,3.956,2090,3.956,2091,3.956,2146,3.16,2177,5.086,2178,3.648,2179,3.648,2180,3.648,2181,3.648,2182,3.648,2183,3.648]],["title/components/WikiButtonComponent.html",[0,0.073,185,0.779]],["body/components/WikiButtonComponent.html",[0,0.144,1,0.865,2,0.15,3,0.113,4,0.978,5,1.018,6,0.939,7,0.095,10,3.053,11,0.249,12,1.616,13,0.598,14,3.095,15,3.116,16,4.168,19,1.099,20,1.284,22,1.018,23,1.648,24,1.453,25,1.145,26,1.145,27,4.415,28,1.145,29,4.415,30,0.38,34,0.735,38,1.366,39,3.742,40,1.964,41,0.784,42,0.707,46,0.637,48,0.735,49,0.808,50,0.83,51,0.016,52,0.707,53,0.555,54,0.669,57,0.64,68,0.598,84,0.926,86,4.415,89,1.859,90,3.742,94,3.714,95,0.169,96,0.15,100,0.131,101,0.008,115,0.583,116,1.347,117,1.347,118,1.294,119,1.607,120,1.018,121,1.347,122,0.865,123,1.018,124,0.83,125,1.018,126,0.64,127,1.018,128,0.865,129,1.018,130,0.865,131,1.205,132,1.607,133,0.83,134,1.018,135,0.902,136,1.51,137,0.865,138,1.51,139,0.865,140,1.51,141,0.865,142,1.018,143,0.865,144,1.018,145,0.865,146,0.978,147,0.865,148,1.018,149,0.83,150,1.018,151,0.865,152,0.865,153,0.83,154,1.018,155,0.865,156,0.865,157,1.018,158,0.83,159,1.018,160,0.865,161,0.83,162,1.018,163,0.83,164,0.731,165,1.347,166,0.83,167,0.939,168,0.865,169,1.333,170,0.939,171,1.337,172,0.83,173,1.018,174,0.865,175,0.583,176,0.902,177,0.865,178,1.145,179,1.018,180,0.865,181,0.865,182,0.865,183,0.796,184,0.865,185,1.366,186,1.76,187,1.018,188,0.011,189,0.011,215,5.479,251,1.402,273,1.01,275,2.741,409,3.914,602,1.904,630,4.415,786,4.916,2184,6.1,2185,5.676,2186,4.288,2187,5.676,2188,4.288,2189,5.676,2190,4.288,2191,4.288]],["title/coverage.html",[2192,4.579]],["body/coverage.html",[0,0.153,1,0.726,7,0.08,8,4.889,9,2.799,10,4.137,33,1.857,41,0.443,51,0.016,53,0.466,101,0.014,122,0.726,124,0.697,126,0.537,128,0.726,130,0.726,133,0.697,135,0.757,137,0.726,139,0.726,141,0.726,143,0.726,145,0.726,147,0.726,149,0.697,151,0.726,152,0.726,155,0.726,158,0.697,160,0.726,161,0.697,163,0.697,166,0.697,168,0.726,170,1.103,171,1.444,172,0.697,174,0.726,175,0.684,176,0.757,177,0.726,178,1.27,180,0.726,181,0.726,182,0.726,183,0.935,184,0.726,185,0.726,188,0.01,189,0.01,214,2.799,215,2.799,216,4.137,231,3.918,254,1.526,302,1.003,311,4.363,312,2.799,313,3.117,315,1.962,376,2.562,377,4.52,391,1.758,403,1.179,405,2.562,409,2.08,418,1.991,558,2.799,559,4.363,593,3.359,596,1.677,597,2.562,598,1.395,599,2.215,601,1.458,604,1.857,694,1.598,810,2.215,811,3.918,822,2.799,828,1.857,875,4.482,876,2.799,877,2.799,878,4.151,913,3.117,938,3.117,940,2.799,945,2.799,959,4.137,997,1.763,1013,4.137,1038,3.117,1047,1.962,1072,4.93,1146,6.421,1169,3.117,1187,2.799,1193,2.799,1198,2.799,1251,3.117,1274,2.799,1350,3.117,1358,3.117,1383,2.562,1408,2.799,1409,3.117,1430,3.117,1431,3.117,1514,3.117,1543,3.117,1577,3.117,1625,3.117,1638,2.373,1642,3.117,1661,3.117,1662,3.117,1723,3.117,1724,2.799,1725,3.117,1731,3.117,1747,3.117,1786,2.562,1788,3.117,1800,3.117,1832,3.117,1833,4.363,1867,2.746,1868,2.799,1869,4.363,1972,3.918,1979,3.922,1980,3.875,1981,3.832,1982,1.598,1986,1.763,1992,3.117,2020,2.799,2021,3.117,2023,3.586,2024,2.799,2026,3.117,2046,3.918,2093,2.799,2184,3.117,2192,3.117,2193,3.599,2194,3.117,2195,7.194,2196,3.599,2197,6.626,2198,6.867,2199,5.037,2200,3.599,2201,8.01,2202,3.599,2203,3.599,2204,3.599,2205,3.599,2206,5.811,2207,6.295,2208,3.599,2209,5.037,2210,5.037,2211,5.811,2212,3.599,2213,3.599,2214,3.599,2215,5.811,2216,5.037,2217,3.117,2218,6.295,2219,3.599,2220,7.05,2221,3.599,2222,5.037,2223,3.599,2224,6.295,2225,3.599,2226,3.599,2227,5.811,2228,3.599,2229,3.599,2230,7.05,2231,6.867,2232,3.599,2233,3.599,2234,3.599,2235,3.599,2236,3.599,2237,6.626,2238,3.599,2239,3.599,2240,3.599,2241,3.599,2242,3.599,2243,3.599,2244,3.599,2245,3.599,2246,3.599]],["title/dependencies.html",[192,1.403,2247,3.214]],["body/dependencies.html",[51,0.016,96,0.199,188,0.013,189,0.013,192,1.714,194,2.744,210,2.407,221,3.282,223,3.495,224,3.096,402,3.008,591,4.918,592,4.918,730,4.417,1111,4.042,1114,5.153,1115,4.822,1117,3.282,1172,4.918,1285,3.744,1512,4.918,1513,4.417,2019,4.417,2248,5.678,2249,8.042,2250,5.678,2251,6.773,2252,5.678,2253,5.678,2254,5.678,2255,5.678,2256,4.918,2257,5.678,2258,5.678,2259,5.678,2260,5.678,2261,5.678,2262,5.678,2263,5.678,2264,5.678,2265,5.678,2266,5.678,2267,5.678,2268,5.678,2269,5.678,2270,5.678,2271,5.678,2272,5.678,2273,5.678,2274,6.773,2275,4.918,2276,5.678,2277,5.678]],["title/miscellaneous/enumerations.html",[2278,2.783,2279,4.025]],["body/miscellaneous/enumerations.html",[30,0.507,41,0.705,51,0.016,77,1.658,188,0.013,189,0.013,256,2.801,264,1.869,278,2.696,291,3.932,295,2.665,296,2.951,297,2.951,298,2.951,299,2.951,300,2.665,301,2.801,358,3.383,366,5.291,444,4.448,513,3.556,595,3.224,664,3.771,1434,4.485,1657,5.291,1856,4.953,1886,4.843,1888,4.448,2217,4.953,2278,4.953,2279,4.953,2280,7.26,2281,7.26,2282,4.953,2283,5.719,2284,4.953,2285,5.719,2286,4.953,2287,5.719,2288,4.953]],["title/index.html",[30,0.285,653,2.5,714,1.858]],["body/index.html",[0,0.133,3,0.139,7,0.116,13,0.738,24,0.937,48,0.971,51,0.013,52,0.585,76,1.732,78,5.032,188,0.013,189,0.013,206,1.955,225,2.713,234,2.035,276,3.24,281,2.133,289,3.043,293,1.955,302,1.466,408,3.404,409,4.223,420,5.448,462,2.87,549,3.043,562,3.043,593,3.043,737,4.817,794,4.095,812,2.717,827,3.043,843,3.471,981,3.748,1058,3.24,1064,4.095,1231,3.748,1274,4.095,1285,4.266,1351,4.095,1471,4.095,1732,4.559,1744,4.559,1935,4.559,1941,4.559,2256,6.699,2286,4.559,2289,5.264,2290,7.004,2291,7.306,2292,5.603,2293,5.264,2294,6.47,2295,5.264,2296,5.264,2297,5.264,2298,5.264,2299,5.264,2300,5.264,2301,5.264,2302,5.264,2303,5.264,2304,6.612,2305,5.264,2306,6.47,2307,7.5,2308,7.004,2309,6.47,2310,5.264,2311,5.264,2312,4.559,2313,5.264,2314,6.817,2315,5.264,2316,5.264,2317,5.264,2318,5.264,2319,5.264,2320,5.264,2321,5.264,2322,5.264,2323,5.264,2324,5.264,2325,5.264,2326,6.47,2327,7.5,2328,6.47,2329,5.264,2330,7.306,2331,5.264,2332,5.264,2333,5.264,2334,5.264,2335,5.264]],["title/license.html",[653,2.5,714,1.858,2336,2.783]],["body/license.html",[3,0.186,4,0.759,7,0.105,13,0.785,15,1.631,32,1.631,46,0.524,50,0.645,51,0.009,54,0.869,59,2.756,62,3.508,63,1.941,66,3.152,76,1.276,101,0.006,108,1.28,118,0.759,153,1.078,175,0.826,188,0.009,189,0.009,195,2.56,234,0.928,235,2.371,278,1.236,302,1.551,305,1.047,314,3.394,334,2.884,358,2.221,366,5.485,383,2.728,386,3.219,409,3.515,421,1.815,422,5.02,426,3.708,443,3.428,447,2.195,462,1.815,470,2.05,502,2.59,513,2.335,517,3.708,527,2.59,533,4.332,560,2.59,562,4.149,565,2.884,612,4.332,632,2.371,644,1.349,694,2.117,737,4.861,742,3.965,767,2.884,789,2.05,794,5.666,824,1.552,829,3.743,914,3.708,981,5.249,990,2.195,1018,2.59,1024,3.144,1025,3.961,1039,4.429,1064,2.59,1086,2.371,1224,1.925,1232,4.129,1272,3.708,1278,3.394,1351,5.005,1393,2.884,1434,3.144,1471,2.59,1513,2.59,1530,5.793,1596,2.59,1657,3.708,1707,2.884,1711,2.884,1716,2.59,1867,3.036,1870,2.884,1886,2.371,1888,4.73,2027,2.884,2068,3.708,2142,2.884,2194,2.884,2275,2.884,2282,2.884,2284,2.884,2292,6.938,2304,5.266,2312,6.973,2314,2.884,2336,6.851,2337,7.825,2338,7.179,2339,3.33,2340,3.33,2341,4.768,2342,5.569,2343,4.768,2344,6.08,2345,6.08,2346,6.08,2347,3.33,2348,3.33,2349,3.33,2350,3.33,2351,3.33,2352,6.08,2353,7.051,2354,4.768,2355,3.33,2356,5.569,2357,4.768,2358,3.33,2359,7.284,2360,6.435,2361,7.91,2362,3.33,2363,7.849,2364,4.768,2365,4.768,2366,3.33,2367,3.33,2368,5.569,2369,3.33,2370,3.33,2371,5.569,2372,4.768,2373,4.768,2374,4.768,2375,3.33,2376,4.768,2377,3.33,2378,3.33,2379,3.33,2380,6.695,2381,7.284,2382,3.33,2383,3.33,2384,5.569,2385,6.894,2386,4.768,2387,3.33,2388,3.33,2389,3.33,2390,3.33,2391,3.33,2392,3.33,2393,3.33,2394,3.33,2395,3.33,2396,3.33,2397,6.435,2398,6.695,2399,5.569,2400,3.33,2401,3.33,2402,3.33,2403,3.33,2404,3.33,2405,3.33,2406,5.569,2407,5.569,2408,6.695,2409,6.435,2410,3.33,2411,4.768,2412,3.33,2413,3.33,2414,3.33,2415,3.33,2416,3.33,2417,3.33,2418,5.569,2419,4.768,2420,4.768,2421,4.768,2422,4.768,2423,5.569,2424,4.768,2425,3.33,2426,3.33,2427,3.33,2428,3.33,2429,3.33,2430,3.33,2431,3.33,2432,3.33,2433,4.768,2434,3.33,2435,4.768,2436,3.33,2437,4.768,2438,6.08,2439,3.33,2440,3.33,2441,3.33,2442,3.33,2443,3.33,2444,3.33,2445,3.33,2446,4.768,2447,3.33,2448,3.33,2449,3.33,2450,3.33,2451,3.33,2452,3.33,2453,3.33]],["title/modules.html",[190,1.067]],["body/modules.html",[51,0.013,188,0.013,189,0.013,190,1.188,191,3.039,201,2.744,202,2.496,203,2.744,289,3.404,825,3.21,935,3.404,1115,5.77,1156,4.192,1161,3.882,1162,3.882,1163,3.625,1164,3.882,1165,3.882,1166,3.21,2038,7.019,2454,8.104,2455,8.125,2456,5.888]],["title/overview.html",[156,1.067]],["body/overview.html",[0,0.067,1,1.414,33,2.966,51,0.016,100,0.108,101,0.007,115,0.479,122,1.414,124,1.113,126,1.045,128,1.414,130,1.16,133,1.113,135,1.208,137,1.16,139,1.414,141,1.414,143,1.414,145,1.414,147,1.16,149,1.113,151,1.414,152,1.16,155,1.414,156,0.712,158,1.357,160,1.414,161,1.357,163,1.357,166,1.357,168,1.16,172,1.113,174,1.16,176,1.208,177,1.16,180,1.16,181,1.16,182,1.16,184,1.414,185,1.414,188,0.01,189,0.01,190,1.002,191,4.161,192,1.065,193,1.429,194,1.429,195,1.31,196,3.055,197,3.055,198,3.055,199,3.055,200,3.055,201,3.616,202,3.161,203,3.679,204,2.105,205,1.429,206,1.31,391,0.837,403,1.883,513,1.727,599,3.538,601,2.329,825,4.352,828,2.966,900,3.863,930,3.055,931,3.055,932,3.055,933,3.055,934,3.055,935,4.262,997,2.816,998,1.566,1047,3.134,1156,5.703,1157,3.055,1158,3.055,1159,3.055,1160,3.055,1161,4.797,1162,4.622,1163,4.59,1164,5.192,1165,5.036,1166,4.401,1183,3.055,1184,3.055,1186,3.055,1216,2.743,1246,3.055,1247,3.055,1396,3.055,1397,3.055,1403,3.055,1404,3.055,1406,3.055,1634,3.055,1635,3.055,1636,3.055,1637,3.055,1638,3.79,1738,3.055,1739,3.055,1741,3.055,1776,3.055,1777,3.055,1779,3.055,1860,3.055,1861,3.055,1863,3.055,1867,1.923,1886,2.511,1982,2.553,2012,3.055,2013,3.055,2015,3.055,2016,3.055,2288,3.055,2457,3.527,2458,3.527]],["title/routes.html",[998,2.348]],["body/routes.html",[51,0.014,188,0.014,189,0.014,998,2.839]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":358,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AppComponent.html":{},"injectables/MapService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["0.8.26",{"_index":2277,"title":{},"body":{"dependencies.html":{}}}],["0.svg",{"_index":1563,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["00:15:00",{"_index":1878,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["00:30:00",{"_index":1881,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["01:00:00",{"_index":1883,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["02:00:00",{"_index":1885,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["06:00:00",{"_index":1887,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["1",{"_index":513,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["1).subscrib",{"_index":1951,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["1.0",{"_index":1659,"title":{},"body":{"injectables/MapService.html":{}}}],["1.1.8",{"_index":2262,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":2273,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2293,"title":{},"body":{"index.html":{}}}],["1.svg",{"_index":1565,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["1/1",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":900,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/CdbService.html":{},"overview.html":{}}}],["10/10",{"_index":2226,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1146,"title":{},"body":{"components/AppComponent.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["1000",{"_index":693,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["11",{"_index":1395,"title":{},"body":{"injectables/CdbService.html":{}}}],["11.1.3",{"_index":2271,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2222,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1890,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["12/12",{"_index":2208,"title":{},"body":{"coverage.html":{}}}],["12:00:00",{"_index":1889,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["13",{"_index":2457,"title":{},"body":{"overview.html":{}}}],["13/13",{"_index":2206,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1879,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["16/16",{"_index":2225,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":2213,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1886,"title":{},"body":{"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["2.0.8",{"_index":2264,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2258,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":2270,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2261,"title":{},"body":{"dependencies.html":{}}}],["2.svg",{"_index":1568,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["20",{"_index":324,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["200",{"_index":728,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialSandboxComponent.html":{}}}],["20000",{"_index":2162,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["2007",{"_index":2341,"title":{},"body":{"license.html":{}}}],["201",{"_index":723,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["22/22",{"_index":2242,"title":{},"body":{"coverage.html":{}}}],["25/25",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["26/26",{"_index":2204,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":2196,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":2339,"title":{},"body":{"license.html":{}}}],["3",{"_index":366,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.0.0",{"_index":2266,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2268,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":1570,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["3/3",{"_index":2198,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1882,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["30/30",{"_index":2236,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1674,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["31/31",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":2458,"title":{},"body":{"overview.html":{}}}],["36/36",{"_index":2216,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1657,"title":{},"body":{"injectables/MapService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.1.3",{"_index":2259,"title":{},"body":{"dependencies.html":{}}}],["4.svg",{"_index":1573,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["4/4",{"_index":2197,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1594,"title":{},"body":{"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{}}}],["403",{"_index":1964,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["4d0",{"_index":2430,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":2431,"title":{},"body":{"license.html":{}}}],["5",{"_index":2284,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["5/5",{"_index":2207,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1675,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["500",{"_index":1673,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["6",{"_index":1888,"title":{},"body":{"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["6.0.0",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2274,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1672,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["7",{"_index":2286,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["7/7",{"_index":2215,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1671,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["8",{"_index":2288,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["8/8",{"_index":2218,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1670,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["9/9",{"_index":2195,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1669,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["_",{"_index":479,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_blank",{"_index":2191,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["_getsubtree(alarm",{"_index":491,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_initi",{"_index":844,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["_nodedata",{"_index":480,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":481,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":484,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["a100",{"_index":1678,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a400",{"_index":1677,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a700",{"_index":1676,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accent",{"_index":1679,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accept",{"_index":2452,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1018,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"license.html":{}}}],["accompani",{"_index":2409,"title":{},"body":{"license.html":{}}}],["account",{"_index":1057,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["account_circl",{"_index":1149,"title":{},"body":{"components/AppComponent.html":{}}}],["ack",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack'},{'nam",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack/ack.compon",{"_index":211,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackcompon",{"_index":122,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acklist",{"_index":417,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["acknowledg",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["acknowledge/:alarmid",{"_index":1211,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["acknowledgealarms(alarms_id",{"_index":700,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["acktreecompon",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":259,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["actions/ack/ack.compon",{"_index":1191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/actions.modul",{"_index":942,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["actions/shelve/shelve.compon",{"_index":1196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/sidenav.servic",{"_index":1112,"title":{},"body":{"components/AppComponent.html":{}}}],["actionsmodul",{"_index":191,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["actionssidenav",{"_index":1042,"title":{},"body":{"components/AppComponent.html":{}}}],["actionssidenavservic",{"_index":1043,"title":{},"body":{"components/AppComponent.html":{}}}],["activ",{"_index":284,"title":{},"body":{"components/AlarmComponent.html":{},"guards/AuthLoginGuard.html":{},"components/MaterialSandboxComponent.html":{}}}],["activatedrout",{"_index":1875,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["activatedroutesnapshot",{"_index":1226,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["actual",{"_index":1872,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["actual_compon",{"_index":187,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ad",{"_index":1457,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["add",{"_index":743,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["add_or_update_alarm(alarm",{"_index":750,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["addit",{"_index":2356,"title":{},"body":{"license.html":{}}}],["address",{"_index":2442,"title":{},"body":{"license.html":{}}}],["addsvgicon",{"_index":1122,"title":{},"body":{"components/AppComponent.html":{}}}],["administr",{"_index":1939,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["afterviewinit",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["again",{"_index":1936,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["agil",{"_index":1708,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["alarm",{"_index":41,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["alarm'},{'nam",{"_index":127,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm.ack",{"_index":765,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.acknowledg",{"_index":705,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.asalarm(obj",{"_index":739,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.component.html",{"_index":237,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.scss",{"_index":236,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.core_id",{"_index":753,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.depend",{"_index":494,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies.length",{"_index":492,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.servic",{"_index":1400,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.shelv",{"_index":725,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.shouldrepeat",{"_index":770,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.sound",{"_index":763,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.unshelv",{"_index":729,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valid",{"_index":796,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valu",{"_index":762,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm/alarm.compon",{"_index":1785,"title":{},"body":{"modules/SharedModule.html":{}}}],["alarm_id",{"_index":709,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["alarm_sound_1.mp3",{"_index":572,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_2.mp3",{"_index":574,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_3.mp3",{"_index":576,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_4.mp3",{"_index":578,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_typ",{"_index":2238,"title":{},"body":{"coverage.html":{}}}],["alarmchangestream",{"_index":626,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmcompon",{"_index":126,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmconfig",{"_index":988,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmconfig.placemark",{"_index":1008,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmheadercompon",{"_index":128,"title":{"components/AlarmHeaderComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmiconspriorityset",{"_index":1836,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsset",{"_index":1837,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsunreliableset",{"_index":1838,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmid",{"_index":1410,"title":{},"body":{"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmimageset",{"_index":254,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["alarmitemflatnod",{"_index":376,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":405,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":544,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmnam",{"_index":360,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.length",{"_index":363,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.substring(0",{"_index":365,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmnamemaxs",{"_index":319,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarms_d",{"_index":2232,"title":{},"body":{"coverage.html":{}}}],["alarms_id",{"_index":701,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsarray",{"_index":623,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmservic",{"_index":403,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservice.countbyview",{"_index":1153,"title":{},"body":{"components/AppComponent.html":{}}}],["alarmservice.html#playalarmsound",{"_index":790,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsindex",{"_index":625,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmslist",{"_index":744,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsound",{"_index":558,"title":{"classes/AlarmSounds.html":{}},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["alarmsounds.getsoundsource(sound",{"_index":777,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type1",{"_index":607,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type2",{"_index":608,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type3",{"_index":609,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type4",{"_index":610,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmstoackfromselect",{"_index":416,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":1839,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["allow",{"_index":632,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["allowed_act",{"_index":1289,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowedshelv",{"_index":1919,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["allowedunshelv",{"_index":1921,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alma",{"_index":1624,"title":{},"body":{"components/LoginComponent.html":{}}}],["alreadi",{"_index":990,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["and/or",{"_index":2376,"title":{},"body":{"license.html":{}}}],["angular",{"_index":408,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"index.html":{}}}],["angular/anim",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["angular/cdk/collect",{"_index":393,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/cdk/tre",{"_index":395,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":2311,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":210,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1303,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1512,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":221,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1172,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":1111,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1489,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":1492,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1499,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/expans",{"_index":1507,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/form",{"_index":1501,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1113,"title":{},"body":{"components/AppComponent.html":{},"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":1475,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":1496,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/menu",{"_index":1487,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":1477,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":1479,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/select",{"_index":1503,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1494,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":1481,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/snack",{"_index":1509,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":1483,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":1485,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1505,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":398,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":1114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":1117,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["anoth",{"_index":786,"title":{},"body":{"classes/AlarmSounds.html":{},"components/WikiButtonComponent.html":{}}}],["antenna",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antenna'",{"_index":980,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antenna.svg",{"_index":1127,"title":{},"body":{"components/AppComponent.html":{}}}],["antennaclick",{"_index":969,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaconfig",{"_index":810,"title":{"classes/AntennaConfig.html":{}},"body":{"classes/AntennaConfig.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["antennaconfig.antenna",{"_index":1003,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaimageset",{"_index":841,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennaimageunreliableset",{"_index":842,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennamarkercompon",{"_index":130,"title":{"components/AntennaMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennas'},{'nam",{"_index":134,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas.component.html",{"_index":919,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.component.scss",{"_index":918,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.join",{"_index":2148,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["antennas.servic",{"_index":928,"title":{},"body":{"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["antennas/antennas.compon",{"_index":937,"title":{},"body":{"modules/AntennasModule.html":{}}}],["antennas/antennas.modul",{"_index":1173,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["antennas/antennas.servic",{"_index":906,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["antennas/antennas/antennas.compon",{"_index":1192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["antennascompon",{"_index":133,"title":{"components/AntennasComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasconfig",{"_index":830,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmap",{"_index":917,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennasmapcompon",{"_index":135,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasmapnam",{"_index":837,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmodul",{"_index":825,"title":{"modules/AntennasModule.html":{}},"body":{"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["antennasservic",{"_index":828,"title":{"injectables/AntennasService.html":{}},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasset",{"_index":822,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["antennassettings.mapkey",{"_index":838,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennassidebar",{"_index":916,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennassidebarcompon",{"_index":137,"title":{"components/AntennasSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummarycompon",{"_index":139,"title":{"components/AntennasSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummaryconfig",{"_index":840,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["api",{"_index":1901,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["app.compon",{"_index":1181,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":1041,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":1040,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":1168,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":141,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1024,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["applic",{"_index":1039,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["application/json",{"_index":1310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["appmodul",{"_index":1156,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":1205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":1161,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":2387,"title":{},"body":{"license.html":{}}}],["array",{"_index":336,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["arrayindex",{"_index":624,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["artifact",{"_index":2321,"title":{},"body":{"index.html":{}}}],["asiasio",{"_index":1520,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":1528,"title":{},"body":{"classes/Iasio.html":{}}}],["ask",{"_index":1902,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["asset",{"_index":598,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["assets.icon",{"_index":867,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["assets.sound",{"_index":606,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["assets/img/ia",{"_index":1124,"title":{},"body":{"components/AppComponent.html":{}}}],["associ",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["asterisc",{"_index":1966,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["attempt",{"_index":1236,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["attribut",{"_index":303,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["audio",{"_index":563,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["audiofil",{"_index":583,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["auth",{"_index":1616,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.servic",{"_index":1239,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":1202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.modul",{"_index":1176,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.servic",{"_index":605,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{}}}],["auth/login/login.compon",{"_index":1204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authent",{"_index":645,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["authloginguard",{"_index":1201,"title":{"guards/AuthLoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{}}}],["authmodul",{"_index":1162,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1224,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"license.html":{}}}],["authservic",{"_index":604,"title":{"injectables/AuthService.html":{}},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["automat",{"_index":2318,"title":{},"body":{"index.html":{}}}],["auxiliari",{"_index":490,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["avail",{"_index":289,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MapComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{},"modules.html":{}}}],["availablecount",{"_index":1142,"title":{},"body":{"components/AppComponent.html":{}}}],["availablecounters.indexof(navitemcount",{"_index":1144,"title":{},"body":{"components/AppComponent.html":{}}}],["avoid",{"_index":629,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["axi",{"_index":891,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["b",{"_index":2397,"title":{},"body":{"license.html":{}}}],["backend",{"_index":654,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurl",{"_index":596,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["backendurls.antennas_summari",{"_index":858,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.antennas_view",{"_index":851,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.cdb_ia",{"_index":1378,"title":{},"body":{"injectables/CdbService.html":{}}}],["backendurls.files_json",{"_index":862,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["backendurls.health_summari",{"_index":1422,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["backendurls.pads_statu",{"_index":2100,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["backendurls.shelve_regs_filt",{"_index":718,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurls.tickets_info",{"_index":712,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["background",{"_index":1681,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["backup",{"_index":170,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["badg",{"_index":260,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["bar",{"_index":1510,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["base",{"_index":66,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["basic",{"_index":1693,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["be",{"_index":447,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["befor",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":401,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["behaviorsubject(fals",{"_index":622,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["behaviorsubject(nul",{"_index":1301,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(tru",{"_index":627,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["belong",{"_index":2095,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["below",{"_index":2357,"title":{},"body":{"license.html":{}}}],["besid",{"_index":263,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["beta.17",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":2029,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["block",{"_index":1229,"title":{},"body":{"guards/AuthLoginGuard.html":{},"interfaces/TimeoutOption.html":{}}}],["blue",{"_index":909,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["bootstrap",{"_index":194,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":2257,"title":{},"body":{"dependencies.html":{}}}],["both",{"_index":914,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"license.html":{}}}],["bound",{"_index":2383,"title":{},"body":{"license.html":{}}}],["branch",{"_index":2303,"title":{},"body":{"index.html":{}}}],["bred",{"_index":1714,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["breed",{"_index":1700,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["broadcast",{"_index":1368,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastr",{"_index":1370,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastthreshold",{"_index":800,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["broadcastthreshold).subscribe(x",{"_index":808,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["brows",{"_index":2455,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":1473,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browseranimationsmodul",{"_index":1472,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browsermodul",{"_index":1170,"title":{},"body":{"modules/AppModule.html":{}}}],["bti",{"_index":1782,"title":{},"body":{"modules/SharedModule.html":{}}}],["build",{"_index":48,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":504,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["built",{"_index":979,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["button",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":121,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":213,"title":{},"body":{"modules/ActionsModule.html":{}}}],["button.component.css",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":29,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":2185,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:19",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":2186,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:28",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.ts:29",{"_index":1798,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:36",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:37",{"_index":1796,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:43",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:44",{"_index":1795,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:52",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:53",{"_index":1790,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:64",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:68",{"_index":1794,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:72",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:76",{"_index":1797,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":214,"title":{},"body":{"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":215,"title":{},"body":{"modules/ActionsModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["buttonref",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["buttons'},{'nam",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons.component.css",{"_index":1354,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":1355,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons/buttons.compon",{"_index":230,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buttonscompon",{"_index":143,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":2343,"title":{},"body":{"license.html":{}}}],["calcul",{"_index":1654,"title":{},"body":{"injectables/MapService.html":{}}}],["call",{"_index":789,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["canacknowledg",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["canactiv",{"_index":1209,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{}}}],["canactivate(next",{"_index":1225,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["canclos",{"_index":1803,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cansend",{"_index":1918,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["cansound",{"_index":633,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["card",{"_index":1683,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card'},{'nam",{"_index":157,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":1746,"title":{},"body":{"modules/OverviewModule.html":{}}}],["card.component.html",{"_index":1728,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.scss",{"_index":1727,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":1725,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:12",{"_index":1729,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:18",{"_index":1730,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card/overview",{"_index":1724,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["case",{"_index":327,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AppComponent.html":{}}}],["catch",{"_index":1392,"title":{},"body":{"injectables/CdbService.html":{}}}],["catcherror",{"_index":1304,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror(error",{"_index":1324,"title":{},"body":{"injectables/AuthService.html":{}}}],["cdb.servic",{"_index":1402,"title":{},"body":{"modules/DataModule.html":{}}}],["cdbservic",{"_index":599,"title":{"injectables/CdbService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"coverage.html":{},"overview.html":{}}}],["cdbservice.html#getbroadcastr",{"_index":802,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cento",{"_index":2296,"title":{},"body":{"index.html":{}}}],["central",{"_index":1748,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":2445,"title":{},"body":{"license.html":{}}}],["chang",{"_index":462,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"index.html":{},"license.html":{}}}],["changealarms(ani",{"_index":651,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["changeloginstatu",{"_index":1255,"title":{},"body":{"injectables/AuthService.html":{}}}],["changeloginstatus(statu",{"_index":1268,"title":{},"body":{"injectables/AuthService.html":{}}}],["changeselectedst",{"_index":1998,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changeselectedstation(selectedst",{"_index":2000,"title":{},"body":{"components/WeatherComponent.html":{}}}],["channel",{"_index":592,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["charact",{"_index":325,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["check",{"_index":281,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["checkbox",{"_index":407,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":437,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":438,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklogin",{"_index":1221,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["checklogin(url",{"_index":1233,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["chevron_left",{"_index":1009,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["child",{"_index":477,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm",{"_index":495,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm.ack",{"_index":497,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childid",{"_index":493,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":406,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chip",{"_index":1687,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["choic",{"_index":2399,"title":{},"body":{"license.html":{}}}],["choos",{"_index":2446,"title":{},"body":{"license.html":{}}}],["class",{"_index":101,"title":{"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"classes/Iasio.html":{},"classes/WeatherStationConfig.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["classnam",{"_index":1077,"title":{},"body":{"components/AppComponent.html":{}}}],["clean",{"_index":1760,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["cleanactionoutlet",{"_index":1750,"title":{},"body":{"injectables/RoutingService.html":{}}}],["clear",{"_index":295,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["clear.svg",{"_index":868,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["clear_invalid",{"_index":1546,"title":{},"body":{"components/LegendComponent.html":{}}}],["clear_valid",{"_index":1547,"title":{},"body":{"components/LegendComponent.html":{}}}],["clearsoundsifack(alarm",{"_index":791,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cli",{"_index":2291,"title":{},"body":{"index.html":{}}}],["click",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["client",{"_index":1432,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":603,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["client.service.t",{"_index":1431,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:107",{"_index":1455,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:14",{"_index":1439,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:31",{"_index":1444,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:47",{"_index":1446,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:57",{"_index":1443,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:70",{"_index":1451,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:83",{"_index":1453,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:95",{"_index":1441,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["clipboard",{"_index":2019,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["clipboardmodul",{"_index":2018,"title":{},"body":{"modules/WeatherModule.html":{}}}],["clipboardservic",{"_index":2127,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["close",{"_index":664,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["closeandclean",{"_index":1806,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cluster_actionsmodul",{"_index":196,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declar",{"_index":197,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_export",{"_index":199,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_import",{"_index":198,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_provid",{"_index":200,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_antennasmodul",{"_index":930,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_declar",{"_index":931,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_export",{"_index":933,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_import",{"_index":932,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_provid",{"_index":934,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":1157,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":1158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":1159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodul",{"_index":1183,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_declar",{"_index":1184,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_import",{"_index":1185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cluster_approutingmodule_provid",{"_index":1186,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":1246,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":1247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":1248,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_datamodul",{"_index":1396,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1397,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodul",{"_index":1403,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declar",{"_index":1404,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_export",{"_index":1406,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_import",{"_index":1405,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_mapmodul",{"_index":1634,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declar",{"_index":1635,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_export",{"_index":1636,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_provid",{"_index":1637,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_overviewmodul",{"_index":1738,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declar",{"_index":1739,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_export",{"_index":1741,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_import",{"_index":1740,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodul",{"_index":1776,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1777,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1779,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1778,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodul",{"_index":1860,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declar",{"_index":1861,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_export",{"_index":1863,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_import",{"_index":1862,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodul",{"_index":2012,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":2013,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":2015,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":2014,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_provid",{"_index":2016,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":981,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"index.html":{},"license.html":{}}}],["colorclass",{"_index":907,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["combin",{"_index":2363,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":209,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["commun",{"_index":1597,"title":{},"body":{"components/LoginComponent.html":{}}}],["compat",{"_index":2275,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["complement",{"_index":1056,"title":{},"body":{"components/AppComponent.html":{}}}],["complementari",{"_index":643,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["complet",{"_index":731,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["compodoc",{"_index":2333,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["componet",{"_index":290,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["comput",{"_index":2426,"title":{},"body":{"license.html":{}}}],["concern",{"_index":2443,"title":{},"body":{"license.html":{}}}],["condit",{"_index":2354,"title":{},"body":{"license.html":{}}}],["config",{"_index":1985,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["configur",{"_index":823,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["connect",{"_index":611,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{}}}],["connectionpath",{"_index":679,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatusstream",{"_index":621,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatustim",{"_index":642,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connector",{"_index":2028,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector'},{'nam",{"_index":179,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["connector.compon",{"_index":2025,"title":{},"body":{"modules/WeatherModule.html":{}}}],["connector.component.html",{"_index":2031,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.scss",{"_index":2030,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.t",{"_index":2026,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:16",{"_index":2035,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":2036,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":2034,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":2039,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":2037,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector/weath",{"_index":2024,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["consid",{"_index":1064,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"license.html":{}}}],["console.error('an",{"_index":1459,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.error('error",{"_index":1621,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["console.log('cal",{"_index":775,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('connect",{"_index":683,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('count",{"_index":677,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('error",{"_index":1956,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["console.log('notifi",{"_index":669,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('request",{"_index":674,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["const",{"_index":104,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(alarmservic",{"_index":1019,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["constructor(antennasservic",{"_index":970,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["constructor(attribut",{"_index":307,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor(authservic",{"_index":1222,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["constructor(formbuild",{"_index":1583,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(http",{"_index":1266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["constructor(httpcli",{"_index":947,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["constructor(httpclientservic",{"_index":1365,"title":{},"body":{"injectables/CdbService.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":442,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":1757,"title":{},"body":{"injectables/RoutingService.html":{}}}],["constructor(routingservic",{"_index":1808,"title":{},"body":{"injectables/SidenavService.html":{}}}],["constructor(servic",{"_index":886,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["constructor(sidenavservic",{"_index":43,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["constructor(weatherservic",{"_index":1984,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["contact",{"_index":1938,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["contain",{"_index":305,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["content",{"_index":482,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["continu",{"_index":498,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["contract",{"_index":1088,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":428,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["convert",{"_index":433,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":2381,"title":{},"body":{"license.html":{}}}],["coord",{"_index":2033,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[0",{"_index":2043,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[1",{"_index":2044,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coordin",{"_index":835,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["cope",{"_index":1709,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["copi",{"_index":1530,"title":{},"body":{"classes/Iasio.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["copyantenna",{"_index":2124,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyantennas(stationconfig",{"_index":2130,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyright",{"_index":2342,"title":{},"body":{"license.html":{}}}],["core",{"_index":730,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":328,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{}}}],["correspond",{"_index":562,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["count",{"_index":638,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["countbyview",{"_index":640,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["countbyview[navitemcount",{"_index":1145,"title":{},"body":{"components/AppComponent.html":{}}}],["counter",{"_index":1100,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["counterbyview",{"_index":1081,"title":{},"body":{"components/AppComponent.html":{}}}],["cover",{"_index":2360,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":2192,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":306,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["credenti",{"_index":1595,"title":{},"body":{"components/LoginComponent.html":{}}}],["critic",{"_index":784,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LegendComponent.html":{}}}],["critical.svg",{"_index":870,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["crud",{"_index":1433,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["css",{"_index":279,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["currenlti",{"_index":635,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["current",{"_index":276,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["custom",{"_index":1060,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpClientService.html":{}}}],["cx",{"_index":882,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["cy",{"_index":883,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["d",{"_index":2417,"title":{},"body":{"license.html":{}}}],["dash",{"_index":1843,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":175,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["data).pip",{"_index":703,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data.push(nod",{"_index":514,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data/alarm",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.servic",{"_index":404,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/cdb.servic",{"_index":600,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data/data.modul",{"_index":228,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["data/http",{"_index":821,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["data/iasio",{"_index":1384,"title":{},"body":{"injectables/CdbService.html":{}}}],["data/user.servic",{"_index":1116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["databas",{"_index":732,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datamodul",{"_index":201,"title":{"modules/DataModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourc",{"_index":436,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["date).gettim",{"_index":619,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["datepip",{"_index":1169,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["debug",{"_index":2416,"title":{},"body":{"license.html":{}}}],["decid",{"_index":2448,"title":{},"body":{"license.html":{}}}],["declar",{"_index":193,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1090,"title":{},"body":{"components/AppComponent.html":{}}}],["deem",{"_index":2367,"title":{},"body":{"license.html":{}}}],["default",{"_index":265,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["defaulttimeout",{"_index":1891,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["defin",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["definealarmsandicon",{"_index":1413,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["definealarmsandimag",{"_index":1840,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["definit",{"_index":1870,"title":{},"body":{"interfaces/TimeoutOption.html":{},"license.html":{}}}],["degrad",{"_index":2285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delay",{"_index":1306,"title":{},"body":{"injectables/AuthService.html":{}}}],["delet",{"_index":734,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["delete(url",{"_index":1440,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":1461,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["deped",{"_index":1926,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["depend",{"_index":192,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":528,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":531,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":541,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":529,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":534,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["describ",{"_index":895,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["destroy",{"_index":690,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["detail",{"_index":2441,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2316,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2295,"title":{},"body":{"index.html":{}}}],["devic",{"_index":831,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{}}}],["devicesconfig",{"_index":832,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["dialog",{"_index":1684,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dictionari",{"_index":304,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["differ",{"_index":560,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"license.html":{}}}],["direct",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":2320,"title":{},"body":{"index.html":{}}}],["directori",{"_index":2323,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["disconnect",{"_index":689,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["display",{"_index":234,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":2301,"title":{},"body":{"index.html":{}}}],["dist",{"_index":2322,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":1704,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["distinguish",{"_index":2444,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":2350,"title":{},"body":{"license.html":{}}}],["divid",{"_index":1689,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["django",{"_index":591,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["doc_url",{"_index":1516,"title":{},"body":{"classes/Iasio.html":{}}}],["document",{"_index":409,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dog",{"_index":1699,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["domsanit",{"_index":1054,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":1917,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["doubl",{"_index":1524,"title":{},"body":{"classes/Iasio.html":{}}}],["draw",{"_index":836,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/MapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["durat",{"_index":1954,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["dure",{"_index":2142,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["dy",{"_index":1658,"title":{},"body":{"injectables/MapService.html":{}}}],["dynam",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1393,"title":{},"body":{"injectables/CdbService.html":{},"license.html":{}}}],["e.g",{"_index":584,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["e2",{"_index":2331,"title":{},"body":{"index.html":{}}}],["each",{"_index":829,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"modules/OverviewModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["effect",{"_index":2412,"title":{},"body":{"license.html":{}}}],["effort",{"_index":2391,"title":{},"body":{"license.html":{}}}],["element",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["elementref",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["email",{"_index":1973,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emit",{"_index":628,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["emitsound(sound",{"_index":774,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["enabletrac",{"_index":1215,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":2330,"title":{},"body":{"index.html":{}}}],["engin",{"_index":2415,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":2392,"title":{},"body":{"license.html":{}}}],["entrycompon",{"_index":1784,"title":{},"body":{"modules/SharedModule.html":{}}}],["enumer",{"_index":2279,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":593,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["environment.httpurl",{"_index":1468,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["environment.httpurl}${backendurls.token",{"_index":1326,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.httpurl}${backendurls.validate_token",{"_index":1313,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.websocketpath",{"_index":684,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["environments/environ",{"_index":594,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["equal",{"_index":799,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["error",{"_index":1448,"title":{},"body":{"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{}}}],["error.statu",{"_index":1620,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["error['error",{"_index":1965,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["errormessag",{"_index":1580,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["etc",{"_index":585,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{}}}],["event",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":388,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["everyon",{"_index":2349,"title":{},"body":{"license.html":{}}}],["everytim",{"_index":461,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["exampl",{"_index":1783,"title":{},"body":{"modules/SharedModule.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["except",{"_index":2379,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":2373,"title":{},"body":{"license.html":{}}}],["execut",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["exit_to_applog",{"_index":1151,"title":{},"body":{"components/AppComponent.html":{}}}],["expand",{"_index":381,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["expand/collaps",{"_index":429,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expect",{"_index":1071,"title":{},"body":{"components/AppComponent.html":{}}}],["expectedfilteredtablerow",{"_index":2233,"title":{},"body":{"coverage.html":{}}}],["expectedtablerow",{"_index":2234,"title":{},"body":{"coverage.html":{}}}],["expectedtreedata",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["explain",{"_index":2436,"title":{},"body":{"license.html":{}}}],["export",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extent",{"_index":2428,"title":{},"body":{"license.html":{}}}],["extra",{"_index":1244,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["fab",{"_index":1695,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["facil",{"_index":2385,"title":{},"body":{"license.html":{}}}],["fail",{"_index":1898,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["faith",{"_index":2390,"title":{},"body":{"license.html":{}}}],["fals",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["favorit",{"_index":1694,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["fewer",{"_index":2405,"title":{},"body":{"license.html":{}}}],["field",{"_index":736,"title":{},"body":{"classes/AlarmSounds.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filepath",{"_index":586,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["filter",{"_index":1026,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{}}}],["filter.replac",{"_index":1771,"title":{},"body":{"injectables/RoutingService.html":{}}}],["find",{"_index":421,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["fix",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{}}}],["flag",{"_index":843,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["flat",{"_index":378,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MaterialSandboxComponent.html":{}}}],["flatnod",{"_index":518,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":524,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":522,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":523,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":423,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":424,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":394,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":455,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flexlayoutmodul",{"_index":1511,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["focu",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["focus",{"_index":1686,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["focusmonitor",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["folder",{"_index":2305,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1351,"title":{},"body":{"components/ButtonsComponent.html":{},"index.html":{},"license.html":{}}}],["foreground",{"_index":1688,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["forkjoin",{"_index":1380,"title":{},"body":{"injectables/CdbService.html":{}}}],["form",{"_index":742,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["format",{"_index":486,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["formbuild",{"_index":1584,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol",{"_index":1602,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol(this.defaulttimeout",{"_index":1905,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["formgroup",{"_index":1581,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formsmodul",{"_index":219,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundat",{"_index":2346,"title":{},"body":{"license.html":{}}}],["free",{"_index":2344,"title":{},"body":{"license.html":{}}}],["full",{"_index":1208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":443,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["further",{"_index":2334,"title":{},"body":{"index.html":{}}}],["futur",{"_index":2449,"title":{},"body":{"license.html":{}}}],["g",{"_index":2310,"title":{},"body":{"index.html":{}}}],["gener",{"_index":737,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"modules/OverviewModule.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":714,"title":{"index.html":{},"license.html":{}},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["get(core_id",{"_index":697,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["get(url",{"_index":1442,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":1925,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getactionslink",{"_index":1048,"title":{},"body":{"components/AppComponent.html":{}}}],["getactionslink(item",{"_index":1061,"title":{},"body":{"components/AppComponent.html":{}}}],["getalarm",{"_index":963,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["getalarm(alarm_id",{"_index":975,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getalarm(keyword",{"_index":2177,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["getalarmlist",{"_index":733,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getalarmnam",{"_index":318,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["getallowedact",{"_index":1256,"title":{},"body":{"injectables/AuthService.html":{}}}],["getantenna",{"_index":965,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["getantennanam",{"_index":964,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(antennaconfig",{"_index":977,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(this.selectedantenna",{"_index":1010,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennas(stationconfig",{"_index":2133,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["getbroadcastr",{"_index":1362,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbroadcastthreshold",{"_index":1363,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbuttontooltiptext",{"_index":1789,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":475,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getclass",{"_index":239,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getconfigurationdata",{"_index":1364,"title":{},"body":{"injectables/CdbService.html":{}}}],["getconnectionpath",{"_index":686,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getdevic",{"_index":966,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gethttphead",{"_index":1257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["getimag",{"_index":240,"title":{},"body":{"components/AlarmComponent.html":{}}}],["getlevel",{"_index":471,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmapdata",{"_index":861,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["getmissingacks(alarm_id",{"_index":711,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getnavitemcountclass",{"_index":1049,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcountclass(navitem",{"_index":1065,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext",{"_index":1050,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(item",{"_index":1152,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(navitem",{"_index":1079,"title":{},"body":{"components/AppComponent.html":{}}}],["getngclass",{"_index":881,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["getpadsstatu",{"_index":2060,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getpadsstatus(group",{"_index":2065,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["getpath",{"_index":2032,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["getresponsemessagetext",{"_index":1930,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getresponsemessagetitl",{"_index":1928,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getshelveregistries(alarm_id",{"_index":717,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsoundsourc",{"_index":570,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsoundsource(sound",{"_index":580,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsvgpath",{"_index":1643,"title":{},"body":{"injectables/MapService.html":{}}}],["getsvgpaths(pathsgroup",{"_index":1646,"title":{},"body":{"injectables/MapService.html":{}}}],["gettextclass",{"_index":241,"title":{},"body":{"components/AlarmComponent.html":{}}}],["gettitletext",{"_index":1927,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["gettoken",{"_index":1258,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettreedata",{"_index":487,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getus",{"_index":1051,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["give",{"_index":2406,"title":{},"body":{"license.html":{}}}],["given",{"_index":470,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["global",{"_index":985,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gnu",{"_index":2337,"title":{},"body":{"license.html":{}}}],["go",{"_index":1231,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["good",{"_index":2389,"title":{},"body":{"license.html":{}}}],["gotoacknowledg",{"_index":1751,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoacknowledge(alarm_id",{"_index":1761,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoantenna",{"_index":1752,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotologin",{"_index":1753,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotoshelv",{"_index":1754,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoshelve(alarm_id",{"_index":1765,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gototablefilteredbi",{"_index":1017,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1022,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gotoweath",{"_index":1755,"title":{},"body":{"injectables/RoutingService.html":{}}}],["govern",{"_index":2362,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2359,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2456,"title":{},"body":{"modules.html":{}}}],["green",{"_index":908,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["grey",{"_index":910,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["group",{"_index":1648,"title":{},"body":{"injectables/MapService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["group.github.io/ia",{"_index":2300,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1216,"title":{"guards/AuthLoginGuard.html":{}},"body":{"guards/AuthLoginGuard.html":{},"overview.html":{}}}],["hammerj",{"_index":2263,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["handleerror",{"_index":1435,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1445,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["happen",{"_index":1148,"title":{},"body":{"components/AppComponent.html":{}}}],["haschild",{"_index":478,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":483,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasvalidtoken",{"_index":1259,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":314,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["header'},{'nam",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["header.compon",{"_index":1787,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":317,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.scss",{"_index":316,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.t",{"_index":313,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:105",{"_index":330,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":322,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":329,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":326,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":321,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:43",{"_index":337,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:50",{"_index":335,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:86",{"_index":338,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:94",{"_index":340,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header/alarm",{"_index":312,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["header/fixtures.t",{"_index":2223,"title":{},"body":{"coverage.html":{}}}],["health",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.modul",{"_index":1177,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodul",{"_index":1163,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycompon",{"_index":145,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":420,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"index.html":{}}}],["herein",{"_index":2358,"title":{},"body":{"license.html":{}}}],["hide",{"_index":1074,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hidespinn",{"_index":1970,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["high",{"_index":1572,"title":{},"body":{"components/LegendComponent.html":{}}}],["highlight",{"_index":1068,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["hint",{"_index":1690,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["hour",{"_index":1884,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["hover",{"_index":1682,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["html",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":602,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["http://localhost:4200",{"_index":2317,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":845,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["httpclientmodul",{"_index":1399,"title":{},"body":{"modules/DataModule.html":{}}}],["httpclientservic",{"_index":601,"title":{"injectables/HttpClientService.html":{}},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["httpmodul",{"_index":1171,"title":{},"body":{"modules/AppModule.html":{}}}],["httpoption",{"_index":1463,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":1447,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":2348,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":2299,"title":{},"body":{"index.html":{}}}],["hum",{"_index":2110,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humid",{"_index":2075,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["humidityimageset",{"_index":2047,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humidityimageunreliableset",{"_index":2048,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["hunt",{"_index":1715,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["ia",{"_index":225,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["ias_antenna",{"_index":1102,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_health",{"_index":1425,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_overview",{"_index":1098,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_tabl",{"_index":1103,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_typ",{"_index":1517,"title":{},"body":{"classes/Iasio.html":{}}}],["ias_weath",{"_index":1101,"title":{},"body":{"components/AppComponent.html":{}}}],["iasconfigur",{"_index":1359,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":1360,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdisplay",{"_index":2289,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":1383,"title":{"classes/Iasio.html":{}},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"coverage.html":{}}}],["iasmaterialmodul",{"_index":202,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":1361,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":233,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["iconset",{"_index":1411,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1412,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["id",{"_index":331,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["identifi",{"_index":2193,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":245,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagesunreli",{"_index":246,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["implement",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":2347,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["incorpor",{"_index":2352,"title":{},"body":{"license.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indic",{"_index":339,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inform",{"_index":383,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["init",{"_index":1849,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["initi",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":1376,"title":{},"body":{"injectables/CdbService.html":{}}}],["inject",{"_index":391,"title":{"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":2403,"title":{},"body":{"license.html":{}}}],["inner",{"_index":927,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["input",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instal",{"_index":2304,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":2313,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":251,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instead",{"_index":448,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["instruct",{"_index":2294,"title":{},"body":{"index.html":{}}}],["int",{"_index":716,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["integr",{"_index":1108,"title":{},"body":{"components/AppComponent.html":{}}}],["intend",{"_index":783,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["interact",{"_index":2122,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["interfac",{"_index":1867,"title":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{}},"body":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["intern",{"_index":926,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["intervalobserv",{"_index":588,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["intervalobservable.create(1000",{"_index":807,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["inu",{"_index":1698,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["invalid",{"_index":874,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["invalid.svg",{"_index":1557,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["invok",{"_index":2388,"title":{},"body":{"license.html":{}}}],["io_id",{"_index":1518,"title":{},"body":{"classes/Iasio.html":{}}}],["ionicon",{"_index":2265,"title":{},"body":{"dependencies.html":{}}}],["isallow",{"_index":1923,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["isdis",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["isexpand",{"_index":473,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isiniti",{"_index":637,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["isnavigationcompact",{"_index":1044,"title":{},"body":{"components/AppComponent.html":{}}}],["isol",{"_index":2375,"title":{},"body":{"license.html":{}}}],["isselect",{"_index":967,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["isselected(alarmconfig",{"_index":986,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["isselected(stationconfig",{"_index":2135,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["issu",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["istextalarm",{"_index":242,"title":{},"body":{"components/AlarmComponent.html":{}}}],["isubscript",{"_index":820,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["isvalidiasio",{"_index":1521,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":1531,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":379,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["item.icon",{"_index":1154,"title":{},"body":{"components/AppComponent.html":{}}}],["item.link",{"_index":1136,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":1155,"title":{},"body":{"components/AppComponent.html":{}}}],["japan",{"_index":1706,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["jqueri",{"_index":2267,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2260,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":485,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["json.hasownproperty('doc_url",{"_index":1536,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":1535,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":1533,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('short_desc",{"_index":1534,"title":{},"body":{"classes/Iasio.html":{}}}],["json.parse(allowed_act",{"_index":1339,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(token",{"_index":1335,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(us",{"_index":1337,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(allowed_act",{"_index":1349,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(token",{"_index":1344,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(us",{"_index":1346,"title":{},"body":{"injectables/AuthService.html":{}}}],["json['doc_url",{"_index":1542,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":1541,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":1539,"title":{},"body":{"classes/Iasio.html":{}}}],["json['short_desc",{"_index":1540,"title":{},"body":{"classes/Iasio.html":{}}}],["june",{"_index":2340,"title":{},"body":{"license.html":{}}}],["k",{"_index":505,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["karma",{"_index":2329,"title":{},"body":{"index.html":{}}}],["keep",{"_index":425,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["keepclos",{"_index":696,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["key",{"_index":833,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["keyword",{"_index":2179,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["know",{"_index":2067,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["l",{"_index":2042,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["last",{"_index":617,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/SidenavService.html":{}}}],["lastalarmid",{"_index":1804,"title":{},"body":{"injectables/SidenavService.html":{}}}],["lastreceivedmessagetimestamp",{"_index":618,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["later",{"_index":517,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1513,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{},"license.html":{}}}],["left",{"_index":1106,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":148,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":1544,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1545,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":1865,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcompon",{"_index":147,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":334,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"license.html":{}}}],["lesser",{"_index":2338,"title":{},"body":{"license.html":{}}}],["level",{"_index":382,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":288,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["librari",{"_index":2312,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":2336,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":2400,"title":{},"body":{"license.html":{}}}],["line",{"_index":2027,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"license.html":{}}}],["link",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["linkflat",{"_index":1720,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkicon",{"_index":1721,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkmini",{"_index":1722,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkrais",{"_index":1719,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linux",{"_index":2297,"title":{},"body":{"index.html":{}}}],["list",{"_index":278,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":849,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["load",{"_index":1588,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadalarmsconfig",{"_index":850,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["loadimag",{"_index":865,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadpadsstatu",{"_index":2061,"title":{},"body":{"injectables/WeatherService.html":{}}}],["loadpadsstatus(group",{"_index":2071,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadweatherstationsconfig",{"_index":2062,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["local",{"_index":1274,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"index.html":{}}}],["localstorage.getitem('allowed_act",{"_index":1338,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":1334,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('us",{"_index":1336,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('allowed_act",{"_index":1342,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":1340,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('us",{"_index":1341,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('allowed_act",{"_index":1348,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":1343,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('us",{"_index":1345,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":813,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["log",{"_index":1220,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{}}}],["login",{"_index":1133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["login'},{'nam",{"_index":150,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["login(usernam",{"_index":1282,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1579,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1578,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.guard",{"_index":1203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login.guard.t",{"_index":1218,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:13",{"_index":1223,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:31",{"_index":1228,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:42",{"_index":1234,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login/login.compon",{"_index":1250,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincompon",{"_index":149,"title":{"components/LoginComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginstatu",{"_index":1252,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginstatusstream",{"_index":1253,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":695,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["long",{"_index":1899,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["look",{"_index":1663,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["low",{"_index":1567,"title":{},"body":{"components/LegendComponent.html":{}}}],["low.svg",{"_index":1426,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["m",{"_index":2045,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["macro",{"_index":2402,"title":{},"body":{"license.html":{}}}],["made",{"_index":2370,"title":{},"body":{"license.html":{}}}],["main",{"_index":816,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/OverviewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["maint.svg",{"_index":1428,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mainten",{"_index":301,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["maintenance.svg",{"_index":872,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["make",{"_index":2364,"title":{},"body":{"license.html":{}}}],["malfunct",{"_index":2287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manag",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["manner",{"_index":2421,"title":{},"body":{"license.html":{}}}],["map",{"_index":418,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["map'},{'nam",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["map((respons",{"_index":1317,"title":{},"body":{"injectables/AuthService.html":{}}}],["map.compon",{"_index":939,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["map.component.html",{"_index":1628,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1627,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["map.servic",{"_index":1641,"title":{},"body":{"modules/MapModule.html":{}}}],["map/antenna",{"_index":938,"title":{},"body":{"modules/AntennasModule.html":{},"coverage.html":{}}}],["map/map.compon",{"_index":1640,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.modul",{"_index":943,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["map/weath",{"_index":2021,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{}}}],["mapantennaconfig",{"_index":1002,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["mapcompon",{"_index":151,"title":{"components/MapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapconfig",{"_index":1629,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataavail",{"_index":1630,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataprocess",{"_index":1644,"title":{},"body":{"injectables/MapService.html":{}}}],["mapdataprocessing(placemarksgroup",{"_index":1651,"title":{},"body":{"injectables/MapService.html":{}}}],["mapmodul",{"_index":935,"title":{"modules/MapModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/MapModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["mapservic",{"_index":1638,"title":{"injectables/MapService.html":{}},"body":{"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["mark",{"_index":1078,"title":{},"body":{"components/AppComponent.html":{}}}],["marker",{"_index":232,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["marker'},{'nam",{"_index":132,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["marker.compon",{"_index":944,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["marker.component.html",{"_index":880,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.scss",{"_index":879,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.t",{"_index":878,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["marker.component.ts:17",{"_index":888,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:19",{"_index":2007,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:20",{"_index":898,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:23",{"_index":901,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:24",{"_index":2006,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:26",{"_index":892,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:28",{"_index":2005,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:29",{"_index":894,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:31",{"_index":1989,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:32",{"_index":887,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:36",{"_index":2011,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:37",{"_index":2010,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:38",{"_index":1988,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:40",{"_index":905,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:41",{"_index":904,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:43",{"_index":2009,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:45",{"_index":1987,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:47",{"_index":903,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:50",{"_index":2008,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:53",{"_index":902,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker/antenna",{"_index":877,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["marker/weath",{"_index":1981,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["markerimageset",{"_index":2049,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markerimageunreliableset",{"_index":2050,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markers/antenna",{"_index":876,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["markers/weath",{"_index":1980,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["master",{"_index":2302,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":1488,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":1491,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":189,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["matcheckboxmodul",{"_index":1498,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":153,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["material.modul",{"_index":227,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["material.module.t",{"_index":1470,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":226,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["materialsandboxcompon",{"_index":152,"title":{"components/MaterialSandboxComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":1506,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matformfieldmodul",{"_index":1500,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonmodul",{"_index":1490,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonregistri",{"_index":1053,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodul",{"_index":1474,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":1495,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matmenumodul",{"_index":1486,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1476,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1478,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matselectmodul",{"_index":1502,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenav",{"_index":1089,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["matsidenavmodul",{"_index":1493,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1480,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsnackbar",{"_index":2128,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["matsnackbarmodul",{"_index":1508,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsortmodul",{"_index":1482,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattablemodul",{"_index":1484,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1504,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":397,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":457,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":396,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":450,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":1497,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max",{"_index":323,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/MapService.html":{}}}],["maxci",{"_index":1660,"title":{},"body":{"injectables/MapService.html":{}}}],["maximum",{"_index":333,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["md",{"_index":267,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["mean",{"_index":2372,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":2396,"title":{},"body":{"license.html":{}}}],["meant",{"_index":1781,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechan",{"_index":2422,"title":{},"body":{"license.html":{}}}],["medium",{"_index":272,"title":{},"body":{"components/AlarmComponent.html":{},"components/LegendComponent.html":{}}}],["medium.svg",{"_index":2120,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["menu",{"_index":1105,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":613,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["min",{"_index":1655,"title":{},"body":{"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{}}}],["mini",{"_index":1696,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["minim",{"_index":2371,"title":{},"body":{"license.html":{}}}],["minut",{"_index":1880,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["miscellan",{"_index":2278,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":710,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["mockalarm",{"_index":2224,"title":{},"body":{"coverage.html":{}}}],["mockalarmdata",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["mockiasio",{"_index":2235,"title":{},"body":{"coverage.html":{}}}],["mockimageset",{"_index":2228,"title":{},"body":{"coverage.html":{}}}],["mockimagesset",{"_index":2239,"title":{},"body":{"coverage.html":{}}}],["mockimageunreliableset",{"_index":2229,"title":{},"body":{"coverage.html":{}}}],["mockweatherstationsconfig",{"_index":2240,"title":{},"body":{"coverage.html":{}}}],["mockweathersummaryconfig",{"_index":2241,"title":{},"body":{"coverage.html":{}}}],["modal",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":2282,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["model",{"_index":292,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"modules/DataModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["modif",{"_index":2384,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":422,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"license.html":{}}}],["modul",{"_index":190,"title":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2269,"title":{},"body":{"dependencies.html":{}}}],["monitor",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{}}}],["more",{"_index":1732,"title":{},"body":{"components/OverviewComponent.html":{},"index.html":{}}}],["mountain",{"_index":1712,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["mouseev",{"_index":87,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["multipl",{"_index":440,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["name",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["nav",{"_index":1067,"title":{},"body":{"components/AppComponent.html":{}}}],["navig",{"_index":1058,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["navigationsidenavitem",{"_index":1045,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem",{"_index":1073,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem.count",{"_index":1141,"title":{},"body":{"components/AppComponent.html":{}}}],["navitemcount",{"_index":1140,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":2164,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["nearbi",{"_index":2134,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["necessari",{"_index":2429,"title":{},"body":{"license.html":{}}}],["need",{"_index":824,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["nest",{"_index":419,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":427,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["new",{"_index":302,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["newlength",{"_index":759,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["next",{"_index":1230,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["nexturl",{"_index":1238,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["ng",{"_index":2256,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngmodul",{"_index":208,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":446,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ngondestroy",{"_index":1915,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":223,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":222,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservic",{"_index":1586,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["node",{"_index":380,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":511,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":474,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":508,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":472,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":2306,"title":{},"body":{"index.html":{}}}],["non",{"_index":787,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["none",{"_index":565,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["nonzero",{"_index":1075,"title":{},"body":{"components/AppComponent.html":{}}}],["normal",{"_index":434,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["noselecteddescendants(nod",{"_index":540,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":1744,"title":{},"body":{"modules/OverviewModule.html":{},"index.html":{}}}],["noth",{"_index":972,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["notic",{"_index":2408,"title":{},"body":{"license.html":{}}}],["notif",{"_index":620,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["notifi",{"_index":974,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["npm",{"_index":2307,"title":{},"body":{"index.html":{}}}],["null",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["number",{"_index":386,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"license.html":{}}}],["number(this.iasconfiguration['broadcastr",{"_index":1391,"title":{},"body":{"injectables/CdbService.html":{}}}],["number(this.iasconfiguration['broadcastthreshold",{"_index":1394,"title":{},"body":{"injectables/CdbService.html":{}}}],["numer",{"_index":2401,"title":{},"body":{"license.html":{}}}],["obj",{"_index":735,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["object",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["object.assign(thi",{"_index":308,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["object.keys(countbyview",{"_index":1143,"title":{},"body":{"components/AppComponent.html":{}}}],["observ",{"_index":400,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["observableforkjoin",{"_index":1381,"title":{},"body":{"injectables/CdbService.html":{}}}],["obtain",{"_index":801,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["occur",{"_index":1460,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["of(fals",{"_index":1312,"title":{},"body":{"injectables/AuthService.html":{}}}],["ofobserv",{"_index":399,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":476,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ogin",{"_index":1599,"title":{},"body":{"components/LoginComponent.html":{}}}],["old",{"_index":706,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm",{"_index":755,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.ack",{"_index":758,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.valu",{"_index":757,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_ack",{"_index":752,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_valu",{"_index":751,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["on",{"_index":2068,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["onc",{"_index":785,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["onchang",{"_index":390,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["onclick",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(alarmconfig",{"_index":991,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["onclick(ev",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(stationconfig",{"_index":2138,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["onclos",{"_index":1940,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["ondestroy",{"_index":1874,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["onhov",{"_index":2004,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["open",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["open/clos",{"_index":1818,"title":{},"body":{"injectables/SidenavService.html":{}}}],["opensnackbar",{"_index":2125,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["opensnackbar(messag",{"_index":2140,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["oper",{"_index":1434,"title":{},"body":{"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":291,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.unknown",{"_index":346,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["opt_ci",{"_index":897,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["opt_cx",{"_index":896,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["option",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["optionalalarmnam",{"_index":320,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["order",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"guards/AuthLoginGuard.html":{},"components/ShelveButtonComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["origin",{"_index":1703,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["otherwis",{"_index":2365,"title":{},"body":{"license.html":{}}}],["out",{"_index":206,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1063,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["output",{"_index":389,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MapComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["over",{"_index":1273,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonsComponent.html":{}}}],["overview",{"_index":156,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":159,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.html",{"_index":1735,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1734,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.svg",{"_index":1125,"title":{},"body":{"components/AppComponent.html":{}}}],["overview/overview.compon",{"_index":1745,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.modul",{"_index":1178,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.compon",{"_index":1195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["overviewcardcompon",{"_index":155,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":158,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodul",{"_index":1164,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["packag",{"_index":2247,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":982,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["pad_nam",{"_index":2154,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["pads[pad_nam",{"_index":2155,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["padsstatu",{"_index":2051,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["padsstatusavail",{"_index":2052,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["page",{"_index":630,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"components/WikiButtonComponent.html":{}}}],["panel",{"_index":1802,"title":{},"body":{"injectables/SidenavService.html":{}}}],["panelclass",{"_index":2163,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panelclick",{"_index":2126,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["param",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["paramet",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["parammap",{"_index":1909,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parammap.get('alarmid",{"_index":1911,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parent",{"_index":412,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["part",{"_index":533,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":2369,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1086,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"license.html":{}}}],["password",{"_index":1283,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["path",{"_index":685,"title":{},"body":{"classes/AlarmSounds.html":{},"modules/AppRoutingModule.html":{},"injectables/MapService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pathmatch",{"_index":1207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathsgroup",{"_index":1650,"title":{},"body":{"injectables/MapService.html":{}}}],["pathstr",{"_index":2040,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["payload",{"_index":667,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["payload.data",{"_index":672,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pend",{"_index":261,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["perform",{"_index":644,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["period",{"_index":793,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["perman",{"_index":2453,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":1272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["permit",{"_index":1232,"title":{},"body":{"guards/AuthLoginGuard.html":{},"license.html":{}}}],["persist",{"_index":1937,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["pipe",{"_index":1316,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(map((respons",{"_index":1328,"title":{},"body":{"injectables/AuthService.html":{}}}],["pk",{"_index":1537,"title":{},"body":{"classes/Iasio.html":{}}}],["place",{"_index":2432,"title":{},"body":{"license.html":{}}}],["placemark",{"_index":814,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"injectables/MapService.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["placemarksgroup",{"_index":1656,"title":{},"body":{"injectables/MapService.html":{}}}],["play",{"_index":634,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["playalarmsound(alarm",{"_index":768,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pleas",{"_index":1935,"title":{},"body":{"interfaces/TimeoutOption.html":{},"index.html":{}}}],["point",{"_index":1515,"title":{},"body":{"classes/Iasio.html":{}}}],["popper.j",{"_index":2272,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":2374,"title":{},"body":{"license.html":{}}}],["posit",{"_index":889,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["possibl",{"_index":2281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":1436,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":1450,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["presenc",{"_index":1069,"title":{},"body":{"components/AppComponent.html":{}}}],["present",{"_index":2424,"title":{},"body":{"license.html":{}}}],["previou",{"_index":1295,"title":{},"body":{"injectables/AuthService.html":{}}}],["primari",{"_index":178,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["prioriti",{"_index":1562,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["priority_0",{"_index":1548,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_1",{"_index":1549,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_2",{"_index":1550,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_3",{"_index":1551,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_4",{"_index":1552,"title":{},"body":{"components/LegendComponent.html":{}}}],["privat",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":1596,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["process",{"_index":1458,"title":{},"body":{"injectables/HttpClientService.html":{},"components/StatusViewComponent.html":{}}}],["prod",{"_index":2324,"title":{},"body":{"index.html":{}}}],["produc",{"_index":2368,"title":{},"body":{"license.html":{}}}],["product",{"_index":2325,"title":{},"body":{"index.html":{}}}],["proess",{"_index":1456,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["program",{"_index":2378,"title":{},"body":{"license.html":{}}}],["project",{"_index":2290,"title":{},"body":{"index.html":{}}}],["promin",{"_index":2407,"title":{},"body":{"license.html":{}}}],["promis",{"_index":1449,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":1462,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["properli",{"_index":2427,"title":{},"body":{"license.html":{}}}],["properti",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["protractor",{"_index":2332,"title":{},"body":{"index.html":{}}}],["provid",{"_index":195,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/LoginComponent.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":826,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["proxi",{"_index":2447,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":2451,"title":{},"body":{"license.html":{}}}],["public",{"_index":32,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":2438,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":235,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":1850,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1437,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["put(url",{"_index":1452,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["r",{"_index":884,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["radiu",{"_index":899,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["rais",{"_index":1685,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["rate",{"_index":1369,"title":{},"body":{"injectables/CdbService.html":{}}}],["re",{"_index":1387,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":220,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":463,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{}}}],["read_url",{"_index":1438,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["read_url(url",{"_index":1454,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["readalarmmessage(act",{"_index":738,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readalarmmessageslist(alarmslist",{"_index":745,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readcountbyviewmessage(countbyview",{"_index":747,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readm",{"_index":2335,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":612,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"license.html":{}}}],["recombin",{"_index":2419,"title":{},"body":{"license.html":{}}}],["record",{"_index":516,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":431,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":912,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["redirect",{"_index":999,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirectto",{"_index":1206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":1254,"title":{},"body":{"injectables/AuthService.html":{}}}],["refer",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["refresh",{"_index":631,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["registri",{"_index":1059,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["registry['shelved_at",{"_index":1953,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["registry['timeout']).viewvalu",{"_index":1955,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["relat",{"_index":293,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["releas",{"_index":2298,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":1856,"title":{},"body":{"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":2420,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1941,"title":{},"body":{"interfaces/TimeoutOption.html":{},"index.html":{}}}],["remain",{"_index":2395,"title":{},"body":{"license.html":{}}}],["removeallowedact",{"_index":1260,"title":{},"body":{"injectables/AuthService.html":{}}}],["removetoken",{"_index":1261,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeus",{"_index":1262,"title":{},"body":{"injectables/AuthService.html":{}}}],["repeat",{"_index":769,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["repeatedli",{"_index":788,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["replac",{"_index":1294,"title":{},"body":{"injectables/AuthService.html":{}}}],["repres",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["reproduc",{"_index":767,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["request",{"_index":441,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["requestshelveinfo",{"_index":1949,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatu",{"_index":1896,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatusli",{"_index":1895,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requestuserslist",{"_index":1975,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["requir",{"_index":1471,"title":{},"body":{"modules/IasMaterialModule.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":205,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resetcountbyview",{"_index":749,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["resettim",{"_index":803,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["respect",{"_index":1847,"title":{},"body":{"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["respons",{"_index":699,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["response.push(pads[pad_nam",{"_index":2156,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response.sort",{"_index":2157,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response['allowed_act",{"_index":1320,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['antenna",{"_index":854,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["response['devic",{"_index":856,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["response['statu",{"_index":722,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["response['token",{"_index":1329,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['user_data",{"_index":1319,"title":{},"body":{"injectables/AuthService.html":{}}}],["response[0",{"_index":1952,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["restrict",{"_index":2413,"title":{},"body":{"license.html":{}}}],["result",{"_index":188,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["result.push('blu",{"_index":341,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('gray",{"_index":348,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('green",{"_index":344,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('r",{"_index":355,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('unreli",{"_index":342,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('yellow",{"_index":352,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["retriev",{"_index":834,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["retrun",{"_index":582,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["retun",{"_index":469,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":1626,"title":{},"body":{"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":2414,"title":{},"body":{"license.html":{}}}],["revis",{"_index":2437,"title":{},"body":{"license.html":{}}}],["right",{"_index":1093,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":827,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":142,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":998,"title":{"routes.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["routermodul",{"_index":1189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":1214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1227,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["routing.modul",{"_index":1175,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":1188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.servic",{"_index":1190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":1174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing/routing.servic",{"_index":1034,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{}}}],["routing/routing.service.t",{"_index":1747,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["routing/routing.service.ts:20",{"_index":1770,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:28",{"_index":1763,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:35",{"_index":1768,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:43",{"_index":1762,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:51",{"_index":1766,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:58",{"_index":1759,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:65",{"_index":1764,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:8",{"_index":1758,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routingservic",{"_index":997,"title":{"injectables/RoutingService.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppRoutingModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":2314,"title":{},"body":{"index.html":{},"license.html":{}}}],["rxj",{"_index":402,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"dependencies.html":{}}}],["rxjs/observable/intervalobserv",{"_index":589,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["rxjs/oper",{"_index":587,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{}}}],["rxjs/rx",{"_index":1382,"title":{},"body":{"injectables/CdbService.html":{}}}],["s_low.svg",{"_index":869,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["same",{"_index":426,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["sandbox",{"_index":1213,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["sandbox'},{'nam",{"_index":154,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox.compon",{"_index":1194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sandbox.component.html",{"_index":1666,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.scss",{"_index":1665,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.t",{"_index":1662,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sandbox.component.ts:12",{"_index":1667,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.ts:22",{"_index":1668,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox/materi",{"_index":1193,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sanit",{"_index":1120,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":1235,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["scaffold",{"_index":2319,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1653,"title":{},"body":{"injectables/MapService.html":{}}}],["second",{"_index":1371,"title":{},"body":{"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["secondari",{"_index":1691,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["section",{"_index":2380,"title":{},"body":{"license.html":{}}}],["select",{"_index":415,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["select/deselect",{"_index":543,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":553,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":413,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selectedantenna",{"_index":920,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["selecteddescend",{"_index":535,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedst",{"_index":1997,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["selectionmodel",{"_index":392,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":439,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["send",{"_index":414,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{}}}],["sent",{"_index":1873,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["separ",{"_index":1028,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serv",{"_index":2315,"title":{},"body":{"index.html":{}}}],["server",{"_index":1285,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{},"index.html":{}}}],["servic",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set",{"_index":253,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set_crit",{"_index":299,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_high",{"_index":298,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_invalid",{"_index":1553,"title":{},"body":{"components/LegendComponent.html":{}}}],["set_low",{"_index":296,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_medium",{"_index":297,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_valid",{"_index":1554,"title":{},"body":{"components/LegendComponent.html":{}}}],["seterrormessag",{"_index":1582,"title":{},"body":{"components/LoginComponent.html":{}}}],["seterrormessage(error",{"_index":1592,"title":{},"body":{"components/LoginComponent.html":{}}}],["setsidenav",{"_index":1807,"title":{},"body":{"injectables/SidenavService.html":{}}}],["setsidenav(sidenav",{"_index":1815,"title":{},"body":{"injectables/SidenavService.html":{}}}],["shall",{"_index":2450,"title":{},"body":{"license.html":{}}}],["share",{"_index":1716,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.compon",{"_index":218,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppRoutingModule.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.modul",{"_index":229,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["shared/statu",{"_index":1866,"title":{},"body":{"modules/TabularModule.html":{}}}],["sharedmodul",{"_index":203,"title":{"modules/SharedModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":262,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["shelv",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve'},{'nam",{"_index":162,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve.component.html",{"_index":1876,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve.component.scss",{"_index":1877,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve/:alarmid",{"_index":1212,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shelve/shelve.compon",{"_index":212,"title":{},"body":{"modules/ActionsModule.html":{}}}],["shelve/unshelv",{"_index":1791,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvealarm(alarm_id",{"_index":720,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shelvebuttoncompon",{"_index":160,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelvecompon",{"_index":161,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":1893,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelvedatmessag",{"_index":1900,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelveregistri",{"_index":715,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shiba",{"_index":1697,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["shleve/unshelv",{"_index":1767,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["short",{"_index":1527,"title":{},"body":{"classes/Iasio.html":{}}}],["short_desc",{"_index":1519,"title":{},"body":{"classes/Iasio.html":{}}}],["shorten",{"_index":332,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["shouldreload",{"_index":1805,"title":{},"body":{"injectables/SidenavService.html":{}}}],["show",{"_index":960,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["showactionbadg",{"_index":247,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["showaspendingack",{"_index":243,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showasshelv",{"_index":244,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showspinn",{"_index":1971,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shuttedown",{"_index":2283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["side",{"_index":2433,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":915,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":138,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sidebar.compon",{"_index":941,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["sidebar.component.html",{"_index":962,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":961,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":959,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:107",{"_index":2139,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:121",{"_index":2141,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:18",{"_index":973,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":2172,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:21",{"_index":971,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":2171,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":2129,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:30",{"_index":996,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":995,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:34",{"_index":2145,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":2143,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:37",{"_index":2144,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":989,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:44",{"_index":2137,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:47",{"_index":976,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:52",{"_index":2173,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:53",{"_index":2131,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:56",{"_index":978,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:64",{"_index":983,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:72",{"_index":984,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:79",{"_index":993,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:89",{"_index":987,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:90",{"_index":2132,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:97",{"_index":992,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:99",{"_index":2136,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar/antenna",{"_index":940,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/weath",{"_index":2023,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidenav",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenav.servic",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenavservic",{"_index":33,"title":{"injectables/SidenavService.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"overview.html":{}}}],["sidenv",{"_index":1801,"title":{},"body":{"injectables/SidenavService.html":{}}}],["similar",{"_index":2439,"title":{},"body":{"license.html":{}}}],["singl",{"_index":2434,"title":{},"body":{"license.html":{}}}],["six",{"_index":1702,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["size",{"_index":248,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/MapService.html":{}}}],["sizeopt",{"_index":238,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["slider",{"_index":1692,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sm",{"_index":287,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["small",{"_index":1707,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["smallest",{"_index":1701,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["snackbar",{"_index":2123,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sned",{"_index":1270,"title":{},"body":{"injectables/AuthService.html":{}}}],["softwar",{"_index":2345,"title":{},"body":{"license.html":{}}}],["sound",{"_index":561,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["soundingalarm",{"_index":636,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1027,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["special",{"_index":1021,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specif",{"_index":1733,"title":{},"body":{"components/OverviewComponent.html":{}}}],["specifi",{"_index":1025,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["speed",{"_index":2091,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["spinner",{"_index":224,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":1585,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["spirit",{"_index":2440,"title":{},"body":{"license.html":{}}}],["spitz",{"_index":1705,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["src/.../alarm.t",{"_index":2280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/actions/ack",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.t",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["src/app/actions/actions.module.t",{"_index":207,"title":{},"body":{"modules/ActionsModule.html":{}}}],["src/app/actions/buttons/buttons.component.t",{"_index":1350,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/actions/buttons/buttons.component.ts:18",{"_index":1356,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/buttons/buttons.component.ts:28",{"_index":1357,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/shelv",{"_index":1788,"title":{},"body":{"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.t",{"_index":1869,"title":{},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.t",{"_index":1800,"title":{},"body":{"injectables/SidenavService.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts:18",{"_index":1820,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:23",{"_index":1809,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:33",{"_index":1821,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:36",{"_index":1819,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:42",{"_index":1816,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:49",{"_index":1814,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:56",{"_index":1810,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:63",{"_index":1811,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:71",{"_index":1817,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:79",{"_index":1812,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:87",{"_index":1813,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/wiki",{"_index":2184,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antenna",{"_index":875,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.module.t",{"_index":936,"title":{},"body":{"modules/AntennasModule.html":{}}}],["src/app/antennas/antennas.service.t",{"_index":811,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.service.ts:107",{"_index":952,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:15",{"_index":817,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:18",{"_index":818,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:21",{"_index":815,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:34",{"_index":955,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:37",{"_index":958,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:40",{"_index":956,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:43",{"_index":957,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:46",{"_index":953,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:49",{"_index":954,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:52",{"_index":948,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:66",{"_index":950,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:77",{"_index":951,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:99",{"_index":949,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas/antennas.component.t",{"_index":913,"title":{},"body":{"components/AntennasComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:16",{"_index":922,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:26",{"_index":923,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:32",{"_index":925,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/app",{"_index":1187,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":1038,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:117",{"_index":1085,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:138",{"_index":1062,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:150",{"_index":1087,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:160",{"_index":1082,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:168",{"_index":1084,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:181",{"_index":1066,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:210",{"_index":1080,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":1092,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":1109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":1097,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":1104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":1055,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":1095,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":1096,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:84",{"_index":1110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:85",{"_index":1094,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":1107,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":1167,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":1217,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["src/app/auth/auth.module.t",{"_index":1249,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.t",{"_index":1251,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:102",{"_index":1284,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:124",{"_index":1287,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:134",{"_index":1279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:147",{"_index":1280,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:160",{"_index":1271,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:172",{"_index":1290,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:179",{"_index":1291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:186",{"_index":1288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:194",{"_index":1297,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:203",{"_index":1299,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":1302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:212",{"_index":1293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:27",{"_index":1300,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:32",{"_index":1267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:46",{"_index":1269,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:55",{"_index":1276,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:72",{"_index":1281,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.t",{"_index":1577,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:102",{"_index":1590,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:112",{"_index":1593,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:20",{"_index":1601,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:25",{"_index":1600,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:30",{"_index":1605,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:35",{"_index":1603,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:41",{"_index":1587,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:53",{"_index":1598,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:54",{"_index":1604,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":1591,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:75",{"_index":1589,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/data/alarm.service.t",{"_index":559,"title":{},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.ts:20",{"_index":571,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:23",{"_index":573,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:26",{"_index":575,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:29",{"_index":577,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:32",{"_index":579,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:39",{"_index":581,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.t",{"_index":2217,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/cdb.service.t",{"_index":1358,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:18",{"_index":1379,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:23",{"_index":1377,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:28",{"_index":1366,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:42",{"_index":1375,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:53",{"_index":1374,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:61",{"_index":1367,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:75",{"_index":1372,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.t",{"_index":1398,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/http",{"_index":1430,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.t",{"_index":1514,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":1526,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":1523,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":1522,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":1532,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":1529,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":1525,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/user.service.t",{"_index":1972,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/data/user.service.ts:26",{"_index":1977,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/data/user.service.ts:40",{"_index":1978,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/health/health",{"_index":1409,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.t",{"_index":1407,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ia",{"_index":1469,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/map/fixtures.t",{"_index":2219,"title":{},"body":{"coverage.html":{}}}],["src/app/map/map.module.t",{"_index":1639,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/map/map.service.t",{"_index":1642,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/map/map.service.ts:19",{"_index":1647,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:44",{"_index":1652,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:7",{"_index":1645,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map/map.component.t",{"_index":1625,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map/map.component.ts:16",{"_index":1632,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:21",{"_index":1631,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:31",{"_index":1633,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/materi",{"_index":1661,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview",{"_index":1723,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.t",{"_index":1742,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.t",{"_index":1731,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":1736,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":1737,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.t",{"_index":2220,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/alarm",{"_index":311,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.t",{"_index":231,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:108",{"_index":270,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:116",{"_index":274,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:12",{"_index":373,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:149",{"_index":277,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:15",{"_index":374,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:18",{"_index":372,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:188",{"_index":280,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:196",{"_index":283,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:204",{"_index":285,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:21",{"_index":371,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:24",{"_index":375,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:27",{"_index":370,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:30",{"_index":368,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:56",{"_index":252,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:61",{"_index":269,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:66",{"_index":255,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:71",{"_index":258,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:77",{"_index":266,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:82",{"_index":268,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:87",{"_index":250,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:9",{"_index":369,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:97",{"_index":282,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/fixtures.t",{"_index":2227,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1780,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/statu",{"_index":1832,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.t",{"_index":1543,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:15",{"_index":1560,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:18",{"_index":1558,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:21",{"_index":1576,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:24",{"_index":1561,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:27",{"_index":1575,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:30",{"_index":1574,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:33",{"_index":1564,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:36",{"_index":1566,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:39",{"_index":1569,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:42",{"_index":1571,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:45",{"_index":1555,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:51",{"_index":1556,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/tabular",{"_index":2230,"title":{},"body":{"coverage.html":{}}}],["src/app/tabular/tabular.module.t",{"_index":1864,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/test_fixtures.t",{"_index":2237,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weath",{"_index":1979,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":2017,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/weather/weather.service.t",{"_index":2046,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["src/app/weather/weather.service.ts:102",{"_index":2069,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:115",{"_index":2064,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:125",{"_index":2066,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:134",{"_index":2072,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:146",{"_index":2073,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:158",{"_index":2070,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:16",{"_index":2167,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:19",{"_index":2166,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:22",{"_index":2168,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:25",{"_index":2169,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:28",{"_index":2170,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:31",{"_index":2165,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:50",{"_index":2074,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:53",{"_index":2082,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:56",{"_index":2089,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:59",{"_index":2077,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:62",{"_index":2076,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:65",{"_index":2084,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:68",{"_index":2092,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:71",{"_index":2078,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:74",{"_index":2088,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:77",{"_index":2087,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:80",{"_index":2086,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:83",{"_index":2079,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:86",{"_index":2081,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:89",{"_index":2063,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather/weather.component.t",{"_index":1992,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather/weather.component.ts:16",{"_index":1999,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:27",{"_index":2002,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:33",{"_index":2001,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.docker.t",{"_index":2243,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":2244,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.t",{"_index":2245,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":653,"title":{"index.html":{},"license.html":{}},"body":{"classes/AlarmSounds.html":{}}}],["startup",{"_index":444,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":257,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["state.url",{"_index":1240,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["statement",{"_index":2194,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":564,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{}}}],["station",{"_index":183,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["stationconfig",{"_index":1983,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["stationconfig.group",{"_index":2152,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["stationconfig.placemark",{"_index":2159,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["statu",{"_index":164,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":294,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["statusviewcompon",{"_index":163,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":2393,"title":{},"body":{"license.html":{}}}],["stop",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{}}}],["storag",{"_index":1275,"title":{},"body":{"injectables/AuthService.html":{}}}],["storageitem",{"_index":2221,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":812,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["storeallowedact",{"_index":1263,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeallowedactions(allowed_act",{"_index":1292,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken",{"_index":1264,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken(token",{"_index":1296,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeus",{"_index":1265,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeuser(us",{"_index":1298,"title":{},"body":{"injectables/AuthService.html":{}}}],["stream",{"_index":597,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{},"coverage.html":{}}}],["streamnam",{"_index":668,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["string",{"_index":273,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["string(count",{"_index":1147,"title":{},"body":{"components/AppComponent.html":{}}}],["structur",{"_index":502,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["style",{"_index":271,"title":{},"body":{"components/AlarmComponent.html":{}}}],["styleurl",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":503,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subclass",{"_index":2366,"title":{},"body":{"license.html":{}}}],["subcompon",{"_index":1352,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["subscrib",{"_index":1417,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["subscriptionlik",{"_index":819,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["subsubtre",{"_index":499,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subsystem",{"_index":1726,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subtre",{"_index":430,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtree[childid",{"_index":501,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["succesful",{"_index":1237,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["succesfulli",{"_index":1931,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["success",{"_index":1286,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["successfulli",{"_index":1897,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["such",{"_index":2398,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":2308,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":2418,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1014,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summari",{"_index":839,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'nam",{"_index":140,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.compon",{"_index":946,"title":{},"body":{"modules/AntennasModule.html":{},"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.html",{"_index":1016,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.scss",{"_index":1015,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.t",{"_index":1013,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:106",{"_index":1415,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:17",{"_index":1020,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:21",{"_index":1418,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:24",{"_index":1419,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:27",{"_index":1032,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:34",{"_index":2180,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:35",{"_index":1030,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":2178,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:43",{"_index":1033,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:44",{"_index":1416,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:52",{"_index":1023,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:59",{"_index":1031,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:74",{"_index":1414,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary/antenna",{"_index":945,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["summary/health",{"_index":1408,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weath",{"_index":2020,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary_url",{"_index":857,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["supplement",{"_index":2355,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":2386,"title":{},"body":{"license.html":{}}}],["support",{"_index":2454,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2038,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"modules.html":{}}}],["svgicon",{"_index":1099,"title":{},"body":{"components/AppComponent.html":{}}}],["svgpath",{"_index":1649,"title":{},"body":{"injectables/MapService.html":{}}}],["system",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["t.valu",{"_index":1933,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["tabl",{"_index":315,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"modules/TabularModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["table.svg",{"_index":1128,"title":{},"body":{"components/AppComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":2246,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":1756,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":1769,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":167,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":1210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular",{"_index":1197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular.modul",{"_index":1179,"title":{},"body":{"modules/AppModule.html":{}}}],["tabularmodul",{"_index":1165,"title":{"modules/TabularModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcompon",{"_index":166,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":1844,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["taken",{"_index":2410,"title":{},"body":{"license.html":{}}}],["tap",{"_index":1305,"title":{},"body":{"injectables/AuthService.html":{}}}],["target",{"_index":708,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["temp",{"_index":2112,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["temperatur",{"_index":2083,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["tempimageset",{"_index":2053,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["tempimageunreliableset",{"_index":2054,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":2404,"title":{},"body":{"license.html":{}}}],["term",{"_index":2353,"title":{},"body":{"license.html":{}}}],["terrain",{"_index":1713,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["test",{"_index":2327,"title":{},"body":{"index.html":{}}}],["text",{"_index":249,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AppComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["this._getsubtree(childalarm",{"_index":500,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._getsubtree(this.selectedalarm",{"_index":489,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._initi",{"_index":846,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.acklist",{"_index":551,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":554,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.actionssidenavservice.canclos",{"_index":1135,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.clos",{"_index":1131,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.setsidenav(this.actionssidenav",{"_index":1130,"title":{},"body":{"components/AppComponent.html":{}}}],["this.add_or_update_alarm(alarm",{"_index":740,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarm",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.ack",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.core_id",{"_index":362,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.mod",{"_index":345,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.shelv",{"_index":343,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.showasmainten",{"_index":347,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valid",{"_index":357,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valu",{"_index":349,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm_id",{"_index":1910,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmchangestream.next(ani",{"_index":652,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmiconspriorityset",{"_index":1859,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsset",{"_index":1857,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsunreliableset",{"_index":1858,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmid",{"_index":1423,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmnamemaxs",{"_index":364,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.alarmsarray",{"_index":792,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray.push(alarm",{"_index":760,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[alarm.core_id",{"_index":756,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[core_id",{"_index":698,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmservice.get(alarm_id",{"_index":1001,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["this.alarmservice.get(childid",{"_index":496,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":1942,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(this.alarmid",{"_index":1421,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.antennasservice.antennassummaryconfig",{"_index":1035,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.alarmservice.get(this.stationconfig.st",{"_index":1991,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.alarmservice.get(this.weatherservice.weathersummaryconfig[keyword",{"_index":2182,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.getshelveregistries(this.alarm_id",{"_index":1950,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.initi",{"_index":1129,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.shelvealarm",{"_index":1961,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":1967,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmsindex",{"_index":754,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsindexes[alarm.core_id",{"_index":761,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":555,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.antennaclicked.emit(this.selectedantenna",{"_index":1006,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennaimageset",{"_index":866,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennaimageunreliableset",{"_index":873,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasconfig",{"_index":853,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasmapnam",{"_index":863,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasservice.antennasconfig",{"_index":1004,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.devicesconfig",{"_index":1005,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.initi",{"_index":1000,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["this.antennassummaryconfig",{"_index":860,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.audio",{"_index":659,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.addeventlistener('end",{"_index":778,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.load",{"_index":781,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.paus",{"_index":772,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.play",{"_index":782,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.src",{"_index":776,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.getallowedactions()['can_shelv",{"_index":1920,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.getallowedactions()['can_unshelv",{"_index":1922,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.gettoken",{"_index":688,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["this.authservice.getus",{"_index":1138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.authservice.hasvalidtoken().pipe(map((respons",{"_index":1242,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.authservice.login",{"_index":1613,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginstatu",{"_index":656,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.loginstatusstream.subscrib",{"_index":648,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["this.authservice.logout",{"_index":1139,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.redirecturl",{"_index":1243,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["this.buildfiletree(tree_data",{"_index":468,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":512,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledg",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":1960,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.cansound",{"_index":658,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.getbroadcastthreshold",{"_index":806,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.initi",{"_index":657,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms('al",{"_index":746,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms(alarm.core_id",{"_index":741,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changeloginstatus(fals",{"_index":1311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.changeloginstatus(tru",{"_index":1323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":548,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":539,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":532,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(descend",{"_index":537,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":546,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscribe(data",{"_index":458,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":552,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":547,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":538,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":545,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklogin(url",{"_index":1241,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.clearsoundsifack(alarm",{"_index":766,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.clipboardservice.copyfromcontent(result",{"_index":2149,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.clos",{"_index":1826,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.connect",{"_index":660,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(fals",{"_index":809,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(tru",{"_index":662,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.subscrib",{"_index":646,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustim",{"_index":804,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustimer.unsubscrib",{"_index":805,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.coord",{"_index":2041,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["this.countbyview",{"_index":748,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.currenttim",{"_index":779,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.datasourc",{"_index":456,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.datasource.data",{"_index":467,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.definealarmsandicon",{"_index":1420,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimag",{"_index":1855,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.destroy",{"_index":650,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.devicesconfig",{"_index":855,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":1123,"title":{},"body":{"components/AppComponent.html":{}}}],["this.elementref.nativeelement.children[0",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.emitsound(alarm.sound",{"_index":773,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.errormessag",{"_index":1606,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":525,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.focusmonitor.stopmonitoring(buttonref",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.form",{"_index":1907,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.form.get('message').value).subscrib",{"_index":1968,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.form.valid",{"_index":1924,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.formbuilder.group",{"_index":1611,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formgroup",{"_index":1610,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.password.valu",{"_index":1615,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.user.valu",{"_index":1614,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.get(alarm_id",{"_index":724,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.get(id",{"_index":704,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmlist",{"_index":663,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmnam",{"_index":367,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.getantennas(stationconfig",{"_index":2147,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.getchildren",{"_index":453,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().subscribe((r",{"_index":1385,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getconnectionpath",{"_index":680,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.gethttphead",{"_index":1315,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["this.getlevel",{"_index":451,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getpadsstatus(group).subscrib",{"_index":2101,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.gettoken",{"_index":1309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettreedata",{"_index":466,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getus",{"_index":1150,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hidespinn",{"_index":1963,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.http.delete(this.read_url(url",{"_index":1467,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(this.read_url(url",{"_index":1464,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(url",{"_index":1314,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.read_url(url",{"_index":1465,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(url",{"_index":1327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(this.read_url(url",{"_index":1466,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclient.get(backendurls.weather_summary).subscribe((respons",{"_index":2107,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(backendurls.weather_view).subscribe((respons",{"_index":2105,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(summary_url).subscribe((respons",{"_index":859,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["this.httpclient.get(url",{"_index":864,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(url).subscribe((respons",{"_index":852,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclientservice.get(backendurls.users_list",{"_index":1976,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":1389,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(url).pip",{"_index":713,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.post(backendurls.shelve_api",{"_index":721,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.tickets_multiple_ack",{"_index":702,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.unshelve_api",{"_index":727,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.humidityimageset",{"_index":2109,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.humidityimageunreliableset",{"_index":2115,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.iasconfigur",{"_index":1386,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(tru",{"_index":1388,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1424,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1429,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.initi",{"_index":649,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isexpand",{"_index":452,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isiniti",{"_index":655,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isnavigationcompact",{"_index":1137,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isvalidiasio(json",{"_index":1538,"title":{},"body":{"classes/Iasio.html":{}}}],["this.lastalarmid",{"_index":1829,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.loadalarmsconfig",{"_index":847,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["this.loadimag",{"_index":848,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loadpadsstatu",{"_index":2098,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loadweatherstationsconfig",{"_index":2097,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loginstatu",{"_index":1307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginstatusstream.next(statu",{"_index":1308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logout",{"_index":1325,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.markerimageset",{"_index":2118,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.markerimageunreliableset",{"_index":2121,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.maticonregistri",{"_index":1121,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messag",{"_index":1903,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.message.reset",{"_index":1944,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.message.valu",{"_index":1958,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.nestednodemap.get(nod",{"_index":520,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":521,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":519,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":526,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.ngonchang",{"_index":460,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.opensnackbar(messag",{"_index":2150,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.optionalalarmnam",{"_index":361,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.padsstatu",{"_index":2103,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.padsstatusavailable.next(fals",{"_index":2102,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.padsstatusavailable.next(tru",{"_index":2104,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.panelclicked.emit(this.selectedst",{"_index":2160,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.password",{"_index":1609,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.password.seterrors({'incorrect",{"_index":1623,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.play",{"_index":780,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.playalarmsound(alarm",{"_index":764,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessage(payload.act",{"_index":671,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessageslist(payload.data",{"_index":675,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readcountbyviewmessage(payload.data",{"_index":678,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.reload",{"_index":1912,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.removeallowedact",{"_index":1347,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removetoken",{"_index":1332,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removeus",{"_index":1333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.requestshelveinfo",{"_index":1943,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.requeststatu",{"_index":1929,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.resetcountbyview",{"_index":665,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.resettim",{"_index":670,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.route.parammap.subscrib",{"_index":1908,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.router.navigate(['/login",{"_index":1245,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.router.navigate(['/tabular",{"_index":1773,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['antenna",{"_index":1774,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['weath",{"_index":1775,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate([redirect",{"_index":1617,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([{outlet",{"_index":1132,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{}}}],["this.routing.gotoantenna",{"_index":1037,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.routing.gotoweath",{"_index":2183,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1036,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.routingservice.cleanactionoutlet",{"_index":1825,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoacknowledge(alarm_id",{"_index":1828,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoshelve(alarm_id",{"_index":1831,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.selectedalarm",{"_index":2174,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedalarm.st",{"_index":2175,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedantenna",{"_index":929,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.alarm",{"_index":1011,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.antenna",{"_index":1012,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.placemark",{"_index":1007,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedst",{"_index":2003,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["this.selectedstation.placemark",{"_index":2158,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.seterrormessage(error",{"_index":1619,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.shelv",{"_index":1948,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shelvedatmessag",{"_index":1906,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shouldreload.next(tru",{"_index":1830,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.showactionbadg",{"_index":359,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.showspinn",{"_index":1957,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenav",{"_index":1822,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.clos",{"_index":1824,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.open",{"_index":1823,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.toggl",{"_index":1827,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenavservice.canclos",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.closeandclean",{"_index":1916,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.gotoacknowledge(this.alarm.core_id",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.sidenavservice.gotoshelve(this.alarm.core_id",{"_index":1799,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.sidenavservice.open",{"_index":1914,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.shouldreload.subscrib",{"_index":1913,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sizeoptions.indexof(this.s",{"_index":309,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.snackbar.open(messag",{"_index":2161,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.soundingalarm",{"_index":771,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.spinnerservice.hid",{"_index":1618,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.spinnerservice.show",{"_index":1612,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.stationconfig.st",{"_index":2176,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.storeallowedactions(allowed_act",{"_index":1322,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storetoken(token",{"_index":1330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(user_data['usernam",{"_index":1321,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(usernam",{"_index":1331,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tempimageset",{"_index":2111,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.tempimageunreliableset",{"_index":2116,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.text",{"_index":310,"title":{},"body":{"components/AlarmComponent.html":{}}}],["this.timeout",{"_index":1904,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.reset(this.defaulttimeout",{"_index":1945,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.valu",{"_index":1959,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.value).viewvalu",{"_index":1934,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts.find(t",{"_index":1932,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts[0].valu",{"_index":1892,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.treecontrol",{"_index":454,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":530,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":449,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.triggeralarmsnonvalidconnectionst",{"_index":647,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.unshelv",{"_index":1947,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.updateacklist",{"_index":459,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.url",{"_index":2189,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.url.startswith('http",{"_index":2188,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.us",{"_index":1607,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.user.seterrors({'incorrect",{"_index":1622,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user_select",{"_index":1962,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.userservice.requestuserslist",{"_index":1134,"title":{},"body":{"components/AppComponent.html":{}}}],["this.weathermapnam",{"_index":2099,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weatherservice.initi",{"_index":2146,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.weatherservice.padsstatu",{"_index":2151,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.padsstatus[stationconfig.group",{"_index":2153,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.weathersummaryconfig",{"_index":2181,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.weatherstationsconfig",{"_index":2106,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weathersummaryconfig",{"_index":2108,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.websocketbridge.connect(connectionpath",{"_index":681,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.alarm",{"_index":666,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.count",{"_index":676,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.upd",{"_index":673,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.listen(connectionpath",{"_index":682,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.addeventlisten",{"_index":661,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.clos",{"_index":692,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.stream(streams.updates).send",{"_index":691,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.windsimageset",{"_index":2113,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.windsimageunreliableset",{"_index":2117,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["thorugh",{"_index":1749,"title":{},"body":{"injectables/RoutingService.html":{}}}],["those",{"_index":1664,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["threshold",{"_index":1373,"title":{},"body":{"injectables/CdbService.html":{}}}],["through",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["ticket",{"_index":707,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["time",{"_index":2423,"title":{},"body":{"license.html":{}}}],["timeout",{"_index":719,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["timeoutopt",{"_index":1868,"title":{"interfaces/TimeoutOption.html":{}},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["timer",{"_index":641,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timer'",{"_index":798,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timestamp",{"_index":616,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["titl",{"_index":1046,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["todo",{"_index":1119,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["togeth",{"_index":2411,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":542,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/SidenavService.html":{}}}],["toggledefault",{"_index":1717,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["toggleshelveunshelv",{"_index":1946,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["togglesidenav",{"_index":1052,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":687,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["tooltip",{"_index":1792,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["transform",{"_index":515,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":125,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":217,"title":{},"body":{"modules/ActionsModule.html":{}}}],["tree.component.html",{"_index":410,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":411,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":377,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":556,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":557,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":385,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":387,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":384,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":216,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree/fixtures.t",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["tree_data",{"_index":465,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[this.selectedalarm.core_id",{"_index":488,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":432,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":435,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":1390,"title":{},"body":{"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{}}}],["trigger",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["triggeralarmsnonvalidconnectionst",{"_index":795,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["true",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["type",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["type1",{"_index":566,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type2",{"_index":567,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type3",{"_index":568,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type4",{"_index":569,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["typeof",{"_index":510,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unack",{"_index":1070,"title":{},"body":{"components/AppComponent.html":{}}}],["unblock",{"_index":1969,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["uncombin",{"_index":2435,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":509,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["under",{"_index":794,"title":{},"body":{"classes/AlarmSounds.html":{},"index.html":{},"license.html":{}}}],["uniqu",{"_index":1974,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["unit",{"_index":2326,"title":{},"body":{"index.html":{}}}],["unkn.svg",{"_index":1427,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unknown",{"_index":300,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unknown.svg",{"_index":871,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unreli",{"_index":256,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unselect",{"_index":994,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialSandboxComponent.html":{}}}],["unselectantenna",{"_index":968,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["unselecteddescend",{"_index":536,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unshelv",{"_index":1793,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["unshelvealarms(alarms_id",{"_index":726,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["unus",{"_index":445,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updat",{"_index":549,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AuthService.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["updateacklist",{"_index":550,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updateselectedantenna",{"_index":921,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updateselectedantenna(selectedantenna",{"_index":924,"title":{},"body":{"components/AntennasComponent.html":{}}}],["url",{"_index":275,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["us",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":694,"title":{"interfaces/User.html":{}},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{},"coverage.html":{},"license.html":{}}}],["user'",{"_index":2425,"title":{},"body":{"license.html":{}}}],["user.servic",{"_index":1401,"title":{},"body":{"modules/DataModule.html":{}}}],["user_data",{"_index":1318,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_select",{"_index":1894,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["usernam",{"_index":1083,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userservic",{"_index":1047,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"modules/DataModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalu",{"_index":1182,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":2377,"title":{},"body":{"license.html":{}}}],["v",{"_index":506,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":595,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["valid.svg",{"_index":1559,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["validators.requir",{"_index":1608,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validity.unreli",{"_index":797,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["valu",{"_index":264,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.clear",{"_index":350,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_crit",{"_index":356,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_high",{"_index":354,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_low",{"_index":351,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_medium",{"_index":353,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value[k",{"_index":507,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["var",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":1072,"title":{},"body":{"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["verbatim",{"_index":2351,"title":{},"body":{"license.html":{}}}],["veri",{"_index":1710,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["verifi",{"_index":1219,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["version",{"_index":2292,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":2328,"title":{},"body":{"index.html":{}}}],["view",{"_index":639,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'nam",{"_index":165,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":1199,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":1834,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.html",{"_index":1835,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.t",{"_index":1833,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:19",{"_index":1842,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:22",{"_index":1845,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:25",{"_index":1854,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:28",{"_index":1852,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:31",{"_index":1853,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:34",{"_index":1851,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:40",{"_index":1841,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:50",{"_index":1848,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:57",{"_index":1846,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view/fixtures.t",{"_index":2231,"title":{},"body":{"coverage.html":{}}}],["view/statu",{"_index":1786,"title":{},"body":{"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["view/tabular",{"_index":1198,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["viewbox",{"_index":885,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{}}}],["viewchild",{"_index":1091,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('actionssidenav",{"_index":1118,"title":{},"body":{"components/AppComponent.html":{}}}],["viewvalu",{"_index":1871,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["visual",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["void",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["warn",{"_index":1680,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["warnbas",{"_index":1718,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["weather",{"_index":169,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather'},{'nam",{"_index":173,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather.component.html",{"_index":1996,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":1995,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":1990,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["weather.svg",{"_index":1126,"title":{},"body":{"components/AppComponent.html":{}}}],["weather/weather.compon",{"_index":2022,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.modul",{"_index":1180,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weather/weather/weather.compon",{"_index":1200,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["weather_",{"_index":2119,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherbackupwsmarkercompon",{"_index":168,"title":{"components/WeatherBackupWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercompon",{"_index":172,"title":{"components/WeatherComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdatamarkercompon",{"_index":174,"title":{"components/WeatherDataMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermap",{"_index":1994,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermapcompon",{"_index":176,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermapnam",{"_index":2055,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathermodul",{"_index":1166,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"modules.html":{},"overview.html":{}}}],["weatherprimarywsconnectorcompon",{"_index":177,"title":{"components/WeatherPrimaryWsConnectorComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherprimarywsmarkercompon",{"_index":180,"title":{"components/WeatherPrimaryWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservic",{"_index":1982,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherset",{"_index":2093,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["weathersettings.mapkey",{"_index":2085,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathersidebar",{"_index":1993,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathersidebarcompon",{"_index":181,"title":{"components/WeatherSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherst",{"_index":2094,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationconfig",{"_index":1986,"title":{"classes/WeatherStationConfig.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["weatherstationsconfig",{"_index":2056,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationsidebarcompon",{"_index":182,"title":{"components/WeatherStationSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummarycompon",{"_index":184,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummaryconfig",{"_index":2057,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["webserv",{"_index":614,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["websocket",{"_index":615,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websocketbridg",{"_index":590,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websver",{"_index":2080,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["well",{"_index":1711,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["wether",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["whatev",{"_index":2394,"title":{},"body":{"license.html":{}}}],["whether",{"_index":527,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["whevenv",{"_index":464,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["wikbuttoncompon",{"_index":1353,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["wiki",{"_index":186,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikibuttoncompon",{"_index":185,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wind",{"_index":2090,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["wind_",{"_index":2114,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["window",{"_index":2187,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["window.open(this.url",{"_index":2190,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["windsimageset",{"_index":2058,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windsimageunreliableset",{"_index":2059,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windspe",{"_index":2096,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["without",{"_index":2382,"title":{},"body":{"license.html":{}}}],["word",{"_index":1029,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":2361,"title":{},"body":{"license.html":{}}}],["worth",{"_index":1743,"title":{},"body":{"modules/OverviewModule.html":{}}}],["wrong",{"_index":1772,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":171,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["x",{"_index":890,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["xs",{"_index":286,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["y",{"_index":893,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["yellow",{"_index":911,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["yum",{"_index":2309,"title":{},"body":{"index.html":{}}}],["zero",{"_index":1076,"title":{},"body":{"components/AppComponent.html":{},"components/LegendComponent.html":{}}}],["zone.j",{"_index":2276,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":204,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAcknowledge\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAcknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initializes the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Handle click on ack button, it triggers ack sidenav through the Router service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:28\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initializes the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   * @return {boolean} true if the {@link Alarm} can be acknowledged, false if not.\n   */\n  canAcknowledge() {\n    if (this.alarm != null) {\n      return !this.alarm.ack;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose || !this.canAcknowledge();\n  }\n\n  /**\n  * Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.sidenavService.goToAcknowledge(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n  Modules\n  ActionsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/actions/actions.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AckButtonComponent\n                            \n                            \n                                AckComponent\n                            \n                            \n                                AckTreeComponent\n                            \n                            \n                                ButtonsComponent\n                            \n                            \n                                ShelveButtonComponent\n                            \n                            \n                                ShelveComponent\n                            \n                            \n                                WikiButtonComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SidenavService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AckButtonComponent\n                            \n                            \n                                    AckComponent\n                            \n                            \n                                    ButtonsComponent\n                            \n                            \n                                    ShelveButtonComponent\n                            \n                            \n                                    ShelveComponent\n                            \n                            \n                                    WikiButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AckComponent } from './ack/ack.component';\nimport { ShelveComponent } from './shelve/shelve.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { AlarmComponent } from '../shared/alarm/alarm.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidenavService } from './sidenav.service';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AckComponent,\n    AckTreeComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ],\n  providers: [\n    SidenavService,\n  ],\n  exports: [\n    AckButtonComponent,\n    AckComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ]\n})\nexport class ActionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                alarm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getImage\n                            \n                            \n                                getTextClass\n                            \n                            \n                                isTextAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:87\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by sizeOptions\n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:82\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                    \n                        Alarm object associated to the component\n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Returns the style class name based on the optional input size. By default\nthe class is medium size.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    style class name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    url of the image\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Returns the class to be used to display the text\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    list of css classes\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTextAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nisTextAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed as a text alarm or as an icon alarm\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:196\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the pending ack badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the pending ack must be activated, false if it must not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:204\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the shelve badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the alarm is shelved, false if it is not\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:87\n                            \n                        \n\n                \n                    \n                        Available sizes for the alarm componet\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n    \n        \n   \n\n  \n    \n      {{this.text}}\n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               {{this.text}}                                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmHeaderComponent.html":{"url":"components/AlarmHeaderComponent.html","title":"component - AlarmHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-header/alarm-header.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as headers in a table or list\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-header\n            \n\n            \n                styleUrls\n                alarm-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value : 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm has pending acknowledgement, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm is shelved\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is shelved, false if not\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as headers in a table or list\n */\n@Component({\n  selector: 'app-alarm-header',\n  templateUrl: './alarm-header.component.html',\n  styleUrls: ['./alarm-header.component.scss']\n})\nexport class AlarmHeaderComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('blue');\n      result.push('unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('red');\n    } else {\n      result.push('blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('unreliable');\n    }\n    return result;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n  * @returns {boolean} true if the alarm has pending acknowledgement, false if not\n  */\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm is shelved\n  * @returns {boolean} true if the alarm is shelved, false if not\n  */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n}\n\n    \n\n    \n        \n\n    {{this.getAlarmName()}}\n\n\n  \n\n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{this.getAlarmName()}}                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:9\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:27\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:21\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:18\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:15\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:24\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmSounds.html":{"url":"classes/AlarmSounds.html","title":"class - AlarmSounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmSounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.service.ts\n        \n\n            \n                Description\n            \n            \n                Class used to model the different sound options and their corresponding audio files\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                none\n                            \n                            \n                                    Static\n                                type1\n                            \n                            \n                                    Static\n                                type2\n                            \n                            \n                                    Static\n                                type3\n                            \n                            \n                                    Static\n                                type4\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSoundsource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            none\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        none:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:20\n                            \n                        \n\n                \n                    \n                        This is the type for alarms with no sound \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_1.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:23\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE1 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_2.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:26\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE2 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type3:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_3.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:29\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE3 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type4:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_4.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:32\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE4 \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getSoundsource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSoundsource(sound: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Given a sound type, retruns the associated audiofile\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sound\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The sound type, e.g. TYPE1, TYPE2, etc.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the filepath of the corresponding audio file\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable ,  BehaviorSubject } from 'rxjs';\nimport { IntervalObservable } from 'rxjs/observable/IntervalObservable';\nimport { WebSocketBridge } from 'django-channels';\nimport { environment } from '../../environments/environment';\nimport { Alarm, OperationalMode, Validity, Value } from '../data/alarm';\nimport { BackendUrls, Streams, Assets } from '../settings';\nimport { CdbService } from '../data/cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { AuthService } from '../auth/auth.service';\n\n\n/**\n* Class used to model the different sound options and their corresponding audio files\n*/\nexport class AlarmSounds {\n\n  /** This is the type for alarms with no sound */\n  static none = '';\n\n  /** The name of the audio file associated to the sound TYPE1 */\n  static type1 = 'Alarm_Sound_1.mp3';\n\n  /** The name of the audio file associated to the sound TYPE2 */\n  static type2 = 'Alarm_Sound_2.mp3';\n\n  /** The name of the audio file associated to the sound TYPE3 */\n  static type3 = 'Alarm_Sound_3.mp3';\n\n  /** The name of the audio file associated to the sound TYPE4 */\n  static type4 = 'Alarm_Sound_4.mp3';\n\n  /**\n  * Given a sound type, retruns the associated audiofile\n  * @param {string} sound The sound type, e.g. TYPE1, TYPE2, etc.\n  * @returns {string} the filepath of the corresponding audio file\n  */\n  static getSoundsource(sound: string): string {\n    if (sound === 'TYPE1') {\n      return Assets.SOUNDS + AlarmSounds.type1;\n    } else if (sound === 'TYPE2') {\n      return Assets.SOUNDS + AlarmSounds.type2;\n    } else if (sound === 'TYPE3') {\n      return Assets.SOUNDS + AlarmSounds.type3;\n    } else if (sound === 'TYPE4') {\n      return Assets.SOUNDS + AlarmSounds.type4;\n    }\n  }\n}\n\n/**\n* Service that connects and receives {@link Alarm} messages from the\n* IAS Webserver through Websockets\n*/\n@Injectable()\nexport class AlarmService {\n\n  /**\n  * Timestamp related with the last received message\n  */\n  public lastReceivedMessageTimestamp: number = (new Date).getTime();\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public connectionStatusStream = new BehaviorSubject(false);\n\n  /**\n  * Array of {@link Alarm} objects\n  */\n  public alarmsArray: Alarm[] = [];\n\n  /**\n  * Index for the alarmsArray { core_id: arrayIndex }\n  */\n  public alarmsIndexes: {[core_id: string]: number} = {};\n\n  /**\n  * Stream of notifications of changes in\n  * the dictionary of {@link Alarm} objects\n  */\n  public alarmChangeStream = new BehaviorSubject(true);\n\n  /**\n  * Django Channels WebsocketBridge,\n  * used to connect to Django Channels through Websockets\n  */\n  public webSocketBridge: WebSocketBridge = new WebSocketBridge();\n\n  /**\n  * Defines wether or not the display should emit sounds when alarms are triggered.\n  * It is used to avoid sounds when the page is refreshed, and only allow them after that\n  */\n  public canSound: boolean;\n\n  /**\n  * Reference to the audio object used to play the sounds\n  */\n  public audio = new Audio();\n\n  /**\n  * Id of the currenlty sounding Alarm\n  */\n  public soundingAlarm: string;\n\n  /**\n  * Defines wether or not the service is initialized\n  */\n  public isInitialized = false;\n\n  /**\n  * Information about the count of alarms by view\n  */\n  public countByView = {};\n\n  /**\n  * Connection status timer\n  */\n  public connectionStatusTimer;\n\n  /**\n   * Builds an instance of the service\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   * @param {AuthService} authService Service used for authentication\n   */\n  constructor(\n    private cdbService: CdbService,\n    private httpClientService: HttpClientService,\n    private authService: AuthService,\n  ) {\n    this.connectionStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.triggerAlarmsNonValidConnectionState();\n        }\n      }\n    );\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === true) {\n          this.initialize();\n        } else {\n          this.destroy();\n        }\n      }\n    );\n  }\n\n  /**\n  * Sends an {@link Alarm} change event\n  *\n  * @param {Any} any the core_id of the updated alarm,\n  * or 'all' if all were updated\n  */\n  changeAlarms(any) {\n    this.alarmChangeStream.next(any);\n  }\n\n  /******* SERVICE INITIALIZATION *******/\n\n  /**\n  * Start connection to the backend through websockets\n  */\n  initialize() {\n    if (this.isInitialized || !this.authService.loginStatus) {\n      return;\n    }\n    this.cdbService.initialize();\n    this.isInitialized = true;\n    this.canSound = false;\n    this.audio = new Audio();\n    this.connect();\n    this.webSocketBridge.socket.addEventListener(\n      'open', () => {\n        this.connectionStatusStream.next(true);\n        this.getAlarmList();\n      }\n    );\n    this.webSocketBridge.socket.addEventListener(\n      'close', () => {\n        this.resetCountByView();\n      }\n    );\n    this.webSocketBridge.demultiplex(Streams.ALARMS, (payload, streamName) => {\n      // console.log('notify ', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessage(payload.action, payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.UPDATES, (payload, streamName) => {\n      // console.log('request', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessagesList(payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.COUNTER, (payload, streamName) => {\n      // console.log('counter ', payload);\n      if (this.authService.loginStatus) {\n        this.readCountByViewMessage(payload.data);\n      }\n    });\n  }\n\n  /**\n  *  Start connection to the backend through websockets\n  */\n  connect() {\n    const connectionPath = this.getConnectionPath();\n    this.webSocketBridge.connect(connectionPath);\n    this.webSocketBridge.listen(connectionPath);\n    console.log('Connected to webserver at: ' + environment.websocketPath);\n  }\n\n  /**\n  *  Connection path using authentication data\n  */\n  getConnectionPath() {\n    return environment.websocketPath + '?token=' + this.authService.getToken();\n  }\n\n  /**\n  *  Disconnect from the backend\n  */\n  destroy() {\n    // Close connection\n    if (this.isInitialized) {\n      this.webSocketBridge.stream(Streams.UPDATES).send({\n        'action': 'close'\n      });\n      this.webSocketBridge.socket.close(\n        1000, 'User logout', {keepClosed: true});\n      this.resetCountByView();\n    }\n    this.isInitialized = false;\n    console.log('Connection to webserver closed');\n  }\n\n  /******* ALARM HANDLING *******/\n\n  /**\n   * Returns an Alarm object\n   * @param core_id core_id of the Alarm to return\n   * @returns {Alarm} Alarm object corresponding to the given core_id\n   */\n  get(core_id: string): Alarm {\n    return this.alarmsArray[this.alarmsIndexes[core_id]] as Alarm;\n  }\n\n  /**\n   * Acknowledges a list of Alarms with a message\n   * @param alarms list of ids of the alarms to acknowledge\n   * @param message message of the acknowledgement\n   * @param user user that performs the acknowledgement\n   * @returns {json} response of the HTTP request of the acknowledge\n   */\n  acknowledgeAlarms(alarms_ids, message, user) {\n    const data = {\n      'alarms_ids': alarms_ids,\n      'message': message,\n      'user': user\n    };\n    return this.httpClientService.put(BackendUrls.TICKETS_MULTIPLE_ACK, data).pipe(\n    map(\n      (response) => {\n        for (const id of alarms_ids) {\n          const alarm = this.get(id);\n          alarm.acknowledge();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Get information about old tickets related to a target alarm\n   * @param alarm_id id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getMissingAcks(alarm_id) {\n    const url = BackendUrls.TICKETS_INFO + '?alarm_id=' + alarm_id;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Gets the open {@link ShelveRegistry} for an {@link Alarm}\n   * @param {string} alarm_id id of the target alarm\n   * @param {int} status id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getShelveRegistries(alarm_id, status) {\n    const url = BackendUrls.SHELVE_REGS_FILTER + '?alarm_id=' + alarm_id + '&status=' + status;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string} alarm_id id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @param {string} timeout the timeout for the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  shelveAlarm(alarm_id, message, timeout, user) {\n    const data = {\n      'alarm_id': alarm_id,\n      'message': message,\n      'timeout': timeout,\n      'user': user\n    };\n    return this.httpClientService.post(BackendUrls.SHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 201) {\n          const alarm = this.get(alarm_id);\n          alarm.shelve();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string} alarms_ids id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  unshelveAlarms(alarms_ids, message) {\n    const data = {\n      'alarms_ids': alarms_ids,\n    };\n    return this.httpClientService.put(BackendUrls.UNSHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 200) {\n          for (const id of alarms_ids) {\n            const alarm = this.get(id);\n            alarm.unshelve();\n          }\n        }\n        return response;\n      }\n    ));\n  }\n\n  /******* HANDLING OF ALARM MESSAGES FROM THE CORE *******/\n\n  /**\n  * Get the complete list of alarms from the webserver database\n   * through the websocket\n   */\n  getAlarmList() {\n    this.webSocketBridge.stream(Streams.UPDATES).send({\n      'action': 'list'\n    });\n  }\n\n  /**\n   * Reads an alarm message from the Core and modify the service alarms list\n   * depending on the action value.\n   * @param {string} action create, update or delete\n   * @param {Object} obj dictionary with values for alarm fields (as generic object)\n   */\n  readAlarmMessage(action, obj) {\n    if ( action === 'create' || action === 'update' ) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n      this.changeAlarms(alarm.core_id);\n    }\n  }\n\n  /**\n   * Reads a list of alarm messages form the Core and add them to the\n   * service alarms list\n   * @param {Object[]} alarmsList list of dictionaries with values for alarm fields (as generic objects)\n   */\n  readAlarmMessagesList(alarmsList) {\n    for (const obj of alarmsList) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n    }\n    this.changeAlarms('all');\n    this.canSound = true;\n  }\n\n  /**\n   * Reads the count by view object received from the webserver\n   * @param {Object} countByView\n   */\n  readCountByViewMessage(countByView) {\n    this.countByView = countByView;\n  }\n\n  /**\n   * Method to clear the count by view if there is the ws connection is closed\n   */\n  resetCountByView() {\n    this.countByView = {};\n  }\n\n  /**\n   * Adds or updates an {@link Alarm} to the AlarmService\n   * @param {Alarm} alarm the {@link Alarm} to add or update\n   */\n  add_or_update_alarm(alarm) {\n    let old_alarm_value = Value.cleared;\n    let old_alarm_ack = true;\n    if (alarm.core_id in this.alarmsIndexes) {\n      const old_alarm = this.alarmsArray[this.alarmsIndexes[alarm.core_id]];\n      old_alarm_value = old_alarm.value;\n      old_alarm_ack = old_alarm.ack;\n      this.alarmsArray[this.alarmsIndexes[alarm.core_id]] = alarm;\n    } else {\n      const newLength = this.alarmsArray.push(alarm);\n      this.alarmsIndexes[alarm.core_id] = newLength - 1;\n    }\n    if (old_alarm_value === Value.cleared && alarm.value !== Value.cleared) {\n      if (alarm.sound !== 'NONE') {\n        this.playAlarmSound(alarm);\n      }\n    }\n    if (!old_alarm_ack && alarm.ack) {\n      if (alarm.sound !== 'NONE') {\n        this.clearSoundsIfAck(alarm);\n      }\n    }\n  }\n\n  /**\n   * Reproduces the sound of a given {@link Alarm}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  playAlarmSound(alarm: Alarm) {\n    if (!this.canSound) {\n      return;\n    }\n    const repeat = alarm.shouldRepeat();\n    if (repeat) {\n      this.soundingAlarm = alarm.core_id;\n      this.audio.pause();\n      this.emitSound(alarm.sound, repeat);\n    } else if (this.audio.paused) {\n      this.emitSound(alarm.sound, repeat);\n    }\n  }\n\n  /**\n   * Reproduces a sound\n   * @param {string} sound the type of sound to reproduce\n   * @param {boolean} repeat true if the sound should be repeated, false if not\n   */\n  emitSound(sound: string, repeat: boolean) {\n    console.log('calling emit with: ', sound);\n    this.audio = new Audio();\n    this.audio.src = AlarmSounds.getSoundsource(sound);\n    if (repeat) {\n      this.audio.addEventListener('ended', function() {\n        this.currentTime = 0;\n        this.play();\n      }, false);\n    }\n    this.audio.load();\n    this.audio.play();\n  }\n\n  /**\n   * Stops the sound of a given {@link Alarm}, only if the sound is being repeated\n   * It is intended to be used when critical alarms (repeated) are acknowledged.\n   * Once the sound stops, it check there is another non-acknowledged alarm and plays its sound repeatedly,\n   * by calling {@link AlarmService.html#playAlarmSound}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  clearSoundsIfAck(alarm: Alarm) {\n    if (!alarm.shouldRepeat()) {\n      return;\n    }\n    if (this.soundingAlarm === alarm.core_id) {\n      this.audio.pause();\n      this.soundingAlarm = null;\n      for (alarm of this.alarmsArray) {\n        if (!alarm.ack && alarm.sound !== 'NONE' && alarm.shouldRepeat()) {\n          this.soundingAlarm = alarm.core_id;\n          this.playAlarmSound(alarm);\n          return;\n        }\n      }\n    }\n  }\n\n  /******* PERIODIC CHECK OF VALIDITY OF ALARMS *******/\n\n  /**\n   * Set selected state to alarms under an non-valid connection\n   */\n  triggerAlarmsNonValidConnectionState() {\n    for (const alarm of this.alarmsArray) {\n      alarm.validity = Validity.unreliable;\n    }\n    this.changeAlarms('all');\n  }\n\n  /**\n   * Resets the status connection check timer\n   * The timer's period is equal to the broadcastThreshold obtained by {@link CdbService.html#getBroadcastRate}\n   */\n  resetTimer() {\n    if (this.connectionStatusTimer) {\n      this.connectionStatusTimer.unsubscribe();\n      this.connectionStatusStream.next(true);\n    }\n    const broadcastThreshold = this.cdbService.getBroadcastThreshold();\n    this.connectionStatusTimer = IntervalObservable.create(1000 * broadcastThreshold).subscribe(x => {\n      this.connectionStatusStream.next(false);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AntennaConfig.html":{"url":"classes/AntennaConfig.html","title":"class - AntennaConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AntennaConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the antennas and location related to an Alarm\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                            \n                                    Public\n                                antenna\n                            \n                            \n                                    Public\n                                placemark\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antenna:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:15\n                            \n                        \n\n                \n                    \n                        ID of the Antenna associated with the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:18\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** List of Alarm configuration for each antenna **/\n  public antennasConfig: AntennaConfig [] = [];\n\n  /** List of Alarm configuration for other devices related with the array **/\n  public devicesConfig: AntennaConfig [] = [];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      this.antennasConfig = response['antennas'] as AntennaConfig[];\n      this.devicesConfig = response['devices'] as AntennaConfig[];\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennaMarkerComponent.html":{"url":"components/AntennaMarkerComponent.html","title":"component - AntennaMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennaMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display an Antenna in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antenna-marker\n            \n\n            \n                styleUrls\n                antenna-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antenna-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNgClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                cx\n                            \n                            \n                                cy\n                            \n                            \n                                placemark\n                            \n                            \n                                r\n                            \n                            \n                                viewbox\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        The Alarm to associate to the antenna \n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cx\n                    \n                    \n                        The position of the antenna in the X axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cy\n                    \n                    \n                        The position of the antenna in the Y axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placemark\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : {'name': '', 'opt_cx': 0, 'opt_cy': 0}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        r\n                    \n                    \n                        Radius of the antenna \n\n                        \n                            Default value : 1\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewbox\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : '0 0 10 10'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNgClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNgClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class that should be used to draw the marker\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:41\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:40\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle antennas configuration\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the CSS class that should be used to draw the marker\n   */\n  getNgClass() {\n    let colorClass = 'green';\n    if (this.alarm.shelved === true) {\n      colorClass = 'green';\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      colorClass = 'blue';\n    } else if (this.alarm.showAsMaintenance()) {\n      colorClass = 'grey';\n    } else if (this.alarm.value === Value.cleared) {\n      colorClass = 'green';\n    } else if (this.alarm.value === Value.set_low) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_medium) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_high) {\n      colorClass = 'red';\n    } else if (this.alarm.value === Value.set_critical) {\n      colorClass = 'red';\n    } else {\n      colorClass = 'green';\n    }\n\n    if (this.alarm.validity === 0) {\n      return [colorClass, 'unreliable'];\n    } else {\n      return [colorClass];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennaMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasComponent.html":{"url":"components/AntennasComponent.html","title":"component - AntennasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas/antennas.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Antennas Alarms both in a sidebar (instantiated in a AntennasSidebar),\nand a map (instantiated by a AntennasMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas\n            \n\n            \n                styleUrls\n                antennas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSelectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSelectedAntenna(selectedAntenna: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedAntenna\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAntenna:     AntennaConfig\n\n                    \n                \n                    \n                        \n                            Type :     AntennaConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AntennaConfig } from '../antennas.service';\n\n/**\n* Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\n* and a map (instantiated by a {@link AntennasMap})\n*/\n@Component({\n  selector: 'app-antennas',\n  templateUrl: './antennas.component.html',\n  styleUrls: ['./antennas.component.scss']\n})\nexport class AntennasComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedAntenna: AntennaConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AntennaConfig}\n   */\n  updateSelectedAntenna(selectedAntenna: AntennaConfig): void {\n    this.selectedAntenna = selectedAntenna;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AntennasModule.html":{"url":"modules/AntennasModule.html","title":"module - AntennasModule","body":"\n                   \n\n\n\n\n  Modules\n  AntennasModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/antennas/antennas.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AntennaMarkerComponent\n                            \n                            \n                                AntennasComponent\n                            \n                            \n                                AntennasMapComponent\n                            \n                            \n                                AntennasSidebarComponent\n                            \n                            \n                                AntennasSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AntennasService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AntennasSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AntennasComponent } from './antennas/antennas.component';\nimport { AntennasMapComponent } from './antennas-map/antennas-map.component';\nimport { AntennasSidebarComponent } from './antennas-sidebar/antennas-sidebar.component';\nimport { DataModule } from '../data/data.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AntennasService } from './antennas.service';\nimport { AntennaMarkerComponent } from './antennas-map-markers/antenna-marker/antenna-marker.component';\nimport { AntennasSummaryComponent } from './antennas-summary/antennas-summary.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    ActionsModule,\n    IasMaterialModule,\n    MapModule,\n    SharedModule,\n  ],\n  providers: [\n    AntennasService\n  ],\n  declarations: [\n    AntennasComponent,\n    AntennasMapComponent,\n    AntennasSidebarComponent,\n    AntennaMarkerComponent,\n    AntennasSummaryComponent\n  ],\n  exports: [\n    AntennasSummaryComponent\n  ]\n})\nexport class AntennasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AntennasService.html":{"url":"injectables/AntennasService.html","title":"injectable - AntennasService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AntennasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the AntennasModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                antennaImageSet\n                            \n                            \n                                    Public\n                                antennaImageUnreliableSet\n                            \n                            \n                                    Public\n                                antennasConfig\n                            \n                            \n                                    Public\n                                antennasMapName\n                            \n                            \n                                    Public\n                                antennasSummaryConfig\n                            \n                            \n                                    Public\n                                devicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                loadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas.service.ts:52\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the initialize method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:66\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Define the icons used by this module components\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:52\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:46\n                            \n                        \n\n                \n                    \n                        Set of antenna icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:49\n                            \n                        \n\n                \n                    \n                        Set of antenna Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasConfig:     AntennaConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AntennaConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:34\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for each antenna *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : AntennasSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:40\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasSummaryConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:43\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the antennas summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devicesConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devicesConfig:     AntennaConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AntennaConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:37\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for other devices related with the array *\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** List of Alarm configuration for each antenna **/\n  public antennasConfig: AntennaConfig [] = [];\n\n  /** List of Alarm configuration for other devices related with the array **/\n  public devicesConfig: AntennaConfig [] = [];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      this.antennasConfig = response['antennas'] as AntennaConfig[];\n      this.devicesConfig = response['devices'] as AntennaConfig[];\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSidebarComponent.html":{"url":"components/AntennasSidebarComponent.html","title":"component - AntennasSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Display used to show the list of antennas' alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-sidebar\n            \n\n            \n                styleUrls\n                antennas-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getAntennaName\n                            \n                            \n                                getAntennas\n                            \n                            \n                                getDevices\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                unselectAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                antennaClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(antennasService: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Selected antenna object, null if it is nothing selected \n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        antennaClicked\n                    \n                    \n                        Event emitted to notify when an antenna is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennaName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennaName(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the Antenna configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the antenna name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Return the list of antennas Alarm configuration\n\n\n                            \n                            \n                            \n                                Returns :     AntennaConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Return the list of Alarm configuration for global devices\n\n\n                            \n                            \n                            \n                                Returns :     AntennaConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Indicates if the antenna is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Action performed when the antenna is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked antenna\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unselectAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nunselectAntenna()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            If there is a selected antenna it will be unselected\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService, AntennaConfig } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Display used to show the list of antennas' alarms\n */\n@Component({\n  selector: 'app-antennas-sidebar',\n  templateUrl: './antennas-sidebar.component.html',\n  styleUrls: ['./antennas-sidebar.component.scss']\n})\nexport class AntennasSidebarComponent implements OnInit {\n\n  /** Selected antenna object, null if it is nothing selected */\n  @Input() selectedAntenna = null;\n\n  /** Event emitted to notify when an antenna is selected */\n  @Output() antennaClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {AntennasService} antennasService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {RoutingService} routing Service used to redirect to other views\n   */\n  constructor(\n    public antennasService: AntennasService,\n    public alarmService: AlarmService\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n   * Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n   * @param {MapAntennaConfig} antennaConfig the Antenna configuration\n   * @returns {string} the antenna name to display\n   */\n  getAntennaName(antennaConfig: AntennaConfig ): string {\n    return antennaConfig.antenna;\n  }\n\n  /**\n  * Return the list of antennas Alarm configuration\n  * @returns {list} list of {@link AntennaConfig}\n  */\n  getAntennas(): AntennaConfig [] {\n    return this.antennasService.antennasConfig;\n  }\n\n  /**\n  * Return the list of Alarm configuration for global devices\n  * @returns {list} list of {@link AntennaConfig}\n  */\n  getDevices(): AntennaConfig [] {\n    return this.antennasService.devicesConfig;\n  }\n\n  /**\n  * If there is a selected antenna it will be unselected\n  */\n  unselectAntenna() {\n    this.selectedAntenna = null;\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n  * Indicates if the antenna is selected or not\n  * @param {AntennaConfig} alarmConfig configuration of the alarm\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(alarmConfig: AntennaConfig): boolean {\n    return this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark);\n  }\n\n  /**\n  * Action performed when the antenna is clicked\n  * @param {AntennaConfig} alarmConfig configuration of the clicked antenna\n  */\n  onClick(alarmConfig: AntennaConfig) {\n    if ( this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark) ) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = alarmConfig;\n    }\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n     \n  \n\n\n\n\n   ANTENNAS \n\n\n\n\n     chevron_left  {{getAntennaName(this.selectedAntenna)}}  \n\n\n\n\n  \n    \n      \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        Alarm ID\n        {{this.selectedAntenna.alarm}}\n      \n      \n        Antenna\n        {{this.selectedAntenna.antenna}}\n      \n      \n        Location (PAD)\n        {{this.selectedAntenna.placemark}}\n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ANTENNAS      chevron_left  {{getAntennaName(this.selectedAntenna)}}                                                                                                                                                                                                                                                    Alarm ID        {{this.selectedAntenna.alarm}}                    Antenna        {{this.selectedAntenna.antenna}}                    Location (PAD)        {{this.selectedAntenna.placemark}}n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSummaryComponent.html":{"url":"components/AntennasSummaryComponent.html","title":"component - AntennasSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-summary/antennas-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the Antennas Arrays\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-summary\n            \n\n            \n                styleUrls\n                antennas-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, antennasService: AntennasService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get Antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to get Antennas configuration\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:43\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the Antennas Arrays\n */\n@Component({\n  selector: 'app-antennas-summary',\n  templateUrl: './antennas-summary.component.html',\n  styleUrls: ['./antennas-summary.component.scss']\n})\nexport class AntennasSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {AntennasService} antennasService Service used to get Antennas configuration\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public antennasService: AntennasService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.antennasService.antennasSummaryConfig);\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Antennas View\n   */\n  redirect() {\n    this.routing.goToAntennas();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              STATUS\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    STATUS                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSidenav\n                            \n                            \n                                    Public\n                                actionsSidenavService\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isNavigationCompacted\n                            \n                            \n                                navigationSidenavItems\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionsLink\n                            \n                            \n                                getNavItemCountClass\n                            \n                            \n                                getNavItemCountText\n                            \n                            \n                                getUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, authService: AuthService, userService: UserService, actionsSidenavService: SidenavService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:68\n                            \n                        \n\n                \n                    \n                            Builds an instance of the application, with its related services and complements\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used for authentication\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage information about user accounts\n\n                                                        \n                                                \n                                                \n                                                        actionsSidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for the navigation\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular material registry for custom icons\n\n                                                        \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionsLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionsLink(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Returns the links for the router outlets to navigate the different views,\nconsidering of the actionsSidenav can be closed or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an item of the navigation sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { outlets: { primary: any; actions: any; }; } | { outlets: { primary: any; actions?: undefined; }...\n\n                            \n                                \n                                    The links in a dictionary\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountClass(navItem: , countByView: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:181\n                            \n                        \n\n\n                \n                    \n                            Method to get the class related to the count of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the countByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"hide-count\" | \"nonzero-count\" | \"zero-count\" | \"unknown-count\"\n\n                            \n                                \n                                    the classname for the nav item mark\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountText(navItem: , countByView: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:210\n                            \n                        \n\n\n                \n                    \n                            Method to get the text related to the mark of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the counterByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the text related to the count for the nav item\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            Method to get the username\n\" Uses the getUser method defined on the AuthService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the username\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Method to logout an authenticated user\n\" Uses the logout method defined on the AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Method executed when the application is initiated\nInitializes the AlarmService and passes its actionsSidenav to the ActionsSidenavService for it to control it\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isNavigationCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Reference to the Actions sidenav (right sidenav)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:85\n                            \n                        \n\n                \n                    \n                        Service for the navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:82\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms of this component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:83\n                            \n                        \n\n                \n                    \n                        Service used for authentication\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavigationCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isNavigationCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationSidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navigationSidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                        Navigation Sidenav Menu of the application (left sidenav) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:88\n                            \n                        \n\n                \n                    \n                        instance of an Angular {\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userService:     UserService\n\n                    \n                \n                    \n                        \n                            Type :     UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:84\n                            \n                        \n\n                \n                    \n                        Service used to manage information about user accounts\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AlarmService } from './data/alarm.service';\nimport { SidenavService } from './actions/sidenav.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthService } from './auth/auth.service';\nimport { UserService } from './data/user.service';\nimport { Router } from '@angular/router';\n\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n  * Reference to the Actions sidenav (right sidenav)\n  */\n  @ViewChild('actionsSidenav') public actionsSidenav: MatSidenav;\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isNavigationCompacted = true;\n\n  // TODO: Use only custom svgIcons\n  /** Navigation Sidenav Menu of the application (left sidenav) */\n  navigationSidenavItems = [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ];\n\n\n  /**\n   * Builds an instance of the application, with its related services and complements\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   * @param {AuthService} authService Service used for authentication\n   * @param {UserService} userService Service used to manage information about user accounts\n   * @param {SidenavService} actionsSidenavService Service for the navigation\n   * @param {MatIconRegistry} matIconRegistry Angular material registry for custom icons\n   * @param {DomSanitizer} matIconRegistry Angular material DOM sanitizer for custom icons\n   * @param {Router} router instance of an Angular {@link Router} to handle routing\n   */\n  constructor(\n    public alarmService: AlarmService,\n    public authService: AuthService,\n    public userService: UserService,\n    public actionsSidenavService: SidenavService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    public router: Router,\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ias_overview',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-overview.svg')\n      )\n      .addSvgIcon(\n        'ias_weather',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-weather.svg')\n      )\n      .addSvgIcon(\n        'ias_antenna',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-antenna.svg')\n      )\n      .addSvgIcon(\n        'ias_table',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-table.svg')\n      );\n  }\n\n  /**\n   * Method executed when the application is initiated\n   * Initializes the {@link AlarmService} and passes its {@link actionsSidenav} to the {@link ActionsSidenavService} for it to control it\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n    this.actionsSidenavService.setSidenav(this.actionsSidenav);\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.actionsSidenavService.close();\n          this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n        } else if (value === true) {\n          this.userService.requestUsersList();\n        }\n      }\n    );\n  }\n\n  /**\n  * Returns the links for the router outlets to navigate the different views,\n  * considering of the actionsSidenav can be closed or not\n  * @param {any} item an item of the navigation sidenav\n  * @returns {Object} The links in a dictionary\n  */\n  getActionsLink(item: any) {\n    if (this.actionsSidenavService.canClose) {\n      return {outlets: { primary: item.link, actions: null }};\n    } else {\n      return {outlets: { primary: item.link }};\n    }\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isNavigationCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isNavigationCompacted = !this.isNavigationCompacted;\n    return this.isNavigationCompacted;\n  }\n\n  /**\n   * Method to get the username\n   \" Uses the getUser method defined on the {@link AuthService}\n   * @returns {string} the username\n   */\n  getUser() {\n    return this.authService.getUser();\n  }\n\n  /**\n   * Method to logout an authenticated user\n   \" Uses the logout method defined on the {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Method to get the class related to the count of the nav items\n   * to highlight or not the presence of unack alarms by view\n   \" It is expected to use the countByView\n   * defined on the {@link AlarmService}\n   * and the configuration defined in the navigationSidenavItems\n   * variable\n   * @returns {string} the classname for the nav item mark\n   */\n   getNavItemCountClass(navItem, countByView) {\n     const navItemCounter = navItem.counter;\n     const availableCounters = Object.keys(countByView);\n     if (navItemCounter === '') {\n       return 'hide-count';\n     } else {\n       if (availableCounters.indexOf(navItemCounter) > -1) {\n         if (countByView[navItemCounter] > 0) {\n           return 'nonzero-count';\n         }\n         if (countByView[navItemCounter] === 0) {\n           return 'zero-count';\n         }\n       } else {\n         return 'unknown-count';\n       }\n\n     }\n   }\n\n   /**\n    * Method to get the text related to the mark of the nav items\n    * to highlight or not the presence of unack alarms by view\n    \" It is expected to use the counterByView\n    * defined on the {@link AlarmService}\n    * and the configuration defined in the navigationSidenavItems\n    * variable\n    * @returns {string} the text related to the count for the nav item\n    */\n    getNavItemCountText(navItem, countByView) {\n      const navItemCounter = navItem.counter;\n      const availableCounters = Object.keys(countByView);\n      if (navItemCounter === '') {\n        return '';\n      } else {\n        if (availableCounters.indexOf(navItemCounter) > -1) {\n          const count = countByView[navItemCounter];\n          if (count >= 0) {\n            if (count 100');\n            }\n          } else {\n            return String(count);  // this case should not happen\n          }\n        } else {\n          return '?';\n        }\n\n      }\n    }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n      \n       Integrated Alarm System \n    \n    \n      \n        account_circle {{ this.getUser() }}\n      \n      \n        \n          exit_to_appLog out\n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                {{ getNavItemCountText(item, alarmService.countByView) }}\n              \n              \n                \n                  {{ item.icon }}\n                \n                \n                  {{ item.icon }}\n                \n              \n            \n            {{ item.title }} \n          \n        \n      \n    \n\n    \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                           Integrated Alarm System                       account_circle {{ this.getUser() }}                              exit_to_appLog out                                                                                            {{ getNavItemCountText(item, alarmService.countByView) }}                                                              {{ item.icon }}                                                  {{ item.icon }}                                                      {{ item.title }}                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Application module\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    AntennasModule\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    OverviewModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TabularModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { APP_BASE_HREF, DatePipe } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { DataModule } from './data/data.module';\nimport { ActionsModule } from './actions/actions.module';\nimport { AntennasModule } from './antennas/antennas.module';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { HealthModule } from './health/health.module';\nimport { MapModule } from './map/map.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { AppComponent } from './app.component';\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    ActionsModule,\n    AntennasModule,\n    AppRoutingModule,\n    AuthModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n    HttpModule,\n    MapModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MaterialSandboxComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     RoutingService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutingService } from './routing.service';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { AckComponent } from '../actions/ack/ack.component';\nimport { AlarmComponent } from '../shared/alarm/alarm.component';\nimport { AntennasComponent } from '../antennas/antennas/antennas.component';\nimport { MaterialSandboxComponent } from '../material-sandbox/material-sandbox.component';\nimport { OverviewComponent } from '../overview/overview/overview.component';\nimport { ShelveComponent } from '../actions/shelve/shelve.component';\nimport { TabularViewComponent } from '../tabular/tabular-view/tabular-view.component';\nimport { WeatherComponent } from '../weather/weather/weather.component';\nimport { AuthLoginGuard } from '../auth/auth-login.guard';\nimport { LoginComponent } from '../auth/login/login.component';\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent},\n  { path: 'overview', component: OverviewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular/:filter', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'acknowledge/:alarmID', component: AckComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'shelve/:alarmID', component: ShelveComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'weather', component: WeatherComponent, canActivate: [AuthLoginGuard]},\n  { path: 'sandbox', component: MaterialSandboxComponent, canActivate: [AuthLoginGuard]},\n  { path: 'antennas', component: AntennasComponent, canActivate: [AuthLoginGuard]},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthLoginGuard.html":{"url":"guards/AuthLoginGuard.html","title":"guard - AuthLoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthLoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth-login.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-login.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Builds an instance of the guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:31\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next activated route\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next state of router navigation, used to retrieve the url that is going to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckLogin(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:42\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged in.\nIf false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the nexturl to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n/**\n* Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthLoginGuard implements CanActivate {\n\n  /**\n  * Builds an instance of the guard\n  * @param {AuthService} authService service used to check and handle authorization\n  * @param {Router} router Angular router used to navigate the application\n  */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n  * Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n  * @param {ActivatedRouteSnapshot} next the next activated route\n  * @param {RouterStateSnapshot} state the next state of router navigation, used to retrieve the url that is going to be navigated\n  * @returns {Observable} true if navigation is permitted, false if not\n  */\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n\n  /**\n  * Checks wether or not the user is logged in.\n  * If false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n  * @param {string} url the nexturl to be navigated\n  * @returns {boolean} true if navigation is permitted, false if not\n  */\n  checkLogin(url: string): Observable {\n    return this.authService.hasValidToken().pipe(map((response: any) => {\n      if (response === true) {\n        return true;\n      } else {\n        // Store the attempted URL for redirecting\n        this.authService.redirectUrl = url;\n\n        // Navigate to the login page with extras\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }));\n\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoginComponent } from './login/login.component';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    IasMaterialModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to request and handle tokens and authorization\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginStatus\n                            \n                            \n                                    Public\n                                loginStatusStream\n                            \n                            \n                                redirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLoginStatus\n                            \n                            \n                                getAllowedActions\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                hasValidToken\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                removeAllowedActions\n                            \n                            \n                                removeToken\n                            \n                            \n                                removeUser\n                            \n                            \n                                storeAllowedActions\n                            \n                            \n                                storeToken\n                            \n                            \n                                storeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient used to request the token for authentication\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLoginStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeLoginStatus(status: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Changes the loginStatus and sneds the corresponding update in the loginStatusStream\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the new login status\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:160\n                            \n                        \n\n\n                \n                    \n                            Returns the user permission over the specified action stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    the permission as a boolean\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Returns the token stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the token as a string, or undefined if there is no token\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            Returns the user stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the user name as a string, or undefined if there is no user\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValidToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasValidToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged-in, which is true if there is a valid token\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if there is a valid token, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Requests a token from the server, sending user and password information.\nSaves the token in the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the user\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the password of the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of true if the login is successful, observable of false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            Logs out of the server by deleting the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:186\n                            \n                        \n\n\n                \n                    \n                            Deletes the allowed_actions from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:172\n                            \n                        \n\n\n                \n                    \n                            Deletes the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:179\n                            \n                        \n\n\n                \n                    \n                            Deletes the user from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreAllowedActions(allowed_actions: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:212\n                            \n                        \n\n\n                \n                    \n                            Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allowed_actions\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:194\n                            \n                        \n\n\n                \n                    \n                            Stores a given the token in the local storage, replacing the previous token, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the token to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreUser(user: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            Stores a given the user in the local storage, replacing the previous user, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginStatus:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                        Store if the user is logged in or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginStatusStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginStatusStream:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:32\n                            \n                        \n\n                \n                    \n                        Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Store the URL so we can redirect after logging in\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { tap, delay } from 'rxjs/operators';\nimport { BackendUrls } from '../settings';\nimport { environment } from '../../environments/environment';\n\n\n/**\n* Service used to request and handle tokens and authorization\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n  * Store the URL so we can redirect after logging in\n  */\n  redirectUrl: string;\n\n\n  /**\n  * Store if the user is logged in or not\n  */\n  loginStatus = false;\n\n  /**\n  * Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n  */\n  public loginStatusStream = new BehaviorSubject(null);\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClient} http Angular HttpClient used to request the token for authentication\n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Changes the {@link loginStatus} and sneds the corresponding update in the {@link loginStatusStream}\n   * @param {boolean} status the new login status\n   */\n  changeLoginStatus(status: boolean) {\n    this.loginStatus = status;\n    this.loginStatusStream.next(status);\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n   * Checks wether or not the user is logged-in, which is true if there is a valid token\n   * @returns { Observable} true if there is a valid token, false if not\n   */\n  hasValidToken(): Observable {\n    if (!this.getToken()) {\n      this.changeLoginStatus(false);\n      return of(false);\n    } else {\n      const url = `${environment.httpUrl}${BackendUrls.VALIDATE_TOKEN}`;\n      return this.http.get(url, {headers: this.getHttpHeaders()} ).pipe(\n        map((response: any) => {\n          const user_data = response['user_data'];\n          const allowed_actions = response['allowed_actions'];\n          this.storeUser(user_data['username']);\n          this.storeAllowedActions(allowed_actions);\n          this.changeLoginStatus(true);\n          return true;\n        }),\n        catchError(error => {\n          this.logout();\n          return of(false);\n        }\n      ));\n    }\n  }\n\n  /**\n   * Requests a token from the server, sending user and password information.\n   * Saves the token in the local storage\n   * @param {string} username the name of the user\n   * @param {string} password the password of the user\n   * @returns {Observable} observable of true if the login is successful, observable of false if not\n   */\n  login(username: string, password: string): Observable {\n    const url = `${environment.httpUrl}${BackendUrls.TOKEN}`;\n    return this.http.post(url, {\n      username: username,\n      password: password\n    }).pipe(map((response: any) => {\n      const token = response['token'];\n      if (token) {\n        this.storeToken(token);\n        this.storeUser(username);\n        this.changeLoginStatus(true);\n        return true;\n      } else {\n        this.changeLoginStatus(false);\n        return false;\n      }\n    }));\n  }\n\n  /**\n   * Logs out of the server by deleting the token from the local storage\n   */\n  logout(): void {\n    this.changeLoginStatus(false);\n    this.removeToken();\n    this.removeUser();\n  }\n\n  /**\n  * Returns the token stored in the local storage\n  * @returns {string | undefined} the token as a string, or undefined if there is no token\n  */\n  getToken(): string | undefined {\n    const token = localStorage.getItem('token');\n    if (token === null) {\n      return undefined;\n    } else {\n      return JSON.parse(token);\n    }\n  }\n\n  /**\n  * Returns the user stored in the local storage\n  * @returns {string | undefined} the user name as a string, or undefined if there is no user\n  */\n  getUser(): string | undefined {\n    const user = localStorage.getItem('user');\n    if (user === null) {\n      return undefined;\n    } else {\n      return JSON.parse(user);\n    }\n  }\n\n  /**\n  * Returns the user permission over the specified action stored in the local storage\n  * @returns {boolean | undefined} the permission as a boolean\n  */\n  getAllowedActions(): boolean {\n    const allowed_actions = localStorage.getItem('allowed_actions');\n    if (allowed_actions === null) {\n      return undefined;\n    } else {\n      return JSON.parse(allowed_actions);\n    }\n  }\n\n  /**\n  * Deletes the token from the local storage\n  */\n  removeToken() {\n    localStorage.removeItem('token');\n  }\n\n  /**\n  * Deletes the user from the local storage\n  */\n  removeUser() {\n    localStorage.removeItem('user');\n  }\n\n  /**\n  * Deletes the allowed_actions from the local storage\n  */\n  removeAllowedActions() {\n    localStorage.removeItem('allowed_actions');\n  }\n\n  /**\n  * Stores a given the token in the local storage, replacing the previous token, if any\n  * @param {string} token the token to be stored\n  */\n  storeToken(token: string) {\n    localStorage.removeItem('token');\n    localStorage.setItem('token', JSON.stringify(token));\n  }\n\n  /**\n  * Stores a given the user in the local storage, replacing the previous user, if any\n  * @param {string} user the user to be stored\n  */\n  storeUser(user: string) {\n    localStorage.removeItem('user');\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  /**\n  * Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n  * @param {string} permission the user allowed_actions to be stored\n  */\n  storeAllowedActions(allowed_actions: Object) {\n    this.removeAllowedActions();\n    localStorage.setItem('allowed_actions', JSON.stringify(allowed_actions));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Set of buttons used to trigger actions over AlarmService\nContains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons\n            \n\n            \n                styleUrls\n                buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the buttons\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Set of buttons used to trigger actions over AlarmService\n * Contains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n */\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the buttons\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBroadcastRate\n                            \n                            \n                                getBroadcastThreshold\n                            \n                            \n                                getConfigurationData\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastRate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastRate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast rate from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastRate' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastThreshold\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastThreshold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast threshold from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastThreshold' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:23\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : BackendUrls.CDB_IAS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:18\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {forkJoin as observableForkJoin,  BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Rx';\nimport { BackendUrls } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { Iasio } from '../data/iasio';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = BackendUrls.CDB_IAS;\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return this.getConfigurationData().subscribe((res) => {\n      this.iasConfiguration = res;\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {json} IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get refresh broadcast rate from IAS configuration data\n  * @returns {number} contains the 'broadcastRate' in seconds\n  */\n  getBroadcastRate(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastRate']);\n    } catch (e) {\n      value = 10;\n    }\n    return value;\n  }\n\n  /**\n  * Get refresh broadcast threshold from IAS configuration data\n  * @returns {number} contains the 'broadcastThreshold' in seconds\n  */\n  getBroadcastThreshold(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastThreshold']);\n    } catch (e) {\n      value = 11;\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the services and data models\n\n            \n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AlarmService\n                            \n                            \n                                     CdbService\n                            \n                            \n                                     HttpClientService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AlarmService } from './alarm.service';\nimport { UserService } from './user.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\n\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClient,\n    HttpClientService,\n    UserService\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n  Modules\n  HealthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the components associated to the health of the IAS\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HealthSummaryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    HealthSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                health-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService, httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:21\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:24\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:52\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { HttpClientService } from '../../data/http-client.service';\nimport { BackendUrls } from '../../settings';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.scss']\n})\nexport class HealthSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n    private httpClient: HttpClientService\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.loadAlarmsConfig();\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.alarmId);\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const summary_url = BackendUrls.HEALTH_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.alarmId = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-valid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-valid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-valid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-invalid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-invalid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              IAS HEALTH\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    IAS HEALTH                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                read_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:14\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HTTP Service used to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nread_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Proesses the url for the request by adding the base url for http requests\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the processed target url\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from '../auth/auth.service';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /**\n  * Builds an instance of the service\n  * @param {HttpClient} http Angular HTTP Service used to perform HTTP requests\n  * @param {AuthService} authService service used to check and handle authorization\n  */\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.authService.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.authService.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param {string} url target url\n  * @returns {Response} the response of the request\n  */\n  get(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.get(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.post(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.put(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param {string} url target url with the selected object id\n  * @returns {Response} the response of the request\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.delete(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Proesses the url for the request by adding the base url for http requests\n  * @param {string} url target url\n  * @returns {string} the processed target url\n  */\n  read_url(url: string): string {\n    return environment.httpUrl + url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  IasMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for the required Angular Material components\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clear_invalid\n                            \n                            \n                                clear_valid\n                            \n                            \n                                maintenance\n                            \n                            \n                                priority_0\n                            \n                            \n                                priority_1\n                            \n                            \n                                priority_2\n                            \n                            \n                                priority_3\n                            \n                            \n                                priority_4\n                            \n                            \n                                set_invalid\n                            \n                            \n                                set_valid\n                            \n                            \n                                unknown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:15\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'maintenance-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in maintenance state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_0:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-0.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority zero (clear) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_1:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-1.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority low \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_2:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-2.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority medium \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_3:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-3.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority high \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_4:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-4.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority critical \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'unknown-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in unknown state \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Assets } from '../../settings';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Reference to the icon used to display Alarms in clear and valid states */\n  clear_valid = Assets.ICONS + 'clear-valid.svg';\n\n  /** Reference to the icon used to display Alarms in clear and invalid states */\n  clear_invalid = Assets.ICONS + 'clear-invalid.svg';\n\n  /** Reference to the icon used to display Alarms in unknown state */\n  unknown = Assets.ICONS + 'unknown-valid.svg';\n\n  /** Reference to the icon used to display Alarms in maintenance state */\n  maintenance = Assets.ICONS + 'maintenance-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and valid states */\n  set_valid = Assets.ICONS + 'set-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and invalid states */\n  set_invalid = Assets.ICONS + 'set-invalid.svg';\n\n  /** Reference to the icon used to display Alarms with priority zero (clear) */\n  priority_0 = Assets.ICONS + 'priority-0.svg';\n\n  /** Reference to the icon used to display Alarms with priority low */\n  priority_1 = Assets.ICONS + 'priority-1.svg';\n\n  /** Reference to the icon used to display Alarms with priority medium */\n  priority_2 = Assets.ICONS + 'priority-2.svg';\n\n  /** Reference to the icon used to display Alarms with priority high */\n  priority_3 = Assets.ICONS + 'priority-3.svg';\n\n  /** Reference to the icon used to display Alarms with priority critical */\n  priority_4 = Assets.ICONS + 'priority-4.svg';\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    LEGEND\n\n    \n      \n\n        \n\n          \n            \n               Clear Valid\n            \n            \n               Clear Invalid\n            \n          \n\n          \n            \n               Set Valid\n            \n            \n               Set Invalid\n            \n          \n\n        \n\n        \n          \n             Maintenance\n          \n          \n             Unknown\n          \n        \n\n        \n\n          \n            \n               Low\n            \n            \n               Medium\n            \n          \n\n          \n            \n               High\n            \n            \n               Critical\n            \n          \n\n        \n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    LEGEND                                                       Clear Valid                                       Clear Invalid                                                           Set Valid                                       Set Invalid                                                             Maintenance                                 Unknown                                                               Low                                       Medium                                                           High                                       Critical                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component that defines the login form\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                message\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder used to build forms\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Performs the login, by calling the login() function of AuthService passing the user and password retrieved from the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Performs the logout, by calling the logout() function of AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the component and defines its form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetErrorMessage(error: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Sets the errorMessage to display, based on the status code of the error returned by the request.\nIf the status code is 400, it shows that the credentials are not valid\nIf the status code is not 400, it shows that there was a problem communicating with the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the error returned by the request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:53\n                            \n                        \n\n                \n                    \n                        service used to check and handle authorization\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                        Error message to be displayed if the ogin is not successful\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        Message with the current login status, to be displayed in the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the password from the form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:54\n                            \n                        \n\n                \n                    \n                        Angular router used to navigate the application\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the username from the form\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from '../auth.service';\n\n/**\n * Component that defines the login form\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Message with the current login status, to be displayed in the component\n   */\n  message: string;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Form control used to retrieve the username from the form\n   */\n  user: FormControl;\n\n  /**\n   * Form control used to retrieve the password from the form\n   */\n  password: FormControl;\n\n\n  /**\n   * Error message to be displayed if the ogin is not successful\n   */\n  errorMessage = undefined;\n\n\n  /**\n   * Builds an instance of the component\n   * @param {FormBuilder} formBuilder Angular FormBuilder used to build forms\n   * @param {AuthService} authService service used to check and handle authorization\n   * @param {Router} router Angular router used to navigate the application\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    public authService: AuthService,\n    public router: Router,\n    private spinnerService: NgxSpinnerService\n  ) {\n  }\n\n  /**\n   * Initializes the component and defines its form\n   */\n  ngOnInit() {\n    this.errorMessage = undefined;\n    this.user = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [Validators.required]);\n    this.formGroup = this.formBuilder.group({\n      user: this.user,\n      password: this.password,\n    });\n  }\n\n  /**\n   * Performs the login, by calling the login() function of {@link AuthService} passing the user and password retrieved from the form\n   */\n  login() {\n    this.errorMessage = undefined;\n    this.spinnerService.show();\n    this.authService.login(\n      this.formGroup.controls.user.value,\n      this.formGroup.controls.password.value,\n    ).subscribe(\n      (response) => {\n        if (response === true) {\n          // Get the redirect URL from our auth service\n          // If no redirect has been set, use the default\n          const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '';\n          // Redirect the user\n          this.router.navigate([redirect]);\n        }\n        this.spinnerService.hide();\n      },\n      (error) => {\n        this.spinnerService.hide();\n        this.setErrorMessage(error);\n      }\n    );\n  }\n\n  /**\n   * Performs the logout, by calling the logout() function of {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Sets the {@link errorMessage} to display, based on the status code of the error returned by the request.\n   * If the status code is 400, it shows that the credentials are not valid\n   * If the status code is not 400, it shows that there was a problem communicating with the server.\n   * @param {Error} error the error returned by the request\n   */\n  setErrorMessage(error) {\n    if (error.status === 400) {\n      this.errorMessage = 'The credentials provided are not valid';\n    } else {\n      this.errorMessage = 'There was an error communicating with the Server';\n      console.error('Error communicating with Server: ', error);\n    }\n    this.user.setErrors({'incorrect': true});\n    this.password.setErrors({'incorrect': true});\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n       IAS ALMA \n    \n  \n  \n    \n        \n            \n                User\n                \n            \n            \n                Password\n                \n                 {{errorMessage}} \n            \n            \n                \n                  Login\n                \n            \n        \n    \n\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             IAS ALMA                                                 User                                                        Password                                 {{errorMessage}}                                                           Login                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component used to display a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapConfig\n                            \n                            \n                                mapdataAvailable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                    \n                        contains the configuration to draw the map\n\n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapdataAvailable\n                    \n                    \n                        Defines wether or no there is data available to draw the map\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Initiates the component when it is displayed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\n\n/**\n* Reusable component used to display a map\n*/\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  /**\n  * Defines wether or no there is data available to draw the map\n  */\n  @Input() mapdataAvailable = false;\n\n  /**\n  * contains the configuration to draw the map\n  */\n  @Input() mapConfig = {};\n\n  /**\n  * Builds an instance of the component\n  */\n  constructor() { }\n\n  /**\n  * Initiates the component when it is displayed\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n  \n\n\n\n\n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n  Modules\n  MapModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MapComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map/map.component';\nimport { MapService } from './map.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    MapComponent,\n  ],\n  providers: [\n    MapService\n  ],\n  exports: [\n    MapComponent,\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the maps\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSVGPaths\n                            \n                            \n                                mapdataProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.service.ts:7\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSVGPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSVGPaths(pathsGroup: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Transforms a group of paths into svgPaths\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathsGroup\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    svgPaths\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapdataProcessing\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapdataProcessing(placemarksGroups: , pathsGroups: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Scaling and calculation of max and min values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemarksGroups\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of groups of placemarks\n\n                                                        \n                                                \n                                                \n                                                        pathsGroups\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    The viewbox: list of 4 numbers used to define the size of the map\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n* Service used to handle the maps\n*/\n@Injectable()\nexport class MapService {\n\n  /**\n  * Builds an instance of the service\n  */\n  constructor() { }\n\n  /**\n  * Transforms a group of paths into svgPaths\n  * @param {any} pathsGroup group of paths\n  * @returns {any} svgPaths\n  */\n  getSVGPaths(pathsGroup) {\n    const svgPaths = [];\n    for (let i = 0; i  0) {\n      dy = -1.0 * maxCY;\n    }\n    for (let k = 0; k \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialSandboxComponent.html":{"url":"components/MaterialSandboxComponent.html","title":"component - MaterialSandboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialSandboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.component.ts\n\n\n    \n        Description\n    \n    \n        Component that displays some Angular Material Elements.\nUseful to check how the application would look if it includes those elements\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sandbox\n            \n\n            \n                styleUrls\n                material-sandbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-sandbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/material-sandbox/material-sandbox.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Executed when initiating the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component that displays some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.component.html',\n  styleUrls: ['./material-sandbox.component.scss']\n})\nexport class MaterialSandboxComponent implements OnInit {\n\n  /**\n  * Constructor of the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when initiating the component\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        Primary\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nAccent\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nWarn\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nBackground\n\n   status-bar \n   app-bar \n   background \n   hover \n   card \n   dialog \n   disabled-button \n   warning \n\n\n   raised-button \n   focused-button \n   selected-button \n   selected-disabled-button \n   disabled-button-toggle \n   unselected-chip \n   disabled-list-option \n\n\nForeground\n\n   base \n   divider \n   dividers \n   disabled \n   disabled-button \n   disabled-text \n\n\n   hint-text \n   secondary-text \n   icon \n   icons \n   text \n   slider-min \n   slider-off \n   slider-off-active \n\n\n\n\n\n\nMaterial Toggle\nDefault \nPrimary \nAccent \nWarn\n\nBasic Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nRaised Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFlat Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nIcon Buttons\n\n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n\n\nFab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nMini Fab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\n\n  \n    \n    Shiba Inu\n    Dog Breed\n  \n  \n  \n    \n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    \n  \n  \n    LIKE\n    SHARE\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Primary   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Accent   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Warn   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Background   status-bar    app-bar    background    hover    card    dialog    disabled-button    warning    raised-button    focused-button    selected-button    selected-disabled-button    disabled-button-toggle    unselected-chip    disabled-list-option Foreground   base    divider    dividers    disabled    disabled-button    disabled-text    hint-text    secondary-text    icon    icons    text    slider-min    slider-off    slider-off-active Material ToggleDefault Primary Accent WarnBasic Buttons  Basic  Primary  Accent  Warn  Disabled  LinkRaised Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFlat Buttons  Basic  Primary  Accent  Warn  Disabled  LinkIcon Buttons      favorite        favorite        favorite        favorite        favorite  Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkMini Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    Link          Shiba Inu    Dog Breed                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally      bred for hunting.            LIKE    SHARE  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialSandboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                overview-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.scss']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n      \n         ANTENNAS \n          \n        \n          \n        \n      \n      \n         WEATHER \n          \n        \n          \n        \n      \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 IAS HEALTH                                                          ANTENNAS                                                          WEATHER                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n  Modules\n  OverviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                OverviewCardComponent\n                            \n                            \n                                OverviewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    OverviewCardComponent\n                            \n                            \n                                    OverviewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { AntennasModule } from '../antennas/antennas.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    AntennasModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanActionOutlet\n                            \n                            \n                                goToAcknowledge\n                            \n                            \n                                goToAntennas\n                            \n                            \n                                goToLogin\n                            \n                            \n                                goToShelve\n                            \n                            \n                                goToWeather\n                            \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-routing/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cleanActionOutlet\n                            \n                            \n                        \n                    \n                \n                \n                    \ncleanActionOutlet()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Go to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Go to login and clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToWeather()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Go to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TabularViewComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TabularViewComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TabularViewComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TabularViewComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n  /**\n  * Go to the Antennas View\n  */\n  goToAntennas() {\n    this.router.navigate(['antennas']);\n  }\n\n  /**\n  * Go to the Weather View\n  */\n  goToWeather() {\n    this.router.navigate(['weather']);\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  goToAcknowledge(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['acknowledge', alarm_id]}}]);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  goToShelve(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['shelve', alarm_id]}}]);\n  }\n\n  /**\n  * Clean action outlet\n  */\n  cleanActionOutlet() {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n  * Go to login and clean action outlet\n  */\n  goToLogin() {\n    this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AlarmComponent\n                            \n                            \n                                    AlarmHeaderComponent\n                            \n                            \n                                    StatusViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { AlarmHeaderComponent } from './alarm-header/alarm-header.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  exports: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  entryComponents: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Handle click on shelve button, it triggers the shelve sidebar\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:29\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n\n  /**\n   * Instantiates the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose;\n  }\n\n  /**\n  * Handle click on shelve button, it triggers the shelve sidebar\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.sidenavService.goToShelve(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidenavService.html":{"url":"injectables/SidenavService.html","title":"injectable - SidenavService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SidenavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sidenav.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canClose\n                            \n                            \n                                lastAlarmId\n                            \n                            \n                                    Public\n                                shouldReload\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAndClean\n                            \n                            \n                                    Public\n                                goToAcknowledge\n                            \n                            \n                                    Public\n                                goToShelve\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setSidenav\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routingService: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routingService\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeAndClean\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAndClean()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav and cleans the actions outlet\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Opens the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSidenav(sidenav: MatSidenav)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Sets the reference to the sidenav\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenav\n                                                        \n                                                                    MatSidenav\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Reference to the sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Toggles the sidenav (open/close)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canClose:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:36\n                            \n                        \n\n                \n                    \n                        Defines wether or not the sidenav can be closed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                        Id of the last Alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldReload:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:18\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe status of the service connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the sidenav \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs';\nimport { RoutingService } from '../app-routing/routing.service';\n\n/**\n* Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public shouldReload = new BehaviorSubject(false);\n\n  /**\n  * Id of the last {@link Alarm}\n  */\n  lastAlarmId = '';\n\n  /**\n   * Builds an instance of the service\n   */\n  constructor(\n    private routingService: RoutingService\n  ) { }\n\n  /** Reference to the sidenav */\n  private sidenav: MatSidenav;\n\n  /** Defines wether or not the sidenav can be closed */\n  public canClose = true;\n\n  /**\n  * Sets the reference to the sidenav\n  * @param {MatSidenav} sidenav Reference to the sidenav\n  */\n  public setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n  }\n\n  /**\n  * Opens the sidenav\n  */\n  public open() {\n    return this.sidenav.open();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  public close() {\n    return this.sidenav.close();\n  }\n\n  /**\n  * Closes the sidenav and cleans the actions outlet\n  */\n  public closeAndClean() {\n    this.routingService.cleanActionOutlet();\n    return this.close();\n  }\n\n  /**\n  * Toggles the sidenav (open/close)\n  */\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  public goToAcknowledge(alarm_id: string) {\n    this.routingService.goToAcknowledge(alarm_id);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  public goToShelve(alarm_id: string) {\n    if (alarm_id === this.lastAlarmId) {\n      this.shouldReload.next(true);\n    } else {\n      this.lastAlarmId = alarm_id;\n    }\n    this.routingService.goToShelve(alarm_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsPrioritySet\n                            \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the alarmTags\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsPrioritySet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsPrioritySet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Set of alarm priority icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, OperationalMode } from '../../data/alarm';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { Assets } from '../../settings';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /** Dash-separated string with the tags that define the state of an alarm */\n  @Input() value = '';\n\n  /** List of tags that define the state of an alarm */\n  private alarmTags = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Set of alarm priority icons */\n  public alarmIconsPrioritySet: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid.svg',\n      set_critical: Assets.ICONS + 'set-valid.svg',\n      unknown: Assets.ICONS + 'unknown-valid.svg',\n      maintenance: Assets.ICONS + 'maintenance-valid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid.svg',\n      set_critical: Assets.ICONS + 'set-invalid.svg',\n      unknown: Assets.ICONS + 'unknown-invalid.svg',\n      maintenance: Assets.ICONS + 'maintenance-invalid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for priorities */\n    this.alarmIconsPrioritySet = new AlarmImageSet({\n      clear: Assets.ICONS + 'priority-0.svg',\n      set_low: Assets.ICONS + 'priority-1.svg',\n      set_medium: Assets.ICONS + 'priority-2.svg',\n      set_high: Assets.ICONS + 'priority-3.svg',\n      set_critical: Assets.ICONS + 'priority-4.svg',\n      unknown: Assets.ICONS + 'priority-0.svg',\n      maintenance: Assets.ICONS + 'priority-0.svg',\n      shelved: Assets.ICONS + 'priority-0.svg',\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n  Modules\n  TabularModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Table view\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LegendComponent\n                            \n                            \n                                TabularViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TabularViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { StatusViewComponent } from '../shared/status-view/status-view.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ActionsModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TabularViewComponent,\n  ],\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutOption.html":{"url":"interfaces/TimeoutOption.html","title":"interface - TimeoutOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeoutOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/shelve/shelve.component.ts\n        \n\n            \n                Description\n            \n            \n                Definition of a timeout option for shelving an alarm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual value to be sent to the server \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to be displayed to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { UserService } from '../../data/user.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '00:15:00', viewValue: '15 minutes'},\n    {value: '00:30:00', viewValue: '30 minutes'},\n    {value: '01:00:00', viewValue: '1 hour'},\n    {value: '02:00:00', viewValue: '2 hours'},\n    {value: '06:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * FormControl for the user who performs the action\n  */\n  user: FormControl;\n\n  /**\n   * Selected user\n   */\n  user_selected: string;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n  * Stores the error message returned by the Webserver if a shelve or unshelve request fails\n  */\n  errorMessage = '';\n\n  /**\n  * Stores the message with the information of when the alarm has been shelved and for how long\n  */\n  shelvedAtMessage = '';\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {NgxSpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {UserService} userService Service to handle request to the users api\n   * @param {AuthService} authService Service to ask for the logged in user\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private userService: UserService,\n    public authService: AuthService\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.user = new FormControl('', [Validators.required]);\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.shelvedAtMessage = '';\n    this.form = this.formBuilder.group({\n      user: this.user,\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.shouldReload.subscribe(\n      value => {\n        if (value === true) {\n          this.reload();\n        }\n      }\n    );\n    this.sidenavService.open();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    const allowedShelve = this.authService.getAllowedActions()['can_shelve'];\n    const allowedUnshelve = this.authService.getAllowedActions()['can_unshelve'];\n    const isAllowed = allowedShelve && allowedUnshelve;\n    return (this.alarm.shelved || this.form.valid) && isAllowed;\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    let action;\n    if (!this.alarm.shelved) {\n      action = 'Shelving';\n    } else {\n      action = 'Unshelving';\n    }\n    if (this.requestStatus === 1) {\n      return action + ' results';\n    } else if (this.requestStatus === -1 ) {\n      return 'Error ' + action;\n    } else if (this.requestStatus === -2) {\n      return 'Action not allowed';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        response = 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        response = 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    } else if (this.requestStatus === -2 ) {\n      response = 'The logged in user (' + this.authService.getUser();\n      if (!this.alarm.shelved) {\n        response += ') does not have permissions to perform the shelve.';\n      } else {\n        response += ') does not have permissions to perform the unshelve.';\n      }\n    }\n    return response;\n  }\n\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.shelvedAtMessage = '';\n    this.alarm = this.alarmService.get(this.alarm_id);\n    if (this.alarm.shelved) {\n      this.requestShelveInfo();\n    }\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Requests the alarm shelving info to the Webserver\n   */\n  requestShelveInfo(): void {\n    this.alarmService.getShelveRegistries(this.alarm_id, 1).subscribe(\n        (response) => {\n          const registry = response[0];\n          this.shelvedAtMessage = 'This Alarm was shelved at ' + registry['shelved_at'] +\n          ' with a duration of ' + this.timeouts.find(t => t.value === registry['timeout']).viewValue;\n        },\n        (error) => {\n          console.log('Error: ', error);\n          return error;\n        }\n      );\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(\n        this.alarm.core_id, message, timeout, this.user_selected\n      ).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error) => {\n            if (error.status === 403) {\n              this.requestStatus = -2;\n            } else {\n              this.requestStatus = -1;\n            }\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Class that models a User\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Optional email \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique username \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {User[]} the list of users\n  */\n  requestUsersList() {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to manage information about user accounts\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestUsersList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestUsersList\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequestUsersList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/user.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Get the list of users in the operators group\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the list of users\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                        List of authorized users\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {User[]} the list of users\n  */\n  requestUsersList() {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherBackupWsMarkerComponent.html":{"url":"components/WeatherBackupWsMarkerComponent.html","title":"component - WeatherBackupWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherBackupWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display backups weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-backup-ws-marker\n            \n\n            \n                styleUrls\n                weather-backup-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-backup-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm corresponding to the weather station\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display backups weather station in a map\n */\n@Component({\n  selector: 'app-weather-backup-ws-marker',\n  templateUrl: './weather-backup-ws-marker.component.html',\n  styleUrls: ['./weather-backup-ws-marker.component.scss']\n})\nexport class WeatherBackupWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the {@link Alarm} corresponding to the weather station\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherBackupWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather/weather.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms both in a sidebar (instantiated in a WeatherSidebar),\nand a map (instantiated by a WeatherMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelectedStation(selectedStation: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedStation\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStation:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { WeatherStationConfig } from '../weather.service';\n\n/**\n* Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\n* and a map (instantiated by a {@link WeatherMap})\n*/\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedStation: WeatherStationConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor(\n  ) { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {WeatherStationConfig}\n   */\n  changeSelectedStation(selectedStation: WeatherStationConfig): void {\n    this.selectedStation = selectedStation;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherDataMarkerComponent.html":{"url":"components/WeatherDataMarkerComponent.html","title":"component - WeatherDataMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherDataMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display the weather station summary information in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-data-marker\n            \n\n            \n                styleUrls\n                weather-data-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-data-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Variable to manage if the marker should be highlighted from hover\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Variable to manage if the marker should be highlighted\nfor example after the selection from a parent component\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:36\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\n\n\n/**\n * Marker to display the weather station summary information in a map\n */\n@Component({\n  selector: 'app-weather-data-marker',\n  templateUrl: './weather-data-marker.component.html',\n  styleUrls: ['./weather-data-marker.component.scss']\n})\nexport class WeatherDataMarkerComponent implements OnInit {\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Variable to manage if the marker should be highlighted\n  * for example after the selection from a parent component\n  */\n  @Input() selected = false;\n\n  /** Variable to manage if the marker should be highlighted from hover\n  */\n  @Input() onHover = false;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() { }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherDataMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Weather system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeatherBackupWsMarkerComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WeatherDataMarkerComponent\n                            \n                            \n                                WeatherMapComponent\n                            \n                            \n                                WeatherPrimaryWsConnectorComponent\n                            \n                            \n                                WeatherPrimaryWsMarkerComponent\n                            \n                            \n                                WeatherSidebarComponent\n                            \n                            \n                                WeatherStationSidebarComponent\n                            \n                            \n                                WeatherSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WeatherSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\nimport { WeatherMapComponent } from './weather-map/weather-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherSidebarComponent } from './weather-sidebar/weather-sidebar.component';\nimport { WeatherService } from './weather.service';\nimport { WeatherStationSidebarComponent } from './weather-station-sidebar/weather-station-sidebar.component';\n\nimport {\n  WeatherBackupWsMarkerComponent\n} from './weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component';\nimport {\n  WeatherPrimaryWsMarkerComponent\n} from './weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component';\nimport {\n  WeatherPrimaryWsConnectorComponent\n} from './weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component';\nimport {\n  WeatherDataMarkerComponent\n} from './weather-map-markers/weather-data-marker/weather-data-marker.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    ActionsModule,\n    DataModule,\n    SharedModule,\n    MapModule,\n    IasMaterialModule,\n  ],\n  providers: [\n    WeatherService\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n    WeatherMapComponent,\n    WeatherComponent,\n    WeatherSidebarComponent,\n    WeatherStationSidebarComponent,\n    WeatherBackupWsMarkerComponent,\n    WeatherDataMarkerComponent,\n    WeatherPrimaryWsMarkerComponent,\n    WeatherPrimaryWsConnectorComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsConnectorComponent.html":{"url":"components/WeatherPrimaryWsConnectorComponent.html","title":"component - WeatherPrimaryWsConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n\n\n    \n        Description\n    \n    \n        Line connector between the weather station marker and the summarized weather\ninformation marker in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-connector\n            \n\n            \n                styleUrls\n                weather-primary-ws-connector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-connector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPath\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                coords\n                            \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        coords\n                    \n                    \n                        Array of coordinates for the connector path \n\n                            \n                            Type :    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Value to highlight the connector for hover related events \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Value to highlight the connector \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns the svg path used to draw the line in the map\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    svg path that represent the line\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n\n/**\n * Line connector between the weather station marker and the summarized weather\n * information marker in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-connector',\n  templateUrl: './weather-primary-ws-connector.component.html',\n  styleUrls: ['./weather-primary-ws-connector.component.scss']\n})\nexport class WeatherPrimaryWsConnectorComponent implements OnInit {\n\n  /** Array of coordinates for the connector path */\n  @Input() coords: [[0, 0]];\n\n  /** Value to highlight the connector */\n  @Input() selected: false;\n\n  /** Value to highlight the connector for hover related events */\n  @Input() onHover: false;\n\n  /**\n  * Builds an instance of the component */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the svg path used to draw the line in the map\n   * @returns {string} svg path that represent the line\n   */\n  getPath(): string {\n    let pathString = '';\n    let counter = 0;\n    for (const coord of this.coords) {\n      if (counter > 0) {\n        pathString += 'L ' + coord[0] + ' ' + coord[1] + ' ';\n      } else {\n        pathString += 'M ' + coord[0] + ' ' + coord[1] + ' ';\n      }\n      counter += 1;\n    }\n    return pathString;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsMarkerComponent.html":{"url":"components/WeatherPrimaryWsMarkerComponent.html","title":"component - WeatherPrimaryWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display primary weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-marker\n            \n\n            \n                styleUrls\n                weather-primary-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display primary weather station in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-marker',\n  templateUrl: './weather-primary-ws-marker.component.html',\n  styleUrls: ['./weather-primary-ws-marker.component.scss']\n})\nexport class WeatherPrimaryWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the WeatherModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                markerImageSet\n                            \n                            \n                                    Public\n                                markerImageUnreliableSet\n                            \n                            \n                                    Public\n                                padsStatus\n                            \n                            \n                                    Public\n                                padsStatusAvailable\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                weatherMapName\n                            \n                            \n                                    Public\n                                weatherStationsConfig\n                            \n                            \n                                    Public\n                                weatherSummaryConfig\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                getPadsStatus\n                            \n                            \n                                initialize\n                            \n                            \n                                loadImages\n                            \n                            \n                                loadPadsStatus\n                            \n                            \n                                loadWeatherStationsConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:89\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:115\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the group\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:158\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Loads the pads status in the related variable of this service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the group\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWeatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWeatherStationsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:146\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:89\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:50\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:62\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:59\n                            \n                        \n\n                \n                    \n                        Set of Marker icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:71\n                            \n                        \n\n                \n                    \n                        Set of Marker Unreliable icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        padsStatus:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:83\n                            \n                        \n\n                \n                    \n                        Stores the response of the pads status request to the websver \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatusAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        padsStatusAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:86\n                            \n                        \n\n                \n                    \n                        Variable to check if pads status is available \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:53\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:65\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:80\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherStationsConfig:     WeatherStationConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:77\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm Ids of the Weather Stations, indexed by placemark *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherSummaryConfig:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:74\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the weather summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:56\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:68\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** Group of placemarks who the alarm belongs */\n  public group: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Stores the response of the pads status request to the websver */\n  public padsStatus = null;\n\n  /** Variable to check if pads status is available */\n  public padsStatusAvailable = new BehaviorSubject(false);\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this.loadPadsStatus('');\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n  * @param {string} group the group\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getPadsStatus(group: string): Observable {\n    const url = BackendUrls.PADS_STATUS + group;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Loads the pads status in the related variable of this service\n  * @param {string} group the group\n  */\n  loadPadsStatus(group: string) {\n    this.getPadsStatus(group).subscribe(\n      (response) => {\n        this.padsStatusAvailable.next(false);\n        this.padsStatus = response;\n        this.padsStatusAvailable.next(true);\n    });\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSidebarComponent.html":{"url":"components/WeatherSidebarComponent.html","title":"component - WeatherSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms in an interactive sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-sidebar\n            \n\n            \n                styleUrls\n                weather-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyAntennas\n                            \n                            \n                                getAlarm\n                            \n                            \n                                getAntennas\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                panelClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, clipboardService: ClipboardService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        clipboardService\n                                                  \n                                                        \n                                                                    ClipboardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to copy text to clipboard\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to notify user actions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        panelClicked\n                    \n                    \n                        Event emitted to notify when an weather station is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyAntennas(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Copy list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the data was copied to the clipboard, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Indicates if the weather station is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Action performed when the weather station is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string, action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Triggers the snackBar during 20 seconds and show the information specified\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the snackbar\n\n                                                        \n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the button of the snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to notify user actions\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:34\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n* Component used to display Weather Alarms in an interactive sidebar\n*/\n@Component({\n  selector: 'app-weather-sidebar',\n  templateUrl: './weather-sidebar.component.html',\n  styleUrls: ['./weather-sidebar.component.scss']\n})\nexport class WeatherSidebarComponent implements OnInit {\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedStation: WeatherStationConfig = null;\n\n  /** Event emitted to notify when an weather station is selected */\n  @Output() panelClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {ClipboardService} clipboardService Service used to copy text to clipboard\n  * @param {MatSnackBar} snackBar Service used to notify user actions\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private clipboardService: ClipboardService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  * Initializes the {@link WeatherService} if not already initialized\n  */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n  * Copy list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {boolean} true if the data was copied to the clipboard, false if not\n  */\n  copyAntennas(stationConfig: WeatherStationConfig): boolean {\n    const antennas = this.getAntennas(stationConfig);\n    const result = antennas.join(',');\n    const status = this.clipboardService.copyFromContent(result);\n    let message = '';\n    if (status) {\n      message = 'Antennas copied to clipboard';\n    } else {\n      message = 'ERROR: Antennas were not copied!';\n    }\n    this.openSnackBar(message, 'Done');\n    return status;\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(stationConfig: WeatherStationConfig): string[] {\n    const response = [];\n    if ( this.weatherService.padsStatus && stationConfig.group !== '' ) {\n        const pads = this.weatherService.padsStatus[stationConfig.group];\n        for (const pad_name in pads) {\n            if (pads[pad_name]) {\n                response.push(pads[pad_name]);\n            }\n        }\n    }\n    return response.sort();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Indicates if the weather station is selected or not\n  * @param {WeatherStationConfig} stationConfig configuration of the weather station\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(stationConfig: WeatherStationConfig) {\n    return this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark);\n  }\n\n  /**\n  * Action performed when the weather station is clicked\n  * @param {WeatherStationConfig} stationConfig configuration of the clicked weather station\n  */\n  onClick(stationConfig: WeatherStationConfig) {\n    if ( this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark) ) {\n      this.selectedStation = null;\n    } else {\n      this.selectedStation = stationConfig;\n    }\n    this.panelClicked.emit(this.selectedStation);\n  }\n\n  /**\n   * Triggers the snackBar during 20 seconds and show the information specified\n   * @param {string} message Message to show in the snackbar\n   * @param {string} action Message to show in the button of the snackbar\n   */\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 20000,\n      panelClass: ['snackbar']\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    WEATHER STATIONS\n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n              Station -->\n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n          \n             Nearby Antennas \n            \n               &nbsp;  Copy antennas \n            \n          \n          \n            \n               {{antenna}} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      WEATHER STATIONS                                                                                          Stationearby Antennas                               Copy antennas                                                            {{antenna}}                                           '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherStationConfig.html":{"url":"classes/WeatherStationConfig.html","title":"class - WeatherStationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherStationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the Alarm objects associated to a WeatherStation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                humidity\n                            \n                            \n                                    Public\n                                placemark\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:31\n                            \n                        \n\n                \n                    \n                            Builds a new WeatherStationConfig instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:19\n                            \n                        \n\n                \n                    \n                        Group of placemarks who the alarm belongs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidity:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:31\n                            \n                        \n\n                \n                    \n                        ID of the humidity Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:16\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:22\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        temperature:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the temperature Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windspeed:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:28\n                            \n                        \n\n                \n                    \n                        ID of the windspeed Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** Group of placemarks who the alarm belongs */\n  public group: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Stores the response of the pads status request to the websver */\n  public padsStatus = null;\n\n  /** Variable to check if pads status is available */\n  public padsStatusAvailable = new BehaviorSubject(false);\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this.loadPadsStatus('');\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n  * @param {string} group the group\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getPadsStatus(group: string): Observable {\n    const url = BackendUrls.PADS_STATUS + group;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Loads the pads status in the related variable of this service\n  * @param {string} group the group\n  */\n  loadPadsStatus(group: string) {\n    this.getPadsStatus(group).subscribe(\n      (response) => {\n        this.padsStatusAvailable.next(false);\n        this.padsStatus = response;\n        this.padsStatusAvailable.next(true);\n    });\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherStationSidebarComponent.html":{"url":"components/WeatherStationSidebarComponent.html","title":"component - WeatherStationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherStationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display an item containing a weather station summary in the interactive Sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-station-sidebar\n            \n\n            \n                styleUrls\n                weather-station-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-station-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAlarm\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAlarm\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Weather station config object \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Returns the corresponding highlighted class when the component is selected\n\n\n                            \n                            \n                            \n                                Returns :     \"\" | \"highlighted\"\n\n                            \n                                \n                                    the highlighted class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Component to display an item containing a weather station summary in the interactive Sidebar\n */\n@Component({\n  selector: 'app-weather-station-sidebar',\n  templateUrl: './weather-station-sidebar.component.html',\n  styleUrls: ['./weather-station-sidebar.component.scss']\n})\nexport class WeatherStationSidebarComponent implements OnInit {\n\n  /** Weather station config object */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedAlarm: WeatherStationConfig = null;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  */\n  ngOnInit() { }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Returns the corresponding highlighted class when the component is selected\n  * @returns {string} the highlighted class\n  */\n  getClass() {\n    if (this.selectedAlarm && (this.selectedAlarm.station === this.stationConfig.station)) {\n      return 'highlighted';\n    }\n    return '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherStationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                weather-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, weatherService: WeatherService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle weather configuration data\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(keyword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the instance of the Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, initializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle weather configuration data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.scss']\n})\nexport class WeatherSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {WeatherService} weatherService Service used to retrieve and handle weather configuration data\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public weatherService: WeatherService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Initiates the component, initializes the {@link WeatherService} if not already initialized\n   */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(keyword: string): Alarm {\n    if (this.weatherService.weatherSummaryConfig) {\n      return this.alarmService.get(this.weatherService.weatherSummaryConfig[keyword]);\n    }\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Weather View\n   */\n  redirect() {\n    this.routing.goToWeather();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              WIND SPEED\n              \n                \n              \n          \n      \n      \n          \n              HUMIDITY\n              \n                \n              \n          \n      \n      \n          \n              TEMPERATURE\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    WIND SPEED                                                                                          HUMIDITY                                                                                          TEMPERATURE                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Handle click on wiki button, it opens the url in another window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  /**\n  * Handle click on wiki button, it opens the url in another window\n  */\n  onClick(event) {\n    if (!this.url.startsWith('http://')) {\n      this.url = 'http://' + this.url;\n    }\n    window.open(this.url, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/actions/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedTreeData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarmData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack/ack.component.ts\n            \n            \n                component\n            \n            \n                AckComponent\n            \n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/actions/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                component\n            \n            \n                ShelveComponent\n            \n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                interface\n            \n            \n                TimeoutOption\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/sidenav.service.ts\n            \n            \n                injectable\n            \n            \n                SidenavService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/actions/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                component\n            \n            \n                AntennaMarkerComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map/antennas-map.component.ts\n            \n            \n                component\n            \n            \n                AntennasMapComponent\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n            \n            \n                component\n            \n            \n                AntennasSidebarComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-summary/antennas-summary.component.ts\n            \n            \n                component\n            \n            \n                AntennasSummaryComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas.service.ts\n            \n            \n                class\n            \n            \n                AntennaConfig\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas.service.ts\n            \n            \n                injectable\n            \n            \n                AntennasService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas/antennas.component.ts\n            \n            \n                component\n            \n            \n                AntennasComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/app-routing/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                class\n            \n            \n                AlarmSounds\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                src/app/data/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/data/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/health/health-summary/health-summary.component.ts\n            \n            \n                component\n            \n            \n                HealthSummaryComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/map/fixtures.ts\n            \n            \n                variable\n            \n            \n                Map\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/map/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.component.ts\n            \n            \n                component\n            \n            \n                MaterialSandboxComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/overview/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/overview/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                AntennasSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                WeatherSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/alarm-header.component.ts\n            \n            \n                component\n            \n            \n                AlarmHeaderComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/tabular/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                alarms_date\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                datepipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                alarm_types\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherStationsConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherBackupWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherDataMarkerComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsConnectorComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map/weather-map.component.ts\n            \n            \n                component\n            \n            \n                WeatherMapComponent\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                src/app/weather/weather-sidebar/weather-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherSidebarComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherStationSidebarComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/weather/weather-summary/weather-summary.component.ts\n            \n            \n                component\n            \n            \n                WeatherSummaryComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather.service.ts\n            \n            \n                class\n            \n            \n                WeatherStationConfig\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/weather/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.docker.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.2\n        \n            @angular/cdk : ^6.4.3\n        \n            @angular/common : 6.1.2\n        \n            @angular/compiler : 6.1.2\n        \n            @angular/core : 6.1.2\n        \n            @angular/flex-layout : ^6.0.0-beta.17\n        \n            @angular/forms : 6.1.2\n        \n            @angular/http : 6.1.2\n        \n            @angular/material : ^6.4.3\n        \n            @angular/platform-browser : 6.1.2\n        \n            @angular/platform-browser-dynamic : 6.1.2\n        \n            @angular/platform-server : 6.1.2\n        \n            @angular/router : 6.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^2.1.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.7\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.22.2\n        \n            ngx-clipboard : ^11.1.3\n        \n            ngx-spinner : ^6.1.2\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 malfunctioning\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AntennasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    33 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
