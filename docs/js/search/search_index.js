var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.168,1,0.576]],["body/components/AckButtonComponent.html",[0,0.342,1,0.953,2,0.104,3,0.078,4,0.617,5,0.639,6,1.018,7,0.595,8,0.066,9,5.774,10,6.27,11,2.841,12,0.316,13,1.265,14,0.626,15,4.037,16,2.462,17,3.447,18,3.363,19,4.734,20,0.74,21,0.882,22,2.947,23,5.437,24,0.639,25,1.224,26,1.093,27,1.114,28,0.768,29,4.916,30,0.768,31,4.281,32,0.351,33,0.826,34,6.726,35,1.091,36,4.369,37,0.924,38,6.726,39,5.31,40,5.872,41,2.936,42,0.953,43,4.89,44,1.532,45,0.827,46,0.712,47,3.411,48,6.778,49,6.778,50,0.636,51,5.422,52,0.533,53,0.886,54,0.826,55,0.013,56,0.576,57,0.785,58,0.768,59,1.949,60,3.217,61,0.817,62,4.241,63,3.254,64,5.31,65,5.872,66,2.801,67,1.393,68,1.836,69,3.411,70,3.411,71,2.038,72,5.422,73,0.647,74,2.028,75,1.67,76,3.907,77,3.447,78,2.621,79,1.487,80,3.411,81,1.016,82,1.992,83,4.281,84,3.254,85,3.447,86,4.281,87,4.734,88,4.734,89,1.024,90,2.801,91,3.49,92,3.411,93,2.201,94,2.588,95,0.826,96,3.411,97,3.907,98,3.942,99,3.672,100,3.672,101,0.732,102,0.617,103,2.276,104,2.678,105,2.936,106,3.411,107,0.223,108,0.116,109,3.411,110,2.841,111,0.708,112,0.091,113,0.006,114,0.953,115,1.554,116,2.484,117,2.484,118,2.484,119,5.422,120,3.907,121,0.836,122,3.411,123,3.411,124,3.411,125,0.95,126,2.115,127,1.236,128,2.646,129,0.757,130,2.646,131,3.085,132,3.907,133,1.469,134,2.276,135,2.935,136,1.409,137,1.705,138,2.484,139,1.672,140,1.12,141,1.705,142,2.646,143,1.369,144,1.422,145,1.469,146,4.281,147,2.113,148,1.12,149,3.907,150,2.018,151,2.223,152,1.705,153,1.849,154,2.646,155,0.351,156,0.856,157,0.856,158,0.826,159,1.1,160,0.639,161,0.886,162,0.553,163,0.639,164,0.533,165,0.639,166,0.533,167,0.639,168,0.553,169,1.1,170,0.533,171,0.886,172,0.553,173,0.639,174,0.553,175,0.639,176,0.553,177,0.886,178,0.553,179,0.886,180,0.553,181,0.639,182,0.553,183,0.953,184,1.1,185,0.533,186,0.639,187,0.574,188,1.018,189,0.553,190,1.018,191,0.553,192,1.1,193,0.553,194,0.639,195,0.553,196,0.553,197,0.639,198,0.553,199,0.617,200,0.553,201,0.639,202,0.533,203,0.639,204,0.553,205,0.553,206,0.928,207,1.018,208,0.553,209,0.639,210,0.553,211,0.553,212,0.639,213,0.553,214,0.553,215,0.553,216,0.553,217,0.533,218,0.639,219,0.553,220,0.617,221,0.886,222,0.553,223,1.062,224,0.553,225,0.553,226,0.553,227,0.553,228,0.533,229,0.639,230,0.553,231,0.513,232,0.886,233,0.553,234,0.533,235,0.595,236,0.553,237,1.083,238,0.595,239,0.915,240,0.533,241,0.639,242,0.553,243,0.438,244,0.574,245,0.553,246,0.768,247,0.639,248,0.553,249,0.574,250,0.553,251,0.574,252,0.553,253,0.553,254,0.617,255,0.639,256,0.008,257,0.008]],["title/modules/ActionsModule.html",[258,0.899,259,2.313]],["body/modules/ActionsModule.html",[1,1.193,2,0.145,3,0.109,8,0.092,10,4.32,27,0.923,36,4.347,55,0.013,61,0.665,107,0.283,108,0.163,110,3.978,112,0.178,113,0.008,155,0.492,162,1.193,164,1.095,196,1.193,227,1.193,228,1.149,253,1.193,254,0.864,256,0.01,257,0.01,258,1.495,259,4.944,260,1.096,261,2.968,262,2.212,263,2.76,264,4.777,265,4.777,266,4.777,267,4.777,268,4.777,269,3.8,270,3.246,271,3.646,272,2.84,273,2.212,274,2.057,275,5.472,276,2.84,277,3.072,278,2.297,279,5.472,280,5.472,281,7.342,282,4.32,283,4.32,284,3.978,285,5.472,286,5.34,287,4.918,288,3.284,289,4.918,290,3.114,291,3.114,292,1.291,293,2.485,294,2.59,295,3.114,296,2.963,297,5.472]],["title/components/AlarmBlinkComponent.html",[0,0.168,166,0.555]],["body/components/AlarmBlinkComponent.html",[0,0.336,1,0.551,2,0.103,3,0.078,4,0.614,5,0.636,6,0.636,7,0.593,8,0.065,12,0.34,13,0.824,14,0.463,16,2.823,20,0.738,21,0.88,22,2.941,24,0.636,25,1.224,26,1.093,27,0.738,28,0.766,30,0.766,32,0.35,33,0.824,35,1.359,37,1.012,41,2.929,42,0.951,44,1.501,45,0.838,46,0.817,50,0.62,52,0.532,53,0.884,54,0.947,55,0.013,56,0.605,57,0.875,58,0.88,60,2.794,61,0.473,67,1.391,68,1.831,73,0.653,79,1.196,81,1.014,82,1.602,84,4.384,89,1.163,90,2.794,91,3.486,93,1.77,94,2.473,95,0.824,101,1.014,102,1.06,107,0.206,108,0.116,111,0.706,112,0.09,113,0.006,114,0.88,121,1.33,126,2.108,129,1.452,155,0.35,156,0.854,157,0.854,158,0.824,159,1.098,160,0.636,161,0.884,162,0.551,163,0.636,164,0.531,165,0.636,166,0.916,167,0.636,168,0.551,169,1.098,170,0.531,171,0.884,172,0.551,173,0.636,174,0.551,175,0.636,176,0.551,177,0.884,178,0.551,179,0.884,180,0.551,181,0.636,182,0.551,183,0.951,184,1.098,185,0.531,186,0.636,187,0.572,188,1.016,189,0.551,190,1.016,191,0.551,192,1.098,193,0.551,194,0.636,195,0.551,196,0.551,197,0.636,198,0.551,199,0.614,200,0.551,201,0.636,202,0.531,203,0.636,204,0.551,205,0.551,206,0.927,207,1.016,208,0.551,209,0.636,210,0.551,211,0.551,212,0.636,213,0.551,214,0.551,215,0.551,216,0.551,217,0.531,218,0.636,219,0.551,220,0.614,221,0.884,222,0.551,223,1.06,224,0.551,225,0.551,226,0.551,227,0.551,228,0.531,229,0.636,230,0.551,231,0.512,232,0.884,233,0.551,234,0.531,235,0.593,236,0.551,237,1.082,238,0.593,239,0.913,240,0.531,241,0.636,242,0.551,243,0.436,244,0.572,245,0.551,246,0.766,247,0.636,248,0.551,249,0.572,250,0.551,251,0.572,252,0.551,253,0.551,254,0.614,255,0.636,256,0.008,257,0.008,298,4.59,299,6.367,300,3.399,301,4.805,302,4.714,303,2.823,304,6.215,305,5.409,306,6.716,307,6.716,308,5.409,309,6.716,310,5.409,311,6.716,312,3.951,313,3.822,314,4.519,315,5.409,316,1.391,317,3.893,318,2.794,319,5.409,320,3.893,321,2.672,322,3.439,323,4.384,324,3.211,325,3.893,326,5.409,327,3.061,328,3.893,329,5.302,330,6.669,331,6.031,332,6.716,333,5.409,334,3.951,335,3.893,336,4.722,337,3.893,338,3.893,339,5.409,340,3.893,341,5.409,342,3.893,343,3.663,344,3.078,345,1.962,346,3.893,347,5.409,348,3.933,349,5.409,350,5.409,351,3.399,352,1.699,353,2.637,354,2.108,355,5.409,356,3.399,357,5.409,358,3.893,359,6.215,360,6.215,361,5.409,362,6.716,363,5.409,364,1.413,365,1.276,366,5.409,367,6.215,368,5.409,369,2.337,370,3.893,371,5.409,372,3.893,373,3.893,374,3.893,375,3.893,376,3.893]],["title/components/AlarmCardComponent.html",[0,0.168,168,0.576]],["body/components/AlarmCardComponent.html",[0,0.335,1,0.43,2,0.08,3,0.061,4,0.479,5,0.739,6,0.496,7,0.462,8,0.051,12,0.303,13,0.689,14,0.637,18,1.898,20,0.617,21,0.765,22,2.557,24,0.496,25,1.21,26,1.08,27,0.873,28,0.64,30,0.64,32,0.273,33,0.689,35,0.946,37,0.848,41,2.448,42,0.848,44,1.573,45,0.846,46,0.594,50,0.65,52,0.463,53,0.739,54,0.975,55,0.013,56,0.703,57,0.812,58,0.907,61,0.728,67,1.24,68,1.531,73,0.629,74,1.862,75,1.744,78,1.762,79,1.688,81,1.258,82,1.339,89,0.823,90,2.336,91,3.162,93,1.48,94,2.516,95,1.022,101,1.482,102,1.256,103,2.818,107,0.15,108,0.091,111,0.55,112,0.071,113,0.011,114,0.765,115,0.87,116,1.93,117,1.93,118,1.93,121,0.65,125,1.121,126,3.634,127,2.261,128,3.062,129,1.16,130,3.062,133,1.51,134,1.275,135,1.973,136,1.175,137,2.358,138,2.874,139,1.451,140,1.549,141,1.325,143,1.584,144,1.367,145,1.141,147,2.615,148,1.835,153,1.437,155,0.273,156,0.945,157,0.714,158,0.912,159,0.979,160,0.496,161,0.739,162,0.43,163,0.496,164,0.414,165,0.496,166,0.817,167,0.496,168,0.848,169,0.979,170,0.414,171,0.739,172,0.43,173,0.496,174,0.43,175,0.496,176,0.43,177,0.739,178,0.43,179,0.739,180,0.43,181,0.496,182,0.43,183,0.848,184,0.979,185,0.414,186,0.496,187,0.446,188,0.883,189,0.43,190,0.883,191,0.43,192,0.979,193,0.43,194,0.496,195,0.43,196,0.43,197,0.496,198,0.43,199,0.479,200,0.43,201,0.496,202,0.414,203,0.496,204,0.43,205,0.43,206,0.841,207,0.883,208,0.43,209,0.496,210,0.43,211,0.43,212,0.496,213,0.43,214,0.43,215,0.43,216,0.43,217,0.414,218,0.496,219,0.43,220,0.479,221,0.739,222,0.43,223,0.945,224,0.43,225,0.43,226,0.43,227,0.43,228,0.414,229,0.496,230,0.43,231,0.71,232,0.739,233,0.43,234,0.414,235,0.462,236,0.43,237,1.012,238,0.462,239,0.794,240,0.414,241,0.496,242,0.43,243,0.34,244,0.446,245,0.43,246,0.64,247,0.496,248,0.43,249,0.446,250,0.43,251,0.446,252,0.43,253,0.43,254,0.479,255,0.496,256,0.009,257,0.007,260,0.906,298,4.555,301,4.583,302,2.714,312,3.435,316,0.936,318,2.336,321,2.234,324,2.336,344,3.075,345,1.64,348,3.288,353,2.056,354,3.241,369,3.243,377,6.319,378,2.397,379,1.341,380,3.453,381,1.71,382,3.948,383,4.717,384,3.948,385,5.764,386,5.227,387,3.806,388,4.353,389,4.353,390,3.288,391,4.726,392,4.054,393,5.054,394,5.054,395,3.435,396,3.243,397,2.207,398,4.335,399,4.522,400,3.659,401,3.062,402,2.651,403,1.762,404,1.654,405,4.054,406,3.57,407,3.036,408,3.036,409,4.353,410,1.973,411,3.036,412,1.64,413,4.724,414,3.806,415,2.874,416,2.874,417,3.036,418,2.573,419,3.036,420,3.062,421,3.036,422,2.14,423,1.898,424,2.448,425,3.036,426,2.448,427,1.584,428,3.57,429,3.288,430,1.173,431,3.036,432,2.714,433,1.762,434,3.036,435,3.036,436,3.062,437,3.036,438,3.288,439,3.57,440,3.948,441,3.036,442,2.234,443,3.036,444,2.999,445,3.036,446,1.728,447,2.651,448,2.651,449,2.651,450,3.288,451,4.353,452,3.288,453,4.717,454,2.651,455,3.948,456,3.948,457,2.207,458,4.717,459,2.207,460,6.667,461,4.353,462,1.829,463,3.928,464,1.93,465,1.93,466,1.93,467,2.14,468,4.07,469,1.822,470,1.93,471,3.928,472,1.93,473,1.93,474,3.243,475,1.93,476,1.93,477,2.651,478,4.717,479,2.397,480,2.651,481,3.57,482,2.397,483,1.325,484,1.101,485,2.522,486,2.615,487,3.57,488,3.036,489,3.036,490,1.028,491,1.661,492,1.48,493,1.768,494,1.728,495,2.056,496,1.644,497,1.822,498,1.379,499,2.207,500,1.728,501,3.036,502,3.036,503,2.207,504,2.397,505,2.42]],["title/components/AlarmComponent.html",[0,0.168,170,0.555]],["body/components/AlarmComponent.html",[0,0.345,1,0.35,2,0.065,3,0.049,4,0.39,5,0.404,6,0.404,7,0.376,8,0.042,12,0.273,13,0.588,14,0.663,16,2.16,18,1.622,20,0.527,21,0.674,22,2.251,24,0.404,25,1.195,26,1.066,27,0.882,28,0.547,30,0.547,32,0.222,33,0.588,35,1.256,37,0.601,41,2.091,42,0.762,44,1.551,45,0.845,46,0.507,50,0.647,52,0.461,53,0.778,54,0.889,55,0.013,56,0.589,57,0.851,58,0.827,61,0.813,66,2.779,67,1.386,68,1.821,71,1.452,73,0.666,74,2.021,75,1.741,78,1.505,79,1.67,81,1.16,82,1.144,84,2.318,89,0.724,90,1.276,91,2.35,93,0.808,94,2.189,95,1.201,101,1.429,102,1.276,103,2.81,107,0.128,108,0.074,111,0.448,112,0.09,113,0.011,114,0.674,115,1.853,116,1.57,117,1.57,118,1.57,121,0.528,125,1.084,126,3.16,127,2.118,128,1.673,129,1.333,130,1.673,133,1.579,134,2.258,135,1.686,136,1.74,137,3.071,139,1.797,140,1.363,143,0.865,144,1.637,145,1.452,147,3.038,148,2.219,150,1.276,153,2.929,155,0.222,156,0.849,157,0.977,158,0.943,159,0.879,160,0.404,161,0.631,162,0.35,163,0.404,164,0.337,165,0.404,166,0.734,167,0.404,168,0.35,169,0.879,170,0.734,171,0.631,172,0.35,173,0.404,174,0.35,175,0.404,176,0.35,177,0.631,178,0.35,179,0.631,180,0.35,181,0.404,182,0.35,183,0.762,184,0.879,185,0.337,186,0.404,187,0.363,188,0.778,189,0.35,190,0.778,191,0.35,192,0.879,193,0.35,194,0.404,195,0.35,196,0.35,197,0.404,198,0.35,199,0.39,200,0.35,201,0.404,202,0.337,203,0.404,204,0.35,205,0.35,206,0.767,207,0.778,208,0.35,209,0.404,210,0.35,211,0.35,212,0.404,213,0.35,214,0.35,215,0.35,216,0.35,217,0.337,218,0.404,219,0.35,220,0.39,221,0.631,222,0.35,223,0.849,224,0.35,225,0.35,226,0.35,227,0.35,228,0.337,229,0.404,230,0.35,231,0.942,232,0.631,233,0.35,234,0.337,235,0.376,236,0.35,237,0.948,238,0.376,239,0.699,240,0.337,241,0.404,242,0.35,243,0.277,244,0.363,245,0.35,246,0.547,247,0.404,248,0.35,249,0.363,250,0.35,251,0.363,252,0.35,253,0.35,254,0.39,255,0.404,256,0.006,257,0.006,260,0.774,301,4.486,302,2.318,312,3.024,313,3.061,314,3.458,316,1.114,318,1.995,321,2.657,322,2.455,323,2.318,324,3.015,345,1.951,353,1.673,354,2.912,364,1.401,365,1.269,369,3.228,379,1.321,381,2.519,387,3.419,388,3.911,389,3.911,390,2.808,395,3.024,396,2.855,397,1.796,398,3.953,400,3.221,401,2.616,404,2.261,405,1.673,412,1.401,413,5.038,414,3.419,415,2.455,416,2.455,418,2.198,420,2.616,422,1.828,423,1.622,424,2.091,430,1.238,432,2.318,436,3.643,442,3.306,444,2.81,446,1.405,450,1.796,451,3.458,452,2.808,457,1.796,459,1.796,462,1.308,464,2.455,465,2.455,466,2.455,468,4.473,469,2.318,470,2.455,472,2.455,473,2.455,474,1.482,475,2.455,476,2.455,484,0.896,491,1.857,492,2.025,493,0.808,497,2.318,498,2.443,499,2.808,500,1.405,503,1.796,504,1.95,506,1.95,507,2.808,508,1.452,509,3.458,510,4.153,511,3.372,512,4.696,513,4.696,514,4.696,515,4.5,516,4.696,517,4.696,518,4.696,519,4.696,520,3.75,521,3.755,522,2.35,523,2.35,524,3.862,525,2.47,526,2.47,527,2.245,528,2.47,529,2.47,530,3.262,531,2.47,532,2.47,533,2.47,534,3.039,535,2.47,536,2.47,537,2.47,538,2.47,539,2.47,540,3.049,541,2.47,542,2.417,543,2.47,544,1.144,545,2.47,546,2.095,547,2.47,548,2.47,549,3.372,550,2.47,551,1.409,552,1.754,553,2.47,554,4.696,555,4.247,556,2.47,557,2.47,558,3.228,559,1.828,560,2.47,561,2.47,562,3.911,563,3.911,564,3.911,565,2.47,566,3.372,567,1.57,568,1.169,569,1.562,570,1.562,571,1.562,572,1.562,573,1.452,574,1.505,575,3.458,576,1.57,577,1.405,578,1.796,579,1.796,580,1.95,581,2.156,582,2.156,583,2.156,584,2.156,585,1.95,586,3.372,587,2.156,588,3.372,589,3.372,590,2.156,591,2.156,592,2.156,593,2.156,594,2.156,595,2.156,596,2.156,597,2.156,598,2.156,599,2.156,600,4.153,601,4.153,602,4.153,603,2.156,604,2.156,605,2.156,606,2.156,607,4.696,608,1.95,609,1.95,610,1.95,611,1.078,612,5.096,613,2.156,614,6.884,615,3.862,616,2.47,617,2.47,618,2.47,619,3.372,620,2.258,621,2.598,622,4.696,623,3.862,624,3.862,625,1.182,626,2.808,627,4.153,628,2.198,629,1.122,630,4.153,631,1.95,632,2.156,633,3.372,634,2.47,635,2.156,636,1.95,637,2.47,638,0.999,639,2.318,640,2.16,641,3.049,642,6.449,643,3.862,644,2.47,645,4.696,646,3.862,647,2.47,648,3.862,649,2.47,650,3.862,651,2.47,652,3.862,653,2.47]],["title/classes/AlarmConfig.html",[113,0.006,654,1.706]],["body/classes/AlarmConfig.html",[2,0.143,3,0.108,8,0.091,12,0.34,14,0.575,32,0.486,33,1.022,35,1.507,45,0.845,46,0.71,50,0.64,52,0.575,53,1.097,54,0.823,55,0.013,56,0.686,57,0.989,58,0.765,67,1.657,68,2.585,73,0.547,85,4.267,95,1.022,101,1.013,102,0.853,112,0.126,113,0.01,114,0.765,125,1.422,256,0.01,257,0.01,316,1.39,379,1.327,427,2.676,430,1.352,544,1.988,559,3.176,575,5.709,576,4.267,577,3.82,578,4.88,579,3.929,654,3.206,655,7.268,656,4.718,657,2.926,658,2.269,659,4.854,660,5.819,661,6.667,662,3.493,663,5.171,664,3.579,665,4.545,666,6.712,667,5.404,668,5.404,669,5.404,670,5.299,671,6.712,672,4.88,673,6.712,674,6.712,675,5.404,676,2.676,677,5.404,678,5.86,679,5.404,680,5.404,681,5.404,682,4.718,683,6.712,684,4.718]],["title/components/AlarmHeaderComponent.html",[0,0.168,172,0.576]],["body/components/AlarmHeaderComponent.html",[0,0.336,1,0.441,2,0.082,3,0.062,4,0.491,5,1.107,6,0.509,7,0.474,8,0.052,12,0.307,13,0.701,14,0.64,18,1.933,20,0.628,21,0.776,22,2.594,24,0.509,25,1.211,26,1.081,27,0.882,28,0.652,30,0.652,32,0.28,33,0.701,35,0.96,37,0.856,41,2.493,42,0.858,44,1.58,45,0.843,46,0.605,50,0.652,52,0.47,53,0.753,54,0.985,55,0.013,56,0.704,57,0.818,58,0.916,61,0.736,67,1.255,68,1.559,73,0.632,74,1.878,75,1.753,78,1.794,79,1.697,81,1.269,82,1.364,89,0.835,90,2.379,91,3.195,93,1.507,94,2.531,95,1.067,101,1.488,102,1.261,103,2.843,107,0.153,108,0.093,111,0.564,112,0.072,113,0.011,114,0.776,115,0.892,116,1.978,117,1.978,118,1.978,121,0.666,125,1.133,126,3.667,127,2.277,128,3.118,129,1.174,130,3.118,133,1.086,134,1.306,135,2.392,136,1.575,137,1.358,139,1.236,140,2.173,141,1.358,144,1.546,145,2.431,147,2.136,148,1.854,155,0.28,156,0.956,157,0.727,158,0.923,159,0.99,160,0.509,161,0.753,162,0.441,163,0.509,164,0.424,165,0.509,166,0.827,167,0.509,168,0.441,169,0.99,170,0.424,171,0.753,172,0.858,173,0.509,174,0.441,175,0.509,176,0.441,177,0.753,178,0.441,179,0.753,180,0.441,181,0.509,182,0.441,183,0.858,184,0.99,185,0.424,186,0.509,187,0.457,188,0.896,189,0.441,190,0.896,191,0.441,192,0.99,193,0.441,194,0.509,195,0.441,196,0.441,197,0.509,198,0.441,199,0.491,200,0.441,201,0.509,202,0.424,203,0.509,204,0.441,205,0.441,206,0.85,207,0.896,208,0.441,209,0.509,210,0.441,211,0.441,212,0.509,213,0.441,214,0.441,215,0.441,216,0.441,217,0.424,218,0.509,219,0.441,220,0.491,221,0.753,222,0.441,223,0.956,224,0.441,225,0.441,226,0.441,227,0.441,228,0.424,229,0.509,230,0.441,231,0.72,232,0.753,233,0.441,234,0.424,235,0.474,236,0.441,237,1.019,238,0.474,239,0.805,240,0.424,241,0.509,242,0.441,243,0.349,244,0.457,245,0.441,246,0.652,247,0.509,248,0.441,249,0.457,250,0.441,251,0.457,252,0.441,253,0.441,254,0.491,255,0.509,256,0.01,257,0.007,260,0.923,298,4.571,301,4.606,302,2.763,312,3.485,316,0.953,318,2.379,321,2.275,324,2.379,345,1.671,348,3.348,353,2.107,354,3.281,379,1.348,385,5.801,386,5.29,387,3.852,388,4.405,389,4.405,390,3.348,391,4.783,392,4.103,393,5.106,394,5.106,395,3.485,396,3.29,397,2.262,398,4.38,400,3.712,401,3.118,403,1.794,404,1.409,405,4.103,406,3.635,409,4.405,410,2.009,412,1.671,413,4.752,414,3.852,415,2.927,416,2.927,418,2.62,420,3.118,422,2.179,423,1.933,424,2.493,426,4.048,427,1.613,428,3.635,429,3.348,430,1.18,432,2.763,433,1.794,436,3.118,438,3.348,439,3.635,440,4.02,442,2.275,444,3.021,446,1.77,447,2.716,448,2.716,449,2.716,450,3.348,451,4.405,452,3.348,453,4.786,454,2.716,455,4.02,456,4.02,457,2.262,458,4.02,459,2.262,461,2.262,462,1.053,463,2.262,464,1.978,465,1.978,466,1.978,467,1.472,468,4.111,469,1.867,470,1.978,471,2.262,472,1.978,473,1.978,474,1.867,475,1.978,476,1.978,478,4.786,479,2.456,480,2.716,481,3.635,482,2.456,483,1.358,484,2.346,491,1.277,492,1.507,493,1.507,496,2.968,500,2.62,503,2.262,504,2.456,544,1.364,620,1.933,621,1.306,685,6.341,686,2.716,687,5.482,688,4.604,689,4.604,690,3.111,691,3.111,692,3.111,693,3.111,694,3.111,695,3.111,696,3.111,697,3.111,698,3.111,699,3.111,700,3.111,701,3.111,702,3.111,703,3.111,704,3.111,705,5.482,706,4.604,707,4.604,708,3.111,709,4.604,710,4.604,711,3.111,712,1.537,713,1.306,714,2.763,715,2.262,716,2.107,717,3.111,718,3.111,719,2.009,720,1.358,721,2.456]],["title/classes/AlarmImageSet.html",[113,0.006,527,1.475]],["body/classes/AlarmImageSet.html",[0,0.333,2,0.096,3,0.073,8,0.061,12,0.261,14,0.71,16,1.648,18,1.523,20,0.495,21,0.729,22,2.436,25,0.514,26,0.459,27,0.495,28,0.514,30,0.514,32,0.326,33,0.784,35,1.467,42,0.514,44,1.597,45,0.841,46,0.676,50,0.635,52,0.513,53,0.978,54,0.784,55,0.013,56,0.513,57,0.891,58,0.729,61,0.893,66,2.659,67,1.554,68,1.743,71,1.364,73,0.678,74,2.037,75,1.743,78,1.414,79,1.659,81,1.121,82,1.075,84,2.178,91,1.792,94,1.743,95,1.163,101,0.68,102,1.299,103,2.733,107,0.171,108,0.108,111,0.658,112,0.12,113,0.011,114,0.847,115,1.715,116,2.307,117,2.307,118,2.307,121,0.776,125,1.251,126,3.722,127,2.26,128,2.457,129,1.262,130,2.457,136,1.555,137,1.583,148,1.715,156,0.573,157,0.812,158,0.784,166,0.495,170,0.495,231,0.855,256,0.008,257,0.008,260,0.727,301,4.504,302,2.178,312,2.307,313,2.93,314,2.638,316,1.348,318,1.874,321,2.543,322,2.307,323,2.178,324,3.091,345,1.868,353,2.457,354,3.525,364,2.591,365,1.214,369,3.09,379,1.303,381,2.478,387,2.307,388,2.638,389,2.638,395,2.307,396,2.178,398,4.052,400,3.486,401,2.457,404,2.104,412,1.316,413,3.803,414,3.273,415,2.307,416,2.307,418,2.065,420,2.457,422,1.717,423,1.523,424,1.965,430,1.334,432,2.178,442,3.216,444,2.733,446,2.065,450,2.638,451,4.35,452,3.743,457,2.638,459,2.638,462,1.228,464,3.273,465,3.273,466,3.273,468,4.921,469,3.09,470,3.273,472,3.273,473,3.273,475,3.273,476,3.273,506,2.865,507,2.638,508,1.364,509,4.35,510,3.168,511,3.168,512,3.168,513,3.168,514,3.168,515,3.743,516,3.168,517,3.168,518,3.168,519,3.168,520,3.954,521,2.865,522,1.792,523,1.792,527,2.591,530,2.841,534,2.717,540,2.865,542,2.703,544,1.075,546,2.025,549,3.168,551,1.772,552,1.648,554,4.495,555,4.064,558,3.09,559,1.717,562,2.638,563,2.638,564,2.638,566,3.168,567,3.273,568,2.436,569,2.887,570,2.887,571,2.887,572,2.887,573,2.684,574,2.783,575,4.999,576,3.273,577,2.93,578,3.743,579,2.638,580,2.865,581,3.168,582,3.168,583,3.168,584,3.168,585,2.865,586,4.495,587,3.168,588,4.495,589,4.495,590,3.168,591,3.168,592,3.168,593,3.168,594,3.168,595,3.168,596,3.168,597,3.168,598,3.168,599,3.168,600,5.224,601,5.224,602,5.224,603,3.168,604,3.168,605,3.168,606,3.168,607,5.685,608,2.865,609,2.865,610,2.865,611,1.583,612,3.168,613,3.168,722,5.148,723,3.629,724,3.629,725,3.629,726,3.629,727,3.629,728,3.629,729,3.629]],["title/components/AlarmInfoComponent.html",[0,0.168,174,0.576]],["body/components/AlarmInfoComponent.html",[0,0.34,1,0.635,2,0.189,3,0.09,4,0.708,5,0.733,6,0.733,7,0.683,8,0.075,12,0.339,13,0.907,14,0.51,20,0.812,21,0.946,24,0.733,25,1.231,26,1.099,27,0.812,28,0.843,30,0.843,32,0.403,33,1.084,35,1.334,37,0.9,42,1.008,44,1.426,45,0.845,46,0.878,50,0.574,52,0.572,53,0.973,55,0.013,56,0.51,57,0.78,61,0.545,67,1.233,68,2.015,73,0.365,81,1.116,82,1.763,89,0.683,94,2.015,95,1.018,107,0.222,108,0.134,111,0.812,112,0.104,113,0.007,129,1.295,133,1.576,135,1.956,136,1.165,137,1.956,144,1.526,147,1.747,150,3.075,155,0.403,156,0.939,157,0.939,158,0.907,159,1.164,160,0.733,161,0.973,162,0.635,163,0.733,164,0.612,165,0.733,166,0.612,167,0.733,168,0.635,169,1.164,170,0.612,171,0.973,172,0.635,173,0.733,174,1.008,175,0.733,176,0.635,177,0.973,178,0.635,179,0.973,180,0.635,181,0.733,182,0.635,183,1.008,184,1.164,185,0.612,186,0.733,187,0.659,188,1.092,189,0.635,190,1.092,191,0.635,192,1.164,193,0.635,194,0.733,195,0.635,196,0.635,197,0.733,198,0.635,199,0.708,200,0.635,201,0.733,202,0.612,203,0.733,204,0.635,205,0.635,206,0.974,207,1.092,208,0.635,209,0.733,210,0.635,211,0.635,212,0.733,213,0.635,214,0.635,215,0.635,216,0.635,217,0.612,218,0.733,219,0.635,220,1.124,221,0.973,222,0.635,223,1.124,224,0.635,225,0.635,226,0.635,227,0.635,228,0.612,229,0.733,230,0.635,231,0.589,232,0.973,233,0.635,234,0.612,235,0.683,236,0.635,237,1.118,238,0.683,239,0.982,240,0.612,241,0.733,242,0.635,243,0.502,244,0.659,245,0.635,246,0.843,247,0.733,248,0.635,249,0.659,250,0.635,251,0.659,252,0.635,253,0.635,254,0.708,255,0.733,256,0.009,257,0.009,298,4.335,344,2.551,365,1.748,379,1.164,403,2.32,404,1.372,427,2.086,430,1.273,485,2.16,486,1.747,492,1.948,493,1.467,497,3.573,498,2.703,620,1.882,626,4.328,657,3.855,730,6.014,731,3.914,732,2.499,733,2.703,734,6.683,735,5.952,736,6.014,737,6.232,738,5.952,739,4.483,740,4.483,741,4.483,742,4.031,743,6.014,744,4.526,745,3.573,746,2.85,747,3.539,748,3.539,749,3.539,750,3.539,751,5.197,752,5.197,753,4.822,754,5.197,755,5.952,756,3.259,757,2.69,758,3.914,759,1.812,760,3.914,761,3.914,762,3.259,763,3.539,764,4.483]],["title/classes/AlarmItemFlatNode.html",[113,0.006,765,2.955]],["body/classes/AlarmItemFlatNode.html",[0,0.3,2,0.093,3,0.101,7,1.232,8,0.085,9,4.665,12,0.178,14,0.55,18,1.475,20,0.479,21,0.712,22,2.38,25,0.497,26,0.444,27,0.926,28,0.497,30,0.497,32,0.316,33,0.766,42,0.497,44,1.008,45,0.801,50,0.497,52,0.431,55,0.013,56,0.503,57,0.749,59,0.913,67,1.463,71,1.32,73,0.675,74,2.18,75,1.755,77,3.198,79,1.675,81,0.943,89,0.766,90,1.814,91,3.169,94,1.703,101,0.658,102,1.013,103,2.694,105,2.723,107,0.247,108,0.15,111,0.637,112,0.137,113,0.01,114,1.139,115,1.007,121,1.786,125,0.615,127,2.03,129,1.442,152,3.083,164,0.479,206,0.843,214,0.497,243,0.849,256,0.01,257,0.007,260,0.704,284,4.665,313,2.862,316,1.569,324,3.035,327,2.995,334,4.079,344,1.999,345,1.274,352,1.533,412,1.274,422,2.781,427,1.762,430,1.072,442,1.735,490,1.703,494,2.862,544,2.011,546,2.392,625,1.075,660,5.136,676,2.549,733,2.669,742,3.406,744,2.233,765,6.004,766,2.773,767,4.816,768,7.558,769,6.068,770,7.159,771,3.512,772,3.512,773,3.512,774,3.067,775,3.067,776,4.391,777,3.067,778,4.391,779,4.391,780,2.773,781,3.067,782,2.463,783,1.533,784,5.508,785,3.067,786,2.328,787,2.108,788,3.067,789,3.067,790,3.657,791,2.773,792,3.406,793,2.754,794,3.067,795,3.067,796,5.602,797,3.971,798,2.379,799,2.554,800,3.067,801,5.13,802,3.067,803,2.773,804,3.067,805,2.379,806,3.067,807,5.13,808,3.067,809,3.067,810,4.639,811,3.067,812,4.391,813,3.067,814,3.067,815,3.067,816,3.067,817,0.829,818,1.735,819,2.773,820,3.971,821,4.391,822,3.067,823,3.067,824,4.391,825,3.067,826,3.067,827,3.067,828,4.391,829,3.067,830,3.067,831,3.067,832,5.13,833,3.067,834,2.773,835,2.773,836,3.067,837,3.067,838,4.391,839,3.067,840,4.391,841,3.067,842,4.391,843,3.067,844,4.391,845,3.067,846,4.391,847,4.391,848,3.067,849,5.13,850,3.067,851,3.067,852,3.067,853,4.391,854,2.195,855,3.067,856,3.067,857,3.067,858,3.067,859,3.067,860,3.067,861,2.773,862,3.067,863,3.971,864,4.391,865,3.067,866,3.067,867,3.067,868,4.24,869,3.067,870,3.067,871,3.067,872,2.773,873,3.067,874,3.067,875,3.067,876,2.773,877,3.067,878,3.067,879,3.067,880,3.067,881,4.391,882,3.067,883,3.067,884,4.391,885,3.067,886,2.773,887,4.391,888,3.067,889,4.639,890,5.928,891,3.067,892,5.602,893,2.554,894,3.067,895,4.391,896,3.067,897,3.067,898,3.067,899,2.773,900,6.352,901,3.067,902,4.391,903,3.067,904,3.067,905,3.067,906,4.391,907,3.067,908,3.067,909,6.862,910,3.067,911,5.602,912,3.067,913,4.391,914,2.773,915,3.067,916,5.13,917,5.602,918,3.067,919,3.067,920,3.067,921,3.067,922,3.067,923,3.067,924,3.067,925,3.067,926,3.067,927,3.067,928,3.067,929,3.067,930,3.067,931,3.067,932,3.067,933,3.067,934,3.067]],["title/classes/AlarmItemNode.html",[113,0.006,784,2.955]],["body/classes/AlarmItemNode.html",[0,0.301,2,0.094,3,0.101,7,1.233,8,0.085,9,4.291,12,0.179,14,0.552,18,1.486,20,0.483,21,0.716,22,2.394,25,0.501,26,0.447,27,0.929,28,0.501,30,0.501,32,0.318,33,0.77,42,0.501,44,1.013,45,0.805,50,0.457,52,0.433,55,0.013,56,0.506,57,0.689,59,0.92,67,1.467,71,1.33,73,0.676,74,2.136,75,1.733,77,3.215,79,1.648,81,0.948,89,0.77,90,1.828,91,3.18,94,1.712,101,0.663,102,1.016,103,2.703,105,2.738,107,0.247,108,0.151,111,0.641,112,0.137,113,0.01,114,1.14,115,1.014,121,1.787,125,0.62,127,2.037,129,1.445,152,2.972,164,0.483,206,0.846,214,0.501,243,0.851,256,0.01,257,0.008,260,0.709,284,4.291,313,2.878,316,1.571,324,3.048,327,2.905,334,4.093,344,2.014,345,1.284,352,1.545,412,1.284,422,2.793,427,1.772,430,1.075,442,1.748,490,1.712,494,2.878,544,2.098,546,2.398,625,1.083,660,5.598,676,2.555,733,2.297,742,3.425,744,2.25,765,5.989,766,2.794,767,4.825,768,7.557,769,5.377,770,6.983,774,3.09,775,3.09,776,4.416,777,3.09,778,4.416,779,4.416,780,2.794,781,3.09,782,2.471,783,1.545,784,5.723,785,3.09,786,2.336,787,2.124,788,3.09,789,3.09,790,3.677,791,2.794,792,3.425,793,2.758,794,3.09,795,3.09,796,5.621,797,3.993,798,2.397,799,2.573,800,3.09,801,5.152,802,3.09,803,2.794,804,3.09,805,2.397,806,3.09,807,5.152,808,3.09,809,3.09,810,4.659,811,3.09,812,4.416,813,3.09,814,3.09,815,3.09,816,3.09,817,0.835,818,1.748,819,2.794,820,3.993,821,4.416,822,3.09,823,3.09,824,4.416,825,3.09,826,3.09,827,3.09,828,4.416,829,3.09,830,3.09,831,3.09,832,5.152,833,3.09,834,2.794,835,2.794,836,3.09,837,3.09,838,4.416,839,3.09,840,4.416,841,3.09,842,4.416,843,3.09,844,4.416,845,3.09,846,4.416,847,4.416,848,3.09,849,5.152,850,3.09,851,3.09,852,3.09,853,4.416,854,2.207,855,3.09,856,3.09,857,3.09,858,3.09,859,3.09,860,3.09,861,2.794,862,3.09,863,3.993,864,4.416,865,3.09,866,3.09,867,3.09,868,4.251,869,3.09,870,3.09,871,3.09,872,2.794,873,3.09,874,3.09,875,3.09,876,2.794,877,3.09,878,3.09,879,3.09,880,3.09,881,4.416,882,3.09,883,3.09,884,4.416,885,3.09,886,2.794,887,4.416,888,3.09,889,4.659,890,5.946,891,3.09,892,5.621,893,2.573,894,3.09,895,4.416,896,3.09,897,3.09,898,3.09,899,2.794,900,6.366,901,3.09,902,4.416,903,3.09,904,3.09,905,3.09,906,4.416,907,3.09,908,3.09,909,6.872,910,3.09,911,5.621,912,3.09,913,4.416,914,2.794,915,3.09,916,5.152,917,5.621,918,3.09,919,3.09,920,3.09,921,3.09,922,3.09,923,3.09,924,3.09,925,3.09,926,3.09,927,3.09,928,3.09,929,3.09,930,3.09,931,3.09,932,3.09,933,3.09,934,3.09,935,3.539,936,3.539]],["title/components/AlarmLabelComponent.html",[0,0.168,176,0.576]],["body/components/AlarmLabelComponent.html",[0,0.331,1,0.495,2,0.093,3,0.07,4,0.551,5,0.571,6,0.571,7,0.532,8,0.059,12,0.254,13,0.763,14,0.658,20,0.684,21,0.83,22,2.773,24,0.571,25,1.218,26,1.087,27,0.684,28,0.71,30,0.71,32,0.314,33,0.763,37,0.741,41,2.713,42,0.906,44,1.538,45,0.845,46,0.77,50,0.651,52,0.502,53,0.819,54,0.532,55,0.013,56,0.637,57,0.896,58,1.101,61,0.425,67,1.213,68,1.696,73,0.592,75,1.697,79,1.697,81,0.939,82,1.484,89,0.763,90,1.805,91,2.894,93,1.143,94,1.983,95,1.032,101,1.472,102,1.25,107,0.246,108,0.104,111,0.633,112,0.081,113,0.012,127,1.586,129,0.677,133,1.663,138,4.307,139,0.938,140,1.436,141,1.525,143,2.374,144,1.728,145,1.313,147,2.283,150,1.805,153,2.773,155,0.314,156,0.791,157,0.791,158,0.763,159,1.046,160,0.571,161,0.819,162,0.495,163,0.571,164,0.477,165,0.571,166,0.477,167,0.571,168,0.495,169,1.046,170,0.477,171,0.819,172,0.495,173,0.571,174,0.495,175,0.571,176,0.906,177,0.819,178,0.495,179,0.819,180,0.495,181,0.571,182,0.495,183,0.906,184,1.046,185,0.477,186,0.571,187,0.513,188,0.958,189,0.495,190,0.958,191,0.495,192,1.046,193,0.495,194,0.571,195,0.495,196,0.495,197,0.571,198,0.495,199,0.551,200,0.495,201,0.571,202,0.477,203,0.571,204,0.495,205,0.495,206,0.89,207,0.958,208,0.495,209,0.571,210,0.495,211,0.495,212,0.571,213,0.495,214,0.495,215,0.495,216,0.495,217,0.477,218,0.571,219,0.495,220,0.551,221,0.819,222,0.495,223,1.01,224,0.495,225,0.495,226,0.495,227,0.495,228,0.477,229,0.571,230,0.495,231,0.841,232,0.819,233,0.495,234,0.477,235,0.532,236,0.495,237,1.052,238,0.532,239,0.861,240,0.477,241,0.571,242,0.495,243,0.392,244,0.513,245,0.495,246,0.71,247,0.571,248,0.495,249,0.513,250,0.495,251,0.513,252,0.495,253,0.495,254,0.551,255,0.571,256,0.007,257,0.007,260,1.174,298,4.696,316,1.037,345,1.818,365,1.182,369,4.79,379,1.305,381,2.62,387,4.069,392,3.967,404,2.424,430,1.212,432,3.516,433,2.283,442,3.161,462,1.183,474,2.097,484,1.267,485,2.458,486,1.361,490,1.183,493,1.143,494,1.988,495,2.366,498,1.587,505,1.412,515,4.653,530,3.576,534,3.299,551,1.735,562,4.926,563,4.926,564,4.926,614,6.605,621,1.467,627,4.375,628,1.988,638,1.412,641,3.956,642,5.588,645,4.375,713,1.467,757,2.097,937,6.515,938,3.05,939,5.858,940,5.01,941,6.4,942,6.4,943,6.4,944,6.4,945,6.4,946,6.4,947,5.858,948,5.858,949,5.858,950,5.858,951,5.858,952,5.858,953,5.01,954,3.493,955,5.588,956,3.493,957,3.493,958,3.493,959,3.493,960,3.493,961,3.493,962,3.493,963,3.493,964,3.493,965,3.493,966,3.493,967,3.493,968,3.493,969,3.493,970,3.493,971,3.493,972,2.587,973,5.858,974,3.493,975,3.493,976,3.493,977,5.01,978,3.493,979,3.493,980,5.01,981,5.115,982,3.437,983,3.05,984,3.643,985,3.493,986,1.653]],["title/classes/AlarmSounds.html",[113,0.006,987,3.209]],["body/classes/AlarmSounds.html",[2,0.071,3,0.053,8,0.126,12,0.208,14,0.616,15,1.599,16,1.21,17,2.604,18,2.791,27,0.559,32,0.368,33,0.624,35,1.3,37,0.631,45,0.847,46,0.35,50,0.532,52,0.228,53,0.67,54,0.406,55,0.013,56,0.616,57,0.877,58,0.707,59,1.868,61,0.873,66,1.376,67,1.573,68,2.543,73,0.685,74,1.771,75,1.518,79,1.411,82,1.478,84,2.458,93,1.34,94,1.689,99,4.094,101,1.133,102,1.186,103,1.72,104,2.465,105,3.456,107,0.246,108,0.079,111,0.742,112,0.095,113,0.009,114,1.164,115,1.43,121,1.698,125,1.419,127,1.579,129,0.516,231,0.873,239,0.391,243,0.628,256,0.006,257,0.006,260,0.534,273,1.077,292,0.628,303,1.86,316,1.377,321,1.316,323,2.458,327,2.183,330,3.576,345,0.967,351,2.326,352,1.787,356,2.326,364,0.967,365,0.966,379,0.436,410,3.071,412,2.316,422,1.261,427,2.466,430,1.333,433,1.038,438,3.628,469,2.995,542,1.34,544,2.032,546,1.896,551,1.213,558,1.599,567,2.604,576,3.843,577,2.331,611,1.163,625,0.815,654,3.069,659,4.648,661,3.576,664,2.178,676,2.237,732,1.72,733,3.019,744,3.172,745,1.599,753,1.804,782,1.486,792,1.804,793,0.933,799,1.937,818,3.153,854,3.071,868,3.362,987,3.234,988,2.326,989,4.297,990,4.118,991,7.791,992,6.848,993,4.834,994,3.636,995,7.038,996,6.648,997,6.648,998,4.096,999,2.664,1000,4.096,1001,2.664,1002,4.096,1003,2.664,1004,4.096,1005,2.664,1006,4.096,1007,2.664,1008,4.096,1009,2.664,1010,4.096,1011,4.096,1012,4.096,1013,3.234,1014,4.096,1015,1.387,1016,2.103,1017,1.937,1018,6.046,1019,4.357,1020,4.357,1021,1.804,1022,2.103,1023,1.748,1024,2.861,1025,1.442,1026,3.628,1027,1.001,1028,3.843,1029,2.664,1030,2.861,1031,3.6,1032,1.516,1033,3.273,1034,1.937,1035,5.601,1036,2.664,1037,2.664,1038,2.664,1039,2.664,1040,6.477,1041,3.94,1042,6.295,1043,4.396,1044,6.046,1045,2.664,1046,2.664,1047,3.234,1048,2.664,1049,2.103,1050,4.096,1051,2.664,1052,2.664,1053,2.664,1054,2.664,1055,2.664,1056,2.103,1057,2.326,1058,1.804,1059,2.664,1060,4.096,1061,2.664,1062,2.664,1063,2.664,1064,4.357,1065,4.357,1066,2.664,1067,2.664,1068,3.234,1069,2.664,1070,2.664,1071,2.326,1072,2.664,1073,2.664,1074,2.664,1075,2.664,1076,4.99,1077,5.601,1078,5.601,1079,2.664,1080,4.99,1081,4.096,1082,2.664,1083,4.096,1084,4.096,1085,2.664,1086,4.094,1087,4.096,1088,2.664,1089,6.383,1090,4.99,1091,2.664,1092,4.096,1093,2.664,1094,2.664,1095,2.664,1096,2.664,1097,2.664,1098,2.664,1099,2.664,1100,2.664,1101,2.664,1102,2.664,1103,2.664,1104,2.664,1105,4.096,1106,1.937,1107,2.664,1108,2.664,1109,2.103,1110,2.326,1111,2.664,1112,2.326,1113,4.096,1114,2.664,1115,2.664,1116,3.612,1117,1.937,1118,2.664,1119,2.664,1120,2.664,1121,2.664,1122,4.096,1123,2.664,1124,2.664,1125,2.664,1126,4.096,1127,2.664,1128,3.788,1129,2.664,1130,6.648,1131,2.664,1132,4.99,1133,4.096,1134,2.664,1135,2.664,1136,2.664,1137,4.89,1138,4.096,1139,2.664,1140,2.664,1141,4.096,1142,1.937,1143,2.664,1144,2.664,1145,2.664,1146,5.278,1147,2.664,1148,2.664,1149,4.096,1150,2.664,1151,2.664,1152,4.096,1153,2.664,1154,2.664,1155,1.376,1156,2.664,1157,3.94,1158,2.664,1159,2.103,1160,2.664,1161,2.103,1162,4.99,1163,2.978,1164,2.664,1165,4.096,1166,4.096,1167,2.664,1168,4.096,1169,2.664,1170,4.096,1171,2.664,1172,4.096,1173,2.664,1174,2.664,1175,4.99,1176,4.99,1177,5.601,1178,2.664,1179,4.096,1180,2.664,1181,2.664,1182,4.096,1183,2.664,1184,2.664,1185,2.664,1186,4.99,1187,4.096,1188,4.096,1189,2.664,1190,4.357,1191,2.664,1192,7.186,1193,4.99,1194,5.601,1195,4.99,1196,4.096,1197,2.664,1198,2.664,1199,2.664,1200,5.601,1201,2.664,1202,2.664,1203,2.664,1204,2.664,1205,2.664,1206,2.664,1207,2.664,1208,2.103,1209,2.664,1210,2.664,1211,2.326,1212,4.096,1213,2.664,1214,1.804,1215,2.664,1216,2.664,1217,4.096,1218,4.096,1219,2.103,1220,2.664,1221,2.664,1222,2.326,1223,2.664,1224,2.664,1225,2.664,1226,3.576,1227,2.664,1228,2.664,1229,2.664,1230,4.096,1231,2.664,1232,2.664,1233,2.664,1234,2.664,1235,2.664]],["title/components/AlarmTileComponent.html",[0,0.168,178,0.576]],["body/components/AlarmTileComponent.html",[0,0.338,1,0.463,2,0.087,3,0.065,4,0.516,5,0.78,6,0.534,7,0.497,8,0.055,12,0.314,13,0.727,14,0.648,18,2.004,20,0.651,21,0.799,22,2.669,24,0.534,25,1.214,26,1.084,27,0.651,28,0.676,30,0.676,32,0.507,33,0.727,35,0.836,37,0.713,41,2.584,42,0.878,44,1.593,45,0.844,46,0.627,50,0.656,52,0.483,53,0.78,54,0.945,55,0.013,56,0.689,57,0.905,58,1.108,61,0.397,67,1.168,68,1.616,73,0.616,74,1.564,75,1.699,78,1.86,79,1.459,81,1.163,82,1.413,89,0.859,90,1.687,91,2.786,93,1.069,94,2.333,95,0.945,101,1.508,102,1.27,103,2.004,107,0.187,108,0.097,111,0.592,112,0.076,113,0.011,114,0.463,115,0.936,121,0.699,125,0.572,126,1.769,127,1.963,129,0.925,133,1.463,134,2.367,135,1.425,136,1.612,137,2.083,139,0.877,140,1.368,144,1.288,147,1.273,148,1.368,150,1.687,155,0.294,156,0.979,157,0.753,158,1.05,159,1.014,160,0.534,161,0.78,162,0.463,163,0.534,164,0.446,165,0.534,166,0.769,167,0.534,168,0.463,169,1.014,170,0.446,171,0.78,172,0.463,173,0.534,174,0.463,175,0.534,176,0.463,177,0.78,178,0.878,179,0.78,180,0.463,181,0.534,182,0.463,183,0.878,184,1.014,185,0.446,186,0.534,187,0.48,188,0.922,189,0.463,190,0.922,191,0.463,192,1.014,193,0.463,194,0.534,195,0.463,196,0.463,197,0.534,198,0.463,199,0.516,200,0.463,201,0.534,202,0.446,203,0.534,204,0.463,205,0.463,206,0.867,207,0.922,208,0.463,209,0.534,210,0.463,211,0.463,212,0.534,213,0.463,214,0.463,215,0.463,216,0.799,217,0.446,218,0.534,219,0.463,220,0.516,221,0.78,222,0.463,223,0.979,224,0.463,225,0.463,226,0.463,227,0.463,228,0.446,229,0.534,230,0.463,231,0.867,232,0.78,233,0.463,234,0.446,235,0.497,236,0.463,237,1.033,238,0.497,239,0.828,240,0.446,241,0.534,242,0.463,243,0.366,244,0.48,245,0.463,246,0.676,247,0.534,248,0.463,249,0.48,250,0.463,251,0.48,252,0.463,253,0.463,254,0.516,255,0.534,256,0.01,257,0.007,260,0.956,298,4.676,301,3.722,302,3.722,312,3.585,316,0.988,318,3.204,321,1.614,324,1.687,344,2.716,345,2.046,348,2.375,354,2.584,365,1.463,379,1.315,381,1.51,385,5.76,387,3.943,390,3.47,391,4.452,392,4.2,393,4.897,394,4.897,395,3.585,396,3.384,397,2.375,398,4.468,400,3.819,401,3.232,403,1.86,404,2.278,405,4.2,406,3.768,409,4.1,410,2.083,412,1.731,413,3.943,414,3.034,415,3.034,416,3.034,418,3.53,420,2.212,422,1.546,423,1.371,424,1.769,426,1.769,427,1.144,428,2.579,429,2.375,430,1.174,432,2.864,433,1.86,436,3.232,442,2.357,446,1.859,460,6.767,461,4.1,462,1.616,463,3.47,464,2.076,465,2.076,466,2.076,467,1.546,468,4.194,469,1.96,470,2.076,471,3.47,472,2.076,473,2.076,474,2.864,475,2.076,476,2.076,477,2.852,481,3.768,482,2.579,483,1.425,484,1.185,490,1.106,491,1.564,492,1.562,493,1.069,494,1.859,495,2.212,498,1.483,515,5.01,520,3.368,521,4.452,527,2.394,534,2.817,551,1.837,562,3.47,563,3.47,564,3.47,580,2.579,621,1.371,625,1,628,1.859,638,1.321,714,3.384,715,3.47,716,2.212,720,2.461,759,1.321,872,3.768,972,1.929,1023,1.144,1222,2.852,1236,6.487,1237,2.852,1238,4.23,1239,5.639,1240,4.772,1241,6.202,1242,6.202,1243,6.202,1244,4.772,1245,3.266,1246,3.266,1247,3.266,1248,3.266,1249,4.772,1250,3.266,1251,3.266,1252,3.266,1253,3.266,1254,3.266,1255,3.266,1256,3.266,1257,3.266,1258,3.266,1259,3.266,1260,3.266,1261,3.266,1262,3.266,1263,3.266,1264,3.47,1265,3.266,1266,2.852,1267,4.772,1268,3.266,1269,3.266,1270,4.167,1271,2.375,1272,3.266,1273,3.266,1274,3.266]],["title/components/AlarmTooltipComponent.html",[0,0.168,180,0.576]],["body/components/AlarmTooltipComponent.html",[0,0.342,1,0.591,2,0.111,3,0.083,4,1.142,5,0.682,6,0.682,7,0.636,8,0.07,12,0.327,13,0.864,14,0.486,20,0.774,21,0.913,24,0.682,25,1.228,26,1.096,27,0.774,28,0.803,30,0.803,32,0.375,33,1.053,37,0.717,42,0.979,44,1.449,45,0.84,46,0.847,50,0.617,52,0.357,55,0.013,56,0.552,57,0.753,61,0.507,67,1.175,68,1.92,73,0.34,81,1.063,82,2.048,85,3.606,89,0.636,94,1.92,95,1.102,101,0.782,102,0.659,107,0.214,108,0.124,111,0.756,112,0.097,113,0.006,125,0.731,129,1.505,133,1.338,134,1.752,135,1.821,136,1.475,137,1.821,143,1.462,144,1.472,150,2.93,155,0.375,156,0.895,157,0.895,158,1.053,159,1.131,160,0.682,161,0.927,162,0.591,163,0.682,164,0.569,165,0.682,166,0.569,167,0.682,168,0.591,169,1.131,170,0.569,171,0.927,172,0.591,173,0.682,174,0.591,175,0.682,176,0.591,177,0.927,178,0.591,179,0.927,180,1.057,181,0.682,182,0.591,183,0.979,184,1.131,185,0.569,186,0.682,187,0.613,188,1.054,189,0.591,190,1.054,191,0.591,192,1.131,193,0.591,194,0.682,195,0.591,196,0.591,197,0.682,198,0.591,199,0.659,200,0.591,201,0.682,202,0.569,203,0.682,204,0.591,205,0.591,206,0.95,207,1.054,208,0.591,209,0.682,210,0.591,211,0.591,212,0.682,213,0.591,214,0.591,215,0.591,216,0.591,217,0.569,218,0.682,219,0.591,220,1.092,221,0.927,222,0.591,223,1.092,224,0.591,225,0.591,226,0.591,227,0.591,228,0.569,229,0.682,230,0.591,231,0.548,232,0.927,233,0.591,234,0.569,235,0.636,236,0.591,237,1.1,238,0.636,239,0.947,240,0.569,241,0.682,242,0.591,243,0.722,244,0.613,245,0.591,246,0.803,247,0.682,248,0.591,249,0.613,250,0.591,251,0.613,252,0.591,253,0.591,254,0.659,255,0.682,256,0.008,257,0.008,298,4.343,302,3.868,331,3.295,365,1.76,379,0.927,381,1.321,396,3.868,403,1.626,404,1.277,418,4.42,424,2.259,427,1.988,430,1.257,485,2.338,486,1.626,490,1.92,491,1.158,492,2.109,493,1.366,497,3.868,498,3.141,503,4.686,505,1.687,620,2.382,625,1.277,626,4.125,629,2.576,657,3.744,720,1.821,736,6.132,737,6.286,742,3.842,743,5.89,744,4.396,745,3.405,746,2.653,747,3.295,748,3.295,749,3.295,750,3.295,751,4.953,752,4.953,753,4.683,754,4.953,756,3.034,758,3.643,759,1.687,762,3.034,763,3.295,790,4.125,805,2.826,817,1.338,1275,6.026,1276,3.643,1277,4.125,1278,4.479,1279,4.953,1280,5.673,1281,5.052,1282,5.673,1283,4.953,1284,5.673,1285,4.953,1286,5.673,1287,2.685,1288,6.445,1289,5.673,1290,5.673,1291,4.173,1292,4.173,1293,4.173,1294,4.173,1295,4.953,1296,5.673,1297,3.643,1298,4.173,1299,3.643,1300,4.173,1301,3.295,1302,3.643,1303,4.173,1304,4.173,1305,4.173,1306,4.173,1307,3.643,1308,4.173,1309,4.173]],["title/components/AntennaMarkerComponent.html",[0,0.168,182,0.576]],["body/components/AntennaMarkerComponent.html",[0,0.322,1,0.572,2,0.107,3,0.081,4,0.637,5,0.66,6,0.66,7,0.615,8,0.068,12,0.281,13,0.845,14,0.66,20,0.757,21,0.897,24,0.66,25,1.226,26,1.094,27,0.757,28,0.785,30,0.785,32,0.363,33,0.845,35,1.294,37,0.701,42,0.966,44,1.566,45,0.826,46,0.729,50,0.619,52,0.543,53,0.907,54,0.615,55,0.013,56,0.612,57,0.796,58,0.572,59,2.094,61,0.491,68,1.877,73,0.602,75,0.922,81,1.039,89,0.615,93,2.073,101,1.34,102,1.166,107,0.226,108,0.12,111,0.732,112,0.094,113,0.009,114,0.785,125,0.707,129,1.572,141,2.42,155,0.363,156,0.875,157,0.875,158,0.845,159,1.115,160,0.66,161,0.907,162,0.572,163,0.66,164,0.551,165,0.66,166,0.551,167,0.66,168,0.572,169,1.115,170,0.551,171,0.907,172,0.572,173,0.66,174,0.572,175,0.66,176,0.572,177,0.907,178,0.572,179,0.907,180,0.572,181,0.66,182,0.966,183,1.205,184,1.115,185,0.551,186,0.66,187,0.593,188,1.036,189,0.572,190,1.036,191,0.572,192,1.115,193,0.572,194,0.66,195,0.572,196,0.572,197,0.66,198,0.572,199,0.637,200,0.572,201,0.66,202,0.551,203,0.66,204,0.572,205,0.572,206,0.939,207,1.036,208,0.572,209,0.66,210,0.572,211,0.572,212,0.66,213,0.572,214,0.572,215,0.572,216,0.572,217,0.551,218,0.66,219,0.572,220,0.637,221,0.907,222,0.572,223,1.076,224,0.572,225,0.572,226,0.572,227,0.572,228,0.551,229,0.66,230,0.572,231,0.53,232,0.907,233,0.572,234,0.551,235,0.615,236,0.572,237,1.091,238,0.615,239,0.931,240,0.551,241,0.66,242,0.572,243,0.452,244,0.593,245,0.572,246,0.785,247,0.66,248,0.572,249,0.593,250,0.572,251,0.593,252,0.572,253,0.572,254,0.637,255,0.66,256,0.008,257,0.008,354,2.186,379,0.907,432,3.328,446,2.297,461,2.935,462,1.367,463,4.959,464,2.566,465,2.566,466,2.566,468,4.545,469,2.423,470,2.566,471,4.032,472,2.566,473,2.566,474,3.328,475,2.566,476,2.566,508,2.844,625,1.697,658,2.66,663,5.124,676,2.859,714,4.093,762,4.032,763,4.378,782,2.96,783,1.762,817,1.308,1271,4.959,1310,5.856,1311,6.359,1312,6.359,1313,2.734,1314,4.606,1315,4.032,1316,6.82,1317,6.335,1318,6.335,1319,6.335,1320,5.531,1321,4.037,1322,4.305,1323,4.378,1324,4.29,1325,4.037,1326,6.82,1327,4.037,1328,3.524,1329,6.82,1330,5.37,1331,5.546,1332,5.546,1333,3.524,1334,4.037,1335,4.037,1336,4.037,1337,4.037,1338,4.037,1339,4.037,1340,8.054,1341,4.037,1342,2.566,1343,2.566]],["title/components/AntennasComponent.html",[0,0.168,185,0.555]],["body/components/AntennasComponent.html",[0,0.345,1,0.669,2,0.125,3,0.095,4,0.746,5,0.772,6,0.772,7,0.72,8,0.079,12,0.239,13,0.939,14,0.623,16,2.799,20,0.841,21,0.971,24,0.772,25,1.233,26,1.101,27,0.841,28,0.873,30,0.873,32,0.425,33,0.939,37,0.779,42,1.029,45,0.813,46,0.901,50,0.563,52,0.587,53,1.007,54,0.72,55,0.013,56,0.674,57,0.719,58,0.669,61,0.574,62,3.698,73,0.502,81,1.155,89,1.044,95,0.72,101,0.886,102,0.746,105,3.336,107,0.204,108,0.141,111,0.856,112,0.11,113,0.007,114,0.669,125,1.079,127,1.95,144,1.079,147,1.841,151,2.689,155,0.425,156,0.973,157,0.973,158,0.939,159,1.188,160,0.772,161,1.007,162,0.669,163,0.772,164,0.645,165,0.772,166,0.645,167,0.772,168,0.669,169,1.188,170,0.645,171,1.007,172,0.669,173,0.772,174,0.669,175,0.772,176,0.669,177,1.007,178,0.669,179,1.007,180,0.669,181,0.772,182,0.669,183,1.153,184,1.188,185,0.992,186,0.772,187,0.694,188,1.121,189,0.669,190,1.121,191,0.669,192,1.188,193,0.669,194,0.772,195,0.669,196,0.669,197,0.772,198,0.669,199,0.746,200,0.669,201,0.772,202,0.645,203,0.772,204,0.669,205,0.669,206,0.99,207,1.121,208,0.669,209,0.772,210,0.669,211,0.669,212,0.772,213,0.669,214,0.669,215,0.669,216,0.669,217,0.645,218,0.772,219,0.669,220,0.746,221,1.007,222,0.669,223,1.147,224,0.669,225,0.669,226,0.669,227,0.669,228,0.645,229,0.772,230,0.669,231,0.621,232,1.007,233,0.669,234,0.645,235,0.72,236,0.669,237,1.131,238,0.72,239,1.007,240,0.645,241,0.772,242,0.669,243,0.53,244,0.694,245,0.669,246,0.873,247,0.772,248,0.669,249,0.694,250,0.669,251,0.694,252,0.669,253,0.669,254,0.746,255,0.772,256,0.009,257,0.009,321,3.044,329,4.865,379,1.007,424,3.935,491,1.311,654,3.352,663,4.922,676,2.641,720,2.689,721,4.865,793,2.546,817,1.823,1024,2.236,1344,4.125,1345,4.865,1346,3.698,1347,6.162,1348,6.162,1349,6.857,1350,6.162,1351,6.749,1352,6.162,1353,6.162,1354,4.725,1355,6.162,1356,4.725,1357,4.125,1358,4.725]],["title/modules/AntennasModule.html",[258,0.899,1359,2.439]],["body/modules/AntennasModule.html",[2,0.149,3,0.113,8,0.095,55,0.013,107,0.284,108,0.168,112,0.18,113,0.008,155,0.506,182,1.145,183,1.097,185,1.103,187,1.188,189,1.145,191,1.197,256,0.01,257,0.01,258,1.522,259,4.6,260,1.128,261,3.006,262,2.276,263,2.795,269,3.826,270,3.268,271,3.671,272,2.89,273,2.276,274,2.116,276,2.89,277,3.126,278,2.364,292,1.328,293,2.557,294,2.665,295,3.204,296,3.048,676,1.973,1311,4.445,1312,4.445,1322,4.6,1359,5.212,1360,4.916,1361,4.916,1362,4.916,1363,4.916,1364,4.916,1365,4.852,1366,5.139,1367,5.63,1368,5.63,1369,4.916,1370,4.916,1371,4.445,1372,4.916,1373,4.094,1374,4.445,1375,4.916,1376,4.445,1377,4.916,1378,4.445,1379,4.094]],["title/injectables/AntennasService.html",[1015,1.376,1322,2.313]],["body/injectables/AntennasService.html",[0,0.313,2,0.117,3,0.089,8,0.074,12,0.299,14,0.607,32,0.398,33,0.899,35,1.469,37,0.895,45,0.775,46,0.775,50,0.646,52,0.505,53,0.965,54,0.674,55,0.013,56,0.379,57,0.886,58,0.627,59,2.046,61,0.717,73,0.619,75,1.01,79,1.468,82,2.421,89,1.156,93,1.931,101,1.383,102,1.164,104,2.915,107,0.257,108,0.132,111,0.802,112,0.103,113,0.007,114,0.627,115,2.03,121,1.515,125,1.034,148,2.256,183,1.204,237,1.003,243,0.794,251,0.867,256,0.009,257,0.009,258,1.304,316,1.222,334,4.824,352,1.931,364,2.141,365,1.857,427,2.481,433,2.299,462,2.248,527,2.891,542,1.931,544,2.097,551,1.748,569,2.386,570,2.386,571,2.386,572,2.386,573,2.218,574,2.299,654,3.452,657,3.195,658,3.379,676,2.481,818,3.499,868,4.251,1015,2.248,1023,2.792,1024,2.094,1025,2.396,1027,1.663,1030,3.492,1031,3.195,1032,2.518,1043,4.29,1128,2.915,1142,4.29,1214,3.996,1322,3.358,1324,3.996,1330,4.29,1359,3.541,1380,3.863,1381,3.541,1382,7.082,1383,7.082,1384,7.082,1385,7.082,1386,7.082,1387,7.082,1388,7.082,1389,7.082,1390,5.592,1391,7.082,1392,4.424,1393,5.901,1394,4.221,1395,4.424,1396,4.424,1397,4.424,1398,2.68,1399,4.424,1400,5.152,1401,4.659,1402,4.424,1403,4.424,1404,4.424,1405,4.659,1406,5.901,1407,4.424,1408,5.149,1409,5.152,1410,4.424,1411,3.358,1412,4.424,1413,5.152,1414,1.789,1415,3.217,1416,3.863,1417,3.217,1418,2.813,1419,5.901,1420,3.493,1421,4.424,1422,4.424,1423,4.424,1424,4.424,1425,4.424,1426,4.424,1427,4.424,1428,3.493,1429,4.424,1430,3.493,1431,4.424,1432,4.424,1433,4.424,1434,4.424,1435,4.424,1436,3.637,1437,3.499,1438,3.352,1439,3.352,1440,2.68,1441,2.68,1442,4.424,1443,3.381]],["title/components/AntennasSidebarComponent.html",[0,0.168,189,0.576]],["body/components/AntennasSidebarComponent.html",[0,0.323,1,0.409,2,0.116,3,0.058,4,0.828,5,0.858,6,0.473,7,0.44,8,0.049,12,0.318,13,0.955,14,0.617,16,2.383,20,0.595,21,0.743,22,2.483,24,0.473,25,1.206,26,1.077,27,0.595,28,0.617,30,0.617,32,0.26,33,0.664,35,1.154,37,0.551,41,3.163,42,0.827,43,3.169,44,1.32,45,0.837,46,0.573,50,0.622,52,0.449,53,0.712,54,0.89,55,0.013,56,0.564,57,0.882,58,0.827,59,1.778,61,0.351,67,0.902,68,1.476,73,0.669,74,1.455,75,0.995,79,0.963,81,1.235,82,1.73,89,1.042,94,2.524,95,1.118,98,4.247,101,1.095,102,0.922,104,2.153,105,2.36,107,0.219,108,0.086,111,0.79,112,0.067,113,0.004,114,0.933,121,0.933,125,1.374,127,2.085,129,1.215,133,1.884,134,2.956,135,1.902,136,1.364,137,2.876,139,1.837,140,1.96,141,1.902,144,1.676,145,1.638,147,2.807,148,0.828,150,4.08,153,2.063,154,2.952,155,0.26,156,0.688,157,0.688,158,0.799,159,0.955,160,0.473,161,0.712,162,0.409,163,0.473,164,0.394,165,0.473,166,0.394,167,0.473,168,0.409,169,0.955,170,0.394,171,0.712,172,0.409,173,0.473,174,0.409,175,0.473,176,0.409,177,0.712,178,0.409,179,0.712,180,0.409,181,0.473,182,0.409,183,1.191,184,0.955,185,0.394,186,0.473,187,0.425,188,0.858,189,0.827,190,0.858,191,0.409,192,0.955,193,0.409,194,0.473,195,0.409,196,0.409,197,0.473,198,0.409,199,0.456,200,0.409,201,0.473,202,0.394,203,0.473,204,0.409,205,0.409,206,0.824,207,0.858,208,0.409,209,0.473,210,0.409,211,0.409,212,0.473,213,0.409,214,0.409,215,0.409,216,0.409,217,0.394,218,0.473,219,0.409,220,0.456,221,0.712,222,0.409,223,0.922,224,0.409,225,0.409,226,0.409,227,0.409,228,0.394,229,0.473,230,0.409,231,0.573,232,0.712,233,0.409,234,0.394,235,0.44,236,0.409,237,0.997,238,0.44,239,0.771,240,0.394,241,0.473,242,0.409,243,0.324,244,0.425,245,0.409,246,0.617,247,0.473,248,0.409,249,0.425,250,0.409,251,0.425,252,0.409,253,0.409,254,0.456,255,0.473,256,0.006,257,0.006,260,0.873,313,3.324,316,0.599,321,2.153,322,2.771,324,2.71,336,3.805,344,1.645,352,1.261,379,1.118,380,1.214,381,1.66,404,1.334,410,2.876,412,1.581,426,2.36,427,2.309,430,0.922,442,2.886,484,1.581,485,2.481,486,2.443,487,3.441,490,1.476,491,1.739,492,1.912,493,2.238,496,3.975,497,3.149,498,2.993,499,3.169,500,3.324,505,2.362,544,2.353,620,2.632,621,2.632,625,1.334,626,2.102,628,2.48,630,5.473,631,2.282,632,2.524,633,4.581,636,3.441,654,3.399,658,3.131,659,2.771,660,3.169,664,1.261,682,2.524,712,1.428,713,2.956,714,2.616,715,3.169,745,2.616,756,2.102,757,1.735,759,1.169,762,2.102,767,2.771,782,2.882,783,1.261,793,2.648,798,2.952,817,1.028,834,3.441,861,2.282,876,2.282,972,1.762,984,2.102,986,2.063,1024,1.368,1307,2.524,1310,5.863,1322,4.43,1342,3.335,1343,3.335,1346,3.762,1351,6.29,1357,6.146,1371,6.366,1376,2.282,1381,3.149,1401,3.441,1413,5.971,1444,2.282,1445,4.581,1446,4.581,1447,3.805,1448,5.1,1449,6.589,1450,5.842,1451,6.589,1452,2.771,1453,5.842,1454,5.842,1455,4.358,1456,5.1,1457,5.842,1458,5.842,1459,5.842,1460,5.247,1461,2.89,1462,4.358,1463,3.805,1464,2.89,1465,2.89,1466,4.358,1467,2.89,1468,2.89,1469,2.89,1470,5.247,1471,4.358,1472,2.89,1473,2.89,1474,2.89,1475,4.358,1476,2.89,1477,3.169,1478,4.358,1479,2.89,1480,2.89,1481,2.251,1482,2.89,1483,2.89,1484,5.1,1485,2.89,1486,3.169,1487,2.89,1488,2.89,1489,2.89,1490,2.89,1491,2.952,1492,4.358,1493,2.524,1494,1.428,1495,1.313,1496,1.565,1497,2.524,1498,3.805,1499,2.89,1500,4.358,1501,2.89,1502,2.524,1503,4.358,1504,4.358,1505,2.89,1506,2.89,1507,4.358,1508,4.358,1509,2.89,1510,2.89,1511,2.89,1512,2.89,1513,2.89,1514,2.89,1515,4.358,1516,5.842,1517,4.358,1518,4.358,1519,4.358,1520,4.358,1521,4.358,1522,2.89,1523,1.493,1524,6.597,1525,5.842,1526,4.358,1527,2.524,1528,2.89,1529,4.358,1530,2.89,1531,2.89,1532,2.89,1533,4.358,1534,2.524,1535,2.524,1536,2.89,1537,2.102,1538,2.89,1539,2.282,1540,2.282]],["title/components/AntennasSummaryComponent.html",[0,0.168,191,0.576]],["body/components/AntennasSummaryComponent.html",[0,0.327,1,0.614,2,0.115,3,0.087,4,0.684,5,0.709,6,0.709,7,0.66,8,0.073,12,0.333,13,0.887,14,0.68,20,0.794,21,0.931,24,0.709,25,1.23,26,1.098,27,0.794,28,0.824,30,0.824,32,0.39,33,0.887,35,1.151,37,0.736,42,0.995,45,0.836,46,0.765,50,0.584,52,0.563,53,1.148,54,0.887,55,0.013,56,0.602,57,0.767,58,0.824,59,2.004,61,0.527,73,0.647,81,1.091,82,2.08,89,1.001,95,1.001,107,0.243,108,0.129,111,0.786,112,0.101,113,0.006,114,0.995,115,1.668,121,0.928,125,1.151,127,1.372,129,1.128,133,1.023,139,1.164,155,0.39,156,0.919,157,0.919,158,0.887,159,1.148,160,0.709,161,0.952,162,0.614,163,0.709,164,0.592,165,0.709,166,0.592,167,0.709,168,0.614,169,1.148,170,0.592,171,0.952,172,0.614,173,0.709,174,0.614,175,0.709,176,0.614,177,0.952,178,0.614,179,0.952,180,0.614,181,0.709,182,0.614,183,1.186,184,1.148,185,0.592,186,0.709,187,0.637,188,1.074,189,0.614,190,1.074,191,0.995,192,1.148,193,0.614,194,0.709,195,0.614,196,0.614,197,0.709,198,0.614,199,0.684,200,0.614,201,0.709,202,0.592,203,0.709,204,0.614,205,0.614,206,0.963,207,1.074,208,0.614,209,0.709,210,0.614,211,0.614,212,0.709,213,0.614,214,0.614,215,0.614,216,0.614,217,0.592,218,0.709,219,0.614,220,0.684,221,0.952,222,0.614,223,1.109,224,0.614,225,0.614,226,0.614,227,0.614,228,0.592,229,0.709,230,0.614,231,0.57,232,0.952,233,0.614,234,0.592,235,0.66,236,0.614,237,1.136,238,0.66,239,0.965,240,0.592,241,0.709,242,0.614,243,0.486,244,0.637,245,0.614,246,0.824,247,0.709,248,0.614,249,0.637,250,0.614,251,0.637,252,0.614,253,0.614,254,0.684,255,0.709,256,0.009,257,0.009,292,1.023,345,2.112,430,1.157,433,2.268,490,1.468,620,2.949,658,2.759,664,3.419,665,3.942,782,2.842,783,1.892,817,1.373,1310,5.604,1322,4.731,1342,2.756,1343,2.756,1376,3.423,1378,6.085,1411,3.313,1452,2.756,1477,4.232,1494,3.62,1495,3.19,1496,4.342,1497,3.785,1541,2.936,1542,3.942,1543,4.778,1544,4.232,1545,4.232,1546,3.152,1547,4.336,1548,4.232,1549,4.232,1550,4.336,1551,3.701,1552,3.701,1553,5.11,1554,4.232,1555,3.942,1556,3.942,1557,4.336,1558,4.336,1559,3.423,1560,4.336,1561,2.936,1562,5.821,1563,4.336,1564,4.336,1565,4.336,1566,3.152,1567,4.336]],["title/components/AppComponent.html",[0,0.168,193,0.576]],["body/components/AppComponent.html",[0,0.3,1,0.393,2,0.074,3,0.056,4,0.438,5,0.837,6,0.691,7,0.423,8,0.047,12,0.26,13,0.78,14,0.676,20,0.577,21,0.725,24,0.454,25,1.204,26,1.075,27,0.577,28,0.599,30,0.599,32,0.25,33,0.644,35,1.383,36,3.653,37,0.985,42,0.811,45,0.79,46,0.556,50,0.638,52,0.439,53,1.007,54,0.872,55,0.013,56,0.556,57,0.875,58,0.811,59,1.991,60,2.646,61,0.338,62,4.676,63,3.436,66,2.185,67,1.06,73,0.664,74,1.421,75,1.687,79,0.614,81,0.793,82,1.695,89,0.644,93,0.909,95,0.644,100,5.314,101,0.96,102,1.098,107,0.241,108,0.083,112,0.065,113,0.008,114,0.985,115,1.212,121,1.318,125,1.405,127,1.338,129,1.408,133,1.743,134,2.586,136,1.601,138,2.689,139,1.136,140,1.934,141,1.846,142,1.881,143,1.482,144,1.687,147,2.401,148,2.249,151,3.693,153,1.315,155,0.25,156,0.808,157,0.668,158,0.644,159,0.936,160,0.454,161,0.691,162,0.393,163,0.454,164,0.379,165,0.454,166,0.379,167,0.454,168,0.393,169,0.936,170,0.379,171,0.691,172,0.393,173,0.454,174,0.393,175,0.454,176,0.393,177,0.691,178,0.393,179,0.691,180,0.393,181,0.454,182,0.393,183,1.029,184,0.936,185,0.379,186,0.454,187,0.408,188,0.837,189,0.393,190,0.837,191,0.393,192,0.936,193,0.811,194,0.454,195,0.393,196,0.393,197,0.454,198,0.393,199,0.438,200,0.393,201,0.454,202,0.379,203,0.454,204,0.393,205,0.393,206,0.914,207,0.837,208,0.393,209,0.454,210,0.393,211,0.393,212,0.454,213,0.393,214,0.725,215,0.393,216,0.872,217,0.379,218,0.454,219,0.393,220,0.438,221,0.691,222,0.393,223,0.904,224,0.393,225,0.393,226,0.393,227,0.393,228,0.379,229,0.454,230,0.393,231,0.365,232,0.691,233,0.393,234,0.379,235,0.78,236,0.393,237,1.085,238,0.423,239,0.752,240,0.379,241,0.454,242,0.393,243,0.311,244,0.408,245,0.393,246,0.872,247,0.454,248,0.393,249,0.408,250,0.393,251,0.408,252,0.393,253,0.393,254,0.438,255,0.454,256,0.006,257,0.006,274,1.59,292,1.208,303,1.921,318,3.352,345,1.534,379,0.837,381,2.054,404,1.568,405,1.881,409,2.02,412,2.235,430,1.166,436,2.864,444,1.166,484,1.008,485,2.077,486,1.648,490,1.734,491,1.588,492,0.909,493,1.384,496,3.1,498,1.262,500,1.581,505,1.123,530,1.212,544,1.922,551,2.059,573,1.59,576,2.689,620,1.776,625,1.295,628,1.581,629,3.064,631,2.193,638,1.123,639,1.667,641,2.193,658,2.403,664,2.832,670,4.52,714,1.667,716,1.881,733,2.326,757,2.538,759,3.097,760,2.426,767,4.913,769,3.339,782,2.881,783,1.212,786,2.354,805,2.864,981,2.426,982,2.002,986,1.315,993,3.075,1033,4.275,1034,2.02,1064,6.802,1065,6.072,1068,4.864,1071,2.426,1086,2.864,1116,3.206,1117,5.056,1295,4.471,1299,2.426,1301,2.193,1346,2.538,1411,2.407,1418,2.689,1491,2.864,1495,1.262,1535,2.426,1540,2.193,1546,2.02,1568,2.426,1569,3.051,1570,5.121,1571,4.229,1572,6.954,1573,7.124,1574,6.49,1575,6.954,1576,4.359,1577,4.229,1578,4.229,1579,4.229,1580,5.666,1581,5.725,1582,7.266,1583,6.954,1584,2.778,1585,4.229,1586,4.043,1587,4.619,1588,3.693,1589,4.229,1590,2.778,1591,4.162,1592,3.339,1593,4.229,1594,2.778,1595,7.387,1596,4.162,1597,5.725,1598,5.725,1599,5.725,1600,4.229,1601,4.229,1602,5.725,1603,4.229,1604,2.778,1605,4.229,1606,2.778,1607,3.877,1608,2.778,1609,2.778,1610,2.778,1611,4.229,1612,4.998,1613,2.778,1614,4.229,1615,2.778,1616,2.778,1617,2.778,1618,2.778,1619,2.778,1620,5.121,1621,7.124,1622,6.072,1623,5.121,1624,5.121,1625,5.121,1626,2.778,1627,5.725,1628,2.778,1629,5.725,1630,2.778,1631,2.778,1632,2.778,1633,2.193,1634,2.778,1635,2.426,1636,2.02,1637,1.881,1638,2.426,1639,1.667,1640,2.02,1641,2.778,1642,2.778,1643,5.725,1644,5.725,1645,5.725,1646,2.778,1647,2.778,1648,2.778,1649,2.778,1650,2.778,1651,2.778,1652,2.778,1653,2.426,1654,1.766,1655,2.778,1656,2.778,1657,4.229,1658,5.121,1659,2.426,1660,2.426,1661,5.725,1662,4.229,1663,4.229,1664,4.229,1665,4.229,1666,5.121,1667,4.229,1668,3.693,1669,2.778,1670,2.778,1671,4.229,1672,4.229,1673,4.229,1674,4.229,1675,4.229,1676,5.725,1677,4.229,1678,2.778,1679,2.426,1680,4.471,1681,2.778,1682,5.121,1683,2.778,1684,2.426,1685,2.778,1686,2.426,1687,2.778,1688,2.778,1689,4.229,1690,2.778,1691,4.229,1692,2.778,1693,2.778,1694,2.778,1695,2.778,1696,2.778,1697,2.778,1698,1.435,1699,4.229,1700,2.778]],["title/modules/AppModule.html",[258,0.899,1701,2.955]],["body/modules/AppModule.html",[2,0.144,3,0.109,8,0.091,12,0.275,26,0.686,55,0.013,107,0.286,108,0.162,112,0.156,113,0.008,155,0.488,193,1.192,256,0.01,257,0.01,258,1.691,259,4.56,260,1.088,261,2.958,262,2.958,263,2.75,269,3.792,270,3.24,271,3.639,272,2.826,273,2.195,274,2.041,276,2.826,278,2.28,286,5.315,287,4.895,288,3.259,289,4.895,290,3.09,291,3.09,292,1.281,293,2.466,294,2.57,295,3.09,296,2.94,1359,4.809,1365,4.809,1366,5.094,1373,3.948,1374,4.287,1375,4.741,1569,2.826,1636,4.895,1637,3.677,1701,6.31,1702,4.741,1703,4.741,1704,4.741,1705,4.741,1706,5.427,1707,5.427,1708,5.094,1709,5.427,1710,5.094,1711,5.43,1712,6.732,1713,6.732,1714,6.732,1715,5.878,1716,4.741,1717,5.878,1718,3.948,1719,4.741,1720,4.741,1721,5.43,1722,5.43,1723,4.741,1724,5.43,1725,4.741,1726,5.43,1727,5.43]],["title/modules/AppRoutingModule.html",[258,0.899,1706,2.753]],["body/modules/AppRoutingModule.html",[0,0.343,2,0.148,3,0.112,8,0.094,55,0.013,79,1.237,107,0.284,108,0.167,112,0.159,121,1.198,155,0.503,162,0.971,183,0.793,185,0.936,202,0.936,206,0.901,211,1.143,216,0.971,217,0.936,223,0.884,228,0.936,234,1.012,235,0.853,237,0.793,240,0.936,256,0.01,257,0.01,258,1.516,260,1.122,261,2.773,262,2.263,263,2.578,270,3.264,272,2.88,273,2.263,274,2.104,276,2.88,277,3.115,278,2.35,292,1.321,293,2.542,294,2.649,412,2.489,1106,6.085,1494,3.919,1495,3.368,1569,2.35,1591,4.987,1639,3.36,1654,3.559,1706,5.696,1720,4.887,1728,4.887,1729,4.887,1730,4.887,1731,4.887,1732,5.467,1733,4.419,1734,5.598,1735,5.598,1736,5.598,1737,5.598,1738,5.598,1739,3.246,1740,4.887,1741,5.598,1742,5.598,1743,5.598,1744,5.598,1745,4.07,1746,4.419,1747,5.598,1748,6.567,1749,5.598,1750,5.598,1751,5.598,1752,6.86,1753,5.598,1754,5.598,1755,4.887,1756,7.208,1757,5.598,1758,5.598,1759,5.598,1760,5.598,1761,5.598]],["title/guards/AuthLoginGuard.html",[1748,3.209,1762,3.209]],["body/guards/AuthLoginGuard.html",[2,0.138,3,0.104,8,0.088,12,0.382,14,0.709,20,0.713,32,0.469,37,0.831,46,0.863,50,0.557,52,0.563,53,1.074,54,1.095,55,0.013,56,0.616,57,0.839,58,1.018,59,1.708,73,0.664,74,1.449,75,1.812,79,1.781,85,4.177,93,2.15,100,5.693,103,3.167,107,0.258,108,0.156,112,0.121,113,0.008,114,1.101,115,1.883,121,1.117,256,0.01,257,0.01,260,1.511,334,5.045,343,4.449,345,2.879,352,2.279,430,1.227,444,2.758,542,2.69,546,2.687,639,3.943,657,2.828,676,1.83,753,4.449,786,2.384,1015,2.224,1016,4.123,1033,4.411,1056,4.123,1058,4.449,1116,4.025,1128,2.58,1324,4.449,1417,3.797,1418,3.32,1495,2.984,1496,2.828,1569,3.167,1587,5.449,1639,3.134,1654,4.942,1748,5.187,1756,6.586,1762,6.138,1763,7.544,1764,5.222,1765,6.57,1766,6.265,1767,6.57,1768,5.222,1769,5.222,1770,3.943,1771,6.57,1772,7.774,1773,7.774,1774,5.222,1775,7.936,1776,6.586,1777,6.57,1778,5.222,1779,5.736,1780,7.189,1781,6.57,1782,6.57,1783,4.56,1784,5.222,1785,5.222,1786,5.222,1787,4.56,1788,5.222,1789,5.222]],["title/modules/AuthModule.html",[258,0.899,1707,2.753]],["body/modules/AuthModule.html",[2,0.167,3,0.126,8,0.106,55,0.013,107,0.28,108,0.188,112,0.171,113,0.009,155,0.566,202,1.132,256,0.011,257,0.011,258,1.628,260,1.262,261,3.154,262,2.547,263,2.368,270,3.354,272,3.091,273,2.547,274,2.368,276,3.091,277,3.344,278,2.645,287,5.353,288,3.781,289,5.353,290,3.585,291,3.585,292,1.486,293,2.861,294,2.981,1707,5.708,1790,5.5,1791,5.5,1792,6.3,1793,6.3,1794,6.3]],["title/injectables/AuthService.html",[1015,1.376,1033,2.201]],["body/injectables/AuthService.html",[2,0.094,3,0.071,8,0.06,12,0.359,14,0.66,32,0.318,33,0.771,35,1.034,37,0.64,46,0.665,50,0.64,52,0.552,53,0.827,54,1.079,55,0.013,56,0.694,57,0.919,58,1.003,59,1.674,67,1.222,73,0.698,74,2.105,75,1.758,79,1.678,85,4.503,89,1.156,93,1.656,94,1.713,101,1.277,102,1.075,103,2.124,105,2.739,107,0.235,108,0.106,112,0.082,113,0.005,114,1.033,115,1.015,121,1.595,125,0.886,127,1.868,231,0.895,256,0.008,257,0.008,274,1.902,292,1.671,316,1.467,334,4.954,352,1.545,365,0.835,412,2.57,426,3.196,430,1.342,490,1.713,542,2.107,546,1.713,657,4.475,676,1.241,733,2.298,746,5.343,786,1.835,792,4.361,818,3.804,854,2.81,893,5.815,990,3.036,1015,1.998,1016,2.796,1017,2.575,1021,2.398,1022,2.796,1023,2.256,1025,1.917,1026,3.678,1031,3.688,1033,2.739,1047,3.994,1058,3.426,1068,3.994,1109,6.745,1116,4.22,1117,4.682,1128,1.749,1161,5.887,1278,3.994,1394,4.636,1417,2.575,1418,2.251,1496,2.739,1552,3.216,1580,5.622,1607,4.361,1637,4.797,1654,4.503,1718,2.575,1766,6.214,1770,3.543,1779,6.511,1795,3.092,1796,6.44,1797,7.084,1798,7.084,1799,6.44,1800,6.44,1801,6.44,1802,5.059,1803,6.44,1804,5.622,1805,6.44,1806,6.44,1807,6.44,1808,6.44,1809,6.44,1810,5.059,1811,5.059,1812,5.059,1813,3.092,1814,5.059,1815,5.059,1816,3.541,1817,5.059,1818,3.541,1819,5.378,1820,8.405,1821,3.541,1822,6.511,1823,2.394,1824,3.541,1825,3.541,1826,3.541,1827,5.059,1828,6.723,1829,3.541,1830,4.361,1831,4.417,1832,3.541,1833,3.541,1834,7.793,1835,3.541,1836,3.541,1837,5.059,1838,3.541,1839,7.084,1840,7.084,1841,5.059,1842,3.541,1843,5.059,1844,3.541,1845,3.541,1846,3.541,1847,5.059,1848,3.541,1849,3.541,1850,3.541,1851,5.059,1852,3.541,1853,3.541,1854,5.903,1855,4.417,1856,5.903,1857,5.059,1858,3.541,1859,3.541,1860,3.092,1861,3.541,1862,3.541,1863,3.541,1864,3.541,1865,3.541,1866,3.541,1867,3.541,1868,5.059,1869,2.251,1870,3.541,1871,3.541,1872,3.541,1873,3.541,1874,3.541,1875,3.541,1876,3.541,1877,3.541,1878,3.541,1879,3.541,1880,3.541,1881,3.541,1882,3.541,1883,3.541,1884,3.541,1885,3.541,1886,3.541,1887,3.541,1888,5.059,1889,5.059,1890,3.541,1891,3.541,1892,3.541,1893,3.541,1894,3.541,1895,3.541,1896,3.541,1897,3.541]],["title/modules/BuildingModule.html",[258,0.899,1898,2.753]],["body/modules/BuildingModule.html",[2,0.163,3,0.123,8,0.103,52,0.527,55,0.013,107,0.278,108,0.183,112,0.185,113,0.009,155,0.553,195,1.21,256,0.011,257,0.011,258,1.605,260,1.232,261,3.123,262,2.487,263,2.312,269,3.905,270,3.336,271,3.747,272,3.048,273,2.487,274,2.312,276,3.048,277,3.297,278,2.582,292,1.451,293,2.793,294,2.911,295,3.5,296,3.33,1379,4.472,1898,5.801,1899,5.37,1900,5.37,1901,6.15,1902,5.37,1903,6.15,1904,4.856]],["title/components/BuildingSummaryComponent.html",[0,0.168,195,0.576]],["body/components/BuildingSummaryComponent.html",[0,0.332,1,0.549,2,0.103,3,0.078,4,0.612,5,0.634,6,0.634,7,0.591,8,0.065,12,0.273,13,0.822,14,0.625,20,0.736,21,0.879,24,0.634,25,1.224,26,1.093,27,0.736,28,0.764,30,0.764,32,0.349,33,0.822,35,1.358,37,0.682,42,0.95,45,0.839,46,0.709,50,0.624,52,0.723,53,1.096,54,0.822,55,0.013,56,0.574,57,0.823,58,0.764,59,1.743,61,0.754,73,0.64,89,1.073,95,0.945,107,0.257,108,0.116,111,0.978,112,0.09,113,0.006,114,0.879,115,1.778,121,1.154,125,1.175,127,1.228,129,1.046,133,0.915,139,1.042,148,2.187,155,0.349,156,0.852,157,0.852,158,0.822,159,1.096,160,0.634,161,0.882,162,0.549,163,0.634,164,0.529,165,0.634,166,0.529,167,0.634,168,0.549,169,1.096,170,0.529,171,0.882,172,0.549,173,0.634,174,0.549,175,0.634,176,0.549,177,0.882,178,0.549,179,0.882,180,0.549,181,0.634,182,0.549,183,0.95,184,1.096,185,0.529,186,0.634,187,0.57,188,1.014,189,0.549,190,1.014,191,0.549,192,1.096,193,0.549,194,0.634,195,0.95,196,0.549,197,0.634,198,0.549,199,0.612,200,0.549,201,0.634,202,0.529,203,0.634,204,0.549,205,0.549,206,0.926,207,1.014,208,0.549,209,0.634,210,0.549,211,0.549,212,0.634,213,0.549,214,0.549,215,0.549,216,0.549,217,0.529,218,0.634,219,0.549,220,0.612,221,0.882,222,0.549,223,1.058,224,0.549,225,0.549,226,0.549,227,0.549,228,0.529,229,0.634,230,0.549,231,0.51,232,0.882,233,0.549,234,0.529,235,0.591,236,0.549,237,1.112,238,0.591,239,0.911,240,0.529,241,0.634,242,0.549,243,0.435,244,0.57,245,0.549,246,0.764,247,0.634,248,0.549,249,0.57,250,0.549,251,0.57,252,0.549,253,0.549,254,0.612,255,0.634,256,0.008,257,0.008,292,0.915,316,1.389,364,1.958,365,1.8,379,0.882,427,1.891,430,1.112,462,2.1,490,1.313,527,2.812,569,2.181,570,2.181,571,2.181,572,2.181,573,2.028,574,2.103,577,3.071,620,2.815,654,3.254,658,2.265,664,3.184,665,3.654,782,2.848,783,1.693,1023,2.674,1024,1.836,1025,2.101,1027,1.458,1030,3.174,1032,2.208,1128,2.665,1342,2.466,1343,2.466,1390,5.294,1394,3.944,1398,3.045,1408,3.923,1411,3.071,1414,1.569,1415,2.821,1420,3.063,1428,3.063,1430,3.063,1436,3.578,1437,3.313,1438,3.174,1439,3.174,1440,2.45,1441,2.45,1443,3.331,1452,2.466,1494,3.482,1495,3.045,1496,3.631,1541,2.627,1543,4.511,1544,3.923,1545,3.923,1546,2.821,1548,3.923,1549,3.923,1551,3.43,1552,3.43,1553,4.941,1554,3.923,1555,3.654,1556,3.654,1559,4.26,1561,2.627,1566,2.821,1904,6.197,1905,6.853,1906,5.855,1907,5.855,1908,5.855,1909,3.88,1910,3.88,1911,3.88,1912,3.88,1913,3.43,1914,3.88,1915,3.387,1916,3.88,1917,3.387,1918,4.711,1919,3.387,1920,3.387,1921,3.88,1922,3.387,1923,3.387]],["title/components/ButtonsComponent.html",[0,0.168,196,0.576]],["body/components/ButtonsComponent.html",[0,0.336,1,0.994,2,0.131,3,0.099,4,0.783,5,0.811,6,0.811,7,0.755,8,0.083,12,0.251,13,1.228,14,0.545,15,3.816,20,0.868,21,0.994,24,0.811,25,1.236,26,1.103,27,0.868,28,0.9,30,0.9,32,0.446,37,0.936,42,1.048,44,1.483,45,0.836,46,0.922,50,0.544,52,0.601,53,1.039,55,0.013,56,0.545,57,0.579,61,0.603,67,1.317,68,2.153,73,0.404,81,1.192,82,1.883,89,0.755,95,0.968,107,0.211,108,0.148,111,0.899,112,0.115,113,0.007,155,0.446,156,1.004,157,1.004,158,0.968,159,1.21,160,0.811,161,1.039,162,0.702,163,0.811,164,0.677,165,0.811,166,0.677,167,0.811,168,0.702,169,1.21,170,0.677,171,1.039,172,0.702,173,0.811,174,0.702,175,0.811,176,0.702,177,1.039,178,0.702,179,1.039,180,0.702,181,0.811,182,0.702,183,1.048,184,1.21,185,0.677,186,0.811,187,0.729,188,1.147,189,0.702,190,1.147,191,0.702,192,1.21,193,0.702,194,0.811,195,0.702,196,1.048,197,0.811,198,0.702,199,0.783,200,0.702,201,0.811,202,0.677,203,0.811,204,0.702,205,0.702,206,1.005,207,1.147,208,0.702,209,0.811,210,0.702,211,0.702,212,0.811,213,0.702,214,0.702,215,0.702,216,0.702,217,0.677,218,0.811,219,0.702,220,0.783,221,1.039,222,0.702,223,1.168,224,0.702,225,0.702,226,0.702,227,0.994,228,0.677,229,0.811,230,0.702,231,0.652,232,1.039,233,0.702,234,0.677,235,0.755,236,0.702,237,1.142,238,0.755,239,1.031,240,0.677,241,0.811,242,0.702,243,0.556,244,0.729,245,0.702,246,0.9,247,0.811,248,0.702,249,0.729,250,0.702,251,0.729,252,0.702,253,0.702,254,0.783,255,0.811,256,0.009,257,0.009,365,1.5,412,2.307,782,2.307,1264,4.623,1278,5.02,1924,4.33,1925,6.358,1926,6.358,1927,7.018,1928,6.358,1929,6.358,1930,4.96]],["title/injectables/CdbService.html",[1015,1.376,1028,2.584]],["body/injectables/CdbService.html",[0,0.27,2,0.138,3,0.104,8,0.087,12,0.332,14,0.561,15,3.928,32,0.467,33,0.997,35,1.256,37,0.827,46,0.86,50,0.63,54,0.791,55,0.013,56,0.445,57,0.606,58,0.735,59,2.115,73,0.678,82,2.229,94,2.216,95,1.146,99,4.433,101,1.227,102,1.306,104,3.233,107,0.25,108,0.155,112,0.121,113,0.008,114,0.735,115,1.488,243,0.937,256,0.01,257,0.01,292,2.018,316,1.355,318,3.381,322,4.161,327,3.088,352,2.265,365,1.225,542,2.142,555,5.943,657,3.544,658,3.539,732,2.748,733,2.973,817,1.544,818,4.086,868,3.116,1015,2.427,1017,3.774,1025,2.811,1028,4.161,1030,3.851,1031,4.076,1032,2.954,1043,5.917,1049,5.168,1057,6.572,1159,5.168,1226,5.715,1271,3.774,1415,3.774,1931,4.532,1932,7.527,1933,7.527,1934,7.527,1935,7.527,1936,7.527,1937,7.527,1938,4.532,1939,6.545,1940,5.191,1941,7.527,1942,6.545,1943,6.545,1944,5.191,1945,6.545,1946,5.191,1947,5.191,1948,5.715,1949,5.191,1950,6.545,1951,5.191,1952,5.191,1953,5.191,1954,5.191,1955,5.191,1956,5.191,1957,5.715,1958,5.191,1959,6.545,1960,5.715,1961,5.191,1962,5.191]],["title/modules/DataModule.html",[258,0.899,269,1.924]],["body/modules/DataModule.html",[2,0.162,3,0.122,8,0.103,12,0.309,55,0.013,59,1.878,95,1.101,107,0.278,108,0.182,112,0.179,113,0.009,155,0.548,243,0.81,256,0.011,257,0.011,258,1.759,260,1.223,261,2.921,262,2.467,263,2.893,269,4.039,272,3.034,273,2.467,274,2.294,276,3.034,277,3.281,278,2.562,567,4.593,782,2.988,1028,5.236,1030,3.898,1031,3.304,1032,3.473,1394,4.593,1576,4.687,1717,6.721,1718,4.437,1963,5.328,1964,5.328,1965,6.102,1966,6.102,1967,6.102,1968,6.102]],["title/modules/HealthModule.html",[258,0.899,1708,2.584]],["body/modules/HealthModule.html",[0,0.297,2,0.161,3,0.122,8,0.102,12,0.308,55,0.013,68,2.439,95,1.097,107,0.278,108,0.181,112,0.185,113,0.009,155,0.546,198,1.208,199,1.213,256,0.011,257,0.011,258,1.757,260,1.217,261,3.106,262,2.456,263,2.283,269,3.894,270,3.326,271,3.737,272,3.025,273,2.456,274,2.283,276,3.025,277,3.272,278,2.55,292,1.812,293,2.758,294,2.874,295,3.456,296,3.289,1379,4.416,1708,5.438,1969,5.303,1970,5.303,1971,6.074,1972,5.303,1973,6.074,1974,4.795]],["title/components/HealthSummaryComponent.html",[0,0.168,198,0.576]],["body/components/HealthSummaryComponent.html",[0,0.332,1,0.545,2,0.102,3,0.077,4,0.608,5,0.629,6,0.629,7,0.586,8,0.065,12,0.313,13,0.817,14,0.623,20,0.732,21,0.875,24,0.629,25,1.224,26,1.093,27,0.732,28,0.76,30,0.76,32,0.346,33,0.817,35,1.355,37,0.678,42,0.946,45,0.838,46,0.705,50,0.624,52,0.529,53,1.092,54,0.817,55,0.013,56,0.572,57,0.821,58,0.76,59,1.737,61,0.751,73,0.639,89,1.07,95,0.941,107,0.257,108,0.115,111,0.972,112,0.089,113,0.006,114,0.875,115,1.77,121,1.148,125,1.171,127,1.218,129,1.04,133,0.908,139,1.034,148,2.183,155,0.346,156,0.847,157,0.847,158,0.817,159,1.092,160,0.629,161,0.877,162,0.545,163,0.629,164,0.525,165,0.629,166,0.525,167,0.629,168,0.545,169,1.092,170,0.525,171,0.877,172,0.545,173,0.629,174,0.545,175,0.629,176,0.545,177,0.877,178,0.545,179,0.877,180,0.545,181,0.629,182,0.545,183,0.946,184,1.092,185,0.525,186,0.629,187,0.565,188,1.01,189,0.545,190,1.01,191,0.545,192,1.092,193,0.545,194,0.629,195,0.545,196,0.545,197,0.629,198,0.946,199,1.237,200,0.545,201,0.629,202,0.525,203,0.629,204,0.545,205,0.545,206,0.923,207,1.01,208,0.545,209,0.629,210,0.545,211,0.545,212,0.629,213,0.545,214,0.545,215,0.545,216,0.545,217,0.525,218,0.629,219,0.545,220,0.608,221,0.877,222,0.545,223,1.055,224,0.545,225,0.545,226,0.545,227,0.545,228,0.525,229,0.629,230,0.545,231,0.506,232,0.877,233,0.545,234,0.525,235,0.586,236,0.545,237,1.11,238,0.586,239,0.908,240,0.525,241,0.629,242,0.545,243,0.431,244,0.565,245,0.545,246,0.76,247,0.629,248,0.545,249,0.565,250,0.545,251,0.565,252,0.545,253,0.545,254,0.608,255,0.629,256,0.008,257,0.008,292,1.457,316,1.384,345,1.947,364,2.843,365,1.797,379,0.877,427,1.88,430,1.109,462,2.091,490,1.303,527,2.807,569,2.169,570,2.169,571,2.169,572,2.169,573,2.017,574,2.091,577,3.054,611,2.916,620,2.806,654,3.248,658,2.253,664,3.176,665,3.634,782,2.843,783,1.68,1023,1.88,1024,1.822,1025,2.084,1027,1.447,1030,3.163,1032,2.19,1128,2.651,1342,2.447,1343,2.447,1390,5.276,1394,3.927,1398,3.035,1408,3.901,1411,3.054,1414,1.556,1415,2.799,1420,3.039,1428,3.039,1430,3.039,1436,3.574,1440,2.437,1441,2.437,1443,2.342,1452,2.447,1494,3.472,1495,3.035,1496,3.618,1541,2.607,1542,3.634,1543,4.491,1544,3.901,1545,3.901,1546,2.799,1548,3.901,1549,3.901,1551,3.411,1552,3.411,1553,4.929,1554,3.901,1555,3.634,1556,3.634,1559,3.039,1561,2.607,1566,2.799,1906,5.835,1907,5.835,1908,5.835,1913,3.411,1915,3.361,1917,3.361,1918,4.685,1919,3.361,1920,3.361,1922,3.361,1923,3.361,1974,6.187,1975,6.842,1976,4.685,1977,3.849,1978,3.849,1979,3.849,1980,3.849,1981,3.849,1982,3.849,1983,8.19,1984,3.534,1985,6.683,1986,3.326]],["title/injectables/HttpClientService.html",[1015,1.376,1030,1.924]],["body/injectables/HttpClientService.html",[2,0.123,3,0.093,8,0.078,12,0.397,14,0.619,32,0.418,37,1.041,46,0.801,50,0.616,52,0.619,53,0.996,54,1.194,55,0.013,56,0.672,57,0.875,58,1.11,59,2.068,60,3.148,67,1.262,71,2.291,73,0.695,93,1.994,104,3.011,107,0.249,108,0.139,112,0.108,113,0.007,114,1.139,115,2.149,121,1.545,243,0.932,256,0.009,257,0.009,316,1.262,412,2.211,426,4.166,427,2.135,430,1.291,490,2.063,509,3.378,542,2.804,546,2.063,551,1.805,670,6.411,786,2.211,793,2.135,818,4.165,868,4.333,1015,2.303,1021,3.146,1022,3.668,1030,2.884,1031,4.483,1033,4.356,1034,3.378,1109,5.37,1110,5.321,1128,4.067,1137,7.189,1161,5.7,1279,6.304,1394,4.766,1718,4.431,1770,4.082,1804,6.304,1813,4.056,1822,6.945,1823,2.884,1855,5.321,1860,6.304,1869,4.891,1987,7.025,1988,4.056,1989,6.095,1990,6.095,1991,4.127,1992,6.095,1993,7.22,1994,6.095,1995,4.646,1996,6.095,1997,4.646,1998,6.095,1999,4.646,2000,4.646,2001,6.095,2002,4.646,2003,6.095,2004,6.095,2005,6.095,2006,4.646,2007,6.095,2008,4.646,2009,6.095,2010,4.646,2011,6.095,2012,6.095,2013,5.321,2014,4.646,2015,4.646,2016,4.646,2017,4.646,2018,7.955,2019,4.646,2020,4.646,2021,4.646,2022,4.646,2023,4.646]],["title/modules/IasMaterialModule.html",[258,0.899,270,1.643]],["body/modules/IasMaterialModule.html",[0,0.289,2,0.154,3,0.116,8,0.097,12,0.294,55,0.013,107,0.287,108,0.173,112,0.163,113,0.009,206,0.92,214,0.82,256,0.01,257,0.01,258,1.664,261,2.342,270,2.832,276,2.941,291,3.297,293,2.631,672,5.093,780,4.574,786,2.541,1163,4.212,1277,4.212,1635,5.058,1636,4.212,1715,6.574,1716,5.058,2024,5.793,2025,5.793,2026,7.529,2027,5.793,2028,7.529,2029,5.793,2030,7.529,2031,5.793,2032,7.529,2033,5.793,2034,7.529,2035,5.793,2036,7.529,2037,5.793,2038,7.529,2039,5.793,2040,7.529,2041,5.793,2042,7.529,2043,7.529,2044,5.793,2045,7.529,2046,5.793,2047,7.529,2048,5.793,2049,7.529,2050,7.529,2051,5.793,2052,7.529,2053,5.793,2054,7.529,2055,5.793,2056,7.529,2057,5.793,2058,7.529,2059,5.793,2060,7.529,2061,5.793,2062,2.993,2063,7.529,2064,5.058]],["title/classes/Iasio.html",[113,0.006,2065,3.209]],["body/classes/Iasio.html",[2,0.14,3,0.106,8,0.089,12,0.404,32,0.476,33,1.009,37,1.007,45,0.747,46,0.695,50,0.633,52,0.568,53,1.182,54,1.102,55,0.013,56,0.62,57,0.962,58,1.024,64,5.711,67,1.771,68,2.243,73,0.672,74,2.165,75,1.513,79,1.17,95,1.009,112,0.123,113,0.012,114,1.074,121,1.622,125,1.267,127,1.675,246,0.75,256,0.01,257,0.01,316,1.498,327,2.063,427,2.322,430,1.323,507,3.849,542,2.168,546,2.566,575,5.675,576,4.212,577,3.771,578,4.818,579,3.849,787,3.977,810,5.231,868,4.55,990,3.977,992,6.952,1013,5.231,1041,5.231,1157,5.231,1159,4.179,1408,3.849,2065,6.801,2066,4.622,2067,7.233,2068,7.963,2069,7.963,2070,7.963,2071,7.963,2072,6.626,2073,6.626,2074,6.626,2075,5.293,2076,6.626,2077,5.293,2078,5.293,2079,6.626,2080,6.626,2081,5.293,2082,5.785,2083,6.626,2084,5.293,2085,5.293,2086,5.293,2087,5.293,2088,5.293,2089,5.293,2090,5.293,2091,5.293,2092,5.293,2093,5.293,2094,5.293]],["title/components/LegendComponent.html",[0,0.168,200,0.576]],["body/components/LegendComponent.html",[0,0.327,1,0.554,2,0.104,3,0.078,4,0.618,5,0.64,6,0.64,7,0.596,8,0.066,12,0.198,13,0.827,14,0.717,20,0.741,21,0.883,24,0.64,25,1.224,26,1.093,27,0.741,28,0.769,30,0.769,32,0.352,33,0.827,37,0.686,42,0.953,45,0.841,46,0.819,50,0.625,52,0.534,53,0.888,55,0.013,56,0.465,61,0.476,66,4.327,73,0.319,89,0.596,101,1.489,102,1.254,107,0.18,108,0.117,112,0.091,113,0.006,134,1.644,136,1.411,139,1.458,142,2.651,144,1.424,148,2.406,155,0.707,156,0.857,157,0.857,158,0.827,159,1.1,160,0.64,161,0.888,162,0.554,163,0.64,164,0.534,165,0.64,166,0.534,167,0.64,168,0.554,169,1.1,170,0.534,171,0.888,172,0.554,173,0.64,174,0.554,175,0.64,176,0.554,177,0.888,178,0.554,179,0.888,180,0.554,181,0.64,182,0.554,183,0.953,184,1.1,185,0.534,186,0.64,187,0.575,188,1.019,189,0.554,190,1.019,191,0.554,192,1.1,193,0.554,194,0.64,195,0.554,196,0.554,197,0.64,198,0.554,199,0.618,200,0.953,201,0.64,202,0.534,203,0.64,204,0.554,205,0.554,206,0.929,207,1.019,208,0.554,209,0.64,210,0.554,211,0.554,212,0.64,213,0.554,214,0.554,215,0.554,216,0.554,217,0.534,218,0.64,219,0.554,220,0.618,221,0.888,222,0.554,223,1.062,224,0.554,225,0.554,226,0.554,227,0.554,228,0.534,229,0.64,230,0.554,231,0.514,232,0.888,233,0.554,234,0.534,235,0.596,236,0.554,237,1.083,238,0.596,239,0.916,240,0.534,241,0.64,242,0.554,243,0.439,244,0.575,245,0.554,246,0.769,247,0.64,248,0.554,249,0.575,250,0.554,251,0.575,252,0.554,253,0.554,254,0.618,255,0.64,256,0.008,257,0.008,344,2.228,345,2.907,364,2.947,365,1.904,369,5.014,379,1.381,381,1.973,404,1.198,485,2.442,486,2.429,491,1.086,498,2.831,500,2.228,505,2.195,573,2.956,574,3.064,608,5.315,609,5.315,610,5.315,611,2.938,620,2.28,628,3.09,636,4.287,638,2.195,639,3.259,817,1.281,1023,2.68,1027,1.472,1436,3.655,1443,3.338,1668,4.741,1984,3.62,1986,3.186,2095,3.418,2096,6.233,2097,5.43,2098,6.732,2099,6.732,2100,6.732,2101,6.732,2102,6.732,2103,6.732,2104,6.732,2105,6.732,2106,6.732,2107,5.43,2108,3.915,2109,3.915,2110,3.915,2111,3.915,2112,4.741,2113,3.915,2114,4.741,2115,3.915,2116,4.741,2117,3.915,2118,4.741,2119,3.915,2120,4.741,2121,3.915,2122,3.915,2123,3.915,2124,3.091]],["title/components/LoginComponent.html",[0,0.168,202,0.555]],["body/components/LoginComponent.html",[0,0.328,1,0.51,2,0.095,3,0.072,4,0.568,5,0.589,6,0.589,7,0.548,8,0.061,12,0.302,13,0.78,14,0.691,20,0.698,21,0.844,24,0.589,25,1.22,26,1.089,27,0.698,28,0.725,30,0.725,32,0.324,33,0.78,35,1.248,37,0.647,42,0.919,44,1.026,45,0.761,46,0.673,50,0.629,52,0.587,53,0.837,54,0.78,55,0.013,56,0.556,57,0.856,58,0.725,59,1.852,60,2.644,61,0.438,67,1.06,71,1.924,73,0.611,75,1.36,82,1.516,89,0.988,93,1.949,95,0.78,100,5.523,101,0.96,102,0.568,104,3.205,107,0.227,108,0.107,112,0.084,113,0.005,114,0.971,115,1.467,121,0.77,125,1.043,129,0.698,133,1.208,134,2.149,136,1.549,137,2.234,139,1.375,140,1.859,141,2.831,144,1.482,150,1.86,151,3.39,155,0.324,156,0.808,157,0.808,158,0.78,159,1.061,160,0.589,161,0.837,162,0.51,163,0.589,164,0.491,165,0.589,166,0.491,167,0.589,168,0.51,169,1.061,170,0.491,171,0.837,172,0.51,173,0.589,174,0.51,175,0.589,176,0.51,177,0.837,178,0.51,179,0.837,180,0.51,181,0.589,182,0.51,183,0.919,184,1.061,185,0.491,186,0.589,187,0.529,188,0.974,189,0.51,190,0.974,191,0.51,192,1.061,193,0.51,194,0.589,195,0.51,196,0.51,197,0.589,198,0.51,199,0.568,200,0.51,201,0.589,202,0.885,203,0.589,204,0.51,205,0.51,206,0.901,207,0.974,208,0.51,209,0.589,210,0.51,211,0.51,212,0.589,213,0.51,214,0.51,215,0.51,216,0.51,217,0.491,218,0.589,219,0.51,220,0.568,221,0.837,222,0.51,223,1.024,224,0.51,225,0.51,226,0.51,227,0.51,228,0.491,229,0.589,230,0.51,231,1.001,232,0.837,233,0.51,234,0.491,235,0.548,236,0.51,237,1.061,238,0.548,239,0.875,240,0.491,241,0.589,242,0.51,243,0.403,244,0.529,245,0.51,246,0.725,247,0.589,248,0.51,249,0.529,250,0.51,251,0.529,252,0.51,253,0.51,254,0.568,255,0.589,256,0.008,257,0.008,263,2.239,288,2.161,290,2.049,291,3.39,292,1.208,316,1.06,365,1.405,379,1.246,380,2.501,381,1.885,403,1.403,404,1.567,422,3.371,426,2.772,430,0.94,442,2.529,485,2.161,486,1.403,490,1.219,491,1.652,492,1.675,493,1.178,494,2.049,495,2.438,498,2.325,500,2.049,505,1.455,542,1.178,546,2.321,628,2.913,638,1.455,639,3.575,662,1.571,745,4.998,757,2.161,759,1.455,786,2.487,805,4.394,818,3.205,893,4.717,972,2.623,984,2.617,1023,2.496,1033,4.435,1042,6.016,1116,3.817,1117,5.445,1128,2.529,1163,4.331,1214,4.394,1324,4.824,1491,3.467,1496,3.513,1569,2.501,1587,3.787,1607,3.467,1639,2.161,1654,5.247,1660,3.143,1679,4.469,1770,3.575,1783,3.143,1787,4.469,1828,6.826,1830,4.394,1831,4.469,1869,5.019,1913,2.289,2125,3.143,2126,5.957,2127,5.119,2128,6.539,2129,6.539,2130,5.119,2131,3.6,2132,6.747,2133,5.985,2134,5.665,2135,5.119,2136,4.469,2137,3.6,2138,3.6,2139,3.6,2140,5.119,2141,3.6,2142,5.623,2143,3.541,2144,5.957,2145,4.042,2146,6.488,2147,3.6,2148,5.119,2149,3.6,2150,3.6,2151,6.653,2152,3.6,2153,3.6,2154,3.6,2155,5.665,2156,3.722,2157,4.469,2158,5.119,2159,3.6,2160,3.143,2161,3.143,2162,3.6,2163,3.6,2164,3.6,2165,3.6,2166,3.6,2167,4.469,2168,3.6,2169,3.143,2170,2.842,2171,3.6,2172,3.6,2173,5.119,2174,3.6,2175,5.665,2176,3.6]],["title/components/MapComponent.html",[0,0.168,204,0.576]],["body/components/MapComponent.html",[0,0.34,1,0.694,2,0.13,3,0.098,4,0.774,5,0.802,6,0.802,7,0.747,8,0.082,12,0.248,13,0.961,14,0.541,20,0.861,21,0.989,24,0.802,25,1.235,26,1.102,27,0.861,28,0.894,30,0.894,32,0.441,37,0.798,42,1.044,44,1.528,45,0.807,46,0.917,50,0.605,52,0.598,53,1.032,55,0.013,56,0.541,61,0.596,73,0.4,79,1.395,82,1.869,89,0.747,95,0.961,101,1.183,102,0.996,103,2.65,107,0.163,108,0.146,112,0.114,113,0.007,144,1.12,147,2.46,155,0.441,156,0.996,157,0.996,158,0.961,159,1.205,160,0.802,161,1.032,162,0.694,163,0.802,164,0.669,165,0.802,166,0.669,167,0.802,168,0.694,169,1.205,170,0.669,171,1.032,172,0.694,173,0.802,174,0.694,175,0.802,176,0.694,177,1.032,178,0.694,179,1.032,180,0.694,181,0.802,182,0.694,183,1.044,184,1.205,185,0.669,186,0.802,187,0.72,188,1.141,189,0.694,190,1.141,191,0.694,192,1.205,193,0.694,194,0.802,195,0.694,196,0.694,197,0.802,198,0.694,199,0.774,200,0.694,201,0.802,202,0.669,203,0.802,204,1.044,205,0.694,206,1.002,207,1.141,208,0.694,209,0.802,210,0.694,211,0.694,212,0.802,213,0.694,214,0.694,215,0.694,216,0.694,217,0.669,218,0.802,219,0.694,220,0.774,221,1.032,222,0.694,223,1.163,224,0.694,225,0.694,226,0.694,227,0.694,228,0.669,229,0.802,230,0.694,231,0.644,232,1.032,233,0.694,234,0.669,235,0.747,236,0.694,237,1.139,238,0.747,239,1.083,240,0.669,241,0.802,242,0.694,243,0.782,244,0.72,245,0.694,246,0.894,247,0.802,248,0.694,249,0.72,250,0.694,251,0.72,252,0.694,253,0.694,254,0.774,255,0.802,256,0.009,257,0.009,379,1.205,491,1.36,558,3.788,658,2.65,676,2.848,1330,5.359,1684,4.281,1755,4.281,2177,4.281,2178,4.983,2179,6.98,2180,6.312,2181,6.98,2182,6.98,2183,6.312,2184,4.903,2185,4.903,2186,4.903]],["title/modules/MapModule.html",[258,0.899,1365,2.439]],["body/modules/MapModule.html",[2,0.167,3,0.126,8,0.106,55,0.013,107,0.272,108,0.187,112,0.187,113,0.009,155,0.565,204,1.213,256,0.011,257,0.011,258,1.625,260,1.259,261,3.151,262,2.541,263,2.929,272,3.086,273,2.541,274,2.362,276,3.086,277,3.339,278,2.638,1365,5.084,2187,5.487,2188,5.487,2189,5.487,2190,5.487,2191,5.614,2192,6.284,2193,6.284,2194,6.284]],["title/injectables/MapService.html",[1015,1.376,2191,2.753]],["body/injectables/MapService.html",[2,0.16,3,0.121,8,0.102,12,0.389,14,0.657,32,0.544,37,0.909,46,1.008,50,0.615,52,0.616,53,1.175,54,1.095,55,0.013,56,0.616,57,0.839,58,1.018,59,2.063,73,0.625,93,2.353,102,0.955,107,0.201,108,0.18,112,0.141,113,0.009,114,0.857,121,1.294,129,1.487,143,2.12,256,0.011,257,0.011,327,2.358,403,2.358,404,1.852,494,4.091,544,2.272,662,3.587,663,4.097,676,2.687,889,5.676,1015,2.597,1106,5.892,1320,5.282,2191,4.868,2195,5.282,2196,7.189,2197,7.189,2198,6.05,2199,7.189,2200,6.05,2201,8.104,2202,7.936,2203,6.05,2204,6.05,2205,6.05,2206,6.05,2207,6.05,2208,2.863,2209,6.05,2210,6.05,2211,6.05]],["title/components/MaterialButtonsColorsComponent.html",[0,0.168,205,0.576]],["body/components/MaterialButtonsColorsComponent.html",[0,0.342,1,0.328,2,0.061,3,0.046,4,1.064,5,0.379,6,0.379,7,0.353,8,0.039,12,0.342,13,1.256,14,0.198,20,0.708,21,0.802,24,0.379,25,1.198,26,1.071,27,1.071,28,0.978,30,0.328,35,1.055,42,0.735,44,1.351,45,0.848,50,0.284,52,0.198,54,0.791,55,0.013,56,0.541,58,0.52,61,0.992,67,1.075,71,1.381,73,0.585,74,2.088,75,1.293,78,3.145,79,1.447,81,0.973,95,0.353,101,0.434,102,1.291,107,0.172,108,0.069,111,0.42,112,0.157,113,0.01,114,1.122,121,1.688,125,1.341,129,1.494,133,1.076,136,0.602,139,0.986,140,0.664,143,1.287,144,0.529,145,0.871,148,2.194,152,1.603,155,0.208,156,0.58,157,0.893,158,0.559,159,0.849,160,0.379,161,0.6,162,0.328,163,0.379,164,0.316,165,0.379,166,0.316,167,0.379,168,0.328,169,0.849,170,0.316,171,0.6,172,0.328,173,0.379,174,0.328,175,0.379,176,0.328,177,0.6,178,0.328,179,0.6,180,0.328,181,0.379,182,0.328,183,1.099,184,0.849,185,0.316,186,0.379,187,0.34,188,0.746,189,0.328,190,0.746,191,0.328,192,0.849,193,0.328,194,0.379,195,0.328,196,0.328,197,0.379,198,0.328,199,0.366,200,0.328,201,0.379,202,0.316,203,0.379,204,0.328,205,0.735,206,1.063,207,0.746,208,0.52,209,0.6,210,0.52,211,0.52,212,0.379,213,0.52,214,0.853,215,0.328,216,0.328,217,0.316,218,0.379,219,0.328,220,0.366,221,0.6,222,0.52,223,1.163,224,0.853,225,0.52,226,0.52,227,0.328,228,0.316,229,0.379,230,0.328,231,0.599,232,0.6,233,0.328,234,0.316,235,0.353,236,0.328,237,0.927,238,0.353,239,0.67,240,0.316,241,0.379,242,0.328,243,0.26,244,0.34,245,0.328,246,1.092,247,0.379,248,0.328,249,0.34,250,0.328,251,0.34,252,0.328,253,0.328,254,0.366,255,0.379,256,0.005,257,0.005,260,1.04,292,1.225,303,2.735,316,1.075,327,3.088,364,2.601,365,1.877,379,1.26,380,2.529,381,2.072,403,0.903,404,1.932,410,3.387,423,2.18,430,1.033,433,2.023,444,1.542,462,1.916,467,1.097,483,2.266,484,0.841,485,1.655,486,0.903,491,1.266,492,0.758,493,1.699,505,0.937,508,0.871,520,1.738,522,1.145,523,2.254,527,2.557,530,1.991,534,1.052,542,1.699,544,1.351,546,1.916,551,1.538,552,3.654,559,1.097,568,2.457,569,2.099,570,2.099,571,2.099,572,2.099,573,1.952,574,2.023,611,2.266,621,0.973,625,2.004,629,1.052,638,0.937,640,1.052,662,1.011,712,3.412,713,0.973,719,1.991,720,2.628,732,2.18,759,1.485,786,1.333,793,1.819,817,1.225,854,2.266,972,0.937,982,1.097,986,1.097,989,2.682,994,2.682,1023,2.912,1027,0.871,1155,2.357,1238,2.357,1287,2.16,1398,1.668,1414,0.937,1436,3.551,1437,2.565,1438,3.098,1439,3.098,1440,2.358,1441,2.358,1443,3.175,1481,1.897,1523,1.197,1569,0.973,1698,2.357,1739,1.097,1823,1.097,1984,2.16,1986,1.097,2062,2.682,2143,2.357,2208,2.457,2212,1.145,2213,1.197,2214,3.816,2215,4.145,2216,4.112,2217,4.175,2218,2.811,2219,3.065,2220,4.227,2221,1.989,2222,1.254,2223,1.254,2224,1.254,2225,1.989,2226,2.811,2227,1.254,2228,1.254,2229,1.254,2230,1.254,2231,1.254,2232,2.471,2233,1.254,2234,2.471,2235,1.254,2236,1.254,2237,2.471,2238,1.254,2239,2.471,2240,1.254,2241,1.254,2242,2.471,2243,1.254,2244,1.254,2245,1.254,2246,2.357,2247,1.254,2248,2.471,2249,1.254,2250,2.471,2251,1.254,2252,2.471,2253,1.254,2254,1.254,2255,1.254,2256,1.254,2257,1.254,2258,1.254,2259,1.254,2260,1.254,2261,1.254,2262,1.254,2263,1.254,2264,1.254,2265,1.254,2266,1.254,2267,1.254,2268,1.254,2269,1.254,2270,1.254,2271,1.254,2272,1.254,2273,1.254,2274,1.254,2275,1.254,2276,1.254,2277,1.254,2278,1.254,2279,1.814,2280,1.989,2281,1.989,2282,1.989,2283,1.254,2284,2.811,2285,1.989,2286,1.989,2287,3.111,2288,3.261,2289,2.471,2290,2.471,2291,2.471,2292,1.989,2293,1.254,2294,1.254,2295,1.989,2296,1.254,2297,1.254,2298,1.254,2299,1.197,2300,1.254,2301,1.254,2302,1.254,2303,1.197,2304,1.254,2305,1.254,2306,1.254,2307,1.254,2308,2.796,2309,2.811,2310,3.545,2311,2.811,2312,2.811,2313,2.811,2314,2.811,2315,1.254,2316,3.545,2317,2.811,2318,2.811,2319,2.811,2320,2.811,2321,3.545,2322,2.811,2323,2.811,2324,2.811,2325,2.811,2326,2.811,2327,2.811,2328,2.565,2329,2.457,2330,2.682,2331,2.811,2332,2.811,2333,2.811,2334,2.357,2335,2.357,2336,1.254,2337,2.471,2338,1.897,2339,1.897,2340,1.897,2341,1.814,2342,1.897,2343,1.897,2344,1.254,2345,1.254,2346,1.254,2347,1.197,2348,1.254,2349,1.197,2350,1.254,2351,1.254,2352,2.317,2353,2.317,2354,2.317,2355,2.317,2356,2.317]],["title/components/MaterialCardSampleComponent.html",[0,0.168,208,0.576]],["body/components/MaterialCardSampleComponent.html",[0,0.342,1,0.332,2,0.062,3,0.047,4,1.068,5,0.383,6,0.383,7,0.357,8,0.039,12,0.343,13,1.209,14,0.201,20,0.713,21,0.806,24,0.383,25,1.199,26,1.071,27,1.073,28,0.982,30,0.332,35,1.06,42,0.74,44,1.356,45,0.848,50,0.287,52,0.201,54,0.796,55,0.013,56,0.543,58,0.525,61,0.993,67,1.082,71,1.394,73,0.586,74,2.093,75,1.3,78,3.011,79,1.453,81,0.98,95,0.357,101,0.44,102,1.292,107,0.173,108,0.07,111,0.425,112,0.157,113,0.01,114,1.124,121,1.691,125,1.278,129,1.497,133,1.085,136,0.61,139,0.996,140,0.672,143,1.299,144,0.535,145,0.881,148,2.182,152,1.023,155,0.211,156,0.585,157,0.899,158,0.565,159,0.855,160,0.383,161,0.606,162,0.332,163,0.383,164,0.32,165,0.383,166,0.32,167,0.383,168,0.332,169,0.855,170,0.32,171,0.606,172,0.332,173,0.383,174,0.332,175,0.383,176,0.332,177,0.606,178,0.332,179,0.606,180,0.332,181,0.383,182,0.332,183,1.101,184,0.855,185,0.32,186,0.383,187,0.344,188,0.752,189,0.332,190,0.752,191,0.332,192,0.855,193,0.332,194,0.383,195,0.332,196,0.332,197,0.383,198,0.332,199,0.37,200,0.332,201,0.383,202,0.32,203,0.383,204,0.332,205,0.525,206,1.065,207,0.752,208,0.74,209,0.752,210,0.525,211,0.525,212,0.383,213,0.525,214,0.857,215,0.332,216,0.332,217,0.32,218,0.383,219,0.332,220,0.37,221,0.606,222,0.525,223,1.166,224,0.857,225,0.525,226,0.525,227,0.332,228,0.32,229,0.383,230,0.332,231,0.604,232,0.606,233,0.332,234,0.32,235,0.357,236,0.332,237,0.931,238,0.357,239,0.676,240,0.32,241,0.383,242,0.332,243,0.263,244,0.344,245,0.332,246,0.958,247,0.383,248,0.332,249,0.344,250,0.332,251,0.344,252,0.332,253,0.332,254,0.37,255,0.383,256,0.005,257,0.005,260,1.047,292,1.233,303,2.586,316,1.082,327,3.093,364,2.609,365,1.872,379,1.263,380,2.76,381,2.08,403,0.914,404,1.941,410,3.394,423,2.195,430,1.038,433,2.037,444,1.557,462,1.928,467,1.11,483,2.281,484,0.851,485,1.669,486,0.914,491,1.276,492,0.767,493,1.711,505,0.948,508,0.881,520,1.755,522,1.158,523,2.272,527,2.565,530,2.007,534,1.065,542,1.711,544,1.362,546,1.928,551,1.548,552,3.659,559,1.11,568,2.474,569,2.113,570,2.113,571,2.113,572,2.113,573,1.965,574,2.037,611,2.281,621,0.984,625,2.012,629,1.065,638,0.948,640,1.065,662,1.023,712,3.247,713,0.984,719,2.007,720,2.642,732,2.195,759,1.499,786,1.345,793,1.831,817,1.233,854,2.281,972,0.948,982,1.11,986,1.11,989,2.7,994,2.7,1023,2.915,1027,0.881,1155,2.376,1238,2.376,1287,2.474,1398,1.684,1414,0.948,1436,3.556,1437,2.582,1438,3.111,1439,3.111,1440,2.374,1441,2.374,1443,3.184,1481,1.915,1523,1.211,1569,0.984,1698,2.376,1739,1.11,1823,1.11,1984,2.177,1986,1.11,2062,2.7,2143,2.376,2208,2.474,2212,1.158,2213,1.211,2214,3.828,2215,3.278,2216,3.433,2217,3.664,2218,2.49,2219,2.008,2220,3.433,2221,1.27,2222,1.27,2223,1.27,2224,1.27,2225,2.008,2226,2.83,2227,1.27,2228,1.27,2229,1.27,2230,1.27,2231,1.27,2232,2.49,2233,1.27,2234,2.49,2235,1.27,2236,1.27,2237,2.49,2238,1.27,2239,2.49,2240,1.27,2241,1.27,2242,2.49,2243,1.27,2244,1.27,2245,1.27,2246,2.376,2247,1.27,2248,2.49,2249,1.27,2250,2.49,2251,1.27,2252,2.49,2253,1.27,2254,1.27,2255,1.27,2256,1.27,2257,1.27,2258,1.27,2259,1.27,2260,1.27,2261,1.27,2262,1.27,2263,1.27,2264,1.27,2265,1.27,2266,1.27,2267,1.27,2268,1.27,2269,1.27,2270,1.27,2271,1.27,2272,1.27,2273,1.27,2274,1.27,2275,1.27,2276,1.27,2277,1.27,2278,1.27,2279,1.832,2280,2.008,2281,2.008,2282,2.008,2283,1.27,2284,2.83,2285,2.008,2286,2.008,2287,3.127,2288,3.278,2289,3.664,2290,3.664,2291,3.664,2292,3.278,2293,2.49,2294,2.49,2295,3.278,2296,2.49,2297,2.49,2298,2.49,2299,2.376,2300,2.49,2301,2.49,2302,2.49,2303,2.376,2304,2.49,2305,2.49,2306,2.49,2307,2.49,2308,3.132,2309,2.83,2310,3.559,2311,2.83,2312,2.83,2313,2.83,2314,2.83,2315,1.27,2316,3.559,2317,2.83,2318,2.83,2319,2.83,2320,2.83,2321,3.559,2322,2.83,2323,2.83,2324,2.83,2325,2.83,2326,2.83,2327,2.83,2328,2.582,2329,2.474,2330,2.7,2331,2.83,2332,2.83,2333,2.83,2334,2.376,2335,2.376,2336,1.27,2337,2.49,2338,1.915,2339,1.915,2340,1.915,2341,1.832,2342,1.915,2343,1.915,2344,1.27,2345,1.27,2346,1.27,2347,1.211,2348,1.27,2349,1.211,2350,1.27,2351,1.27]],["title/components/MaterialColorsComponent.html",[0,0.168,210,0.576]],["body/components/MaterialColorsComponent.html",[0,0.341,1,0.315,2,0.059,3,0.045,4,1.05,5,0.364,6,0.364,7,0.339,8,0.037,12,0.337,13,1.251,14,0.191,20,0.693,21,0.786,24,0.364,25,1.195,26,1.07,27,1.064,28,0.966,30,0.315,32,0.2,33,0.542,35,1.037,42,0.719,44,1.396,45,0.847,50,0.393,52,0.191,54,0.773,55,0.013,56,0.553,57,0.26,58,0.719,61,0.987,67,1.226,71,1.908,73,0.578,74,2.071,75,1.268,78,3.165,79,1.427,81,0.952,95,0.339,101,0.833,102,1.291,107,0.168,108,0.066,111,0.404,112,0.155,113,0.01,114,1.116,121,1.678,125,1.262,129,1.484,133,1.049,136,0.579,139,0.956,140,0.638,143,1.779,144,0.509,145,0.837,148,2.223,152,0.972,155,0.2,156,0.562,157,0.934,158,0.542,159,0.83,160,0.364,161,0.582,162,0.315,163,0.364,164,0.304,165,0.364,166,0.304,167,0.364,168,0.315,169,0.83,170,0.304,171,0.582,172,0.315,173,0.364,174,0.315,175,0.364,176,0.315,177,0.582,178,0.315,179,0.582,180,0.315,181,0.364,182,0.315,183,1.092,184,0.83,185,0.304,186,0.364,187,0.327,188,0.727,189,0.315,190,0.727,191,0.315,192,0.83,193,0.315,194,0.364,195,0.315,196,0.315,197,0.364,198,0.315,199,0.351,200,0.315,201,0.364,202,0.304,203,0.364,204,0.315,205,0.504,206,1.058,207,0.727,208,0.504,209,0.582,210,0.719,211,0.504,212,0.364,213,0.504,214,0.914,215,0.315,216,0.315,217,0.304,218,0.364,219,0.315,220,0.351,221,0.582,222,0.504,223,1.153,224,0.838,225,0.504,226,0.504,227,0.315,228,0.304,229,0.364,230,0.315,231,0.729,232,0.582,233,0.315,234,0.304,235,0.339,236,0.315,237,0.914,238,0.339,239,0.653,240,0.304,241,0.364,242,0.315,243,0.25,244,0.327,245,0.315,246,0.966,247,0.364,248,0.315,249,0.327,250,0.315,251,0.327,252,0.315,253,0.315,254,0.351,255,0.364,256,0.005,257,0.005,260,1.017,292,1.198,303,2.521,316,1.051,327,3.07,364,2.574,365,1.859,379,1.252,380,2.71,381,2.311,403,0.868,404,1.902,410,3.364,423,2.132,430,1.019,433,1.978,444,2.132,462,1.879,467,1.054,483,2.216,484,0.808,485,1.613,486,0.868,491,1.642,492,0.729,493,1.662,505,0.9,508,0.837,520,1.684,522,1.1,523,2.196,527,2.529,530,1.94,534,1.011,542,1.662,544,1.753,546,1.879,551,1.504,552,3.635,559,1.054,568,2.403,569,2.053,570,2.053,571,2.053,572,2.053,573,1.908,574,1.978,611,2.216,621,0.935,625,1.976,629,1.011,638,0.9,640,1.011,662,1.553,712,3.443,713,0.935,719,1.94,720,2.904,732,2.132,759,1.439,786,1.613,793,2.261,817,1.198,854,2.216,972,0.9,982,1.054,986,1.054,989,2.623,994,2.623,1023,2.902,1027,0.837,1155,3.058,1238,2.296,1287,2.104,1398,1.616,1414,0.9,1436,3.536,1437,2.508,1438,3.055,1439,3.055,1440,2.306,1441,2.306,1443,3.145,1481,2.623,1523,1.15,1569,0.935,1698,3.058,1739,2.104,1823,1.054,1984,2.104,1986,1.054,2062,3.334,2143,3.058,2208,2.403,2212,2.196,2213,1.15,2214,3.774,2215,3.205,2216,3.495,2217,3.842,2218,3.006,2219,1.927,2220,3.364,2221,1.206,2222,1.206,2223,1.206,2224,1.206,2225,2.749,2226,3.842,2227,2.407,2228,1.927,2229,1.927,2230,1.927,2231,1.927,2232,3.205,2233,1.927,2234,3.205,2235,1.927,2236,1.927,2237,3.205,2238,1.927,2239,3.205,2240,1.927,2241,1.927,2242,3.205,2243,1.927,2244,1.927,2245,1.927,2246,3.058,2247,1.927,2248,3.205,2249,1.927,2250,3.205,2251,1.927,2252,3.205,2253,1.927,2254,1.927,2255,1.927,2256,1.927,2257,1.927,2258,1.927,2259,1.927,2260,1.927,2261,1.927,2262,1.927,2263,1.927,2264,1.927,2265,1.927,2266,1.927,2267,1.927,2268,1.927,2269,1.927,2270,1.927,2271,1.927,2272,1.927,2273,1.927,2274,1.927,2275,1.927,2276,1.927,2277,1.927,2278,1.927,2279,2.508,2280,2.749,2281,2.749,2282,2.749,2283,1.927,2284,3.495,2285,2.749,2286,2.749,2287,3.334,2288,3.842,2289,2.407,2290,2.407,2291,2.407,2292,1.927,2293,1.206,2294,1.206,2295,1.927,2296,1.206,2297,1.206,2298,1.206,2299,1.15,2300,1.206,2301,1.206,2302,1.206,2303,1.15,2304,1.206,2305,1.206,2306,1.206,2307,1.206,2308,2.742,2309,2.749,2310,3.495,2311,2.749,2312,2.749,2313,2.749,2314,2.749,2315,1.206,2316,3.495,2317,2.749,2318,2.749,2319,2.749,2320,2.749,2321,3.495,2322,2.749,2323,2.749,2324,2.749,2325,2.749,2326,2.749,2327,2.749,2328,2.508,2329,2.403,2330,2.623,2331,2.749,2332,2.749,2333,2.749,2334,2.296,2335,2.296,2336,1.206,2337,2.407,2338,1.838,2339,1.838,2340,1.838,2341,1.758,2342,1.838,2343,1.838,2344,1.206,2345,1.206,2346,1.206,2347,1.15,2348,1.206,2349,1.15,2350,1.206,2351,1.206,2357,2.227,2358,2.227]],["title/components/MaterialSandboxComponent.html",[0,0.168,211,0.576]],["body/components/MaterialSandboxComponent.html",[0,0.343,1,0.337,2,0.063,3,0.048,4,1.073,5,0.389,6,0.389,7,0.362,8,0.04,12,0.344,13,1.211,14,0.321,20,0.719,21,0.812,24,0.389,25,1.2,26,1.072,27,1.075,28,0.986,30,0.531,35,1.067,42,0.746,44,1.362,45,0.849,50,0.29,52,0.204,54,0.802,55,0.013,56,0.546,58,0.531,61,0.994,67,1.091,71,1.409,73,0.588,74,2.099,75,1.309,78,3.018,79,1.46,81,0.987,95,0.362,101,0.446,102,1.294,107,0.175,108,0.071,111,0.431,112,0.158,113,0.01,114,1.126,121,1.694,125,1.282,129,1.501,133,1.095,136,0.618,139,1.007,140,0.681,143,1.314,144,0.543,145,0.894,148,2.187,152,1.038,155,0.214,156,0.592,157,1.006,158,0.571,159,0.861,160,0.389,161,0.613,162,0.337,163,0.389,164,0.324,165,0.389,166,0.324,167,0.389,168,0.337,169,0.861,170,0.324,171,0.613,172,0.337,173,0.389,174,0.337,175,0.389,176,0.337,177,0.613,178,0.337,179,0.613,180,0.337,181,0.389,182,0.337,183,1.104,184,0.861,185,0.324,186,0.389,187,0.349,188,0.759,189,0.337,190,0.759,191,0.337,192,0.861,193,0.337,194,0.389,195,0.337,196,0.337,197,0.389,198,0.337,199,0.375,200,0.337,201,0.389,202,0.324,203,0.389,204,0.337,205,0.531,206,1.069,207,0.759,208,0.531,209,0.613,210,0.531,211,0.746,212,0.389,213,0.531,214,0.863,215,0.337,216,0.337,217,0.324,218,0.389,219,0.337,220,0.375,221,0.613,222,0.531,223,1.183,224,0.863,225,0.531,226,0.531,227,0.337,228,0.324,229,0.389,230,0.337,231,0.61,232,0.613,233,0.337,234,0.324,235,0.362,236,0.337,237,0.936,238,0.362,239,0.682,240,0.324,241,0.389,242,0.337,243,0.266,244,0.349,245,0.337,246,0.963,247,0.389,248,0.337,249,0.349,250,0.337,251,0.349,252,0.337,253,0.337,254,0.375,255,0.389,256,0.006,257,0.006,260,1.055,292,1.243,303,2.603,316,1.091,327,3.099,364,2.618,365,1.876,379,1.266,380,2.557,381,2.09,403,0.927,404,1.951,410,3.401,423,2.212,430,1.043,433,2.053,444,1.574,462,1.941,467,1.125,483,2.299,484,0.863,485,1.684,486,0.927,491,1.287,492,0.778,493,1.724,505,0.961,508,0.894,520,1.774,522,1.175,523,2.293,527,2.575,530,2.025,534,1.08,542,1.724,544,1.374,546,2.062,551,1.56,552,3.665,559,1.125,568,2.493,569,2.13,570,2.13,571,2.13,572,2.13,573,1.98,574,2.053,611,2.299,621,0.998,625,2.022,629,1.703,638,0.961,640,1.08,662,1.038,712,3.263,713,0.998,719,2.025,720,2.658,732,2.212,759,1.516,786,1.684,793,1.846,817,1.243,854,2.299,972,0.961,982,1.125,986,1.125,989,2.721,994,2.721,1023,2.918,1027,0.894,1155,2.397,1238,2.397,1287,2.196,1398,1.703,1414,0.961,1436,3.561,1437,2.602,1438,3.126,1439,3.126,1440,2.392,1441,2.392,1443,3.195,1481,1.937,1523,1.228,1569,1.574,1698,2.397,1739,1.125,1823,1.774,1984,2.196,1986,1.125,2062,2.721,2143,2.397,2208,2.493,2212,1.175,2213,1.228,2214,3.843,2215,3.298,2216,3.452,2217,3.681,2218,2.513,2219,2.03,2220,3.452,2221,1.287,2222,2.03,2223,2.03,2224,2.03,2225,2.03,2226,2.852,2227,1.287,2228,1.287,2229,1.287,2230,1.287,2231,1.287,2232,2.513,2233,1.287,2234,2.513,2235,1.287,2236,1.287,2237,2.513,2238,1.287,2239,2.513,2240,1.287,2241,1.287,2242,2.513,2243,1.287,2244,1.287,2245,1.287,2246,2.397,2247,1.287,2248,2.513,2249,1.287,2250,2.513,2251,1.287,2252,2.513,2253,1.287,2254,1.287,2255,1.287,2256,1.287,2257,1.287,2258,1.287,2259,1.287,2260,1.287,2261,1.287,2262,1.287,2263,1.287,2264,1.287,2265,1.287,2266,1.287,2267,1.287,2268,1.287,2269,1.287,2270,1.287,2271,1.287,2272,1.287,2273,1.287,2274,1.287,2275,1.287,2276,1.287,2277,1.287,2278,1.287,2279,1.852,2280,2.03,2281,2.03,2282,2.03,2283,1.287,2284,2.852,2285,2.03,2286,2.03,2287,3.146,2288,3.298,2289,2.513,2290,2.513,2291,2.513,2292,2.03,2293,1.287,2294,1.287,2295,2.03,2296,1.287,2297,1.287,2298,1.287,2299,1.228,2300,1.287,2301,1.287,2302,1.287,2303,1.228,2304,1.287,2305,1.287,2306,1.287,2307,1.287,2308,2.832,2309,2.852,2310,3.577,2311,2.852,2312,2.852,2313,2.852,2314,2.852,2315,1.287,2316,3.577,2317,2.852,2318,2.852,2319,2.852,2320,2.852,2321,3.577,2322,2.852,2323,2.852,2324,2.852,2325,2.852,2326,2.852,2327,2.852,2328,2.602,2329,2.493,2330,2.721,2331,2.852,2332,2.852,2333,2.852,2334,2.397,2335,2.397,2336,1.287,2337,2.513,2338,1.937,2339,1.937,2340,1.937,2341,1.852,2342,1.937,2343,1.937,2344,1.287,2345,1.287,2346,1.287,2347,1.228,2348,1.287,2349,1.228,2350,1.287,2351,1.287]],["title/modules/MaterialSandboxModule.html",[258,0.899,1732,2.753]],["body/modules/MaterialSandboxModule.html",[2,0.145,3,0.11,8,0.092,55,0.013,107,0.282,108,0.164,112,0.178,113,0.008,155,0.493,205,1.193,206,1.081,208,1.193,210,1.193,213,1.193,222,1.193,224,1.193,225,1.193,226,1.193,256,0.01,257,0.01,258,1.498,260,1.099,261,2.972,262,2.74,263,2.063,270,3.248,271,3.649,272,2.845,273,2.219,274,2.063,276,2.845,277,3.077,278,2.304,292,1.294,293,2.492,294,2.597,296,2.971,1281,3.716,1732,5.884,1739,2.597,1740,7.181,2212,2.711,2359,4.791,2360,4.791,2361,5.487,2362,4.791,2363,5.487,2364,5.916,2365,4.332,2366,4.791]],["title/components/MaterialToggleColorsComponent.html",[0,0.168,213,0.576]],["body/components/MaterialToggleColorsComponent.html",[0,0.343,1,0.337,2,0.063,3,0.048,4,1.073,5,0.389,6,0.389,7,0.362,8,0.04,12,0.345,13,1.211,14,0.204,20,0.719,21,0.812,24,0.389,25,1.2,26,1.072,27,1.075,28,0.986,30,0.337,35,1.067,42,0.746,44,1.362,45,0.849,50,0.29,52,0.204,54,0.802,55,0.013,56,0.546,58,0.531,61,0.994,67,1.091,71,1.409,73,0.588,74,2.099,75,1.309,78,3.018,79,1.461,81,0.988,95,0.362,101,0.703,102,1.294,107,0.175,108,0.071,111,0.431,112,0.158,113,0.01,114,1.126,121,1.694,125,1.283,129,1.501,133,1.095,136,0.618,139,1.007,140,0.682,143,1.314,144,0.543,145,0.894,148,2.188,152,1.038,155,0.214,156,0.592,157,0.905,158,0.571,159,0.861,160,0.389,161,0.613,162,0.337,163,0.389,164,0.325,165,0.389,166,0.325,167,0.389,168,0.337,169,0.861,170,0.325,171,0.613,172,0.337,173,0.389,174,0.337,175,0.389,176,0.337,177,0.613,178,0.337,179,0.613,180,0.337,181,0.389,182,0.337,183,1.104,184,0.861,185,0.325,186,0.389,187,0.349,188,0.759,189,0.337,190,0.759,191,0.337,192,0.861,193,0.337,194,0.389,195,0.337,196,0.337,197,0.389,198,0.337,199,0.375,200,0.337,201,0.389,202,0.325,203,0.389,204,0.337,205,0.531,206,1.072,207,0.759,208,0.531,209,0.613,210,0.531,211,0.531,212,0.389,213,0.746,214,0.963,215,0.337,216,0.337,217,0.325,218,0.389,219,0.337,220,0.375,221,0.613,222,0.531,223,1.17,224,0.863,225,0.531,226,0.531,227,0.337,228,0.325,229,0.389,230,0.337,231,0.61,232,0.613,233,0.337,234,0.325,235,0.362,236,0.337,237,0.936,238,0.362,239,0.682,240,0.325,241,0.389,242,0.337,243,0.267,244,0.349,245,0.337,246,1.005,247,0.389,248,0.337,249,0.349,250,0.337,251,0.349,252,0.337,253,0.337,254,0.375,255,0.389,256,0.006,257,0.006,260,1.056,292,1.243,303,2.604,316,1.091,327,3.099,364,2.619,365,1.876,379,1.266,380,2.557,381,2.091,403,0.927,404,1.951,410,3.401,423,2.212,430,1.043,433,2.053,444,1.574,462,1.941,467,1.126,483,2.299,484,0.863,485,1.684,486,0.927,491,1.288,492,0.778,493,1.724,505,0.962,508,0.894,520,1.775,522,1.175,523,2.293,527,2.575,530,2.026,534,1.08,542,1.724,544,1.375,546,1.941,551,1.56,552,3.665,559,1.126,568,2.494,569,2.13,570,2.13,571,2.13,572,2.13,573,1.98,574,2.053,611,2.299,621,0.999,625,2.022,629,1.08,638,0.962,640,1.08,662,1.038,712,3.438,713,0.999,719,2.026,720,2.658,732,2.212,759,1.516,786,1.36,793,1.846,817,1.243,854,2.299,972,0.962,982,1.126,986,1.126,989,2.722,994,2.722,1023,2.918,1027,0.894,1155,2.398,1238,2.398,1287,2.197,1398,1.703,1414,0.962,1436,3.562,1437,2.603,1438,3.127,1439,3.127,1440,2.393,1441,2.393,1443,3.195,1481,1.937,1523,1.229,1569,0.999,1698,2.398,1739,1.126,1823,1.126,1984,2.197,1986,1.126,2062,2.722,2143,2.398,2208,2.494,2212,1.175,2213,1.229,2214,3.843,2215,3.298,2216,3.681,2217,3.843,2218,2.513,2219,2.03,2220,3.452,2221,1.288,2222,1.288,2223,1.288,2224,1.288,2225,2.03,2226,2.853,2227,1.288,2228,1.288,2229,1.288,2230,1.288,2231,1.288,2232,2.513,2233,1.288,2234,2.513,2235,1.288,2236,1.288,2237,2.513,2238,1.288,2239,2.513,2240,1.288,2241,1.288,2242,2.513,2243,1.288,2244,1.288,2245,1.288,2246,2.398,2247,1.288,2248,2.513,2249,1.288,2250,2.513,2251,1.288,2252,2.513,2253,1.288,2254,1.288,2255,1.288,2256,1.288,2257,1.288,2258,1.288,2259,1.288,2260,1.288,2261,1.288,2262,1.288,2263,1.288,2264,1.288,2265,1.288,2266,1.288,2267,1.288,2268,1.288,2269,1.288,2270,1.288,2271,1.288,2272,1.288,2273,1.288,2274,1.288,2275,1.288,2276,1.288,2277,1.288,2278,1.288,2279,1.852,2280,2.03,2281,2.03,2282,2.03,2283,1.288,2284,2.853,2285,2.03,2286,2.03,2287,3.147,2288,3.298,2289,2.513,2290,2.513,2291,2.513,2292,2.03,2293,1.288,2294,1.288,2295,2.03,2296,1.288,2297,1.288,2298,1.288,2299,1.229,2300,1.288,2301,1.288,2302,1.288,2303,1.229,2304,1.288,2305,1.288,2306,1.288,2307,1.288,2308,2.832,2309,2.853,2310,3.577,2311,2.853,2312,2.853,2313,2.853,2314,2.853,2315,1.288,2316,3.577,2317,2.853,2318,2.853,2319,2.853,2320,2.853,2321,3.577,2322,2.853,2323,2.853,2324,2.853,2325,2.853,2326,2.853,2327,2.853,2328,2.603,2329,2.494,2330,2.722,2331,2.853,2332,2.853,2333,2.853,2334,2.398,2335,2.398,2336,1.288,2337,2.513,2338,1.937,2339,1.937,2340,1.937,2341,1.852,2342,1.937,2343,1.937,2344,1.288,2345,1.288,2346,1.288,2347,1.229,2348,1.288,2349,1.229,2350,1.288,2351,1.288,2367,2.378]],["title/components/OverviewCardComponent.html",[0,0.168,215,0.576]],["body/components/OverviewCardComponent.html",[0,0.332,1,0.667,2,0.125,3,0.094,4,0.743,5,0.77,6,0.77,7,0.717,8,0.079,12,0.239,13,0.936,20,0.839,21,0.969,24,0.77,25,1.233,26,1.101,27,0.839,28,0.871,30,0.871,32,0.652,37,0.777,42,1.028,45,0.802,46,0.899,50,0.476,52,0.586,53,1.005,55,0.013,56,0.527,61,0.572,73,0.384,89,0.717,107,0.156,108,0.14,112,0.109,113,0.007,129,1.407,133,1.111,134,3.302,135,2.054,136,1.598,137,2.054,138,2.993,139,1.651,140,1.762,141,2.683,143,2.154,144,1.719,147,2.934,153,2.228,154,4.163,155,0.423,156,0.97,157,0.97,158,0.936,159,1.186,160,0.77,161,1.005,162,0.667,163,0.77,164,0.642,165,0.77,166,0.642,167,0.77,168,0.667,169,1.186,170,0.642,171,1.005,172,0.667,173,0.77,174,0.667,175,0.77,176,0.667,177,1.005,178,0.667,179,1.005,180,0.667,181,0.77,182,0.667,183,1.028,184,1.186,185,0.642,186,0.77,187,0.692,188,1.119,189,0.667,190,1.119,191,0.667,192,1.186,193,0.667,194,0.77,195,0.667,196,0.667,197,0.77,198,0.667,199,0.743,200,0.667,201,0.77,202,0.642,203,0.77,204,0.667,205,0.667,206,0.989,207,1.119,208,0.667,209,0.77,210,0.667,211,0.667,212,0.77,213,0.667,214,0.667,215,1.028,216,1.153,217,0.642,218,0.77,219,0.667,220,0.743,221,1.005,222,0.667,223,1.145,224,0.667,225,0.667,226,0.667,227,0.667,228,0.642,229,0.77,230,0.667,231,0.618,232,1.005,233,0.667,234,0.642,235,0.717,236,0.667,237,1.13,238,0.717,239,1.006,240,0.642,241,0.77,242,0.667,243,0.528,244,0.692,245,0.667,246,0.871,247,0.77,248,0.667,249,0.692,250,0.667,251,0.692,252,0.667,253,0.667,254,0.743,255,0.77,256,0.009,257,0.009,345,2.23,378,3.717,379,0.77,380,3.161,381,2.166,383,5.977,384,5.367,402,4.11,404,1.441,485,2.23,490,2.081,491,1.705,492,2.464,493,1.541,494,2.679,495,3.188,496,3.706,497,2.825,498,3.109,499,3.423,508,2.311,530,2.054,625,1.441,713,1.976,714,4.519,715,4.47,716,4.636,757,2.825,817,1.45,972,2.485,983,4.11,984,4.47,1270,5.977,1302,4.11,1524,4.11,1542,4.163,1680,5.367,1686,4.11,2178,4.853,2368,5.977,2369,5.404,2370,5.367,2371,4.708,2372,4.708,2373,6.147,2374,4.708,2375,6.147,2376,6.845,2377,4.708,2378,4.708,2379,4.708,2380,4.708,2381,4.708]],["title/components/OverviewComponent.html",[0,0.168,217,0.555]],["body/components/OverviewComponent.html",[0,0.341,1,0.7,2,0.131,3,0.099,4,0.78,5,0.808,6,0.808,7,0.753,8,0.083,12,0.25,13,0.966,20,0.865,21,0.992,24,0.808,25,1.235,26,1.103,27,0.865,28,0.898,30,0.898,32,0.444,37,0.802,42,1.047,45,0.808,46,0.92,50,0.491,52,0.655,53,1.037,55,0.013,56,0.543,61,0.6,73,0.403,89,0.753,95,0.966,107,0.164,108,0.147,112,0.115,113,0.007,129,0.958,133,1.653,134,2.074,136,1.284,139,1.703,144,1.128,155,0.444,156,1.001,157,1.001,158,0.966,159,1.208,160,0.808,161,1.037,162,0.7,163,0.808,164,0.674,165,0.808,166,0.674,167,0.808,168,0.7,169,1.208,170,0.674,171,1.037,172,0.7,173,0.808,174,0.7,175,0.808,176,0.7,177,1.037,178,0.7,179,1.037,180,0.7,181,0.808,182,0.7,183,1.108,184,1.208,185,0.674,186,0.808,187,0.726,188,1.145,189,0.7,190,1.145,191,0.7,192,1.208,193,0.7,194,0.808,195,0.7,196,0.7,197,0.808,198,0.7,199,1.207,200,0.7,201,0.808,202,0.674,203,0.808,204,0.7,205,0.7,206,1.004,207,1.145,208,0.7,209,0.808,210,0.7,211,0.7,212,0.808,213,0.7,214,0.7,215,0.7,216,1.047,217,1.009,218,0.808,219,0.7,220,0.78,221,1.037,222,0.7,223,1.167,224,0.7,225,0.7,226,0.7,227,0.7,228,0.674,229,0.808,230,0.7,231,0.649,232,1.037,233,0.7,234,0.674,235,0.753,236,0.7,237,1.162,238,0.753,239,1.029,240,0.674,241,0.808,242,0.7,243,0.554,244,0.726,245,0.7,246,0.898,247,0.808,248,0.7,249,0.726,250,0.7,251,0.726,252,0.7,253,0.7,254,0.78,255,0.808,256,0.009,257,0.009,292,1.744,379,0.808,380,2.074,490,1.673,491,1.371,492,1.617,500,2.812,508,2.384,551,1.463,558,2.965,621,2.074,629,2.881,664,3.226,817,1.496,1496,3.434,1539,3.901,1640,3.592,2382,4.314,2383,5.538,2384,6.343,2385,7.005,2386,6.343,2387,4.941,2388,4.941,2389,4.941,2390,4.941,2391,4.941,2392,4.941,2393,4.941]],["title/modules/OverviewModule.html",[258,0.899,1709,2.753]],["body/modules/OverviewModule.html",[0,0.285,2,0.15,3,0.114,8,0.095,12,0.288,50,0.536,55,0.013,63,4.662,68,2.342,95,1.054,107,0.282,108,0.169,112,0.18,113,0.008,155,0.51,215,1.198,216,1.128,217,1.154,256,0.01,257,0.01,258,1.79,260,1.137,261,3.017,262,2.295,263,2.133,269,3.833,270,3.275,271,3.678,272,2.904,273,2.295,274,2.133,276,2.904,277,3.142,278,2.383,292,1.339,293,2.577,294,2.686,295,3.23,296,3.073,732,2.904,1359,4.861,1405,5.461,1708,5.149,1709,5.861,1710,5.149,1719,4.955,1723,4.955,1725,4.955,1898,5.485,2369,4.481,2394,4.955,2395,4.955,2396,5.675,2397,4.955,2398,5.675,2399,6.917,2400,6.04,2401,5.675,2402,5.675,2403,4.955]],["title/components/PropsTableComponent.html",[0,0.168,219,0.576]],["body/components/PropsTableComponent.html",[0,0.343,1,0.676,2,0.127,3,0.096,4,0.754,5,1.014,6,0.78,7,0.727,8,0.08,12,0.242,13,0.945,14,0.531,20,0.846,21,0.976,24,0.78,25,1.234,26,1.101,27,0.846,28,0.879,30,0.879,32,0.429,33,0.945,37,0.922,42,1.033,44,1.462,45,0.837,46,0.905,50,0.534,52,0.59,53,1.014,55,0.013,56,0.531,57,0.557,61,0.58,67,1.285,68,2.1,73,0.389,81,1.163,82,1.837,89,0.727,95,0.727,107,0.206,108,0.142,111,0.865,112,0.111,113,0.007,133,1.126,135,2.083,140,1.778,144,1.727,155,0.429,156,0.979,157,0.979,158,0.945,159,1.193,160,0.78,161,1.014,162,0.676,163,0.78,164,0.651,165,0.78,166,0.651,167,0.78,168,0.676,169,1.193,170,0.651,171,1.014,172,0.676,173,0.78,174,0.676,175,0.78,176,0.676,177,1.014,178,0.676,179,1.014,180,0.676,181,0.78,182,0.676,183,1.033,184,1.193,185,0.651,186,0.78,187,0.701,188,1.127,189,0.676,190,1.127,191,0.676,192,1.193,193,0.676,194,0.78,195,0.676,196,0.676,197,0.78,198,0.676,199,0.754,200,0.676,201,0.78,202,0.651,203,0.78,204,0.676,205,0.676,206,0.994,207,1.127,208,0.676,209,0.78,210,0.676,211,0.676,212,0.78,213,0.676,214,0.676,215,0.676,216,0.676,217,0.651,218,0.78,219,1.033,220,1.276,221,1.014,222,0.676,223,1.152,224,0.676,225,0.676,226,0.676,227,0.676,228,0.651,229,0.78,230,0.676,231,0.627,232,1.014,233,0.676,234,0.651,235,0.727,236,0.676,237,1.133,238,0.727,239,1.012,240,0.651,241,0.78,242,0.676,243,0.535,244,0.701,245,0.676,246,0.879,247,0.78,248,0.676,249,0.701,250,0.676,251,0.701,252,0.676,253,0.676,254,0.754,255,0.78,256,0.009,257,0.009,379,1.014,403,1.86,484,1.732,490,1.616,491,1.721,492,2.03,496,3.359,497,3.723,498,2.817,620,3.175,622,4.168,756,5.011,1534,6.017,1537,3.471,1556,4.201,2404,6.37,2405,5.76,2406,4.168,2407,6.892,2408,6.204,2409,6.204,2410,4.774,2411,6.204,2412,6.204,2413,4.774,2414,4.774]],["title/injectables/RoutingService.html",[1015,1.376,1494,2.008]],["body/injectables/RoutingService.html",[2,0.139,3,0.105,8,0.088,12,0.394,14,0.563,18,3.265,32,0.47,37,0.831,45,0.744,46,0.687,50,0.631,53,1.075,54,1.15,55,0.013,56,0.647,57,0.881,58,1.069,59,1.962,61,0.874,73,0.657,86,4.129,89,1.227,93,1.711,99,4.453,100,5.568,102,1.191,107,0.218,108,0.156,112,0.122,113,0.008,114,1.069,125,0.916,127,2.081,183,0.931,233,1.069,237,0.931,246,0.741,256,0.01,257,0.01,343,5.67,412,3.037,427,2.644,430,1.321,542,2.598,659,5.047,664,3.556,786,2.386,817,1.551,819,4.129,863,4.129,1015,2.435,1491,5.111,1494,3.248,1495,2.375,1553,5.457,1587,4.18,1591,5.925,1639,3.139,1640,3.802,1653,6.59,1654,4.573,1733,6.492,2415,4.566,2416,6.576,2417,6.576,2418,7.547,2419,5.741,2420,7.547,2421,7.547,2422,5.741,2423,7.547,2424,6.576,2425,5.229,2426,5.229,2427,5.229,2428,5.959,2429,5.741,2430,5.229,2431,5.229,2432,5.229,2433,5.741,2434,5.229,2435,5.741,2436,5.229,2437,6.576,2438,5.229,2439,5.229,2440,5.229,2441,5.229,2442,5.229,2443,5.229]],["title/components/SandboxAlarmCardComponent.html",[0,0.168,222,0.576]],["body/components/SandboxAlarmCardComponent.html",[0,0.343,1,0.321,2,0.06,3,0.045,4,1.056,5,0.37,6,0.37,7,0.345,8,0.038,12,0.339,13,1.203,14,0.194,20,0.764,21,0.845,24,0.37,25,1.196,26,1.069,27,1.078,28,0.972,30,0.321,32,0.204,33,0.55,35,1.202,37,0.456,42,0.886,44,1.374,45,0.85,50,0.518,52,0.194,54,0.908,55,0.013,56,0.573,57,0.654,58,0.637,61,0.994,67,1.062,71,1.356,73,0.611,74,2.145,75,1.279,78,2.993,79,1.436,81,1.049,89,0.55,95,0.345,101,0.843,102,1.298,107,0.17,108,0.068,111,0.411,112,0.156,113,0.01,114,1.119,121,1.682,125,1.268,129,1.488,133,1.061,136,0.589,139,0.969,140,0.649,143,1.264,144,0.517,145,0.852,148,2.201,152,0.989,155,0.204,156,0.569,157,0.884,158,0.55,159,0.838,160,0.37,161,0.59,162,0.321,163,0.37,164,0.309,165,0.37,166,0.309,167,0.37,168,0.321,169,0.838,170,0.309,171,0.59,172,0.321,173,0.37,174,0.321,175,0.37,176,0.321,177,0.59,178,0.321,179,0.59,180,0.321,181,0.37,182,0.321,183,1.095,184,0.838,185,0.309,186,0.37,187,0.333,188,0.735,189,0.321,190,0.735,191,0.321,192,0.838,193,0.321,194,0.37,195,0.321,196,0.321,197,0.37,198,0.321,199,0.358,200,0.321,201,0.37,202,0.309,203,0.37,204,0.321,205,0.511,206,1.054,207,0.735,208,0.511,209,0.59,210,0.511,211,0.511,212,0.37,213,0.511,214,0.845,215,0.321,216,0.321,217,0.309,218,0.37,219,0.321,220,0.358,221,0.59,222,0.726,223,1.171,224,0.886,225,0.511,226,0.511,227,0.321,228,0.309,229,0.37,230,0.321,231,0.591,232,0.59,233,0.321,234,0.309,235,0.345,236,0.321,237,0.92,238,0.345,239,0.661,240,0.309,241,0.37,242,0.321,243,0.254,244,0.333,245,0.321,246,0.948,247,0.37,248,0.321,249,0.333,250,0.321,251,0.333,252,0.321,253,0.321,254,0.358,255,0.37,256,0.005,257,0.005,260,1.027,292,1.321,303,2.709,316,1.062,327,3.146,364,2.586,365,1.886,379,1.272,380,2.627,381,2.055,403,0.883,404,1.915,410,3.413,423,2.351,430,1.125,433,2.182,444,1.515,462,2.019,467,1.072,483,2.238,484,0.822,485,1.631,486,0.883,491,1.247,492,0.741,493,1.678,505,0.916,508,0.852,520,1.708,522,1.119,523,2.221,527,2.691,530,1.962,534,1.029,542,1.678,544,1.332,546,2.019,551,1.658,552,3.666,559,1.072,568,2.427,569,2.073,570,2.073,571,2.073,572,2.073,573,1.927,574,1.998,611,2.238,621,0.951,625,1.988,629,1.029,638,0.916,640,1.029,662,0.989,712,3.208,713,0.951,719,1.962,720,2.603,732,2.351,759,1.459,786,1.309,793,1.796,817,1.321,854,2.443,972,0.916,982,1.072,986,1.072,989,2.649,994,2.649,1023,2.914,1027,0.852,1155,2.323,1238,2.649,1287,2.128,1398,1.639,1414,0.916,1436,3.543,1437,2.533,1438,3.074,1439,3.074,1440,2.329,1441,2.329,1443,3.158,1481,1.864,1523,1.17,1569,0.951,1698,2.323,1739,3.074,1823,1.072,1984,2.128,1986,1.072,2062,2.649,2143,2.323,2208,2.427,2212,3.208,2213,1.17,2214,3.792,2215,3.229,2216,3.387,2217,3.624,2218,2.435,2219,1.954,2220,3.387,2221,1.227,2222,1.227,2223,1.227,2224,1.227,2225,1.954,2226,2.776,2227,1.227,2228,1.227,2229,1.227,2230,1.227,2231,1.227,2232,2.435,2233,1.227,2234,2.435,2235,1.227,2236,1.227,2237,2.435,2238,1.227,2239,2.435,2240,1.227,2241,1.227,2242,2.435,2243,1.227,2244,1.227,2245,1.227,2246,2.323,2247,1.227,2248,2.435,2249,1.227,2250,2.435,2251,1.227,2252,2.435,2253,1.227,2254,1.227,2255,1.227,2256,1.227,2257,1.227,2258,1.227,2259,1.227,2260,1.227,2261,1.227,2262,1.227,2263,1.227,2264,1.227,2265,1.227,2266,1.227,2267,1.227,2268,1.227,2269,1.227,2270,1.227,2271,1.227,2272,1.227,2273,1.227,2274,1.227,2275,1.227,2276,1.227,2277,1.227,2278,1.227,2279,1.782,2280,1.954,2281,1.954,2282,1.954,2283,1.227,2284,2.776,2285,1.954,2286,1.954,2287,3.081,2288,3.229,2289,2.435,2290,2.435,2291,2.435,2292,1.954,2293,1.227,2294,1.227,2295,1.954,2296,1.227,2297,1.227,2298,1.227,2299,1.17,2300,1.227,2301,1.227,2302,1.227,2303,1.17,2304,1.227,2305,1.227,2306,1.227,2307,1.227,2308,2.946,2309,3.031,2310,3.918,2311,3.229,2312,3.229,2313,3.229,2314,3.229,2315,1.227,2316,3.715,2317,3.229,2318,2.776,2319,2.776,2320,2.776,2321,3.516,2322,2.776,2323,2.776,2324,2.776,2325,2.776,2326,2.776,2327,3.387,2328,2.533,2329,2.427,2330,2.649,2331,2.776,2332,2.776,2333,2.776,2334,3.081,2335,3.081,2336,1.227,2337,2.435,2338,1.864,2339,1.864,2340,1.864,2341,1.782,2342,1.864,2343,1.864,2344,1.227,2345,1.227,2346,1.227,2347,1.17,2348,1.227,2349,1.17,2350,1.227,2351,1.227,2444,2.266,2445,1.647,2446,2.266,2447,2.266,2448,2.266,2449,2.266,2450,2.266,2451,2.266]],["title/components/SandboxAlarmComponent.html",[0,0.168,224,0.576]],["body/components/SandboxAlarmComponent.html",[0,0.343,1,0.315,2,0.059,3,0.045,4,1.05,5,0.364,6,0.364,7,0.339,8,0.037,12,0.337,13,1.2,14,0.191,20,0.757,21,0.838,24,0.364,25,1.195,26,1.068,27,1.075,28,0.966,30,0.315,32,0.2,33,0.542,35,1.195,37,0.45,42,0.88,44,1.421,45,0.85,50,0.566,52,0.191,54,0.901,55,0.013,56,0.57,57,0.648,58,0.629,61,0.992,67,1.051,71,1.337,73,0.614,74,2.138,75,1.267,78,2.983,79,1.426,81,1.04,89,0.677,95,0.339,101,1.109,102,1.303,107,0.168,108,0.066,111,0.403,112,0.155,113,0.01,114,1.116,121,1.678,125,1.262,129,1.484,133,1.048,136,0.925,139,0.955,140,0.638,143,1.246,144,0.508,145,0.837,148,2.209,152,0.971,155,0.2,156,0.561,157,0.876,158,0.542,159,0.83,160,0.364,161,0.582,162,0.315,163,0.364,164,0.304,165,0.364,166,0.304,167,0.364,168,0.315,169,0.83,170,0.304,171,0.582,172,0.315,173,0.364,174,0.315,175,0.364,176,0.315,177,0.582,178,0.315,179,0.582,180,0.315,181,0.364,182,0.315,183,1.092,184,0.83,185,0.304,186,0.364,187,0.327,188,0.726,189,0.315,190,0.726,191,0.315,192,0.83,193,0.315,194,0.364,195,0.315,196,0.315,197,0.364,198,0.315,199,0.351,200,0.315,201,0.364,202,0.304,203,0.364,204,0.315,205,0.504,206,1.052,207,0.726,208,0.504,209,0.582,210,0.504,211,0.504,212,0.364,213,0.504,214,0.838,215,0.315,216,0.315,217,0.304,218,0.364,219,0.315,220,0.351,221,0.582,222,0.504,223,1.166,224,0.942,225,0.504,226,0.504,227,0.315,228,0.304,229,0.364,230,0.315,231,0.584,232,0.582,233,0.315,234,0.304,235,0.339,236,0.315,237,0.914,238,0.339,239,0.653,240,0.304,241,0.364,242,0.315,243,0.249,244,0.327,245,0.315,246,0.942,247,0.364,248,0.315,249,0.327,250,0.315,251,0.327,252,0.315,253,0.315,254,0.351,255,0.364,256,0.005,257,0.005,260,1.017,292,1.309,303,2.687,316,1.051,327,3.139,364,2.574,365,1.881,379,1.268,380,2.484,381,2.159,403,0.867,404,2.235,410,3.404,423,2.33,430,1.12,433,2.162,444,1.493,462,2.003,467,1.053,483,2.215,484,0.807,485,1.612,486,0.867,491,1.233,492,0.728,493,1.661,505,0.9,508,0.837,520,1.683,522,2.195,523,3.287,527,2.68,530,2.422,534,1.615,542,1.661,544,1.316,546,2.003,551,1.643,552,3.659,559,1.683,568,2.402,569,2.052,570,2.052,571,2.052,572,2.052,573,1.908,574,1.978,611,2.215,621,0.934,625,1.975,629,1.011,638,0.9,640,1.011,662,0.971,712,3.188,713,0.934,719,1.939,720,2.582,732,2.33,759,1.438,786,1.291,793,1.778,817,1.309,854,2.422,972,1.438,982,1.683,986,1.053,989,2.622,994,2.622,1023,2.91,1027,0.837,1155,2.295,1238,2.295,1287,2.103,1398,2.018,1414,0.9,1436,3.536,1437,2.507,1438,3.054,1439,3.054,1440,2.305,1441,2.305,1443,3.144,1481,1.838,1523,1.15,1569,0.934,1698,2.295,1739,3.358,1823,1.053,1984,2.103,1986,1.053,2062,2.622,2143,2.295,2208,2.402,2212,3.505,2213,1.15,2214,3.773,2215,3.204,2216,3.363,2217,3.602,2218,2.406,2219,1.926,2220,3.363,2221,1.205,2222,1.205,2223,1.205,2224,1.205,2225,1.926,2226,2.748,2227,1.205,2228,1.205,2229,1.205,2230,1.205,2231,1.205,2232,2.406,2233,1.205,2234,2.406,2235,1.205,2236,1.205,2237,2.406,2238,1.205,2239,2.406,2240,1.205,2241,1.205,2242,2.406,2243,1.205,2244,1.205,2245,1.205,2246,2.295,2247,1.205,2248,2.406,2249,1.205,2250,2.406,2251,1.205,2252,2.406,2253,1.205,2254,1.205,2255,1.205,2256,1.205,2257,1.205,2258,1.205,2259,1.205,2260,1.205,2261,1.205,2262,1.205,2263,1.205,2264,1.205,2265,1.205,2266,1.205,2267,1.205,2268,1.205,2269,1.205,2270,1.205,2271,1.205,2272,1.205,2273,1.205,2274,1.205,2275,1.205,2276,1.205,2277,1.205,2278,1.205,2279,1.757,2280,1.926,2281,1.926,2282,1.926,2283,1.205,2284,2.748,2285,1.926,2286,1.926,2287,3.057,2288,3.204,2289,2.406,2290,2.406,2291,2.406,2292,1.926,2293,1.205,2294,1.205,2295,1.926,2296,1.205,2297,1.205,2298,1.205,2299,1.15,2300,1.205,2301,1.205,2302,1.205,2303,1.15,2304,1.205,2305,1.205,2306,1.205,2307,1.205,2308,2.923,2309,3.005,2310,3.901,2311,3.204,2312,3.204,2313,3.204,2314,3.204,2315,1.205,2316,3.694,2317,3.204,2318,2.748,2319,2.748,2320,2.748,2321,3.494,2322,2.748,2323,2.748,2324,2.748,2325,2.748,2326,2.748,2327,3.363,2328,2.507,2329,2.402,2330,2.622,2331,2.748,2332,2.748,2333,2.748,2334,3.057,2335,3.057,2336,1.926,2337,2.406,2338,1.838,2339,2.295,2340,2.867,2341,1.757,2342,1.838,2343,1.838,2344,1.205,2345,1.205,2346,1.205,2347,1.15,2348,1.205,2349,1.15,2350,1.205,2351,1.205,2445,1.618,2452,2.225,2453,2.225,2454,2.225,2455,2.225,2456,2.225,2457,2.225,2458,2.225,2459,2.225,2460,2.225,2461,2.225,2462,2.225]],["title/components/SandboxAlarmLabelComponent.html",[0,0.168,225,0.576]],["body/components/SandboxAlarmLabelComponent.html",[0,0.344,1,0.324,2,0.061,3,0.046,4,1.06,5,0.374,6,0.374,7,0.349,8,0.038,12,0.34,13,1.205,14,0.196,20,0.768,21,0.848,24,0.374,25,1.197,26,1.07,27,1.079,28,0.975,30,0.324,32,0.206,33,0.554,35,1.049,37,0.46,42,0.889,44,1.379,45,0.85,50,0.486,52,0.196,54,0.912,55,0.013,56,0.575,57,0.528,58,0.641,61,0.995,67,1.068,71,1.367,73,0.612,74,2.148,75,1.285,78,2.998,79,1.441,81,1.055,89,0.554,95,0.349,101,0.848,102,1.3,107,0.171,108,0.068,111,0.415,112,0.156,113,0.01,114,1.12,121,1.685,125,1.271,129,1.491,133,1.068,136,0.595,139,0.977,140,0.656,143,1.274,144,0.523,145,0.86,148,2.171,152,0.999,155,0.206,156,0.574,157,0.888,158,0.554,159,0.843,160,0.374,161,0.595,162,0.324,163,0.374,164,0.312,165,0.374,166,0.312,167,0.374,168,0.324,169,0.843,170,0.312,171,0.595,172,0.324,173,0.374,174,0.324,175,0.374,176,0.324,177,0.595,178,0.324,179,0.595,180,0.324,181,0.374,182,0.324,183,1.097,184,0.843,185,0.312,186,0.374,187,0.336,188,0.74,189,0.324,190,0.74,191,0.324,192,0.843,193,0.324,194,0.374,195,0.324,196,0.324,197,0.374,198,0.324,199,0.361,200,0.324,201,0.374,202,0.312,203,0.374,204,0.324,205,0.515,206,1.055,207,0.74,208,0.515,209,0.595,210,0.515,211,0.515,212,0.374,213,0.515,214,0.848,215,0.324,216,0.324,217,0.312,218,0.374,219,0.324,220,0.361,221,0.595,222,0.515,223,1.173,224,0.889,225,0.73,226,0.515,227,0.324,228,0.312,229,0.374,230,0.324,231,0.595,232,0.595,233,0.324,234,0.312,235,0.349,236,0.324,237,0.923,238,0.349,239,0.665,240,0.312,241,0.374,242,0.324,243,0.256,244,0.336,245,0.324,246,0.951,247,0.374,248,0.324,249,0.336,250,0.324,251,0.336,252,0.324,253,0.324,254,0.361,255,0.374,256,0.005,257,0.005,260,1.033,292,1.327,303,2.721,316,1.068,327,3.15,364,2.593,365,1.874,379,1.274,380,2.515,381,2.062,403,0.892,404,1.922,410,3.419,423,2.362,430,1.128,433,2.192,444,1.527,462,1.905,467,1.083,483,2.25,484,0.83,485,1.642,486,0.892,491,1.255,492,0.749,493,1.687,505,0.925,508,0.86,520,1.721,522,1.13,523,2.236,527,2.548,530,2.25,534,1.039,542,1.687,544,1.34,546,2.028,551,1.666,552,3.671,559,1.083,568,2.44,569,2.085,570,2.085,571,2.085,572,2.085,573,1.938,574,2.009,611,2.25,621,0.961,625,1.995,629,1.039,638,0.925,640,1.039,662,0.999,712,3.22,713,0.961,719,1.975,720,2.614,732,2.362,759,1.47,786,1.319,793,1.807,817,1.327,854,2.455,972,0.925,982,1.083,986,1.083,989,2.664,994,2.664,1023,2.917,1027,0.86,1155,2.338,1238,2.338,1287,2.142,1398,1.652,1414,0.925,1436,3.547,1437,2.547,1438,3.085,1439,3.085,1440,2.342,1441,2.342,1443,3.166,1481,1.879,1523,1.182,1569,0.961,1698,2.338,1739,2.835,1823,1.083,1984,2.142,1986,1.083,2062,2.664,2143,2.338,2208,2.44,2212,2.959,2213,1.182,2214,3.803,2215,3.243,2216,3.401,2217,3.636,2218,2.451,2219,1.969,2220,3.401,2221,1.239,2222,1.239,2223,1.239,2224,1.239,2225,1.969,2226,2.792,2227,1.239,2228,1.239,2229,1.239,2230,1.239,2231,1.239,2232,2.451,2233,1.239,2234,2.451,2235,1.239,2236,1.239,2237,2.451,2238,1.239,2239,2.451,2240,1.239,2241,1.239,2242,2.451,2243,1.239,2244,1.239,2245,1.239,2246,2.338,2247,1.239,2248,2.451,2249,1.239,2250,2.451,2251,1.239,2252,2.451,2253,1.239,2254,1.239,2255,1.239,2256,1.239,2257,1.239,2258,1.239,2259,1.239,2260,1.239,2261,1.239,2262,1.239,2263,1.239,2264,1.239,2265,1.239,2266,1.239,2267,1.239,2268,1.239,2269,1.239,2270,1.239,2271,1.239,2272,1.239,2273,1.239,2274,1.239,2275,1.239,2276,1.239,2277,1.239,2278,1.239,2279,1.797,2280,1.969,2281,1.969,2282,1.969,2283,1.239,2284,2.792,2285,1.969,2286,1.969,2287,3.095,2288,3.243,2289,2.451,2290,2.451,2291,2.451,2292,1.969,2293,1.239,2294,1.239,2295,1.969,2296,1.239,2297,1.239,2298,1.239,2299,1.182,2300,1.239,2301,1.239,2302,1.239,2303,1.182,2304,1.239,2305,1.239,2306,1.239,2307,1.239,2308,2.959,2309,3.046,2310,3.928,2311,3.243,2312,3.243,2313,3.243,2314,3.243,2315,1.969,2316,3.726,2317,3.243,2318,2.792,2319,2.792,2320,2.792,2321,3.529,2322,2.792,2323,2.792,2324,2.792,2325,2.792,2326,2.792,2327,3.401,2328,2.547,2329,2.44,2330,2.664,2331,2.792,2332,2.792,2333,2.792,2334,2.338,2335,2.338,2336,1.239,2337,2.451,2338,1.879,2339,1.879,2340,1.879,2341,1.797,2342,1.879,2343,1.879,2344,1.239,2345,1.239,2346,1.239,2347,1.182,2348,1.239,2349,1.182,2350,1.239,2351,1.239,2445,1.664,2463,2.288,2464,2.288,2465,2.288,2466,2.288,2467,2.288]],["title/components/SandboxAlarmTileComponent.html",[0,0.168,226,0.576]],["body/components/SandboxAlarmTileComponent.html",[0,0.344,1,0.319,2,0.06,3,0.045,4,1.055,5,0.369,6,0.369,7,0.343,8,0.038,12,0.339,13,1.202,14,0.193,20,0.762,21,0.843,24,0.369,25,1.196,26,1.069,27,1.077,28,0.97,30,0.319,32,0.203,33,0.548,35,1.2,37,0.454,42,0.884,44,1.373,45,0.85,50,0.542,52,0.193,54,0.907,55,0.013,56,0.572,57,0.652,58,0.635,61,0.993,67,1.059,71,1.351,73,0.616,74,2.143,75,1.276,78,2.99,79,1.433,81,1.047,89,0.683,95,0.343,101,0.84,102,1.298,107,0.17,108,0.067,111,0.409,112,0.155,113,0.01,114,1.118,121,1.681,125,1.266,129,1.487,133,1.057,136,0.586,139,0.965,140,0.646,143,1.26,144,0.515,145,0.848,148,2.214,152,0.984,155,0.203,156,0.567,157,0.882,158,0.548,159,0.836,160,0.369,161,0.588,162,0.319,163,0.369,164,0.308,165,0.369,166,0.308,167,0.369,168,0.319,169,0.836,170,0.308,171,0.588,172,0.319,173,0.369,174,0.319,175,0.369,176,0.319,177,0.588,178,0.319,179,0.588,180,0.319,181,0.369,182,0.319,183,1.094,184,0.836,185,0.308,186,0.369,187,0.331,188,0.733,189,0.319,190,0.733,191,0.319,192,0.836,193,0.319,194,0.369,195,0.319,196,0.319,197,0.369,198,0.319,199,0.356,200,0.319,201,0.369,202,0.308,203,0.369,204,0.319,205,0.509,206,1.053,207,0.733,208,0.509,209,0.588,210,0.509,211,0.509,212,0.369,213,0.509,214,0.843,215,0.319,216,0.319,217,0.308,218,0.369,219,0.319,220,0.356,221,0.588,222,0.509,223,1.17,224,0.884,225,0.509,226,0.724,227,0.319,228,0.308,229,0.369,230,0.319,231,0.589,232,0.588,233,0.319,234,0.308,235,0.343,236,0.319,237,0.918,238,0.343,239,0.659,240,0.308,241,0.369,242,0.319,243,0.253,244,0.331,245,0.319,246,0.946,247,0.369,248,0.319,249,0.331,250,0.319,251,0.331,252,0.319,253,0.319,254,0.356,255,0.369,256,0.005,257,0.005,260,1.025,292,1.318,303,2.703,316,1.059,327,3.144,364,2.583,365,1.885,379,1.271,380,2.499,381,2.052,403,0.879,404,1.911,410,3.411,423,2.345,430,1.124,433,2.177,444,1.509,462,2.015,467,1.067,483,2.232,484,0.818,485,1.626,486,0.879,491,1.243,492,0.738,493,1.674,505,0.912,508,0.848,520,1.701,522,1.114,523,2.214,527,2.688,530,1.956,534,1.024,542,1.674,544,1.328,546,2.015,551,1.654,552,3.664,559,1.067,568,2.42,569,2.068,570,2.068,571,2.068,572,2.068,573,1.922,574,1.993,611,2.232,621,0.947,625,1.985,629,1.024,638,0.912,640,1.024,662,0.984,712,3.203,713,0.947,719,1.956,720,2.598,732,2.345,759,1.453,786,1.304,793,1.792,817,1.318,854,2.438,972,0.912,982,1.067,986,1.067,989,2.642,994,2.642,1023,2.913,1027,0.848,1155,2.316,1238,2.886,1287,2.121,1398,2.036,1414,0.912,1436,3.541,1437,2.526,1438,3.069,1439,3.069,1440,2.322,1441,2.322,1443,3.154,1481,1.857,1523,1.165,1569,0.947,1698,2.316,1739,3.163,1823,1.067,1984,2.121,1986,1.067,2062,2.642,2143,2.316,2208,2.42,2212,3.301,2213,1.165,2214,3.787,2215,3.223,2216,3.381,2217,3.618,2218,2.427,2219,1.946,2220,3.381,2221,1.221,2222,1.221,2223,1.221,2224,1.221,2225,1.946,2226,2.769,2227,1.221,2228,1.221,2229,1.221,2230,1.221,2231,1.221,2232,2.427,2233,1.221,2234,2.427,2235,1.221,2236,1.221,2237,2.427,2238,1.221,2239,2.427,2240,1.221,2241,1.221,2242,2.427,2243,1.221,2244,1.221,2245,1.221,2246,2.316,2247,1.221,2248,2.427,2249,1.221,2250,2.427,2251,1.221,2252,2.427,2253,1.221,2254,1.221,2255,1.221,2256,1.221,2257,1.221,2258,1.221,2259,1.221,2260,1.221,2261,1.221,2262,1.221,2263,1.221,2264,1.221,2265,1.221,2266,1.221,2267,1.221,2268,1.221,2269,1.221,2270,1.221,2271,1.221,2272,1.221,2273,1.221,2274,1.221,2275,1.221,2276,1.221,2277,1.221,2278,1.221,2279,1.776,2280,1.946,2281,1.946,2282,1.946,2283,1.221,2284,2.769,2285,1.946,2286,1.946,2287,3.075,2288,3.223,2289,2.427,2290,2.427,2291,2.427,2292,1.946,2293,1.221,2294,1.221,2295,1.946,2296,1.221,2297,1.221,2298,1.221,2299,1.165,2300,1.221,2301,1.221,2302,1.221,2303,1.165,2304,1.221,2305,1.221,2306,1.221,2307,1.221,2308,2.94,2309,3.024,2310,3.914,2311,3.223,2312,3.223,2313,3.223,2314,3.223,2315,1.221,2316,3.709,2317,3.223,2318,2.769,2319,2.769,2320,2.769,2321,3.511,2322,2.769,2323,2.769,2324,2.769,2325,2.769,2326,2.769,2327,3.381,2328,2.526,2329,2.42,2330,2.642,2331,2.769,2332,2.769,2333,2.769,2334,3.075,2335,3.075,2336,1.221,2337,2.427,2338,1.857,2339,2.316,2340,2.886,2341,1.776,2342,1.857,2343,1.857,2344,1.221,2345,1.221,2346,1.221,2347,1.165,2348,1.221,2349,1.165,2350,1.221,2351,1.221,2445,1.64,2468,2.255,2469,2.255,2470,2.255,2471,2.255,2472,2.255,2473,2.255,2474,2.255,2475,2.255]],["title/modules/SharedModule.html",[258,0.899,271,1.846]],["body/modules/SharedModule.html",[0,0.325,2,0.135,3,0.102,8,0.086,12,0.258,13,0.985,14,0.554,18,3.138,45,0.806,55,0.013,61,0.908,95,0.985,107,0.283,108,0.152,112,0.174,113,0.008,155,0.458,166,1.148,168,1.181,170,1.148,172,1.191,174,1.181,176,1.181,178,1.181,180,1.117,219,1.181,220,0.804,230,1.191,231,0.669,256,0.01,257,0.01,258,1.743,260,1.02,261,2.873,262,2.614,263,1.914,269,3.732,270,3.188,271,3.943,272,2.715,273,2.059,274,1.914,276,2.715,277,2.937,278,2.138,286,5.105,287,4.702,288,3.056,289,4.702,290,2.898,291,2.898,292,1.201,293,2.313,294,2.41,295,2.898,299,4.021,377,4.021,412,2.346,685,4.021,730,4.021,937,4.021,1236,4.021,1266,4.446,1275,4.021,1281,3.449,1287,3.06,1746,4.021,2308,3.194,2364,5.646,2365,4.021,2366,5.646,2403,4.446,2405,4.021,2476,4.446,2477,4.446,2478,5.093,2479,4.446,2480,5.093,2481,6.467,2482,6.467,2483,4.021,2484,5.093,2485,5.093,2486,5.093,2487,5.093,2488,5.093,2489,5.093,2490,5.093]],["title/components/ShelveButtonComponent.html",[0,0.168,227,0.576]],["body/components/ShelveButtonComponent.html",[0,0.342,1,0.557,2,0.104,3,0.079,4,0.621,5,0.643,6,1.022,7,0.599,8,0.066,11,2.861,12,0.317,13,1.285,14,0.628,15,4.049,16,2.474,17,3.464,18,2.624,19,4.757,20,0.743,21,0.885,22,2.958,23,5.457,24,0.643,25,1.225,26,1.093,27,0.743,28,0.772,29,4.935,30,0.772,31,4.302,32,0.354,33,0.83,35,1.095,36,4.374,37,0.926,39,5.326,40,5.89,41,2.95,42,0.955,43,4.905,44,1.534,45,0.816,46,0.716,47,3.435,48,6.789,49,6.789,50,0.621,52,0.337,54,0.83,55,0.013,56,0.578,57,0.827,58,0.772,59,1.842,60,3.229,61,1.023,62,3.751,63,3.27,64,5.326,65,5.89,66,2.815,67,1.397,68,1.845,69,3.435,70,3.435,73,0.663,74,1.734,75,1.244,77,3.464,78,2.629,79,1.204,80,3.435,81,1.021,82,1.998,83,4.302,84,3.27,85,3.464,86,4.302,87,4.757,88,4.757,89,1.079,90,2.815,91,3.499,92,3.435,93,2.208,94,2.481,95,0.83,96,3.435,98,3.962,101,0.738,102,0.621,106,3.435,107,0.224,108,0.117,109,3.435,110,2.861,111,0.713,112,0.091,113,0.006,114,0.955,115,1.562,116,2.501,117,2.501,118,2.501,121,0.842,122,3.435,123,3.435,124,3.435,126,2.13,127,1.245,131,3.106,133,1.474,134,1.652,135,2.728,136,1.023,137,1.717,139,1.463,140,1.128,141,1.717,142,2.665,143,1.379,144,1.427,145,1.479,146,4.302,147,2.123,148,1.128,150,2.033,151,2.239,152,1.717,153,1.862,154,2.665,155,0.354,156,0.86,157,0.86,158,0.83,159,1.103,160,0.643,161,0.891,162,0.557,163,0.643,164,0.537,165,0.643,166,0.537,167,0.643,168,0.557,169,1.103,170,0.537,171,0.891,172,0.557,173,0.643,174,0.557,175,0.643,176,0.557,177,0.891,178,0.557,179,0.891,180,0.557,181,0.643,182,0.557,183,0.955,184,1.103,185,0.537,186,0.643,187,0.578,188,1.022,189,0.557,190,1.022,191,0.557,192,1.103,193,0.557,194,0.643,195,0.557,196,0.557,197,0.643,198,0.557,199,0.621,200,0.557,201,0.643,202,0.537,203,0.643,204,0.557,205,0.557,206,0.931,207,1.022,208,0.557,209,0.643,210,0.557,211,0.557,212,0.643,213,0.557,214,0.557,215,0.557,216,0.557,217,0.537,218,0.643,219,0.557,220,0.621,221,0.891,222,0.557,223,1.065,224,0.557,225,0.557,226,0.557,227,0.955,228,0.537,229,0.643,230,0.557,231,0.517,232,0.891,233,0.557,234,0.537,235,0.599,236,0.557,237,1.085,238,0.599,239,0.918,240,0.537,241,0.643,242,0.557,243,0.441,244,0.578,245,0.557,246,0.772,247,0.643,248,0.557,249,0.578,250,0.557,251,0.578,252,0.557,253,0.557,254,0.621,255,0.643,256,0.008,257,0.008,282,6.278,354,2.13,379,1.198,381,2.319,418,3.839,430,1.118,496,2.95,817,1.285,1346,3.27,2124,3.106,2491,6.943,2492,6.746,2493,6.746,2494,5.449,2495,4.757,2496,5.457,2497,3.935,2498,3.935,2499,3.935,2500,3.935,2501,3.935]],["title/injectables/SidenavService.html",[36,2.201,1015,1.376]],["body/injectables/SidenavService.html",[2,0.13,3,0.098,8,0.082,12,0.373,14,0.54,17,4.959,18,3.275,26,0.618,32,0.439,33,0.959,35,1.506,36,3.411,37,0.796,45,0.768,46,0.828,50,0.648,52,0.54,53,1.03,54,1.121,55,0.013,56,0.631,57,0.911,58,1.043,59,2.028,61,0.895,62,5.134,66,4.03,73,0.668,75,1.439,89,1.16,93,2.061,94,2.133,101,1.306,102,1.1,103,2.645,107,0.244,108,0.146,112,0.114,113,0.007,114,0.987,115,2.11,125,0.856,214,1.105,231,0.828,256,0.009,257,0.009,316,1.304,343,4.986,352,2.133,365,1.486,379,1.03,412,2.917,427,2.733,430,1.293,659,4.959,664,3.213,753,4.266,1015,2.36,1017,3.554,1026,4.58,1040,5.5,1047,4.973,1049,4.973,1086,5.547,1417,3.554,1418,3.107,1494,3.853,1561,3.31,1591,5.672,1612,7.02,1633,3.859,2349,3.254,2419,5.5,2422,5.5,2428,4.973,2429,5.5,2433,5.5,2435,5.5,2502,4.268,2503,6.299,2504,7.362,2505,7.362,2506,7.362,2507,7.362,2508,6.299,2509,4.888,2510,6.299,2511,4.888,2512,4.888,2513,4.888,2514,4.888,2515,4.888,2516,6.299,2517,4.888,2518,4.888,2519,6.299,2520,4.888,2521,4.888,2522,4.888,2523,4.888,2524,4.888,2525,4.888,2526,4.888,2527,4.888,2528,4.888,2529,4.888,2530,6.299,2531,4.888,2532,4.888]],["title/components/StatusViewComponent.html",[0,0.168,230,0.576]],["body/components/StatusViewComponent.html",[0,0.337,1,0.553,2,0.103,3,0.078,4,0.616,5,0.638,6,0.638,7,0.594,8,0.066,12,0.198,13,0.825,18,2.274,20,0.739,21,0.881,24,0.638,25,1.224,26,1.093,27,0.739,28,0.767,30,0.767,32,0.351,33,0.825,35,1.359,37,0.685,42,0.952,44,1.555,45,0.842,46,0.817,50,0.647,52,0.334,55,0.013,56,0.464,57,0.825,61,0.817,67,1.122,68,1.834,73,0.442,75,1.535,89,0.825,101,1.37,102,1.225,103,2.274,107,0.223,108,0.116,111,0.707,112,0.091,113,0.006,115,1.783,125,0.683,136,1.408,144,0.891,147,1.52,148,2.327,155,0.351,156,0.855,157,0.855,158,1.024,159,1.099,160,0.638,161,0.885,162,0.553,163,0.638,164,0.532,165,0.638,166,0.532,167,0.638,168,0.553,169,1.099,170,0.739,171,0.885,172,0.553,173,0.638,174,0.553,175,0.638,176,0.553,177,0.885,178,0.553,179,0.885,180,0.553,181,0.638,182,0.553,183,0.952,184,1.099,185,0.532,186,0.638,187,0.573,188,1.017,189,0.553,190,1.017,191,0.553,192,1.099,193,0.553,194,0.638,195,0.553,196,0.553,197,0.638,198,0.553,199,0.616,200,0.553,201,0.638,202,0.532,203,0.638,204,0.553,205,0.553,206,0.928,207,1.017,208,0.553,209,0.638,210,0.553,211,0.553,212,0.638,213,0.553,214,0.553,215,0.553,216,0.553,217,0.532,218,0.638,219,0.553,220,0.616,221,0.885,222,0.553,223,1.061,224,0.553,225,0.553,226,0.553,227,0.553,228,0.532,229,0.638,230,0.952,231,1.004,232,0.885,233,0.553,234,0.532,235,0.594,236,0.553,237,1.082,238,0.594,239,0.914,240,0.532,241,0.638,242,0.553,243,0.437,244,0.573,245,0.553,246,0.767,247,0.638,248,0.553,249,0.573,250,0.553,251,0.573,252,0.553,253,0.553,254,0.616,255,0.638,256,0.008,257,0.008,316,1.288,345,2.652,364,2.88,365,1.951,369,4.765,379,0.885,395,3.955,396,3.734,412,1.965,413,3.443,414,3.443,415,3.443,416,3.443,418,3.082,430,0.855,446,2.22,462,2.106,491,1.502,527,2.927,544,1.604,568,2.563,569,2.515,570,2.515,571,2.515,572,2.515,573,2.339,574,2.425,619,6.381,664,2.364,817,1.278,972,2.19,1023,2.561,1027,1.466,1398,2.46,1414,1.577,1436,3.67,1438,3.181,1439,3.181,1440,2.46,1441,2.46,1443,3.19,1555,3.668,1984,2.945,1986,1.846,2013,4.729,2112,5.869,2114,3.406,2116,3.406,2118,3.406,2120,3.406,2178,4.276,2334,3.472,2335,3.472,2338,2.015,2339,2.798,2340,3.472,2341,1.927,2342,2.015,2343,2.015,2483,6.323,2533,6.992,2534,3.08,2535,6.222,2536,4.729,2537,6.722,2538,7.309,2539,5.416,2540,3.901,2541,3.901,2542,5.416,2543,3.406,2544,3.901,2545,3.901,2546,5.416,2547,5.416,2548,3.901,2549,3.901,2550,3.901,2551,3.901,2552,3.901]],["title/modules/TabularModule.html",[258,0.899,1366,2.584]],["body/modules/TabularModule.html",[0,0.293,2,0.158,3,0.119,8,0.1,12,0.302,55,0.013,95,1.084,107,0.28,108,0.177,112,0.183,113,0.009,155,0.535,200,1.16,233,1.205,234,1.118,235,0.907,256,0.011,257,0.011,258,1.745,259,4.661,260,1.193,261,3.08,262,2.407,263,2.238,270,3.311,271,3.72,272,2.989,273,2.407,274,2.238,276,2.989,277,3.233,278,2.499,292,1.404,293,2.704,294,2.817,296,3.223,551,2.109,620,2.989,664,3.107,1366,5.473,1373,4.328,1745,4.328,1746,4.7,2553,5.197,2554,5.197,2555,5.953,2556,5.197,2557,5.953,2558,5.953,2559,5.953]],["title/components/TabularViewComponent.html",[0,0.168,234,0.555]],["body/components/TabularViewComponent.html",[0,0.34,1,0.698,2,0.131,3,0.099,4,0.777,5,0.805,6,0.805,7,0.75,8,0.083,12,0.25,13,0.964,14,0.542,20,0.864,21,0.991,24,0.805,25,1.235,26,1.103,27,0.864,28,0.896,30,0.896,32,0.443,37,0.933,42,1.046,45,0.818,46,0.919,50,0.49,52,0.422,55,0.013,56,0.542,61,0.599,73,0.402,81,1.186,89,0.75,107,0.163,108,0.147,112,0.114,113,0.007,125,0.863,133,1.162,134,2.657,136,1.646,137,2.762,140,2.116,141,3.222,151,3.981,155,0.443,156,0.999,157,0.999,158,0.964,159,1.207,160,0.805,161,1.035,162,0.698,163,0.805,164,0.672,165,0.805,166,0.672,167,0.805,168,0.698,169,1.207,170,0.672,171,1.035,172,0.698,173,0.805,174,0.698,175,0.805,176,0.698,177,1.035,178,0.698,179,1.035,180,0.698,181,0.805,182,0.698,183,1.046,184,1.207,185,0.672,186,0.805,187,0.724,188,1.144,189,0.698,190,1.144,191,0.698,192,1.207,193,0.698,194,0.805,195,0.698,196,0.698,197,0.805,198,0.698,199,0.777,200,0.698,201,0.805,202,0.672,203,0.805,204,0.698,205,0.698,206,1.003,207,1.144,208,0.698,209,0.805,210,0.698,211,0.698,212,0.805,213,0.698,214,0.698,215,0.698,216,0.698,217,0.672,218,0.805,219,0.698,220,0.777,221,1.035,222,0.698,223,1.165,224,0.698,225,0.698,226,0.698,227,0.698,228,0.672,229,0.805,230,0.698,231,0.647,232,1.035,233,0.991,234,1.007,235,1.226,236,0.698,237,1.14,238,0.75,239,1.028,240,0.672,241,0.805,242,0.698,243,0.552,244,0.724,245,0.698,246,0.896,247,0.805,248,0.698,249,0.724,250,0.698,251,0.724,252,0.698,253,0.698,254,0.777,255,0.805,256,0.009,257,0.009,379,0.805,380,2.937,426,2.667,490,1.667,492,2.071,620,2.657,639,2.956,664,2.762,713,2.068,817,1.493,1745,5.086,1948,5.527,2175,6.446,2534,3.888,2536,5.527,2543,4.3,2560,6.107,2561,6.33,2562,6.995,2563,4.925,2564,6.33,2565,5.527]],["title/interfaces/TimeoutOption.html",[2566,2.313,2567,3.209]],["body/interfaces/TimeoutOption.html",[0,0.307,2,0.127,3,0.066,8,0.055,12,0.167,13,0.732,14,0.534,15,1.979,17,3.055,18,2.018,20,0.45,21,0.681,25,0.467,26,0.417,28,0.467,30,0.467,32,0.296,33,0.732,35,0.842,36,3.586,37,0.608,42,0.467,44,0.661,45,0.821,46,0.433,50,0.255,55,0.013,57,0.561,58,0.803,59,1.855,60,2.929,61,1.006,62,3.975,63,1.979,66,1.704,67,1.174,71,1.24,73,0.676,74,1.333,75,1.423,79,1.062,81,0.618,82,0.977,89,1.136,93,1.856,94,1.117,99,2.234,101,0.618,102,1.265,103,2.018,104,3.272,107,0.255,108,0.098,110,2.398,111,0.598,112,0.112,113,0.005,114,1.036,115,2.138,121,1.527,125,0.578,126,3.586,127,1.794,129,1.099,131,3.795,228,0.45,231,0.433,256,0.01,257,0.007,263,1.807,288,1.979,290,1.877,291,3.546,316,1.174,352,1.439,354,4.039,365,1.338,379,1.255,381,2.315,412,2.817,422,1.561,427,1.156,430,1.294,438,3.495,474,2.885,479,5.635,542,1.573,546,1.117,577,1.877,625,2.351,635,2.88,639,1.979,640,1.498,657,3.586,659,2.097,676,1.156,684,4.951,719,2.719,733,2.183,736,2.604,737,3.795,742,2.234,743,3.795,744,3.055,745,4.284,746,2.097,747,2.604,748,2.604,749,2.604,750,2.604,759,2.519,782,2.508,783,1.439,792,3.255,793,1.156,817,0.778,818,3.744,972,2.293,982,1.561,1013,3.795,1023,2.183,1033,3.586,1034,2.398,1042,5.889,1043,4.53,1058,2.234,1086,4.22,1112,2.88,1116,3.744,1128,3.905,1146,6.617,1163,2.398,1208,2.604,1214,3.255,1297,2.88,1346,2.885,1401,2.604,1445,4.196,1448,2.88,1456,2.88,1484,5.44,1486,4.123,1493,2.88,1495,2.83,1498,4.196,1502,2.88,1551,3.055,1576,3.769,1587,3.055,1588,2.88,1638,2.88,1639,1.979,1640,3.495,1659,2.88,1766,3.795,1819,3.795,1830,3.255,1869,4.818,1913,3.961,1957,2.88,2128,2.88,2129,4.196,2132,5.783,2133,4.196,2134,4.951,2136,2.88,2145,2.604,2151,6.513,2155,5.44,2156,3.495,2157,4.951,2160,2.88,2161,2.88,2167,2.88,2169,2.88,2428,2.604,2495,4.196,2496,6.845,2566,2.735,2567,4.477,2568,2.88,2569,4.196,2570,7.579,2571,4.806,2572,5.671,2573,4.806,2574,3.298,2575,3.298,2576,3.298,2577,2.88,2578,4.806,2579,3.298,2580,3.298,2581,6.231,2582,3.298,2583,3.298,2584,3.298,2585,3.298,2586,3.298,2587,3.298,2588,6.231,2589,3.298,2590,3.298,2591,6.231,2592,3.298,2593,6.231,2594,3.298,2595,3.298,2596,3.298,2597,3.298,2598,3.298,2599,3.298,2600,2.604,2601,4.806,2602,4.806,2603,3.298,2604,5.671,2605,3.298,2606,4.806,2607,3.298,2608,3.298,2609,3.298,2610,4.806,2611,4.806,2612,3.298,2613,5.671,2614,3.298,2615,3.298,2616,3.298,2617,4.806,2618,3.298,2619,3.298,2620,3.298,2621,4.806,2622,3.298,2623,3.298,2624,4.806,2625,3.298,2626,4.806,2627,3.298,2628,4.806,2629,3.298,2630,3.298,2631,3.298,2632,3.298,2633,3.298,2634,7.765,2635,3.298,2636,4.806,2637,4.806,2638,4.806,2639,3.298,2640,2.88,2641,3.298,2642,3.298,2643,3.298,2644,3.298,2645,3.298,2646,4.196,2647,3.298,2648,3.298,2649,3.298,2650,3.298,2651,3.298,2652,3.298,2653,3.298,2654,3.298,2655,3.298,2656,3.298,2657,3.298,2658,3.298,2659,3.298,2660,4.806,2661,4.806,2662,3.298,2663,3.298,2664,4.806,2665,3.298,2666,3.298,2667,6.914,2668,3.298,2669,4.806,2670,4.806,2671,3.298,2672,3.298,2673,3.298,2674,3.298,2675,3.298]],["title/interfaces/User.html",[1116,2.008,2566,2.313]],["body/interfaces/User.html",[2,0.158,3,0.119,8,0.1,12,0.302,14,0.511,32,0.536,33,1.086,35,1.045,46,0.784,52,0.511,53,0.975,55,0.013,57,0.832,58,1.01,59,1.982,60,3.082,73,0.581,104,2.947,107,0.262,108,0.178,112,0.166,113,0.011,114,0.845,115,1.71,256,0.011,257,0.011,352,2.604,365,1.408,430,1.293,544,2.258,567,4.532,662,2.604,733,2.71,818,2.947,1015,2.414,1025,3.231,1030,3.821,1031,3.86,1032,3.395,1116,4.173,1128,3.522,1486,5.744,1576,3.395,1586,4.711,1607,5.549,1770,3.581,1869,4.532,1913,3.793,1991,4.041,2156,4.338,2170,4.711,2566,4.057,2676,4.711,2677,7.155,2678,6.225,2679,5.209,2680,5.209]],["title/injectables/UserService.html",[1015,1.376,1576,2.313]],["body/injectables/UserService.html",[2,0.154,3,0.116,8,0.098,12,0.355,14,0.601,32,0.522,33,1.068,35,1.32,37,0.887,46,0.921,50,0.584,52,0.601,53,1.147,54,0.884,55,0.013,56,0.497,57,0.819,58,0.993,59,2.117,60,3.623,73,0.614,104,3.465,107,0.26,108,0.173,112,0.163,113,0.01,114,0.822,115,1.664,256,0.01,257,0.01,352,2.534,365,1.37,430,1.107,544,2.412,567,3.691,662,3.061,733,3.185,818,3.465,1015,2.551,1025,3.144,1030,3.933,1031,4.081,1032,3.304,1116,4.244,1128,3.465,1486,5.921,1576,3.992,1586,5.538,1607,4.75,1770,4.21,1869,4.459,1913,3.691,1938,5.07,1991,4.75,2156,4.222,2170,4.584,2566,3.304,2676,4.584,2677,6.124,2678,5.07,2679,6.835,2680,5.07,2681,7.014,2682,5.806]],["title/components/WeatherBackupWsMarkerComponent.html",[0,0.168,236,0.576]],["body/components/WeatherBackupWsMarkerComponent.html",[0,0.34,1,0.613,2,0.115,3,0.087,4,0.684,5,0.708,6,0.708,7,0.66,8,0.073,12,0.295,13,0.886,14,0.646,20,0.794,21,0.93,24,0.708,25,1.229,26,1.097,27,0.794,28,0.824,30,0.824,32,0.389,33,0.886,35,1.39,37,0.735,42,0.994,44,1.407,45,0.833,46,0.764,50,0.597,52,0.563,53,0.951,54,0.66,55,0.013,56,0.563,57,0.855,58,0.613,59,1.961,61,0.526,73,0.615,81,1.09,89,0.66,107,0.26,108,0.129,111,1.054,112,0.101,113,0.006,114,0.824,125,1.019,155,0.389,156,0.918,157,0.918,158,0.886,159,1.148,160,0.708,161,0.951,162,0.613,163,0.708,164,0.591,165,0.708,166,0.591,167,0.708,168,0.613,169,1.148,170,0.794,171,0.951,172,0.613,173,0.708,174,0.613,175,0.708,176,0.613,177,0.951,178,0.613,179,0.951,180,0.613,181,0.708,182,0.613,183,0.994,184,1.148,185,0.591,186,0.708,187,0.636,188,1.074,189,0.613,190,1.074,191,0.613,192,1.148,193,0.613,194,0.708,195,0.613,196,0.613,197,0.708,198,0.613,199,0.684,200,0.613,201,0.708,202,0.591,203,0.708,204,0.613,205,0.613,206,0.962,207,1.074,208,0.613,209,0.708,210,0.613,211,0.613,212,0.708,213,0.613,214,0.613,215,0.613,216,0.613,217,0.591,218,0.708,219,0.613,220,0.684,221,0.951,222,0.613,223,1.108,224,0.613,225,0.613,226,0.613,227,0.613,228,0.591,229,0.708,230,0.613,231,0.569,232,0.951,233,0.613,234,0.591,235,0.66,236,0.994,237,1.189,238,1.297,239,1.251,240,0.591,241,0.708,242,0.613,243,0.485,244,0.636,245,0.613,246,0.824,247,0.708,248,0.613,249,0.636,250,0.613,251,1.132,252,0.613,253,0.613,254,0.684,255,0.708,256,0.009,257,0.009,365,1.022,379,0.951,427,2.038,430,1.037,508,2.639,527,1.571,551,1.723,654,2.758,658,2.758,676,2.809,782,2.99,783,1.89,817,1.372,990,3.491,1024,3.109,1027,1.628,1313,2.933,1314,4.776,1315,4.229,1323,3.419,1381,3.942,1414,2.352,1452,4.464,2600,5.544,2683,4.701,2684,4.979,2685,5.305,2686,4.665,2687,4.776,2688,2.933,2689,5.079,2690,4.331,2691,3.781,2692,3.781,2693,3.781,2694,2.753,2695,4.331]],["title/components/WeatherComponent.html",[0,0.168,240,0.555]],["body/components/WeatherComponent.html",[0,0.345,1,0.668,2,0.125,3,0.094,4,0.744,5,0.771,6,0.771,7,0.718,8,0.079,12,0.239,13,0.937,14,0.622,16,2.795,20,0.84,21,0.97,24,0.771,25,1.233,26,1.101,27,0.84,28,0.872,30,0.872,32,0.424,33,0.937,37,0.778,42,1.029,44,0.945,45,0.813,46,0.9,50,0.562,52,0.587,53,1.006,54,0.718,55,0.013,56,0.674,57,0.719,58,0.668,61,0.573,62,3.694,73,0.502,81,1.154,89,1.044,95,0.718,101,0.884,102,0.744,105,3.332,107,0.204,108,0.141,111,0.855,112,0.11,113,0.007,114,0.668,125,1.078,127,1.948,144,1.077,147,1.838,151,2.684,155,0.424,156,0.971,157,0.971,158,0.937,159,1.187,160,0.771,161,1.006,162,0.668,163,0.771,164,0.644,165,0.771,166,0.644,167,0.771,168,0.668,169,1.187,170,0.644,171,1.006,172,0.668,173,0.771,174,0.668,175,0.771,176,0.668,177,1.006,178,0.668,179,1.006,180,0.668,181,0.771,182,0.668,183,1.029,184,1.187,185,0.644,186,0.771,187,0.693,188,1.12,189,0.668,190,1.12,191,0.668,192,1.187,193,0.668,194,0.771,195,0.668,196,0.668,197,0.771,198,0.668,199,0.744,200,0.668,201,0.771,202,0.644,203,0.771,204,0.668,205,0.668,206,0.99,207,1.12,208,0.668,209,0.771,210,0.668,211,0.668,212,0.771,213,0.668,214,0.668,215,0.668,216,0.668,217,0.644,218,0.771,219,0.668,220,0.744,221,1.006,222,0.668,223,1.146,224,0.668,225,0.668,226,0.668,227,0.668,228,0.644,229,0.771,230,0.668,231,0.62,232,1.006,233,0.668,234,0.644,235,0.718,236,0.668,237,1.18,238,0.718,239,1.007,240,0.991,241,0.771,242,0.668,243,0.529,244,0.693,245,0.668,246,0.872,247,0.771,248,0.668,249,0.693,250,0.668,251,0.693,252,0.668,253,0.668,254,0.744,255,0.771,256,0.009,257,0.009,313,2.684,321,3.04,329,4.859,379,1.006,424,3.932,491,1.308,654,3.35,663,4.918,676,2.64,720,2.686,721,4.859,793,2.545,817,1.822,1024,2.232,1301,3.724,1345,4.859,1346,3.694,2696,4.118,2697,6.155,2698,6.155,2699,6.851,2700,6.155,2701,7.726,2702,6.155,2703,6.155,2704,6.155,2705,4.716,2706,4.716,2707,4.716]],["title/components/WeatherDataMarkerComponent.html",[0,0.168,242,0.576]],["body/components/WeatherDataMarkerComponent.html",[0,0.342,1,0.61,2,0.114,3,0.086,4,0.68,5,0.948,6,0.704,7,0.656,8,0.072,12,0.294,13,0.883,14,0.645,20,0.791,21,0.928,24,0.704,25,1.229,26,1.097,27,0.791,28,0.821,30,0.821,32,0.387,33,0.883,35,1.319,37,0.733,42,0.992,44,1.509,45,0.811,46,0.762,50,0.596,52,0.561,53,0.948,54,0.656,55,0.013,56,0.561,57,0.818,58,0.61,59,1.958,60,3.62,61,0.524,73,0.351,79,1.549,81,1.087,89,0.656,95,0.656,101,1.087,102,0.915,107,0.25,108,0.128,111,1.051,112,0.1,113,0.006,114,0.821,133,1.368,135,1.881,138,2.739,140,1.878,141,1.881,143,1.51,144,1.496,148,1.662,155,0.387,156,0.915,157,0.915,158,0.883,159,1.146,160,0.704,161,0.948,162,0.61,163,0.704,164,0.588,165,0.704,166,0.588,167,0.704,168,0.61,169,1.146,170,0.791,171,0.948,172,0.61,173,0.704,174,0.61,175,0.704,176,0.61,177,0.948,178,0.61,179,0.948,180,0.61,181,0.704,182,0.61,183,0.992,184,1.146,185,0.588,186,0.704,187,0.633,188,1.071,189,0.61,190,1.071,191,0.61,192,1.146,193,0.61,194,0.704,195,0.61,196,0.61,197,0.704,198,0.61,199,0.68,200,0.61,201,0.704,202,0.588,203,0.704,204,0.61,205,0.61,206,0.961,207,1.071,208,0.61,209,0.704,210,0.61,211,0.61,212,0.704,213,0.61,214,0.61,215,0.61,216,0.61,217,0.588,218,0.704,219,0.61,220,0.68,221,0.948,222,0.61,223,1.106,224,0.61,225,0.61,226,0.61,227,0.61,228,0.588,229,0.704,230,0.61,231,0.566,232,0.948,233,0.61,234,0.588,235,0.656,236,0.61,237,1.185,238,0.656,239,1.029,240,0.588,241,0.704,242,0.992,243,0.952,244,0.633,245,0.61,246,0.821,247,0.704,248,0.61,249,0.633,250,0.61,251,1.074,252,0.61,253,0.61,254,0.68,255,0.704,256,0.009,257,0.009,318,3.62,379,0.948,381,1.364,404,1.319,484,1.563,485,1.563,490,1.963,493,1.897,496,2.333,498,1.957,508,2.941,551,1.717,628,2.452,654,2.751,658,2.751,676,2.807,733,2.633,757,2.586,782,2.988,783,1.881,790,4.215,793,2.562,817,1.368,1024,3.101,1287,2.744,1313,2.918,1314,4.764,1315,4.215,1328,5.062,1333,3.762,1381,3.932,1411,3.299,1414,1.742,1537,4.215,1596,5.095,2279,2.864,2683,4.696,2684,4.974,2685,5.299,2686,4.661,2687,4.764,2688,2.918,2694,2.739,2708,5.72,2709,4.309,2710,4.309,2711,4.309,2712,4.309]],["title/modules/WeatherModule.html",[258,0.899,1710,2.584]],["body/modules/WeatherModule.html",[0,0.273,2,0.14,3,0.106,8,0.089,12,0.268,55,0.013,63,3.97,95,1.008,107,0.284,108,0.157,112,0.176,113,0.008,155,0.474,236,1.127,237,1.175,238,1.008,239,1.169,240,1.086,242,1.127,243,0.741,244,1.169,245,1.127,246,1.073,248,1.127,249,1.169,250,1.127,251,0.972,252,1.187,256,0.01,257,0.01,258,1.674,259,4.528,260,1.058,261,2.921,262,2.134,263,2.715,269,3.766,270,3.217,271,3.614,272,2.777,273,2.134,274,1.984,276,2.777,277,3.004,278,2.216,290,3.004,292,1.245,293,2.397,294,2.498,295,3.004,296,2.858,551,1.959,676,2.653,1365,4.776,1370,4.609,1372,5.775,1373,3.838,1374,4.168,1377,6.307,1379,3.838,1710,5.523,2684,4.814,2685,4.892,2686,4.528,2694,3.356,2713,4.609,2714,4.609,2715,5.279,2716,4.609,2717,4.609,2718,5.279,2719,6.615,2720,4.609,2721,4.168,2722,4.609,2723,5.279,2724,5.222,2725,4.168,2726,5.279]],["title/components/WeatherPrimaryWsConnectorComponent.html",[0,0.168,245,0.576]],["body/components/WeatherPrimaryWsConnectorComponent.html",[0,0.328,1,0.623,2,0.117,3,0.088,4,0.695,5,0.72,6,0.72,7,0.67,8,0.074,12,0.223,13,0.896,14,0.504,16,2.671,20,0.802,21,0.938,24,0.72,25,1.23,26,1.098,27,0.802,28,0.833,30,0.833,32,0.396,37,0.743,42,1.001,44,1.518,45,0.792,46,0.87,50,0.587,52,0.567,53,0.961,55,0.013,56,0.504,57,0.514,61,0.535,73,0.618,79,1.3,81,1.102,89,0.67,102,1.116,107,0.146,108,0.131,112,0.102,113,0.007,121,0.942,129,1.37,153,3.586,155,0.396,156,0.928,157,0.928,158,0.896,159,1.155,160,0.72,161,0.961,162,0.623,163,0.72,164,0.601,165,0.72,166,0.601,167,0.72,168,0.623,169,1.155,170,0.601,171,0.961,172,0.623,173,0.72,174,0.623,175,0.72,176,0.623,177,0.961,178,0.623,179,0.961,180,0.623,181,0.72,182,0.623,183,1.001,184,1.155,185,0.601,186,0.72,187,0.647,188,1.083,189,0.623,190,1.083,191,0.623,192,1.155,193,0.623,194,0.72,195,0.623,196,0.623,197,0.72,198,0.623,199,0.695,200,0.623,201,0.72,202,0.601,203,0.72,204,0.623,205,0.623,206,0.968,207,1.083,208,0.623,209,0.72,210,0.623,211,0.623,212,0.72,213,0.623,214,0.623,215,0.623,216,0.623,217,0.601,218,0.72,219,0.623,220,0.695,221,0.961,222,0.623,223,1.116,224,0.623,225,0.623,226,0.623,227,0.623,228,0.601,229,0.72,230,0.623,231,0.578,232,0.961,233,0.623,234,0.601,235,0.67,236,0.623,237,1.191,238,0.67,239,1.25,240,0.601,241,0.72,242,0.623,243,0.493,244,0.647,245,1.001,246,1.201,247,0.72,248,0.623,249,0.647,250,0.623,251,0.973,252,0.623,253,0.623,254,0.695,255,0.72,256,0.009,257,0.009,430,1.045,433,2.292,507,4.276,508,2.657,551,1.742,625,1.347,676,2.841,733,2.671,793,2.32,817,1.387,993,3.2,1106,5.51,1330,4.276,1409,5.134,1542,3.982,1596,5.139,1622,5.782,2279,2.905,2683,4.644,2684,4.919,2708,5.782,2725,6.109,2727,3.843,2728,8.11,2729,5.881,2730,6.622,2731,5.881,2732,7.068,2733,7.068,2734,5.881,2735,4.402,2736,4.402,2737,4.402,2738,6.171,2739,4.402,2740,7.068,2741,4.402,2742,4.402,2743,5.881,2744,5.881,2745,4.402,2746,4.402]],["title/components/WeatherPrimaryWsMarkerComponent.html",[0,0.168,248,0.576]],["body/components/WeatherPrimaryWsMarkerComponent.html",[0,0.337,1,0.579,2,0.108,3,0.082,4,0.645,5,0.668,6,0.668,7,0.623,8,0.069,12,0.323,13,0.852,14,0.635,16,2.896,20,0.763,21,0.903,24,0.668,25,1.227,26,1.095,27,0.763,28,0.792,30,0.792,32,0.367,33,0.852,35,1.414,37,0.707,42,0.971,44,1.374,45,0.832,46,0.735,50,0.607,52,0.546,53,0.914,54,1.044,55,0.013,56,0.587,57,0.886,58,0.792,59,1.927,61,0.497,73,0.619,74,2.057,75,1.277,79,1.236,81,1.39,84,3.357,89,0.852,102,0.883,107,0.238,108,0.122,111,1.014,112,0.095,113,0.006,114,0.903,125,1.299,155,0.367,156,0.883,157,0.883,158,0.852,159,1.121,160,0.668,161,0.914,162,0.579,163,0.668,164,0.558,165,0.668,166,0.558,167,0.668,168,0.579,169,1.121,170,0.936,171,0.914,172,0.579,173,0.668,174,0.579,175,0.668,176,0.579,177,0.914,178,0.579,179,0.914,180,0.579,181,0.668,182,0.579,183,0.971,184,1.121,185,0.558,186,0.668,187,0.6,188,1.042,189,0.579,190,1.042,191,0.579,192,1.121,193,0.579,194,0.668,195,0.579,196,0.579,197,0.668,198,0.579,199,0.645,200,0.579,201,0.668,202,0.558,203,0.668,204,0.579,205,0.579,206,0.943,207,1.042,208,0.579,209,0.668,210,0.579,211,0.579,212,0.668,213,0.579,214,0.579,215,0.579,216,0.579,217,0.558,218,0.668,219,0.579,220,0.645,221,0.914,222,0.579,223,1.082,224,0.579,225,0.579,226,0.579,227,0.579,228,0.558,229,0.668,230,0.579,231,0.537,232,0.914,233,0.579,234,0.558,235,0.623,236,0.579,237,1.174,238,0.623,239,1.252,240,0.558,241,0.668,242,0.579,243,0.458,244,0.6,245,0.579,246,1.209,247,0.668,248,0.971,249,0.6,250,0.579,251,1.055,252,0.579,253,0.579,254,0.645,255,0.668,256,0.008,257,0.008,301,4.639,313,3.902,314,4.636,316,0.846,321,3.387,322,3.556,323,3.357,324,3.709,345,2.029,379,0.914,422,2.647,423,2.348,424,3.029,427,2.402,430,1.006,508,2.577,540,4.416,551,1.657,585,3.227,654,2.677,658,2.677,676,2.828,782,2.995,783,1.784,798,3.788,817,1.319,1024,3.018,1313,2.768,1314,4.636,1315,4.067,1323,3.227,1381,3.827,1452,4.359,2600,5.413,2683,4.76,2684,5.042,2685,5.371,2686,4.625,2687,4.636,2688,2.768,2689,4.884,2691,3.569,2692,3.569,2693,3.569,2694,2.599,2747,5.593,2748,4.088,2749,5.593,2750,4.088,2751,4.088,2752,4.088,2753,4.088]],["title/components/WeatherStationSidebarComponent.html",[0,0.168,250,0.576]],["body/components/WeatherStationSidebarComponent.html",[0,0.342,1,0.609,2,0.114,3,0.086,4,0.679,5,0.703,6,0.703,7,0.655,8,0.072,12,0.293,13,0.882,14,0.645,20,0.79,21,0.927,24,0.703,25,1.229,26,1.097,27,0.79,28,0.82,30,0.82,32,0.386,33,0.882,35,1.318,37,0.732,42,0.992,44,1.464,45,0.807,46,0.761,50,0.596,52,0.561,53,0.946,54,0.655,55,0.013,56,0.561,57,0.853,58,0.609,59,1.957,61,0.523,67,1.45,73,0.627,81,1.085,82,1.273,89,0.655,95,0.882,101,0.806,102,0.679,107,0.232,108,0.128,111,0.779,112,0.1,113,0.011,114,0.82,127,2.215,129,1.122,133,1.366,135,1.876,136,1.118,139,1.155,140,1.232,141,1.876,144,1.322,147,2.55,148,1.659,153,2.74,155,0.386,156,0.914,157,0.914,158,0.882,159,1.145,160,0.703,161,0.946,162,0.609,163,0.703,164,0.587,165,0.703,166,0.587,167,0.703,168,0.609,169,1.145,170,0.587,171,0.946,172,0.609,173,0.703,174,0.609,175,0.703,176,0.609,177,0.946,178,0.609,179,0.946,180,0.609,181,0.703,182,0.609,183,0.992,184,1.145,185,0.587,186,0.703,187,0.632,188,1.07,189,0.609,190,1.07,191,0.609,192,1.145,193,0.609,194,0.703,195,0.609,196,0.609,197,0.703,198,0.609,199,0.679,200,0.609,201,0.703,202,0.587,203,0.703,204,0.609,205,0.609,206,0.96,207,1.07,208,0.609,209,0.703,210,0.609,211,0.609,212,0.703,213,0.609,214,0.609,215,0.609,216,0.609,217,0.587,218,0.703,219,0.609,220,0.679,221,0.946,222,0.609,223,1.105,224,0.609,225,0.609,226,0.609,227,0.609,228,0.587,229,0.703,230,0.609,231,0.565,232,0.946,233,0.609,234,0.587,235,0.655,236,0.609,237,1.199,238,0.655,239,0.961,240,0.587,241,0.703,242,0.609,243,0.482,244,0.632,245,0.609,246,0.82,247,0.703,248,0.609,249,0.632,250,0.992,251,1.258,252,0.609,253,0.609,254,0.679,255,0.703,256,0.009,257,0.009,379,0.946,392,4.741,430,1.033,487,3.395,490,1.456,491,1.193,493,1.407,654,3.068,658,2.747,713,1.805,714,2.581,716,2.912,767,3.68,782,2.987,783,1.876,791,5.167,793,2.637,817,1.366,835,3.395,990,3.474,1024,3.458,1346,4.386,1381,3.928,1411,3.294,1444,3.395,1446,5.714,1447,5.054,1463,5.054,1537,3.126,1539,3.395,1540,3.395,1596,5.313,2683,4.693,2686,4.66,2687,4.758,2688,2.912,2694,2.733,2724,6.174,2754,5.789,2755,5.789,2756,4.3,2757,4.3,2758,4.3,2759,4.3,2760,4.3,2761,4.3,2762,4.3,2763,4.3,2764,4.3]],["title/components/WeatherSummaryComponent.html",[0,0.168,252,0.576]],["body/components/WeatherSummaryComponent.html",[0,0.327,1,0.61,2,0.114,3,0.086,4,0.679,5,0.947,6,0.704,7,0.656,8,0.072,12,0.332,13,0.882,14,0.686,20,0.79,21,0.927,24,0.704,25,1.229,26,1.098,27,0.79,28,0.82,30,0.82,32,0.387,33,0.882,35,1.319,37,0.732,42,0.992,45,0.824,46,0.761,50,0.583,52,0.561,53,0.947,54,0.882,55,0.013,56,0.6,57,0.818,58,0.82,59,2.033,61,0.523,73,0.534,82,2.23,89,0.997,93,2.143,95,0.997,107,0.259,108,0.128,111,1.05,112,0.1,113,0.006,114,0.992,115,1.234,125,0.754,129,1.269,133,1.015,136,1.506,139,1.156,140,2.095,144,1.323,145,1.618,155,0.387,156,0.914,157,0.914,158,0.882,159,1.145,160,0.704,161,0.947,162,0.61,163,0.704,164,0.587,165,0.704,166,0.587,167,0.704,168,0.61,169,1.145,170,0.79,171,0.947,172,0.61,173,0.704,174,0.61,175,0.704,176,0.61,177,0.947,178,0.61,179,0.947,180,0.61,181,0.704,182,0.61,183,0.992,184,1.145,185,0.587,186,0.704,187,0.632,188,1.07,189,0.61,190,1.07,191,0.61,192,1.145,193,0.61,194,0.704,195,0.61,196,0.61,197,0.704,198,0.61,199,0.679,200,0.61,201,0.704,202,0.587,203,0.704,204,0.61,205,0.61,206,0.96,207,1.07,208,0.61,209,0.704,210,0.61,211,0.61,212,0.704,213,0.61,214,0.61,215,0.61,216,0.61,217,0.587,218,0.704,219,0.61,220,0.679,221,0.947,222,0.61,223,1.105,224,0.61,225,0.61,226,0.61,227,0.61,228,0.587,229,0.704,230,0.61,231,0.566,232,0.947,233,0.61,234,0.587,235,0.656,236,0.61,237,1.201,238,0.656,239,0.962,240,0.587,241,0.704,242,0.61,243,0.785,244,0.632,245,0.61,246,0.82,247,0.704,248,0.61,249,0.632,250,0.61,251,0.632,252,0.992,253,0.61,254,0.679,255,0.704,256,0.009,257,0.009,292,1.015,345,2.102,365,1.015,430,1.154,484,2.102,490,1.457,620,2.941,654,1.807,658,2.749,664,3.414,767,2.736,782,2.987,783,1.878,1024,2.037,1027,1.618,1324,4.434,1342,2.736,1343,2.736,1411,3.297,1414,1.74,1477,4.212,1494,3.611,1495,3.181,1496,4.336,1541,2.915,1542,3.923,1543,4.761,1544,4.212,1545,4.212,1548,4.212,1549,4.212,1551,3.683,1552,3.683,1553,5.099,1554,4.212,1555,3.923,1556,3.923,1561,2.915,1566,3.13,1976,3.758,2370,5.058,2683,4.618,2686,4.708,2688,2.915,2694,2.736,2721,6.074,2765,4.304,2766,4.304,2767,4.304,2768,4.304,2769,4.304,2770,4.304,2771,4.304]],["title/components/WikiButtonComponent.html",[0,0.168,253,0.576]],["body/components/WikiButtonComponent.html",[0,0.331,1,0.654,2,0.122,3,0.092,4,0.729,5,0.755,6,0.755,7,0.703,8,0.078,11,3.358,12,0.234,13,1.271,14,0.52,15,3.644,16,2.757,17,4.579,20,0.828,21,0.96,24,0.755,25,1.232,26,1.1,27,0.828,28,0.86,29,5.354,30,0.86,31,4.793,32,0.415,37,0.767,39,5.687,42,1.02,43,5.237,44,1.443,45,0.81,46,0.891,50,0.606,52,0.581,53,0.992,55,0.013,56,0.52,57,0.539,61,0.561,73,0.61,74,1.881,75,1.386,77,3.859,78,2.807,79,1.342,89,0.925,93,1.987,98,4.414,107,0.153,108,0.138,112,0.107,113,0.007,133,1.6,134,1.939,135,2.96,136,1.201,137,2.015,139,1.63,140,1.324,141,2.015,142,3.128,143,1.618,144,1.549,145,2.282,146,4.793,147,2.366,148,1.324,150,2.386,151,2.628,152,2.015,153,2.186,154,3.128,155,0.415,156,0.958,157,0.958,158,0.925,159,1.178,160,0.755,161,0.992,162,0.654,163,0.755,164,0.63,165,0.755,166,0.63,167,0.755,168,0.654,169,1.178,170,0.63,171,0.992,172,0.654,173,0.755,174,0.654,175,0.755,176,0.654,177,0.992,178,0.654,179,0.992,180,0.654,181,0.755,182,0.654,183,1.02,184,1.178,185,0.63,186,0.755,187,0.678,188,1.109,189,0.654,190,1.109,191,0.654,192,1.178,193,0.654,194,0.755,195,0.654,196,0.654,197,0.755,198,0.654,199,0.729,200,0.654,201,0.755,202,0.63,203,0.755,204,0.654,205,0.654,206,0.983,207,1.109,208,0.654,209,0.755,210,0.654,211,0.654,212,0.755,213,0.654,214,0.654,215,0.654,216,0.654,217,0.63,218,0.755,219,0.654,220,0.729,221,0.992,222,0.654,223,1.137,224,0.654,225,0.654,226,0.654,227,0.654,228,0.63,229,0.755,230,0.654,231,0.607,232,0.992,233,0.654,234,0.63,235,0.703,236,0.654,237,1.125,238,0.703,239,0.996,240,0.63,241,0.755,242,0.654,243,0.518,244,0.678,245,0.654,246,0.86,247,0.755,248,0.654,249,0.678,250,0.654,251,0.678,252,0.654,253,1.02,254,1.312,255,0.755,256,0.009,257,0.009,283,6.064,430,0.958,496,2.501,542,2.562,787,4.323,817,1.432,1031,2.501,1056,4.793,1211,5.3,2124,3.646,2772,6.706,2773,6.071,2774,4.618,2775,4.618,2776,4.618,2777,6.071,2778,6.782,2779,4.618,2780,4.618,2781,4.618]],["title/coverage.html",[2782,4.865]],["body/coverage.html",[0,0.356,1,0.559,8,0.066,9,5.332,10,3.114,11,4.55,36,2.136,45,0.389,55,0.013,57,0.461,113,0.011,162,0.559,164,0.538,166,0.538,168,0.559,170,0.538,172,0.559,174,0.559,176,0.559,178,0.559,180,0.559,182,0.559,185,0.538,187,0.58,189,0.559,191,0.559,193,0.559,195,0.559,196,0.559,198,0.559,200,0.559,202,0.538,204,0.559,205,0.559,208,0.559,210,0.559,211,0.559,213,0.559,215,0.559,217,0.538,219,0.559,222,0.559,224,0.559,225,0.559,226,0.559,227,0.559,228,0.538,230,0.559,233,0.559,234,0.538,236,0.559,238,0.831,239,1.077,240,0.538,242,0.559,243,0.612,244,0.58,245,0.559,246,0.956,248,0.559,249,0.58,250,0.559,251,0.802,252,0.559,253,0.559,256,0.008,257,0.008,282,3.114,283,3.114,284,4.55,298,4.676,299,3.114,300,3.444,316,0.817,318,4.457,377,3.114,378,4.309,491,2.43,506,4.309,527,1.431,620,1.656,654,1.656,655,3.444,656,3.444,676,2.57,685,3.114,686,3.444,730,3.114,731,3.444,746,2.508,761,3.444,765,2.868,766,4.941,782,1.431,784,2.868,787,2.367,937,3.114,938,3.444,987,3.114,988,4.765,1015,2.666,1021,4.238,1025,2.136,1026,2.868,1027,1.483,1028,2.508,1030,1.867,1033,2.136,1116,1.949,1236,3.114,1237,3.444,1275,3.114,1276,3.444,1310,4.91,1311,3.114,1312,3.114,1313,4.574,1322,2.245,1344,3.444,1369,3.444,1371,3.114,1378,3.114,1380,3.444,1416,3.444,1444,4.941,1494,1.949,1541,4.574,1568,3.444,1576,2.245,1733,3.114,1739,3.682,1745,2.868,1795,3.444,1904,3.114,1905,3.444,1924,3.444,1931,3.444,1974,3.114,1975,3.444,1987,3.444,1988,3.444,2065,3.114,2066,3.444,2095,3.444,2125,3.444,2177,3.444,2191,2.671,2195,3.444,2212,3.843,2213,4.019,2368,3.444,2369,3.114,2382,3.444,2404,3.444,2405,3.114,2406,3.444,2415,3.444,2483,3.114,2491,3.444,2502,3.444,2533,3.444,2534,4.309,2560,3.444,2566,3.106,2567,3.114,2568,4.765,2676,4.309,2683,4.599,2684,4.293,2685,4.238,2686,2.245,2696,3.444,2721,3.114,2722,3.444,2724,4.309,2725,3.114,2727,3.444,2772,3.444,2782,3.444,2783,3.945,2784,3.444,2785,5.458,2786,3.945,2787,7.09,2788,7.519,2789,5.458,2790,3.945,2791,8.645,2792,3.945,2793,3.945,2794,3.945,2795,3.945,2796,6.754,2797,6.754,2798,6.258,2799,5.458,2800,3.945,2801,3.945,2802,6.258,2803,7.334,2804,7.78,2805,3.945,2806,3.945,2807,5.458,2808,3.945,2809,3.945,2810,7.334,2811,6.258,2812,5.458,2813,3.945,2814,3.945,2815,6.754,2816,3.945,2817,3.444,2818,3.945,2819,7.09,2820,3.945,2821,7.519,2822,3.945,2823,3.945,2824,3.945,2825,3.945,2826,3.945,2827,5.458,2828,6.258,2829,3.945,2830,3.945,2831,6.258,2832,5.458,2833,5.458,2834,3.945,2835,5.458,2836,6.258,2837,3.945,2838,7.78,2839,3.945,2840,3.945,2841,3.945,2842,3.945,2843,3.945,2844,3.945,2845,3.945,2846,3.945,2847,3.945,2848,3.945,2849,7.519,2850,3.945,2851,3.945,2852,3.945,2853,3.945,2854,3.945,2855,3.945,2856,3.945,2857,3.945,2858,3.945,2859,3.945,2860,3.945,2861,3.945]],["title/dependencies.html",[260,0.981,2862,3.382]],["body/dependencies.html",[55,0.013,108,0.187,256,0.011,257,0.011,260,1.258,262,2.971,278,2.636,288,3.769,290,4.182,291,3.573,352,2.74,1019,5.482,1020,5.482,1157,4.958,1277,4.566,1281,4.253,1633,4.958,1636,5.664,1637,4.976,1639,3.769,1830,4.253,2064,5.482,2365,4.958,2565,5.482,2720,5.482,2863,6.279,2864,8.507,2865,6.279,2866,7.348,2867,6.279,2868,7.348,2869,6.279,2870,6.279,2871,6.279,2872,6.279,2873,6.279,2874,6.279,2875,6.279,2876,6.279,2877,6.279,2878,6.279,2879,6.279,2880,6.279,2881,6.279,2882,6.279,2883,6.279,2884,6.279,2885,6.279,2886,6.279,2887,6.279,2888,6.279,2889,6.279]],["title/miscellaneous/enumerations.html",[2890,2.953,2891,4.274]],["body/miscellaneous/enumerations.html",[32,0.565,45,0.62,55,0.013,82,1.863,102,1.37,129,1.511,256,0.011,257,0.011,364,2.282,446,4.186,462,2.129,483,3.21,544,2.309,552,2.856,569,2.543,570,2.543,571,2.543,572,2.543,573,2.364,574,2.451,625,2.386,640,2.856,719,3.21,820,4.966,1023,2.731,1086,4.259,1991,4.981,2208,3.481,2328,3.107,2329,2.977,2330,3.249,2341,3.107,2817,5.491,2890,5.491,2891,5.491,2892,7.795,2893,7.795,2894,6.289,2895,6.289,2896,6.289]],["title/index.html",[32,0.304,323,2.03,1142,2.459]],["body/index.html",[0,0.314,3,0.119,8,0.1,14,0.652,26,0.751,52,0.691,55,0.011,56,0.509,81,1.333,83,5.616,94,2.012,105,3.218,256,0.011,257,0.011,274,2.234,292,1.861,316,1.231,343,4.025,379,1.29,442,2.936,546,2.012,551,1.76,558,3.567,657,3.218,672,4.322,732,3.312,746,3.779,786,2.862,787,4.735,797,6.01,990,3.567,1021,4.025,1219,4.693,1264,4.322,1281,5.605,1400,5.19,1418,3.779,1587,3.779,1592,4.693,1830,4.817,2142,4.693,2287,4.167,2329,2.813,2383,5.19,2400,5.19,2640,5.19,2646,5.19,2897,5.944,2898,7.613,2899,7.889,2900,6.211,2901,5.944,2902,7.113,2903,5.944,2904,5.944,2905,5.944,2906,5.944,2907,5.944,2908,5.944,2909,5.944,2910,5.944,2911,5.944,2912,7.148,2913,5.944,2914,7.113,2915,8.065,2916,7.613,2917,7.113,2918,5.944,2919,5.944,2920,5.19,2921,5.944,2922,7.333,2923,5.944,2924,5.944,2925,5.944,2926,5.944,2927,5.944,2928,5.944,2929,5.944,2930,5.944,2931,5.944,2932,5.944,2933,5.944,2934,7.113,2935,7.113,2936,5.944,2937,7.889,2938,5.944,2939,5.944,2940,5.944,2941,5.944,2942,5.944]],["title/license.html",[323,2.03,1142,2.459,2943,2.953]],["body/license.html",[3,0.156,4,0.669,8,0.096,14,0.696,16,1.926,35,1.422,50,0.503,54,0.646,55,0.009,58,0.92,63,3.442,66,3.757,67,1.552,71,2.734,77,2.696,81,1.075,94,1.436,95,0.646,104,2.095,113,0.006,125,1.343,129,1.112,153,2.007,158,0.646,206,0.854,243,0.78,256,0.009,257,0.009,263,2.881,303,1.926,316,1.346,327,2.532,331,5.131,379,0.693,422,3.076,426,3.105,429,3.084,439,4.528,483,3.402,509,3.084,544,1.256,552,1.926,625,1.756,638,1.715,640,3.162,665,2.872,672,3.084,678,3.703,719,1.851,732,3.383,733,3.303,745,3.9,787,4.178,798,2.872,799,5.668,803,4.528,854,1.851,886,3.348,899,4.528,914,5.131,955,5.008,990,4.742,993,3.084,1041,5.131,1058,2.872,1116,2.833,1190,3.703,1208,3.348,1214,2.872,1219,6.306,1264,5.288,1277,3.084,1283,5.674,1285,6.545,1345,4.528,1381,2.545,1405,5.497,1477,3.084,1491,2.872,1527,3.703,1551,3.646,1552,4.624,1569,3.481,1592,3.348,1770,2.545,1776,5.008,1819,4.528,1823,2.714,1960,3.703,1991,3.884,2082,7.089,2142,6.362,2145,3.348,2208,2.714,2299,2.191,2303,2.191,2308,2.095,2328,2.095,2347,3.757,2566,3.698,2569,3.703,2784,3.703,2900,7.478,2912,6.078,2920,7.505,2922,3.703,2943,7.409,2944,8.42,2945,7.901,2946,4.241,2947,4.241,2948,5.735,2949,6.499,2950,5.735,2951,6.962,2952,6.962,2953,6.962,2954,4.241,2955,4.241,2956,4.241,2957,4.241,2958,4.241,2959,6.962,2960,7.796,2961,5.735,2962,4.241,2963,5.735,2964,4.241,2965,7.987,2966,8.486,2967,4.241,2968,8.438,2969,5.735,2970,4.241,2971,4.241,2972,6.499,2973,4.241,2974,4.241,2975,6.499,2976,5.735,2977,5.735,2978,5.735,2979,4.241,2980,5.735,2981,4.241,2982,4.241,2983,4.241,2984,7.496,2985,7.987,2986,4.241,2987,4.241,2988,6.499,2989,7.664,2990,5.735,2991,4.241,2992,4.241,2993,4.241,2994,4.241,2995,4.241,2996,4.241,2997,4.241,2998,4.241,2999,4.241,3000,4.241,3001,7.273,3002,6.499,3003,4.241,3004,4.241,3005,4.241,3006,4.241,3007,4.241,3008,6.499,3009,6.499,3010,7.496,3011,7.273,3012,4.241,3013,5.735,3014,4.241,3015,4.241,3016,4.241,3017,4.241,3018,4.241,3019,4.241,3020,4.241,3021,5.735,3022,6.499,3023,5.735,3024,5.735,3025,5.735,3026,5.735,3027,4.241,3028,4.241,3029,4.241,3030,4.241,3031,4.241,3032,4.241,3033,4.241,3034,4.241,3035,4.241,3036,5.735,3037,4.241,3038,5.735,3039,4.241,3040,5.735,3041,6.962,3042,4.241,3043,4.241,3044,4.241,3045,4.241,3046,4.241,3047,4.241,3048,5.735,3049,4.241,3050,4.241,3051,4.241,3052,4.241,3053,4.241,3054,4.241]],["title/modules.html",[258,1.232]],["body/modules.html",[55,0.011,256,0.011,257,0.011,258,1.406,259,3.62,269,3.011,270,2.572,271,2.889,382,7.521,558,3.818,1359,3.818,1365,3.818,1366,4.044,1637,5.834,1701,4.625,1706,4.308,1707,4.308,1708,4.044,1709,4.308,1710,4.044,1732,4.308,1898,4.308,2738,7.521,3055,8.63,3056,6.361]],["title/overview.html",[216,0.789]],["body/overview.html",[0,0.161,1,1.062,36,3.37,55,0.013,112,0.091,113,0.006,155,0.351,162,1.062,164,0.849,166,1.023,168,1.062,170,1.023,172,1.062,174,1.062,176,1.062,178,1.062,180,0.881,182,0.881,185,0.849,187,0.914,189,0.881,191,1.062,193,1.062,195,1.062,196,1.062,198,1.062,200,0.881,202,0.849,204,1.062,205,1.062,208,1.062,210,1.062,211,0.881,213,1.062,215,1.062,216,0.553,217,1.023,219,1.062,222,1.062,224,1.062,225,1.062,226,1.062,227,1.062,228,1.023,230,1.062,233,1.062,234,0.849,236,0.881,240,0.849,242,0.881,244,0.914,245,0.881,248,0.881,249,0.914,250,0.881,252,1.062,253,1.062,256,0.008,257,0.008,258,1.198,259,4.858,260,0.782,261,1.578,262,1.578,263,1.467,264,3.408,265,3.408,266,3.408,267,3.408,268,3.408,269,3.915,270,3.283,271,3.909,272,2.275,273,1.578,274,1.467,625,1.195,719,1.703,782,2.258,1015,1.321,1028,3.956,1030,2.945,1271,3.939,1322,3.542,1359,5.092,1360,3.408,1361,3.408,1362,3.408,1363,3.408,1364,3.408,1365,4.717,1366,5.239,1494,3.074,1495,1.773,1576,3.542,1701,6.169,1702,3.408,1703,3.408,1704,3.408,1705,3.408,1706,5.377,1707,5.077,1708,5.129,1709,5.684,1710,5.433,1728,3.408,1729,3.408,1730,3.408,1731,3.408,1732,5.762,1762,3.082,1790,3.408,1791,3.408,1898,5.424,1899,3.408,1900,3.408,1902,3.408,1963,3.408,1964,3.408,1969,3.408,1970,3.408,1972,3.408,2187,3.408,2188,3.408,2189,3.408,2190,3.408,2191,4.215,2246,2.016,2329,1.847,2359,3.408,2360,3.408,2362,3.408,2394,3.408,2395,3.408,2397,3.408,2476,3.408,2477,3.408,2479,3.408,2553,3.408,2554,3.408,2556,3.408,2566,2.221,2577,3.408,2686,3.542,2713,3.408,2714,3.408,2716,3.408,2717,3.408]],["title/routes.html",[1495,2.53]],["body/routes.html",[55,0.011,256,0.011,257,0.011,1495,3.075]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["0.08",{"_index":504,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["0.12",{"_index":1530,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["0.2em",{"_index":645,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["0.375em",{"_index":2175,"title":{},"body":{"components/LoginComponent.html":{},"components/TabularViewComponent.html":{}}}],["0.5",{"_index":1298,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["0.8*$cem",{"_index":978,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["0.8.29",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["0.85",{"_index":1305,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["0.svg",{"_index":2112,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["00:15:00",{"_index":2576,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["00:30:00",{"_index":2579,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["01:00:00",{"_index":2580,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["02:00:00",{"_index":2582,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["06:00:00",{"_index":2583,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["0px",{"_index":496,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/PropsTableComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WikiButtonComponent.html":{}}}],["1",{"_index":625,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["1).subscrib",{"_index":2656,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["1*$cem",{"_index":615,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1.0",{"_index":2210,"title":{},"body":{"injectables/MapService.html":{}}}],["1.0*$cem",{"_index":979,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["1.1.8",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["1.2*$cem",{"_index":616,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1.4*$cem",{"_index":980,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["1.4.5",{"_index":2901,"title":{},"body":{"index.html":{}}}],["1.45em",{"_index":2377,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["1.6*$cem",{"_index":617,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1.svg",{"_index":2114,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["1/1",{"_index":2791,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1271,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/CdbService.html":{},"overview.html":{}}}],["10/10",{"_index":2835,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":491,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1115,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["10000",{"_index":347,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["106",{"_index":718,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["10px",{"_index":493,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["11",{"_index":1962,"title":{},"body":{"injectables/CdbService.html":{}}}],["11*$statu",{"_index":653,"title":{},"body":{"components/AlarmComponent.html":{}}}],["11.1.9",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2785,"title":{},"body":{"coverage.html":{}}}],["11px",{"_index":1299,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{}}}],["12",{"_index":2585,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["12/12",{"_index":2798,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":758,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["1267252440000",{"_index":2321,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["12:00:00",{"_index":2584,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["12px",{"_index":500,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{}}}],["13/13",{"_index":2796,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":2186,"title":{},"body":{"components/MapComponent.html":{}}}],["14",{"_index":502,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["14/14",{"_index":2837,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":1539,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["15",{"_index":2577,"title":{},"body":{"interfaces/TimeoutOption.html":{},"overview.html":{}}}],["150px",{"_index":2380,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["15px",{"_index":489,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["16px",{"_index":757,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["170px",{"_index":2381,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["18",{"_index":501,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["18/18",{"_index":2811,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":2124,"title":{},"body":{"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["19*$lg",{"_index":650,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$md",{"_index":648,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$sm",{"_index":646,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$statu",{"_index":652,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$x",{"_index":643,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19/21",{"_index":2801,"title":{},"body":{"coverage.html":{}}}],["1em",{"_index":983,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/OverviewCardComponent.html":{}}}],["1px",{"_index":145,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["2",{"_index":719,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["2.0.8",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2875,"title":{},"body":{"dependencies.html":{}}}],["2.75px",{"_index":1700,"title":{},"body":{"components/AppComponent.html":{}}}],["2.svg",{"_index":2116,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["20",{"_index":405,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{}}}],["200",{"_index":1155,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["2007",{"_index":2948,"title":{},"body":{"license.html":{}}}],["200px",{"_index":764,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["201",{"_index":1150,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["20pt",{"_index":2348,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["20px",{"_index":713,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["21/21",{"_index":2827,"title":{},"body":{"coverage.html":{}}}],["21px",{"_index":149,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["22/22",{"_index":2812,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":142,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["25",{"_index":1536,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["25/25",{"_index":2800,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":1529,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["25em",{"_index":1699,"title":{},"body":{"components/AppComponent.html":{}}}],["25px",{"_index":1522,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["27/27",{"_index":2834,"title":{},"body":{"coverage.html":{}}}],["273d54",{"_index":2350,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["28/28",{"_index":2786,"title":{},"body":{"coverage.html":{}}}],["28px",{"_index":154,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["29",{"_index":2946,"title":{},"body":{"license.html":{}}}],["29/29",{"_index":2818,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":138,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["3",{"_index":483,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.0*$cem",{"_index":618,"title":{},"body":{"components/AlarmComponent.html":{}}}],["3.0.0",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":2118,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["3/3",{"_index":2788,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":635,"title":{},"body":{"components/AlarmComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["300",{"_index":2242,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["30px",{"_index":986,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["31/31",{"_index":2794,"title":{},"body":{"coverage.html":{}}}],["314963",{"_index":2351,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["320px",{"_index":2413,"title":{},"body":{"components/PropsTableComponent.html":{}}}],["32px",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["34/34",{"_index":2848,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":2176,"title":{},"body":{"components/LoginComponent.html":{}}}],["35",{"_index":717,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["350px",{"_index":1300,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["35px",{"_index":1683,"title":{},"body":{"components/AppComponent.html":{}}}],["36/36",{"_index":2857,"title":{},"body":{"coverage.html":{}}}],["37/37",{"_index":2795,"title":{},"body":{"coverage.html":{}}}],["38px",{"_index":1273,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["39/39",{"_index":2816,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":2208,"title":{},"body":{"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.0.2",{"_index":2872,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2873,"title":{},"body":{"dependencies.html":{}}}],["4.svg",{"_index":2120,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["4/4",{"_index":2787,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":632,"title":{},"body":{"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["400",{"_index":2143,"title":{},"body":{"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["400px",{"_index":2344,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["403",{"_index":2668,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["40px",{"_index":984,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{}}}],["43/43",{"_index":2855,"title":{},"body":{"coverage.html":{}}}],["44px",{"_index":1691,"title":{},"body":{"components/AppComponent.html":{}}}],["450px",{"_index":755,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["45px",{"_index":2393,"title":{},"body":{"components/OverviewComponent.html":{}}}],["46px",{"_index":2375,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["48px",{"_index":1272,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["4d0",{"_index":3033,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":3034,"title":{},"body":{"license.html":{}}}],["4px",{"_index":135,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/PropsTableComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["5",{"_index":2328,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["5/5",{"_index":2802,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2246,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"overview.html":{}}}],["500",{"_index":2239,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["500px",{"_index":1301,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["50px",{"_index":1540,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["56px",{"_index":2376,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["580px",{"_index":2174,"title":{},"body":{"components/LoginComponent.html":{}}}],["5px",{"_index":1535,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{}}}],["6",{"_index":640,"title":{},"body":{"components/AlarmComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["6.4.0",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2797,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":631,"title":{},"body":{"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{}}}],["600",{"_index":2237,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["60px",{"_index":487,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["62px",{"_index":1526,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["64px",{"_index":1685,"title":{},"body":{"components/AppComponent.html":{}}}],["68px",{"_index":1274,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["6px",{"_index":636,"title":{},"body":{"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{}}}],["7",{"_index":2329,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["7.0.0",{"_index":2868,"title":{},"body":{"dependencies.html":{}}}],["7.2.3",{"_index":2864,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":2866,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2815,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1698,"title":{},"body":{"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["70px",{"_index":1686,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewCardComponent.html":{}}}],["725rem",{"_index":1694,"title":{},"body":{"components/AppComponent.html":{}}}],["74",{"_index":1688,"title":{},"body":{"components/AppComponent.html":{}}}],["75",{"_index":1307,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["78px",{"_index":985,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["7px",{"_index":1697,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":2330,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["8*$lg",{"_index":651,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8*$md",{"_index":649,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8*$sm",{"_index":647,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8*$x",{"_index":644,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8/8",{"_index":2819,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2814,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":634,"title":{},"body":{"components/AlarmComponent.html":{}}}],["800",{"_index":2234,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["84.5px",{"_index":488,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["86px",{"_index":1690,"title":{},"body":{"components/AppComponent.html":{}}}],["88",{"_index":2813,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":2810,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":761,"title":{},"body":{"components/AlarmInfoComponent.html":{},"coverage.html":{}}}],["900",{"_index":2232,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["960px",{"_index":1358,"title":{},"body":{"components/AntennasComponent.html":{}}}],["99",{"_index":1308,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["9px",{"_index":1696,"title":{},"body":{"components/AppComponent.html":{}}}],["_",{"_index":863,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_blank",{"_index":2781,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["_getsubtree(alarm",{"_index":873,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_initi",{"_index":1382,"title":{},"body":{"injectables/AntennasService.html":{}}}],["_nodedata",{"_index":864,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":865,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":867,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_starttim",{"_index":308,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["_starttimer(tim",{"_index":326,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["_stoptim",{"_index":309,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["a.mat",{"_index":1689,"title":{},"body":{"components/AppComponent.html":{}}}],["a100",{"_index":2252,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["a400",{"_index":2250,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["a700",{"_index":2248,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["absolut",{"_index":716,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["accent",{"_index":2216,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["accept",{"_index":3053,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":665,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"license.html":{}}}],["accompani",{"_index":3011,"title":{},"body":{"license.html":{}}}],["accord",{"_index":423,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["account",{"_index":1586,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["account_circl",{"_index":1671,"title":{},"body":{"components/AppComponent.html":{}}}],["ack",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack'},{'nam",{"_index":163,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack/ack.compon",{"_index":279,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackcompon",{"_index":162,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acklist",{"_index":795,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["acknowledg",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["acknowledge/:alarmid",{"_index":1758,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["acknowledgealarms(alarms_id",{"_index":1129,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["acktreecompon",{"_index":164,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":412,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["actions/ack/ack.compon",{"_index":1737,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/actions.modul",{"_index":1373,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["actions/shelve/shelve.compon",{"_index":1743,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/sidenav.servic",{"_index":1634,"title":{},"body":{"components/AppComponent.html":{}}}],["actions_storage_nam",{"_index":1796,"title":{},"body":{"injectables/AuthService.html":{}}}],["actionsmodul",{"_index":259,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["actionssidenav",{"_index":1572,"title":{},"body":{"components/AppComponent.html":{}}}],["actionssidenavservic",{"_index":1573,"title":{},"body":{"components/AppComponent.html":{}}}],["activ",{"_index":444,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["activatedrout",{"_index":2573,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["activatedroutesnapshot",{"_index":1772,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["actual",{"_index":2571,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["actual_compon",{"_index":255,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ad",{"_index":2012,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["add",{"_index":438,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["add_or_update_alarm(alarm",{"_index":1174,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["addit",{"_index":1283,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"license.html":{}}}],["address",{"_index":3044,"title":{},"body":{"license.html":{}}}],["addsvgicon",{"_index":1643,"title":{},"body":{"components/AppComponent.html":{}}}],["adjust",{"_index":2391,"title":{},"body":{"components/OverviewComponent.html":{}}}],["administr",{"_index":2644,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["afterviewinit",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["again",{"_index":2641,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["agil",{"_index":2300,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["alarm'},{'nam",{"_index":171,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm.ack",{"_index":1188,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.acknowledg",{"_index":1134,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.alarmvalid",{"_index":2313,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.alarmvalu",{"_index":2311,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.asalarm",{"_index":2318,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.asalarm(obj",{"_index":1165,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.component.html",{"_index":511,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.scss",{"_index":510,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.core_id",{"_index":1177,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.currentvalue.core_id",{"_index":841,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.currentvalue.dependencies.sort().join",{"_index":845,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.depend",{"_index":876,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{}}}],["alarm.dependencies.length",{"_index":874,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies.slic",{"_index":1509,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarm.operationalmod",{"_index":2312,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.previousvalue.core_id",{"_index":839,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.previousvalue.dependencies.sort().join",{"_index":843,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.properti",{"_index":2337,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.servic",{"_index":1966,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.shelv",{"_index":1152,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.shouldrepeat",{"_index":1193,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.sound",{"_index":1186,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.unshelv",{"_index":1156,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valid",{"_index":1221,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valu",{"_index":1185,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm/alarm.compon",{"_index":1266,"title":{},"body":{"components/AlarmTileComponent.html":{},"modules/SharedModule.html":{}}}],["alarm?.core_id",{"_index":751,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm?.descript",{"_index":752,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm?.timestamp",{"_index":754,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm_id",{"_index":659,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["alarm_sound_1.mp3",{"_index":1000,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_2.mp3",{"_index":1002,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_3.mp3",{"_index":1004,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_4.mp3",{"_index":1006,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_typ",{"_index":2850,"title":{},"body":{"coverage.html":{}}}],["alarmblinkcompon",{"_index":166,"title":{"components/AlarmBlinkComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmblinkcomponent#blinkingstatu",{"_index":457,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarmcardcompon",{"_index":168,"title":{"components/AlarmCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmchangestream",{"_index":1053,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmchangesubscript",{"_index":1448,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["alarmcompon",{"_index":170,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmcomponent#blinkingstatu",{"_index":2752,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmconfig",{"_index":654,"title":{"classes/AlarmConfig.html":{}},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["alarmconfig.placemark",{"_index":1517,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmdataavail",{"_index":2617,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alarmheadercompon",{"_index":172,"title":{"components/AlarmHeaderComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmiconspriorityset",{"_index":2537,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsset",{"_index":2334,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["alarmiconsunreliableset",{"_index":2335,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["alarmid",{"_index":2600,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmimageset",{"_index":527,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"coverage.html":{}}}],["alarminfocompon",{"_index":174,"title":{"components/AlarmInfoComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmitemflatnod",{"_index":765,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":784,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":924,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmlabel",{"_index":2315,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarmlabelcompon",{"_index":176,"title":{"components/AlarmLabelComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmnam",{"_index":385,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarmname.length",{"_index":480,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["alarmname.substring(0",{"_index":482,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarmnamemaxs",{"_index":393,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarms_id",{"_index":1130,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsarray",{"_index":1050,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmservic",{"_index":782,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservice.countbyview",{"_index":1675,"title":{},"body":{"components/AppComponent.html":{}}}],["alarmservice.getname(this.selectedantenna",{"_index":1519,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmservice.html#playalarmsound",{"_index":1215,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsindex",{"_index":1052,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmslist",{"_index":1168,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsound",{"_index":987,"title":{"classes/AlarmSounds.html":{}},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["alarmsounds.getsoundsource(sound",{"_index":1201,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type1",{"_index":1036,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type2",{"_index":1037,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type3",{"_index":1038,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type4",{"_index":1039,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmstoackfromselect",{"_index":794,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":2538,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmtilecompon",{"_index":178,"title":{"components/AlarmTileComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmtooltipcompon",{"_index":180,"title":{"components/AlarmTooltipComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarm}",{"_index":682,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennasSidebarComponent.html":{}}}],["align",{"_index":498,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/PropsTableComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["allow",{"_index":1058,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["allowed_act",{"_index":1834,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowedshelv",{"_index":2624,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["allowedunshelv",{"_index":2626,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alma",{"_index":2173,"title":{},"body":{"components/LoginComponent.html":{}}}],["alreadi",{"_index":1477,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["and/or",{"_index":2980,"title":{},"body":{"license.html":{}}}],["angular",{"_index":786,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":2863,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2865,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["angular/cdk/collect",{"_index":775,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/cdk/tre",{"_index":777,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":2919,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":278,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1718,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":2867,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":2064,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":288,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2870,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1633,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":2041,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":2044,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":2051,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/expans",{"_index":2059,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/form",{"_index":2053,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1635,"title":{},"body":{"components/AppComponent.html":{},"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":2027,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":2048,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/menu",{"_index":2039,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":2029,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":2031,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/select",{"_index":2055,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":2046,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":2033,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/snack",{"_index":2061,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":2035,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":2037,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":2057,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":780,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":1636,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":1639,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["anim",{"_index":302,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["anoth",{"_index":1211,"title":{},"body":{"classes/AlarmSounds.html":{},"components/WikiButtonComponent.html":{}}}],["antenna",{"_index":183,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antenna.svg",{"_index":1648,"title":{},"body":{"components/AppComponent.html":{}}}],["antennaclick",{"_index":1460,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaimageset",{"_index":1383,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennaimageunreliableset",{"_index":1384,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennamarkercompon",{"_index":182,"title":{"components/AntennaMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennas'},{'nam",{"_index":186,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas.component.html",{"_index":1350,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.component.scss",{"_index":1349,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.servic",{"_index":1376,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["antennas/antennas.compon",{"_index":1368,"title":{},"body":{"modules/AntennasModule.html":{}}}],["antennas/antennas.modul",{"_index":1719,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["antennas/antennas.servic",{"_index":1339,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["antennas/antennas/antennas.compon",{"_index":1738,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["antennascompon",{"_index":185,"title":{"components/AntennasComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasconfig",{"_index":1385,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennasmap",{"_index":1348,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennasmapcompon",{"_index":187,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasmapnam",{"_index":1386,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennasmodul",{"_index":1359,"title":{"modules/AntennasModule.html":{}},"body":{"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["antennasservic",{"_index":1322,"title":{"injectables/AntennasService.html":{}},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasset",{"_index":1416,"title":{},"body":{"injectables/AntennasService.html":{},"coverage.html":{}}}],["antennassettings.mapkey",{"_index":1406,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennassidebar",{"_index":1347,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennassidebarcompon",{"_index":189,"title":{"components/AntennasSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummarycompon",{"_index":191,"title":{"components/AntennasSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummaryconfig",{"_index":1387,"title":{},"body":{"injectables/AntennasService.html":{}}}],["anyth",{"_index":2564,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["api",{"_index":2598,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["app",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["app.compon",{"_index":1726,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":1571,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":1570,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":1712,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":193,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1551,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["applic",{"_index":1569,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["application/json",{"_index":1855,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["appmodul",{"_index":1701,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":1752,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":1706,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":2991,"title":{},"body":{"license.html":{}}}],["array",{"_index":433,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["array.from(new",{"_index":1510,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["arrayindex",{"_index":1051,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["artifact",{"_index":2929,"title":{},"body":{"index.html":{}}}],["asiasio",{"_index":2072,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":2080,"title":{},"body":{"classes/Iasio.html":{}}}],["ask",{"_index":2599,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["asset",{"_index":1027,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["assets.icon",{"_index":1436,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["assets.sound",{"_index":1035,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["assets/img/ia",{"_index":1645,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":1282,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["associ",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{}}}],["asterisc",{"_index":2670,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["attempt",{"_index":1780,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["attribut",{"_index":575,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["audio",{"_index":991,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["audiofil",{"_index":1011,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["auth",{"_index":2165,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.servic",{"_index":1783,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":1749,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.modul",{"_index":1722,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.servic",{"_index":1034,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{}}}],["auth/login/login.compon",{"_index":1751,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authent",{"_index":1068,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["authloginguard",{"_index":1748,"title":{"guards/AuthLoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{}}}],["authmodul",{"_index":1707,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1770,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"license.html":{}}}],["authservic",{"_index":1033,"title":{"injectables/AuthService.html":{}},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["auto",{"_index":150,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["automat",{"_index":2926,"title":{},"body":{"index.html":{}}}],["auxiliari",{"_index":872,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{}}}],["avail",{"_index":558,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"index.html":{},"modules.html":{}}}],["availablecount",{"_index":1663,"title":{},"body":{"components/AppComponent.html":{}}}],["availablecounters.indexof(navitemcount",{"_index":1665,"title":{},"body":{"components/AppComponent.html":{}}}],["avoid",{"_index":1055,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["axi",{"_index":1326,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["b",{"_index":3001,"title":{},"body":{"license.html":{}}}],["backend",{"_index":1076,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurl",{"_index":1025,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["backendurls.antennas_summari",{"_index":1429,"title":{},"body":{"injectables/AntennasService.html":{}}}],["backendurls.antennas_view",{"_index":1422,"title":{},"body":{"injectables/AntennasService.html":{}}}],["backendurls.building_summari",{"_index":1921,"title":{},"body":{"components/BuildingSummaryComponent.html":{}}}],["backendurls.cdb_ia",{"_index":1950,"title":{},"body":{"injectables/CdbService.html":{}}}],["backendurls.files_json",{"_index":1432,"title":{},"body":{"injectables/AntennasService.html":{}}}],["backendurls.health_summari",{"_index":1982,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["backendurls.shelve_regs_filt",{"_index":1145,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurls.tickets_info",{"_index":1140,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["background",{"_index":720,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherComponent.html":{}}}],["backup",{"_index":238,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["badg",{"_index":413,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["bar",{"_index":2062,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["base",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["basic",{"_index":2215,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["be",{"_index":1208,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["befor",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":1017,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{}}}],["behaviorsubject(fals",{"_index":1049,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{}}}],["behaviorsubject(nul",{"_index":1847,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(tru",{"_index":1054,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["below",{"_index":2963,"title":{},"body":{"license.html":{}}}],["besid",{"_index":416,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["beta.23",{"_index":2869,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":2729,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["blikin",{"_index":349,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink",{"_index":301,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["blink'},{'nam",{"_index":167,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["blink.compon",{"_index":2488,"title":{},"body":{"modules/SharedModule.html":{}}}],["blink.component.css",{"_index":304,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.html",{"_index":305,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.t",{"_index":300,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"coverage.html":{}}}],["blink.component.ts:117",{"_index":340,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:128",{"_index":342,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:137",{"_index":328,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:144",{"_index":335,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:18",{"_index":317,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:23",{"_index":320,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:28",{"_index":325,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:33",{"_index":346,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:38",{"_index":315,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:49",{"_index":338,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink.component.ts:56",{"_index":337,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blink/alarm",{"_index":299,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["blink/fixtures.t",{"_index":2824,"title":{},"body":{"coverage.html":{}}}],["blinkingclass",{"_index":386,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["blinkingstatu",{"_index":314,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["blinkingtim",{"_index":306,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blinkinterv",{"_index":360,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["blinktim",{"_index":341,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["block",{"_index":639,"title":{},"body":{"components/AlarmComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["blue",{"_index":461,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["bodi",{"_index":760,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AppComponent.html":{}}}],["bold",{"_index":505,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["boolean",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WikiButtonComponent.html":{}}}],["bootstrap",{"_index":262,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":2365,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["border",{"_index":140,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["both",{"_index":1345,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"license.html":{}}}],["bottom",{"_index":137,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["bound",{"_index":2987,"title":{},"body":{"license.html":{}}}],["box",{"_index":436,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{}}}],["branch",{"_index":2911,"title":{},"body":{"index.html":{}}}],["break",{"_index":2414,"title":{},"body":{"components/PropsTableComponent.html":{}}}],["bred",{"_index":2306,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["breed",{"_index":2292,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["broadcast",{"_index":1941,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastr",{"_index":1943,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastthreshold",{"_index":1226,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["broadcastthreshold).subscrib",{"_index":1234,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["brows",{"_index":3055,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1637,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":1716,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{}}}],["browseranimationsmodul",{"_index":1715,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{}}}],["browsermodul",{"_index":1714,"title":{},"body":{"modules/AppModule.html":{}}}],["bti",{"_index":2482,"title":{},"body":{"modules/SharedModule.html":{}}}],["btn",{"_index":1679,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["build",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":888,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["building/building.modul",{"_index":2401,"title":{},"body":{"modules/OverviewModule.html":{}}}],["buildingmodul",{"_index":1898,"title":{"modules/BuildingModule.html":{}},"body":{"modules/BuildingModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["buildingsummarycompon",{"_index":195,"title":{"components/BuildingSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["button",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":161,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":281,"title":{},"body":{"modules/ActionsModule.html":{}}}],["button.component.css",{"_index":29,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":2773,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:19",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":2775,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:24",{"_index":2494,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:25",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:29",{"_index":2774,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:34",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:37",{"_index":2776,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:42",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:49",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:59",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:68",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:80",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:83",{"_index":2497,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:87",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:90",{"_index":2498,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":282,"title":{},"body":{"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":283,"title":{},"body":{"modules/ActionsModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["buttonref",{"_index":122,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["buttons'},{'nam",{"_index":197,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons.component.css",{"_index":1927,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":1928,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons/buttons.compon",{"_index":297,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buttonscompon",{"_index":196,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["buttontooltiptext",{"_index":2492,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["c",{"_index":2950,"title":{},"body":{"license.html":{}}}],["calc(100vh",{"_index":1684,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{}}}],["calcul",{"_index":2206,"title":{},"body":{"injectables/MapService.html":{}}}],["call",{"_index":1214,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["can_shelv",{"_index":2326,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["canacknowledg",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["canactiv",{"_index":1756,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{}}}],["canactivate(next",{"_index":1771,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["canclos",{"_index":2504,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cansend",{"_index":2623,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["cansound",{"_index":1059,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["card",{"_index":380,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/TabularViewComponent.html":{}}}],["card'},{'nam",{"_index":169,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":2403,"title":{},"body":{"modules/OverviewModule.html":{},"modules/SharedModule.html":{}}}],["card.component.html",{"_index":384,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card.component.scss",{"_index":383,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":378,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:110",{"_index":421,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:12",{"_index":2371,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:127",{"_index":431,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:169",{"_index":425,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:18",{"_index":402,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card.component.ts:24",{"_index":417,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:29",{"_index":407,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:34",{"_index":411,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:39",{"_index":419,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:44",{"_index":408,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:49",{"_index":437,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:54",{"_index":441,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:60",{"_index":443,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:66",{"_index":445,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:71",{"_index":399,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:84",{"_index":435,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:91",{"_index":434,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card/alarm",{"_index":377,"title":{},"body":{"components/AlarmCardComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["card/fixtures.t",{"_index":2825,"title":{},"body":{"coverage.html":{}}}],["card/overview",{"_index":2369,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["card__head",{"_index":2345,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["case",{"_index":409,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{}}}],["catch",{"_index":1959,"title":{},"body":{"injectables/CdbService.html":{}}}],["catcherror",{"_index":1851,"title":{},"body":{"injectables/AuthService.html":{}}}],["categori",{"_index":2336,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["cdb.servic",{"_index":1968,"title":{},"body":{"modules/DataModule.html":{}}}],["cdbservic",{"_index":1028,"title":{"injectables/CdbService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"coverage.html":{},"overview.html":{}}}],["cdbservice.html#getbroadcastr",{"_index":1228,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cdref",{"_index":400,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["cell",{"_index":623,"title":{},"body":{"components/AlarmComponent.html":{}}}],["cem",{"_index":614,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["center",{"_index":628,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["cento",{"_index":2904,"title":{},"body":{"index.html":{}}}],["central",{"_index":2416,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":3047,"title":{},"body":{"license.html":{}}}],["chang",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"index.html":{},"license.html":{}}}],["changealarms(ani",{"_index":1074,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["changeblinkingst",{"_index":390,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["changeblinkingstate(blink",{"_index":420,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["changedalarm2",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["changedalarm5",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["changedetectorref",{"_index":398,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["changeloginstatu",{"_index":1802,"title":{},"body":{"injectables/AuthService.html":{}}}],["changeloginstatus(statu",{"_index":1815,"title":{},"body":{"injectables/AuthService.html":{}}}],["changes.alarm",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/ShelveButtonComponent.html":{}}}],["changes.alarm.currentvalu",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/ShelveButtonComponent.html":{}}}],["changes.alarm.previousvalu",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/ShelveButtonComponent.html":{}}}],["changes.selectedalarm",{"_index":837,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["changes.selectedalarm.previousvalu",{"_index":836,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["changes.showactionbadg",{"_index":447,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["changes.showactionbadges.currentvalu",{"_index":449,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["changes.showactionbadges.previousvalu",{"_index":448,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["changeselectedst",{"_index":2702,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changeselectedstation(selectedst",{"_index":2704,"title":{},"body":{"components/WeatherComponent.html":{}}}],["channel",{"_index":1020,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["charact",{"_index":406,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["check",{"_index":546,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["check_request_and_reload",{"_index":2616,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["checkbox",{"_index":785,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":813,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":814,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklogin",{"_index":1767,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["checklogin(url",{"_index":1777,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["chevron_left",{"_index":1518,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["child",{"_index":861,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{}}}],["childalarm",{"_index":877,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm.ack",{"_index":879,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childid",{"_index":875,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":660,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{}}}],["childrenid",{"_index":1449,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["chip",{"_index":2282,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["choic",{"_index":3002,"title":{},"body":{"license.html":{}}}],["choos",{"_index":3048,"title":{},"body":{"license.html":{}}}],["class",{"_index":113,"title":{"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/Iasio.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["classif",{"_index":674,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["classifi",{"_index":671,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["classnam",{"_index":1601,"title":{},"body":{"components/AppComponent.html":{}}}],["clean",{"_index":2428,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["cleanactionoutlet",{"_index":2418,"title":{},"body":{"injectables/RoutingService.html":{}}}],["clear",{"_index":364,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["clear.svg",{"_index":1437,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["clear_invalid",{"_index":2098,"title":{},"body":{"components/LegendComponent.html":{}}}],["clear_valid",{"_index":2099,"title":{},"body":{"components/LegendComponent.html":{}}}],["clearsoundsifack(alarm",{"_index":1216,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cli",{"_index":2899,"title":{},"body":{"index.html":{}}}],["click",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["client",{"_index":1989,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":1032,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["client.service.t",{"_index":1988,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:107",{"_index":2010,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:14",{"_index":1995,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:31",{"_index":2000,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:47",{"_index":2002,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:57",{"_index":1999,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:70",{"_index":2006,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:83",{"_index":2008,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:95",{"_index":1997,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["clipboard",{"_index":2720,"title":{},"body":{"modules/WeatherModule.html":{},"dependencies.html":{}}}],["clipboardmodul",{"_index":2719,"title":{},"body":{"modules/WeatherModule.html":{}}}],["close",{"_index":1086,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["closeandclean",{"_index":2507,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cluster_actionsmodul",{"_index":264,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declar",{"_index":265,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_export",{"_index":267,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_import",{"_index":266,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_provid",{"_index":268,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_antennasmodul",{"_index":1360,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_declar",{"_index":1361,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_export",{"_index":1363,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_import",{"_index":1362,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_provid",{"_index":1364,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":1702,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1705,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":1703,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":1704,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodul",{"_index":1728,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_declar",{"_index":1729,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_import",{"_index":1730,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_provid",{"_index":1731,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":1790,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":1791,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":1792,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_buildingmodul",{"_index":1899,"title":{},"body":{"modules/BuildingModule.html":{},"overview.html":{}}}],["cluster_buildingmodule_declar",{"_index":1900,"title":{},"body":{"modules/BuildingModule.html":{},"overview.html":{}}}],["cluster_buildingmodule_export",{"_index":1902,"title":{},"body":{"modules/BuildingModule.html":{},"overview.html":{}}}],["cluster_buildingmodule_import",{"_index":1901,"title":{},"body":{"modules/BuildingModule.html":{}}}],["cluster_datamodul",{"_index":1963,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1964,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodul",{"_index":1969,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declar",{"_index":1970,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_export",{"_index":1972,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_import",{"_index":1971,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_mapmodul",{"_index":2187,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declar",{"_index":2188,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_export",{"_index":2189,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_provid",{"_index":2190,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodul",{"_index":2359,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule_declar",{"_index":2360,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule_export",{"_index":2362,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule_import",{"_index":2361,"title":{},"body":{"modules/MaterialSandboxModule.html":{}}}],["cluster_overviewmodul",{"_index":2394,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declar",{"_index":2395,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_export",{"_index":2397,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_import",{"_index":2396,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodul",{"_index":2476,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":2477,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":2479,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":2478,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodul",{"_index":2553,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declar",{"_index":2554,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_export",{"_index":2556,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_import",{"_index":2555,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodul",{"_index":2713,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":2714,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":2716,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":2715,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_provid",{"_index":2717,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":2142,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{},"license.html":{}}}],["color",{"_index":712,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["colorclass",{"_index":1340,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["colors'},{'nam",{"_index":207,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["column",{"_index":630,"title":{},"body":{"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["combin",{"_index":2968,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":277,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["commun",{"_index":2146,"title":{},"body":{"components/LoginComponent.html":{}}}],["compact",{"_index":1692,"title":{},"body":{"components/AppComponent.html":{}}}],["compat",{"_index":3030,"title":{},"body":{"license.html":{}}}],["complement",{"_index":1585,"title":{},"body":{"components/AppComponent.html":{}}}],["complementari",{"_index":1067,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["complet",{"_index":1158,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["compodoc",{"_index":2940,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":160,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["componentnam",{"_index":2310,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["componet",{"_index":566,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["comput",{"_index":3028,"title":{},"body":{"license.html":{}}}],["concern",{"_index":3045,"title":{},"body":{"license.html":{}}}],["condit",{"_index":2961,"title":{},"body":{"license.html":{}}}],["conf",{"_index":1562,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["conf[0",{"_index":1564,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["config",{"_index":1024,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["config.alarm_id",{"_index":1127,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["config.custom_nam",{"_index":1126,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["config.t",{"_index":656,"title":{},"body":{"classes/AlarmConfig.html":{},"coverage.html":{}}}],["config.ts:10",{"_index":669,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:13",{"_index":677,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:16",{"_index":679,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:19",{"_index":668,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:22",{"_index":675,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:25",{"_index":666,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:37",{"_index":681,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:7",{"_index":667,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["configur",{"_index":658,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/MapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["connect",{"_index":1040,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{}}}],["connectionpath",{"_index":1101,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatusstream",{"_index":1048,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatustim",{"_index":1066,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connector",{"_index":2728,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector'},{'nam",{"_index":247,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["connector.compon",{"_index":2726,"title":{},"body":{"modules/WeatherModule.html":{}}}],["connector.component.html",{"_index":2731,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.scss",{"_index":2730,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.t",{"_index":2727,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:16",{"_index":2735,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":2736,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":2734,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":2739,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":2737,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector/weath",{"_index":2725,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["consid",{"_index":1592,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"license.html":{}}}],["console.error('an",{"_index":2014,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.error('error",{"_index":2170,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["console.error(error",{"_index":1870,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('cal",{"_index":1198,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('connect",{"_index":1105,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('count",{"_index":1099,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('error",{"_index":2660,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["console.log('login",{"_index":1875,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('notifi",{"_index":1091,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('request",{"_index":1096,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["const",{"_index":121,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(alarmservic",{"_index":1546,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["constructor(antennasservic",{"_index":1461,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["constructor(attribut",{"_index":578,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["constructor(authservic",{"_index":1768,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["constructor(cdref",{"_index":397,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["constructor(formbuild",{"_index":2131,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(http",{"_index":1813,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["constructor(httpcli",{"_index":1392,"title":{},"body":{"injectables/AntennasService.html":{}}}],["constructor(httpclientservic",{"_index":1938,"title":{},"body":{"injectables/CdbService.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":819,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":2425,"title":{},"body":{"injectables/RoutingService.html":{}}}],["constructor(routingservic",{"_index":2509,"title":{},"body":{"injectables/SidenavService.html":{}}}],["constructor(servic",{"_index":1321,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["constructor(sidenavservic",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["constructor(weatherservic",{"_index":2688,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["contact",{"_index":2643,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["contain",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"modules/TabularModule.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["container=\"bodi",{"_index":1286,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["content",{"_index":490,"title":{},"body":{"components/AlarmCardComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["continu",{"_index":880,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["contract",{"_index":1611,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":805,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["convert",{"_index":810,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":2985,"title":{},"body":{"license.html":{}}}],["coord",{"_index":2733,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[0",{"_index":2743,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[1",{"_index":2744,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coordin",{"_index":1409,"title":{},"body":{"injectables/AntennasService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["cope",{"_index":2301,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["copi",{"_index":2082,"title":{},"body":{"classes/Iasio.html":{},"license.html":{}}}],["copyright",{"_index":2949,"title":{},"body":{"license.html":{}}}],["core",{"_index":1157,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":410,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["core_timestamp",{"_index":2320,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["coreidchang",{"_index":847,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["correct",{"_index":549,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["correspond",{"_index":990,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["count",{"_index":1064,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["countbyview",{"_index":1065,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["countbyview[navitemcount",{"_index":1666,"title":{},"body":{"components/AppComponent.html":{}}}],["counter",{"_index":1622,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["counterbyview",{"_index":1605,"title":{},"body":{"components/AppComponent.html":{}}}],["cover",{"_index":2347,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["coverag",{"_index":2782,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":577,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{}}}],["credenti",{"_index":2144,"title":{},"body":{"components/LoginComponent.html":{}}}],["critic",{"_index":611,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["critical.svg",{"_index":1439,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["crud",{"_index":1990,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["css",{"_index":432,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["currenlti",{"_index":1061,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["current",{"_index":442,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["currentalarmcoreid",{"_index":840,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["currentalarmvalu",{"_index":362,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["currentclass",{"_index":387,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["currentdependenciesstr",{"_index":844,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["currentimag",{"_index":512,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["currentsizeclass",{"_index":941,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["currenttextclass",{"_index":513,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["currenttim",{"_index":355,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["cursor",{"_index":1342,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["custom",{"_index":670,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{}}}],["custom_nam",{"_index":661,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{}}}],["cx",{"_index":1317,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["cy",{"_index":1318,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["d",{"_index":3020,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2542,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":243,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["data).pip",{"_index":1132,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data.push(nod",{"_index":897,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data/alarm",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.servic",{"_index":783,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/cdb.servic",{"_index":1029,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data/data.modul",{"_index":295,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/BuildingModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["data/http",{"_index":1415,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{}}}],["data/user.servic",{"_index":1638,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["databas",{"_index":1159,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datamodul",{"_index":269,"title":{"modules/DataModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourc",{"_index":812,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["date",{"_index":743,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["date).gettim",{"_index":356,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"classes/AlarmSounds.html":{}}}],["dateformat",{"_index":736,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["datepip",{"_index":1713,"title":{},"body":{"modules/AppModule.html":{}}}],["debug",{"_index":3018,"title":{},"body":{"license.html":{}}}],["decid",{"_index":678,"title":{},"body":{"classes/AlarmConfig.html":{},"license.html":{}}}],["declar",{"_index":261,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1613,"title":{},"body":{"components/AppComponent.html":{}}}],["deem",{"_index":2971,"title":{},"body":{"license.html":{}}}],["deep",{"_index":1295,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{}}}],["default",{"_index":101,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["defaulttimeout",{"_index":2586,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["defin",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["definealarmsandicon",{"_index":1908,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["definealarmsandimag",{"_index":2340,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["definit",{"_index":2569,"title":{},"body":{"interfaces/TimeoutOption.html":{},"license.html":{}}}],["degrad",{"_index":2895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delayedfadein",{"_index":1296,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["delet",{"_index":1161,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["delete(url",{"_index":1996,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":2016,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["deped",{"_index":2631,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["depend",{"_index":260,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencieschang",{"_index":846,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["dependenciesid",{"_index":1450,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["descend",{"_index":909,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":912,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":922,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":910,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":915,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["describ",{"_index":1329,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["descript",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["destri",{"_index":1475,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["destroy",{"_index":1112,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["detail",{"_index":1527,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"license.html":{}}}],["detect",{"_index":401,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["dev",{"_index":2924,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2903,"title":{},"body":{"index.html":{}}}],["devic",{"_index":1413,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{}}}],["devicesconfig",{"_index":1388,"title":{},"body":{"injectables/AntennasService.html":{}}}],["dialog",{"_index":2280,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["dictionari",{"_index":576,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{}}}],["differ",{"_index":303,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["direct",{"_index":158,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":2928,"title":{},"body":{"index.html":{}}}],["directori",{"_index":2931,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["disableblink",{"_index":312,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["disconnect",{"_index":1111,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["dispay",{"_index":2561,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["display",{"_index":379,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":2909,"title":{},"body":{"index.html":{}}}],["display:block",{"_index":1269,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["dist",{"_index":2930,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":2296,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["distinguish",{"_index":3046,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":2957,"title":{},"body":{"license.html":{}}}],["divid",{"_index":2284,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["django",{"_index":1019,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["doc_url",{"_index":2068,"title":{},"body":{"classes/Iasio.html":{}}}],["document",{"_index":787,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dog",{"_index":2291,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["domsanit",{"_index":1583,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":2622,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["doubl",{"_index":2076,"title":{},"body":{"classes/Iasio.html":{}}}],["draw",{"_index":1330,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/MapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["durat",{"_index":1297,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["dure",{"_index":3019,"title":{},"body":{"license.html":{}}}],["dy",{"_index":2209,"title":{},"body":{"injectables/MapService.html":{}}}],["dynam",{"_index":2871,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1960,"title":{},"body":{"injectables/CdbService.html":{},"license.html":{}}}],["e.g",{"_index":1012,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["e2",{"_index":2938,"title":{},"body":{"index.html":{}}}],["each",{"_index":1405,"title":{},"body":{"injectables/AntennasService.html":{},"modules/OverviewModule.html":{},"license.html":{}}}],["effect",{"_index":3014,"title":{},"body":{"license.html":{}}}],["effort",{"_index":2995,"title":{},"body":{"license.html":{}}}],["element",{"_index":157,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["elementref",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["email",{"_index":2677,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emit",{"_index":321,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["emitsound",{"_index":1199,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["emitsound(sound",{"_index":1197,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["empti",{"_index":440,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["enabl",{"_index":319,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["enabletrac",{"_index":1761,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":2937,"title":{},"body":{"index.html":{}}}],["engin",{"_index":3017,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":2996,"title":{},"body":{"license.html":{}}}],["entrycompon",{"_index":2366,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{}}}],["enumer",{"_index":2891,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":1021,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"coverage.html":{},"index.html":{}}}],["environment.httpurl",{"_index":2023,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["environment.httpurl}${backendurls.token",{"_index":1872,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.httpurl}${backendurls.validate_token",{"_index":1858,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.websocketpath",{"_index":1108,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["environments/environ",{"_index":1022,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["equal",{"_index":1225,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["error",{"_index":1869,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["error.statu",{"_index":2169,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["error['error",{"_index":2669,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["errormessag",{"_index":2128,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["etc",{"_index":1013,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{}}}],["event",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":324,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["everyon",{"_index":2956,"title":{},"body":{"license.html":{}}}],["everytim",{"_index":833,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["exampl",{"_index":1287,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["except",{"_index":2983,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":2977,"title":{},"body":{"license.html":{}}}],["execut",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["exit_to_applog",{"_index":1673,"title":{},"body":{"components/AppComponent.html":{}}}],["expand",{"_index":769,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["expand/collaps",{"_index":806,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expect",{"_index":1599,"title":{},"body":{"components/AppComponent.html":{}}}],["expectedclasseswhenhiddentext",{"_index":2829,"title":{},"body":{"coverage.html":{}}}],["expectedclasseswhenshowtext",{"_index":2830,"title":{},"body":{"coverage.html":{}}}],["expectedfilteredtablerow",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["expectedreducedtablerow",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["expectedreducedtablerowsafterchang",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["expectedtablerow",{"_index":2844,"title":{},"body":{"coverage.html":{}}}],["expectedtreedata",{"_index":2790,"title":{},"body":{"coverage.html":{}}}],["explain",{"_index":3039,"title":{},"body":{"license.html":{}}}],["export",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extend",{"_index":642,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["extent",{"_index":3031,"title":{},"body":{"license.html":{}}}],["extra",{"_index":1788,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["fab",{"_index":2219,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["facil",{"_index":2989,"title":{},"body":{"license.html":{}}}],["fade",{"_index":1309,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["fail",{"_index":2593,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["faith",{"_index":2994,"title":{},"body":{"license.html":{}}}],["fals",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WikiButtonComponent.html":{}}}],["famili",{"_index":1302,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/OverviewCardComponent.html":{}}}],["favorit",{"_index":2220,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["fewer",{"_index":3007,"title":{},"body":{"license.html":{}}}],["field",{"_index":1163,"title":{},"body":{"classes/AlarmSounds.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filepath",{"_index":1014,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["fill",{"_index":2746,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["filter",{"_index":1553,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{}}}],["filter.replac",{"_index":2439,"title":{},"body":{"injectables/RoutingService.html":{}}}],["find",{"_index":798,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"license.html":{}}}],["finish",{"_index":333,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["first",{"_index":554,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["fit",{"_index":1537,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/PropsTableComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["fix",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{}}}],["flag",{"_index":1400,"title":{},"body":{"injectables/AntennasService.html":{},"index.html":{}}}],["flat",{"_index":152,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["flatnod",{"_index":900,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":906,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":904,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":905,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":800,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":801,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":776,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":827,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flex",{"_index":621,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["flexlayoutmodul",{"_index":2063,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["float",{"_index":2374,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["flow",{"_index":1531,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["fluid",{"_index":973,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["fluidtext",{"_index":950,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["focu",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["focus",{"_index":2281,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["focusmonitor",{"_index":48,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["folder",{"_index":2913,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1264,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/ButtonsComponent.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":485,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["footer",{"_index":1538,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["foreground",{"_index":2283,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["form",{"_index":745,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["format",{"_index":742,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formbuild",{"_index":2132,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol",{"_index":2151,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol(this.defaulttimeout",{"_index":2603,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["formgroup",{"_index":2129,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formsmodul",{"_index":286,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundat",{"_index":2953,"title":{},"body":{"license.html":{}}}],["free",{"_index":2951,"title":{},"body":{"license.html":{}}}],["full",{"_index":1755,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MapComponent.html":{}}}],["function",{"_index":422,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"license.html":{}}}],["further",{"_index":2941,"title":{},"body":{"index.html":{}}}],["futur",{"_index":3050,"title":{},"body":{"license.html":{}}}],["g",{"_index":2918,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1525,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gener",{"_index":732,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"index.html":{},"license.html":{}}}],["generatealarmslist",{"_index":2327,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["get",{"_index":1142,"title":{"index.html":{},"license.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{}}}],["get(core_id",{"_index":1119,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["get(url",{"_index":1998,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":2630,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getactionslink",{"_index":1577,"title":{},"body":{"components/AppComponent.html":{}}}],["getactionslink(item",{"_index":1589,"title":{},"body":{"components/AppComponent.html":{}}}],["getalarm",{"_index":1452,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["getalarm(alarm_id",{"_index":1466,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getalarm(config",{"_index":1123,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getalarmlist",{"_index":1160,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getalarmnam",{"_index":391,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["getallowedact",{"_index":1803,"title":{},"body":{"injectables/AuthService.html":{}}}],["getantenna",{"_index":1453,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getbroadcastr",{"_index":1935,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbroadcastthreshold",{"_index":1936,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbuttontooltiptext",{"_index":2493,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getcanacknowledg",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["getchildren",{"_index":859,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getclass",{"_index":392,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getconfigurationdata",{"_index":1937,"title":{},"body":{"injectables/CdbService.html":{}}}],["getconnectionpath",{"_index":1107,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getdevic",{"_index":1454,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gethttphead",{"_index":1804,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["getimag",{"_index":516,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["getlevel",{"_index":855,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmapdata",{"_index":1389,"title":{},"body":{"injectables/AntennasService.html":{}}}],["getmissingacks(alarm_id",{"_index":1139,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getmockalarm",{"_index":2317,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["getmockalarm(valu",{"_index":2445,"title":{},"body":{"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["getnam",{"_index":680,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["getname(config",{"_index":1125,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getnavitemcountclass",{"_index":1578,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcountclass(navitem",{"_index":1593,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext",{"_index":1579,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(item",{"_index":1674,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(navitem",{"_index":1603,"title":{},"body":{"components/AppComponent.html":{}}}],["getngclass",{"_index":1316,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["getpath",{"_index":2732,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["getprioritytext",{"_index":947,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["getprioritytextclass",{"_index":948,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["getresponsemessagetext",{"_index":2635,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getresponsemessagetitl",{"_index":2633,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getshelveregistries(alarm_id",{"_index":1144,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsizeclass",{"_index":949,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["getsoundsourc",{"_index":998,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsoundsource(sound",{"_index":1008,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsvgpath",{"_index":2196,"title":{},"body":{"injectables/MapService.html":{}}}],["getsvgpaths(pathsgroup",{"_index":2199,"title":{},"body":{"injectables/MapService.html":{}}}],["gettextclass",{"_index":517,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["gettitletext",{"_index":2632,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["gettoken",{"_index":1805,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettreedata",{"_index":869,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getus",{"_index":1580,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["give",{"_index":3008,"title":{},"body":{"license.html":{}}}],["given",{"_index":854,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["global",{"_index":1470,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gnu",{"_index":2944,"title":{},"body":{"license.html":{}}}],["go",{"_index":343,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["good",{"_index":2993,"title":{},"body":{"license.html":{}}}],["gotoacknowledg",{"_index":2419,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoacknowledge(alarm_id",{"_index":2429,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoantenna",{"_index":2420,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotologin",{"_index":2421,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotoshelv",{"_index":2422,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoshelve(alarm_id",{"_index":2433,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gototablefilteredbi",{"_index":1545,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1549,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gotoweath",{"_index":2423,"title":{},"body":{"injectables/RoutingService.html":{}}}],["govern",{"_index":2967,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2965,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3056,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":467,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["green",{"_index":463,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["grey",{"_index":1341,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["grid",{"_index":1524,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{}}}],["group",{"_index":662,"title":{},"body":{"classes/AlarmConfig.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["group.github.io/ia",{"_index":2908,"title":{},"body":{"index.html":{}}}],["grow",{"_index":624,"title":{},"body":{"components/AlarmComponent.html":{}}}],["guard",{"_index":1762,"title":{"guards/AuthLoginGuard.html":{}},"body":{"guards/AuthLoginGuard.html":{},"overview.html":{}}}],["hammerj",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["handleerror",{"_index":1992,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":2001,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["happen",{"_index":1670,"title":{},"body":{"components/AppComponent.html":{}}}],["haschild",{"_index":862,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":866,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasvalidtoken",{"_index":1806,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":426,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["header'},{'nam",{"_index":173,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["header.compon",{"_index":2484,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":688,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.scss",{"_index":687,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.t",{"_index":686,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:109",{"_index":696,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:126",{"_index":698,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:166",{"_index":697,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":690,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":694,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":691,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":693,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:38",{"_index":695,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:43",{"_index":692,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:48",{"_index":701,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:53",{"_index":702,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:59",{"_index":703,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:65",{"_index":704,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:70",{"_index":689,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:83",{"_index":700,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:90",{"_index":699,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header/alarm",{"_index":685,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["header/fixtures.t",{"_index":2826,"title":{},"body":{"coverage.html":{}}}],["health",{"_index":199,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.modul",{"_index":1723,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodul",{"_index":1708,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycompon",{"_index":198,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":147,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["help",{"_index":797,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"index.html":{}}}],["herein",{"_index":2964,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":641,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{}}}],["hide",{"_index":982,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hidespinn",{"_index":2674,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["high",{"_index":610,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/LegendComponent.html":{}}}],["highlight",{"_index":1596,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["hint",{"_index":2285,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["hour",{"_index":2581,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["hover",{"_index":2279,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["html",{"_index":156,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":1031,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WikiButtonComponent.html":{}}}],["http://localhost:4200",{"_index":2925,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1394,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{}}}],["httpclientmodul",{"_index":1717,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{}}}],["httpclientservic",{"_index":1030,"title":{"injectables/HttpClientService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1822,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["httpoption",{"_index":2018,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":2003,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":2955,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":2907,"title":{},"body":{"index.html":{}}}],["https://www.alma.cl",{"_index":2325,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["hunt",{"_index":2307,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["ia",{"_index":292,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"index.html":{}}}],["ias.ia",{"_index":1693,"title":{},"body":{"components/AppComponent.html":{}}}],["ias.overview",{"_index":2372,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["ias_antenna",{"_index":1624,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_health",{"_index":1983,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_overview",{"_index":1620,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_tabl",{"_index":1625,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_typ",{"_index":2069,"title":{},"body":{"classes/Iasio.html":{}}}],["ias_weath",{"_index":1623,"title":{},"body":{"components/AppComponent.html":{}}}],["iasconfigur",{"_index":1932,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":1933,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdisplay",{"_index":2897,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":2065,"title":{"classes/Iasio.html":{}},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["iasmaterialmodul",{"_index":270,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":1934,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":148,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["iconset",{"_index":1906,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1907,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["id",{"_index":427,"title":{},"body":{"components/AlarmCardComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["identifi",{"_index":2783,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":520,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["imagestous",{"_index":589,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.clear",{"_index":595,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.mainten",{"_index":594,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_crit",{"_index":599,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_high",{"_index":598,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_low",{"_index":596,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_medium",{"_index":597,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.shelv",{"_index":592,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.unknown",{"_index":593,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagesunreli",{"_index":521,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["img.ia",{"_index":1681,"title":{},"body":{"components/AppComponent.html":{}}}],["img.ias.ia",{"_index":1695,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":2954,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1823,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["incorpor",{"_index":2959,"title":{},"body":{"license.html":{}}}],["index",{"_index":32,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indic",{"_index":1401,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["info'},{'nam",{"_index":175,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["info.compon",{"_index":2487,"title":{},"body":{"modules/SharedModule.html":{}}}],["info.component.html",{"_index":735,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.scss",{"_index":734,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.t",{"_index":731,"title":{},"body":{"components/AlarmInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:18",{"_index":739,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts:21",{"_index":741,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts:24",{"_index":738,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts:34",{"_index":740,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info/alarm",{"_index":730,"title":{},"body":{"components/AlarmInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["inform",{"_index":733,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"license.html":{}}}],["inherit",{"_index":2373,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["init",{"_index":2546,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["initi",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/PropsTableComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":1948,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["inject",{"_index":1015,"title":{"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":638,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["inner",{"_index":424,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["innerhtmltextvalu",{"_index":2230,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["input",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["insid",{"_index":1280,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["instal",{"_index":2912,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":2921,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":817,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instruct",{"_index":2902,"title":{},"body":{"index.html":{}}}],["integr",{"_index":1629,"title":{},"body":{"components/AppComponent.html":{}}}],["intend",{"_index":1209,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["interact",{"_index":2754,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["interfac",{"_index":2566,"title":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{}},"body":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["intern",{"_index":329,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["interv",{"_index":351,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"classes/AlarmSounds.html":{}}}],["interval(1000",{"_index":1233,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["interval(tim",{"_index":375,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["inu",{"_index":2290,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["invalid",{"_index":1443,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["invalid.svg",{"_index":1986,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["invok",{"_index":2992,"title":{},"body":{"license.html":{}}}],["io_id",{"_index":2070,"title":{},"body":{"classes/Iasio.html":{}}}],["ionicon",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["isalarmindexavailable(core_id",{"_index":1121,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["isallow",{"_index":2628,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["isdis",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["isexpand",{"_index":857,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isiniti",{"_index":1063,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["isnavigationcompact",{"_index":1574,"title":{},"body":{"components/AppComponent.html":{}}}],["isol",{"_index":2979,"title":{},"body":{"license.html":{}}}],["isselect",{"_index":1455,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["isselected(alarmconfig",{"_index":1471,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["issu",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["istextalarm",{"_index":518,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["isubscript",{"_index":1484,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["isvalidiasio",{"_index":2073,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":2083,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":767,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["item.icon",{"_index":1676,"title":{},"body":{"components/AppComponent.html":{}}}],["item.link",{"_index":1657,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":1677,"title":{},"body":{"components/AppComponent.html":{}}}],["item[1",{"_index":2227,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["japan",{"_index":2298,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["jqueri",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2874,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":868,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{}}}],["json.hasownproperty('doc_url",{"_index":2088,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":2087,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":2085,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('short_desc",{"_index":2086,"title":{},"body":{"classes/Iasio.html":{}}}],["json.parse(allowed_act",{"_index":1887,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(token",{"_index":1883,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(us",{"_index":1885,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(allowed_act",{"_index":1897,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(token",{"_index":1892,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(us",{"_index":1894,"title":{},"body":{"injectables/AuthService.html":{}}}],["json['doc_url",{"_index":2094,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":2093,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":2091,"title":{},"body":{"classes/Iasio.html":{}}}],["json['short_desc",{"_index":2092,"title":{},"body":{"classes/Iasio.html":{}}}],["june",{"_index":2947,"title":{},"body":{"license.html":{}}}],["k",{"_index":889,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["karma",{"_index":2936,"title":{},"body":{"index.html":{}}}],["keep",{"_index":802,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["keepclos",{"_index":1118,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["key",{"_index":1408,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{}}}],["keyfram",{"_index":1306,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["l",{"_index":2742,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["label",{"_index":530,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["label'},{'nam",{"_index":177,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["label.compon",{"_index":2489,"title":{},"body":{"modules/SharedModule.html":{}}}],["label.component.html",{"_index":940,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.scss",{"_index":939,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.t",{"_index":938,"title":{},"body":{"components/AlarmLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:108",{"_index":965,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:123",{"_index":960,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:163",{"_index":961,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:177",{"_index":963,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:18",{"_index":954,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:196",{"_index":964,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:23",{"_index":959,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:28",{"_index":958,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:33",{"_index":956,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:38",{"_index":957,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:43",{"_index":974,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:48",{"_index":971,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:53",{"_index":969,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:58",{"_index":975,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:63",{"_index":967,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:68",{"_index":968,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:73",{"_index":970,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:78",{"_index":953,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:88",{"_index":966,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label/alarm",{"_index":937,"title":{},"body":{"components/AlarmLabelComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["label/fixtures.t",{"_index":2828,"title":{},"body":{"coverage.html":{}}}],["labelloc",{"_index":522,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["labellocationopt",{"_index":514,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["labelmod",{"_index":523,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["last",{"_index":753,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/SidenavService.html":{}}}],["lastalarmid",{"_index":2505,"title":{},"body":{"injectables/SidenavService.html":{}}}],["lastchang",{"_index":357,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["lastreceivedmessagetimestamp",{"_index":1046,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["later",{"_index":899,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1277,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{},"license.html":{}}}],["left",{"_index":134,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["left:0",{"_index":2764,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["legend",{"_index":155,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":201,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":2096,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":2097,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":2558,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcompon",{"_index":200,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":429,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"license.html":{}}}],["lesser",{"_index":2945,"title":{},"body":{"license.html":{}}}],["level",{"_index":770,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":564,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["librari",{"_index":2920,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":2943,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":3003,"title":{},"body":{"license.html":{}}}],["line",{"_index":153,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["link",{"_index":125,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["linkfab",{"_index":2354,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkflat",{"_index":2353,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkicon",{"_index":2356,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkmini",{"_index":2355,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkrais",{"_index":2352,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linux",{"_index":2905,"title":{},"body":{"index.html":{}}}],["list",{"_index":544,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":1398,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["load",{"_index":2136,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["loadalarmsconfig",{"_index":1390,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["loadimag",{"_index":1391,"title":{},"body":{"injectables/AntennasService.html":{}}}],["local",{"_index":746,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"index.html":{}}}],["locale.date_format",{"_index":748,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["locale.timezon",{"_index":750,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["localstorage.getitem(this.actions_storage_nam",{"_index":1886,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(this.token_storage_nam",{"_index":1882,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(this.user_storage_nam",{"_index":1884,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.actions_storage_nam",{"_index":1890,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.token_storage_nam",{"_index":1888,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.user_storage_nam",{"_index":1889,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(this.actions_storage_nam",{"_index":1896,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(this.token_storage_nam",{"_index":1891,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(this.user_storage_nam",{"_index":1893,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":559,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["log",{"_index":1766,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{}}}],["login",{"_index":1654,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["login'},{'nam",{"_index":203,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["login(usernam",{"_index":1827,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":2127,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":2126,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.guard",{"_index":1750,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login.guard.t",{"_index":1764,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:13",{"_index":1769,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:31",{"_index":1774,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:42",{"_index":1778,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login/login.compon",{"_index":1794,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincompon",{"_index":202,"title":{"components/LoginComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginstatu",{"_index":1797,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginstatusstream",{"_index":1798,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":1682,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":1117,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["long",{"_index":2594,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["look",{"_index":2222,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["low",{"_index":608,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/LegendComponent.html":{}}}],["low.svg",{"_index":1438,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["m",{"_index":2745,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["macro",{"_index":3005,"title":{},"body":{"license.html":{}}}],["made",{"_index":2974,"title":{},"body":{"license.html":{}}}],["main",{"_index":629,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["mainten",{"_index":574,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["maintenance.svg",{"_index":1441,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["make",{"_index":2969,"title":{},"body":{"license.html":{}}}],["malfunct",{"_index":2896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manag",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["manner",{"_index":3025,"title":{},"body":{"license.html":{}}}],["map",{"_index":676,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["map'},{'nam",{"_index":188,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["map((respons",{"_index":1862,"title":{},"body":{"injectables/AuthService.html":{}}}],["map.compon",{"_index":1370,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["map.component.html",{"_index":2180,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":2179,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":2799,"title":{},"body":{"coverage.html":{}}}],["map.servic",{"_index":2194,"title":{},"body":{"modules/MapModule.html":{}}}],["map/antenna",{"_index":1369,"title":{},"body":{"modules/AntennasModule.html":{},"coverage.html":{}}}],["map/map.compon",{"_index":2193,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.modul",{"_index":1374,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["map/weath",{"_index":2722,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{}}}],["mapcompon",{"_index":204,"title":{"components/MapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapconfig",{"_index":2181,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataavail",{"_index":2182,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataprocess",{"_index":2197,"title":{},"body":{"injectables/MapService.html":{}}}],["mapdataprocessing(placemarksgroup",{"_index":2203,"title":{},"body":{"injectables/MapService.html":{}}}],["mapmodul",{"_index":1365,"title":{"modules/MapModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/MapModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["mapservic",{"_index":2191,"title":{"injectables/MapService.html":{}},"body":{"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":139,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["mark",{"_index":1602,"title":{},"body":{"components/AppComponent.html":{}}}],["marker",{"_index":508,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker'},{'nam",{"_index":184,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["marker.compon",{"_index":1377,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["marker.component.html",{"_index":1315,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.scss",{"_index":1314,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.t",{"_index":1313,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["marker.component.ts:17",{"_index":1325,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:18",{"_index":2751,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:20",{"_index":1333,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:21",{"_index":2692,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:23",{"_index":1334,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:24",{"_index":2689,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:25",{"_index":2709,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:26",{"_index":1327,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:29",{"_index":1328,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:32",{"_index":1323,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:33",{"_index":2693,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:37",{"_index":2712,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:38",{"_index":2711,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:39",{"_index":2691,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:40",{"_index":1338,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:41",{"_index":1337,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:44",{"_index":2710,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:46",{"_index":2690,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{}}}],["marker.component.ts:47",{"_index":1336,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:48",{"_index":2750,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:53",{"_index":1335,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:56",{"_index":2748,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker/antenna",{"_index":1312,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["marker/weath",{"_index":2685,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["markers/antenna",{"_index":1311,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["markers/weath",{"_index":2684,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["master",{"_index":2910,"title":{},"body":{"index.html":{}}}],["mat",{"_index":151,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherComponent.html":{},"components/WikiButtonComponent.html":{}}}],["matbuttonmodul",{"_index":2040,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":2043,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":257,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["matcheckboxmodul",{"_index":2050,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":206,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["material.modul",{"_index":294,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/HealthModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["material.module.t",{"_index":2025,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":293,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["materialbuttonscolorscompon",{"_index":205,"title":{"components/MaterialButtonsColorsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialcardsamplecompon",{"_index":208,"title":{"components/MaterialCardSampleComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialcolorscompon",{"_index":210,"title":{"components/MaterialColorsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialid",{"_index":2229,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["materialsandboxcompon",{"_index":211,"title":{"components/MaterialSandboxComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialsandboxmodul",{"_index":1732,"title":{"modules/MaterialSandboxModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/MaterialSandboxModule.html":{},"modules.html":{},"overview.html":{}}}],["materialtogglecolorscompon",{"_index":213,"title":{"components/MaterialToggleColorsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":2058,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matformfieldmodul",{"_index":2052,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonmodul",{"_index":2042,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonregistri",{"_index":1582,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodul",{"_index":2026,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":2047,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matmenumodul",{"_index":2038,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":2028,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":2030,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matselectmodul",{"_index":2054,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenav",{"_index":1612,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["matsidenavmodul",{"_index":2045,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":2032,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsnackbarmodul",{"_index":2060,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsortmodul",{"_index":2034,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattablemodul",{"_index":2036,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":2056,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":779,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":829,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":778,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":822,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":2049,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max",{"_index":403,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["maxblinkinterv",{"_index":307,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["maxci",{"_index":2211,"title":{},"body":{"injectables/MapService.html":{}}}],["maximum",{"_index":348,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["md",{"_index":534,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["mean",{"_index":2976,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":3000,"title":{},"body":{"license.html":{}}}],["meant",{"_index":2481,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechan",{"_index":3026,"title":{},"body":{"license.html":{}}}],["medium",{"_index":609,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/LegendComponent.html":{}}}],["menu",{"_index":1627,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":1042,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["middl",{"_index":499,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{}}}],["milisecond",{"_index":350,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["millisecond",{"_index":332,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["min",{"_index":143,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WikiButtonComponent.html":{}}}],["mini",{"_index":2221,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["minim",{"_index":2975,"title":{},"body":{"license.html":{}}}],["minut",{"_index":2578,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["miscellan",{"_index":2890,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":1138,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["mock",{"_index":2316,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["mockalarm",{"_index":2804,"title":{},"body":{"coverage.html":{}}}],["mockalarmdata",{"_index":2792,"title":{},"body":{"coverage.html":{}}}],["mockalarmstodisplay",{"_index":2845,"title":{},"body":{"coverage.html":{}}}],["mockantenna",{"_index":2851,"title":{},"body":{"coverage.html":{}}}],["mockantennasconfig",{"_index":2805,"title":{},"body":{"coverage.html":{}}}],["mockdevicesconfig",{"_index":2806,"title":{},"body":{"coverage.html":{}}}],["mockiasio",{"_index":2846,"title":{},"body":{"coverage.html":{}}}],["mockimageset",{"_index":2832,"title":{},"body":{"coverage.html":{}}}],["mockimagesset",{"_index":2807,"title":{},"body":{"coverage.html":{}}}],["mockimagesunreliableset",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["mockimageunreliableset",{"_index":2833,"title":{},"body":{"coverage.html":{}}}],["mockpadsstatu",{"_index":2852,"title":{},"body":{"coverage.html":{}}}],["mocksummaryconfig",{"_index":2809,"title":{},"body":{"coverage.html":{}}}],["mockweatherstationsconfig",{"_index":2853,"title":{},"body":{"coverage.html":{}}}],["mockweathersummaryconfig",{"_index":2854,"title":{},"body":{"coverage.html":{}}}],["modal",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":552,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["model",{"_index":567,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"modules/DataModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["modif",{"_index":2988,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":799,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"license.html":{}}}],["modul",{"_index":258,"title":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2565,"title":{},"body":{"components/TabularViewComponent.html":{},"dependencies.html":{}}}],["monitor",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{}}}],["monospac",{"_index":1303,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["more",{"_index":2383,"title":{},"body":{"components/OverviewComponent.html":{},"index.html":{}}}],["mountain",{"_index":2304,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["multipl",{"_index":816,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["nav",{"_index":1595,"title":{},"body":{"components/AppComponent.html":{}}}],["navig",{"_index":1587,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["navigationsidenavitem",{"_index":1575,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem",{"_index":1600,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem.count",{"_index":1662,"title":{},"body":{"components/AppComponent.html":{}}}],["navitemcount",{"_index":1661,"title":{},"body":{"components/AppComponent.html":{}}}],["necessari",{"_index":3032,"title":{},"body":{"license.html":{}}}],["need",{"_index":1381,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["nest",{"_index":796,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":804,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["new",{"_index":316,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["newlength",{"_index":1182,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["next",{"_index":1775,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["nexturl",{"_index":1782,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["ng",{"_index":1281,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngbmodul",{"_index":2364,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{}}}],["ngmodul",{"_index":276,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":41,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngonchanges(chang",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngondestroy",{"_index":1456,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ngoninit",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":290,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":289,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservic",{"_index":2134,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["node",{"_index":768,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":895,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":858,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":892,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":856,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":2914,"title":{},"body":{"index.html":{}}}],["non",{"_index":1212,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["none",{"_index":993,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"license.html":{}}}],["nonzero",{"_index":1667,"title":{},"body":{"components/AppComponent.html":{}}}],["nopad",{"_index":951,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["nopaddingopt",{"_index":942,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["normal",{"_index":344,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{}}}],["noselecteddescendants(nod",{"_index":921,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":2400,"title":{},"body":{"modules/OverviewModule.html":{},"index.html":{}}}],["noth",{"_index":1463,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["notic",{"_index":3010,"title":{},"body":{"license.html":{}}}],["notif",{"_index":1047,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["notifi",{"_index":322,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["npm",{"_index":2915,"title":{},"body":{"index.html":{}}}],["null",{"_index":127,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["number",{"_index":327,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["number(this.iasconfiguration['broadcastr",{"_index":1958,"title":{},"body":{"injectables/CdbService.html":{}}}],["number(this.iasconfiguration['broadcastthreshold",{"_index":1961,"title":{},"body":{"injectables/CdbService.html":{}}}],["numer",{"_index":3004,"title":{},"body":{"license.html":{}}}],["obj",{"_index":1162,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["object",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["object.assign(thi",{"_index":579,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["object.keys(countbyview",{"_index":1664,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(subtree).length",{"_index":885,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["observ",{"_index":334,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["obtain",{"_index":1227,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["occur",{"_index":2015,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["of(fals",{"_index":1857,"title":{},"body":{"injectables/AuthService.html":{}}}],["ofobserv",{"_index":781,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":860,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ogin",{"_index":2148,"title":{},"body":{"components/LoginComponent.html":{}}}],["old",{"_index":1135,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm",{"_index":1178,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.ack",{"_index":1181,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.valu",{"_index":1180,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_ack",{"_index":1176,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_valu",{"_index":1175,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["on",{"_index":3021,"title":{},"body":{"license.html":{}}}],["onc",{"_index":1210,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["onchang",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["onclick",{"_index":43,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(alarmconfig",{"_index":1478,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["onclos",{"_index":2645,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["ondestroy",{"_index":1445,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["onhov",{"_index":2708,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["oninit",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["opac",{"_index":503,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["open",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["open/clos",{"_index":2519,"title":{},"body":{"injectables/SidenavService.html":{}}}],["oper",{"_index":1991,"title":{},"body":{"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":446,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.unknown",{"_index":465,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["opt_ci",{"_index":1332,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["opt_cx",{"_index":1331,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["option",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["optionalalarmnam",{"_index":394,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["order",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmTooltipComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ShelveButtonComponent.html":{}}}],["origin",{"_index":2295,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["ot",{"_index":1492,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["other",{"_index":1985,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["otherwis",{"_index":439,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"license.html":{}}}],["out",{"_index":274,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1591,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["output",{"_index":313,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["over",{"_index":1278,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{}}}],["overflow",{"_index":626,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["overview",{"_index":216,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":218,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.html",{"_index":2386,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":2385,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.svg",{"_index":1646,"title":{},"body":{"components/AppComponent.html":{}}}],["overview/overview.compon",{"_index":2402,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.modul",{"_index":1724,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.compon",{"_index":1742,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["overviewcardcompon",{"_index":215,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":217,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodul",{"_index":1709,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["p",{"_index":1687,"title":{},"body":{"components/AppComponent.html":{}}}],["packag",{"_index":2862,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":133,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["padding:0",{"_index":637,"title":{},"body":{"components/AlarmComponent.html":{}}}],["page",{"_index":1056,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"components/WikiButtonComponent.html":{}}}],["pair",{"_index":2228,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["palett",{"_index":2226,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["pallet",{"_index":2225,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel",{"_index":2349,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{}}}],["panel100",{"_index":2244,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel100acc",{"_index":2261,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel100warn",{"_index":2274,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel200",{"_index":2243,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel200acc",{"_index":2260,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel200warn",{"_index":2273,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel300",{"_index":2241,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel300acc",{"_index":2259,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel300warn",{"_index":2272,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel400",{"_index":2240,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel400acc",{"_index":2258,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel400warn",{"_index":2271,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel50",{"_index":2245,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel500",{"_index":2238,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel500acc",{"_index":2257,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel500warn",{"_index":2270,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel50acc",{"_index":2262,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel50warn",{"_index":2275,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel600",{"_index":2236,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel600acc",{"_index":2256,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel600warn",{"_index":2269,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel700",{"_index":2235,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel700acc",{"_index":2255,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel700warn",{"_index":2268,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel800",{"_index":2233,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel800acc",{"_index":2254,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel800warn",{"_index":2267,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel900",{"_index":2231,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel900acc",{"_index":2253,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel900warn",{"_index":2266,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela100",{"_index":2251,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela100acc",{"_index":2265,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela100warn",{"_index":2278,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela400",{"_index":2249,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela400acc",{"_index":2264,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela400warn",{"_index":2277,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela700",{"_index":2247,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela700acc",{"_index":2263,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela700warn",{"_index":2276,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["param",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["parament",{"_index":1284,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["paramet",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["parammap",{"_index":2608,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parammap.get('alarmid",{"_index":2609,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parammapsubscript",{"_index":2596,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parent",{"_index":790,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["part",{"_index":914,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":2973,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1491,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"license.html":{}}}],["password",{"_index":1828,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["path",{"_index":1106,"title":{},"body":{"classes/AlarmSounds.html":{},"modules/AppRoutingModule.html":{},"injectables/MapService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pathmatch",{"_index":1754,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathsgroup",{"_index":2202,"title":{},"body":{"injectables/MapService.html":{}}}],["pathstr",{"_index":2740,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["payload",{"_index":1089,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["payload.data",{"_index":1094,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pend",{"_index":414,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["perform",{"_index":104,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"license.html":{}}}],["period",{"_index":1218,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["perman",{"_index":3054,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":1819,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["permit",{"_index":1776,"title":{},"body":{"guards/AuthLoginGuard.html":{},"license.html":{}}}],["persist",{"_index":2642,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["pipe",{"_index":1861,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(map((respons",{"_index":1874,"title":{},"body":{"injectables/AuthService.html":{}}}],["pk",{"_index":2089,"title":{},"body":{"classes/Iasio.html":{}}}],["place",{"_index":3035,"title":{},"body":{"license.html":{}}}],["placemark",{"_index":663,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/MapService.html":{},"components/WeatherComponent.html":{}}}],["placemarksgroup",{"_index":2207,"title":{},"body":{"injectables/MapService.html":{}}}],["play",{"_index":1060,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["playalarmsound(alarm",{"_index":1191,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pleas",{"_index":2640,"title":{},"body":{"interfaces/TimeoutOption.html":{},"index.html":{}}}],["point",{"_index":2067,"title":{},"body":{"classes/Iasio.html":{}}}],["pointer",{"_index":1343,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["popper.j",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":2978,"title":{},"body":{"license.html":{}}}],["posit",{"_index":714,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["possibl",{"_index":2893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":1993,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":2005,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["presenc",{"_index":1597,"title":{},"body":{"components/AppComponent.html":{}}}],["present",{"_index":955,"title":{},"body":{"components/AlarmLabelComponent.html":{},"license.html":{}}}],["prevalarmcoreid",{"_index":838,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["prevdependenciesstr",{"_index":842,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["previou",{"_index":1840,"title":{},"body":{"injectables/AuthService.html":{}}}],["previousalarmvalu",{"_index":367,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["primari",{"_index":246,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["priorit",{"_index":962,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["prioriti",{"_index":369,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["priority_0",{"_index":2100,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_1",{"_index":2101,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_2",{"_index":2102,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_3",{"_index":2103,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_4",{"_index":2104,"title":{},"body":{"components/LegendComponent.html":{}}}],["prioritytext",{"_index":943,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["prioritytextclass",{"_index":944,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["privat",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":2145,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["process",{"_index":2013,"title":{},"body":{"injectables/HttpClientService.html":{},"components/StatusViewComponent.html":{}}}],["prod",{"_index":2932,"title":{},"body":{"index.html":{}}}],["produc",{"_index":2972,"title":{},"body":{"license.html":{}}}],["product",{"_index":2933,"title":{},"body":{"index.html":{}}}],["proess",{"_index":2011,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["program",{"_index":2982,"title":{},"body":{"license.html":{}}}],["project",{"_index":2898,"title":{},"body":{"index.html":{}}}],["promin",{"_index":3009,"title":{},"body":{"license.html":{}}}],["promis",{"_index":2004,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":2017,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["prop",{"_index":220,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["prop.key",{"_index":2411,"title":{},"body":{"components/PropsTableComponent.html":{}}}],["prop.valu",{"_index":2412,"title":{},"body":{"components/PropsTableComponent.html":{}}}],["propag",{"_index":540,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["propagateblinkingst",{"_index":2747,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["propagateblinkingstate(blink",{"_index":2749,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["properli",{"_index":3029,"title":{},"body":{"license.html":{}}}],["properti",{"_index":33,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialColorsComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["propstablecompon",{"_index":219,"title":{"components/PropsTableComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["protractor",{"_index":2939,"title":{},"body":{"index.html":{}}}],["provid",{"_index":263,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/LoginComponent.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":1417,"title":{},"body":{"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["provisori",{"_index":2390,"title":{},"body":{"components/OverviewComponent.html":{}}}],["proxi",{"_index":3049,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":3052,"title":{},"body":{"license.html":{}}}],["public",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":3041,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":509,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":2547,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1279,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"injectables/HttpClientService.html":{}}}],["put(url",{"_index":2007,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["r",{"_index":1319,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["radiu",{"_index":141,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rais",{"_index":2218,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["rate",{"_index":1942,"title":{},"body":{"injectables/CdbService.html":{}}}],["re",{"_index":1954,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":287,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":744,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["read_url",{"_index":1994,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["read_url(url",{"_index":2009,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["readalarmmessage(act",{"_index":1164,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readalarmmessageslist(alarmslist",{"_index":1169,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readcountbyviewmessage(countbyview",{"_index":1171,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readm",{"_index":2942,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":1041,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"license.html":{}}}],["recombin",{"_index":3023,"title":{},"body":{"license.html":{}}}],["record",{"_index":898,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":808,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":474,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["redirect",{"_index":1496,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirectto",{"_index":1753,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":1799,"title":{},"body":{"injectables/AuthService.html":{}}}],["refer",{"_index":66,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["refresh",{"_index":1057,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["registri",{"_index":1588,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["registry['shelved_at",{"_index":2658,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["registry['timeout']).viewvalu",{"_index":2659,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["rel",{"_index":715,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{}}}],["relat",{"_index":551,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"index.html":{}}}],["releas",{"_index":2906,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":2341,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":3024,"title":{},"body":{"license.html":{}}}],["reload",{"_index":2646,"title":{},"body":{"interfaces/TimeoutOption.html":{},"index.html":{}}}],["remain",{"_index":2999,"title":{},"body":{"license.html":{}}}],["remov",{"_index":2389,"title":{},"body":{"components/OverviewComponent.html":{}}}],["removeallowedact",{"_index":1807,"title":{},"body":{"injectables/AuthService.html":{}}}],["removetoken",{"_index":1808,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeus",{"_index":1809,"title":{},"body":{"injectables/AuthService.html":{}}}],["repeat",{"_index":1192,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["repeatedli",{"_index":1213,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["replac",{"_index":1839,"title":{},"body":{"injectables/AuthService.html":{}}}],["repres",{"_index":507,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["reproduc",{"_index":1190,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["repsons",{"_index":1876,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":818,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["requestshelveinfo",{"_index":2654,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatu",{"_index":2591,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatusli",{"_index":2590,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requestuserslist",{"_index":2679,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["requir",{"_index":672,"title":{},"body":{"classes/AlarmConfig.html":{},"modules/IasMaterialModule.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":273,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resetcountbyview",{"_index":1173,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["resettim",{"_index":1229,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["resourc",{"_index":2392,"title":{},"body":{"components/OverviewComponent.html":{}}}],["respect",{"_index":2339,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["respons",{"_index":1128,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["response['allowed_act",{"_index":1865,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['antenna",{"_index":1425,"title":{},"body":{"injectables/AntennasService.html":{}}}],["response['devic",{"_index":1427,"title":{},"body":{"injectables/AntennasService.html":{}}}],["response['statu",{"_index":1149,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["response['token",{"_index":1877,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['user_data",{"_index":1864,"title":{},"body":{"injectables/AuthService.html":{}}}],["response[0",{"_index":2657,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["restrict",{"_index":3015,"title":{},"body":{"license.html":{}}}],["result",{"_index":256,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["result.push('alarm",{"_index":460,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmTileComponent.html":{}}}],["result.push('blink",{"_index":477,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmTileComponent.html":{}}}],["result.push('blu",{"_index":705,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('gray",{"_index":708,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('green",{"_index":707,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('r",{"_index":710,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('til",{"_index":1268,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["result.push('unreli",{"_index":706,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('yellow",{"_index":709,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push(this.blinkingclass",{"_index":711,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["retriev",{"_index":1324,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["retrun",{"_index":1010,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["retun",{"_index":853,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":2178,"title":{},"body":{"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":3016,"title":{},"body":{"license.html":{}}}],["revis",{"_index":3040,"title":{},"body":{"license.html":{}}}],["rgba(0",{"_index":1304,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["rgba(255",{"_index":1528,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["right",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["root",{"_index":1418,"title":{},"body":{"injectables/AntennasService.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":194,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":1495,"title":{"routes.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["routermodul",{"_index":1735,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":1760,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1773,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["routing.modul",{"_index":1721,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":1734,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.servic",{"_index":1736,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":1720,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing/routing.servic",{"_index":1561,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{}}}],["routing/routing.service.t",{"_index":2415,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["routing/routing.service.ts:20",{"_index":2438,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:28",{"_index":2431,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:35",{"_index":2436,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:43",{"_index":2430,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:51",{"_index":2434,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:58",{"_index":2427,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:65",{"_index":2432,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:8",{"_index":2426,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routingservic",{"_index":1494,"title":{"injectables/RoutingService.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["row",{"_index":633,"title":{},"body":{"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["run",{"_index":2922,"title":{},"body":{"index.html":{},"license.html":{}}}],["running_id",{"_index":2319,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["rxj",{"_index":352,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":1016,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["same",{"_index":803,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["sampl",{"_index":209,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["san",{"_index":2378,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["sandbox",{"_index":223,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox'},{'nam",{"_index":212,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox.compon",{"_index":1740,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MaterialSandboxModule.html":{}}}],["sandbox.components.html",{"_index":2224,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.scss",{"_index":2214,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.t",{"_index":2213,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"coverage.html":{}}}],["sandbox.components.ts:123",{"_index":2357,"title":{},"body":{"components/MaterialColorsComponent.html":{}}}],["sandbox.components.ts:298",{"_index":2467,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:301",{"_index":2466,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:313",{"_index":2464,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:346",{"_index":2463,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:363",{"_index":2465,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:39",{"_index":2358,"title":{},"body":{"components/MaterialColorsComponent.html":{}}}],["sandbox.components.ts:412",{"_index":2462,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:415",{"_index":2461,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:418",{"_index":2459,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:421",{"_index":2460,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:424",{"_index":2453,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:427",{"_index":2454,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:430",{"_index":2452,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:442",{"_index":2457,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:477",{"_index":2458,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:485",{"_index":2456,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:502",{"_index":2455,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:571",{"_index":2475,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:574",{"_index":2474,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:577",{"_index":2472,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:580",{"_index":2473,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:592",{"_index":2470,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:627",{"_index":2471,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:635",{"_index":2469,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:652",{"_index":2468,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:723",{"_index":2451,"title":{},"body":{"components/SandboxAlarmCardComponent.html":{}}}],["sandbox.components.ts:726",{"_index":2450,"title":{},"body":{"components/SandboxAlarmCardComponent.html":{}}}],["sandbox.components.ts:729",{"_index":2448,"title":{},"body":{"components/SandboxAlarmCardComponent.html":{}}}],["sandbox.components.ts:732",{"_index":2449,"title":{},"body":{"components/SandboxAlarmCardComponent.html":{}}}],["sandbox.components.ts:744",{"_index":2446,"title":{},"body":{"components/SandboxAlarmCardComponent.html":{}}}],["sandbox.components.ts:779",{"_index":2447,"title":{},"body":{"components/SandboxAlarmCardComponent.html":{}}}],["sandbox.components.ts:786",{"_index":2444,"title":{},"body":{"components/SandboxAlarmCardComponent.html":{}}}],["sandbox.modul",{"_index":1741,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sandbox.module.t",{"_index":2363,"title":{},"body":{"modules/MaterialSandboxModule.html":{}}}],["sandbox/materi",{"_index":1739,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"coverage.html":{}}}],["sandboxalarmcardcompon",{"_index":222,"title":{"components/SandboxAlarmCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sandboxalarmcompon",{"_index":224,"title":{"components/SandboxAlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sandboxalarmlabelcompon",{"_index":225,"title":{"components/SandboxAlarmLabelComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sandboxalarmtilecompon",{"_index":226,"title":{"components/SandboxAlarmTileComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sanit",{"_index":1641,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":1779,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["scaffold",{"_index":2927,"title":{},"body":{"index.html":{}}}],["scale",{"_index":2205,"title":{},"body":{"injectables/MapService.html":{}}}],["scenario",{"_index":2309,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["second",{"_index":555,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/CdbService.html":{}}}],["secondari",{"_index":2286,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["section",{"_index":2984,"title":{},"body":{"license.html":{}}}],["select",{"_index":793,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["select/deselect",{"_index":923,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":932,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":791,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selectedantenna",{"_index":1351,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["selecteddescend",{"_index":916,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedst",{"_index":2701,"title":{},"body":{"components/WeatherComponent.html":{}}}],["selectionmodel",{"_index":774,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":815,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["self",{"_index":1532,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["send",{"_index":792,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{}}}],["sent",{"_index":2572,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["separ",{"_index":1555,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serif",{"_index":2379,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["serv",{"_index":2923,"title":{},"body":{"index.html":{}}}],["server",{"_index":1830,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{},"index.html":{}}}],["servic",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set",{"_index":365,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set(this.childrenids.concat(this.dependenciesid",{"_index":1511,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["set_crit",{"_index":572,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["set_high",{"_index":571,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["set_invalid",{"_index":2105,"title":{},"body":{"components/LegendComponent.html":{}}}],["set_low",{"_index":569,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["set_medium",{"_index":570,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["set_valid",{"_index":2106,"title":{},"body":{"components/LegendComponent.html":{}}}],["seterrormessag",{"_index":2130,"title":{},"body":{"components/LoginComponent.html":{}}}],["seterrormessage(error",{"_index":2140,"title":{},"body":{"components/LoginComponent.html":{}}}],["setsidenav",{"_index":2508,"title":{},"body":{"injectables/SidenavService.html":{}}}],["setsidenav(sidenav",{"_index":2516,"title":{},"body":{"injectables/SidenavService.html":{}}}],["shall",{"_index":3051,"title":{},"body":{"license.html":{}}}],["share",{"_index":2308,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.compon",{"_index":1414,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.modul",{"_index":296,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/BuildingModule.html":{},"modules/HealthModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["sharedmodul",{"_index":271,"title":{"modules/SharedModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/BuildingModule.html":{},"modules/HealthModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":415,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["shelv",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve'},{'nam",{"_index":229,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve.component.html",{"_index":2574,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve.component.scss",{"_index":2575,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve/:alarmid",{"_index":1759,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shelve/shelve.compon",{"_index":280,"title":{},"body":{"modules/ActionsModule.html":{}}}],["shelve/unshelv",{"_index":2495,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvealarm(alarm_id",{"_index":1147,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shelvebuttoncompon",{"_index":227,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelvecompon",{"_index":228,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":2588,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelved?({{alarm.shelv",{"_index":2314,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["shelvedatmessag",{"_index":2595,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelveregistri",{"_index":1143,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shiba",{"_index":2289,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["shleve/unshelv",{"_index":2435,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["short",{"_index":2079,"title":{},"body":{"classes/Iasio.html":{}}}],["short_desc",{"_index":2071,"title":{},"body":{"classes/Iasio.html":{}}}],["shorten",{"_index":428,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["shouldreload",{"_index":2506,"title":{},"body":{"injectables/SidenavService.html":{}}}],["show",{"_index":972,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["showactionbadg",{"_index":395,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["showaspendingack",{"_index":388,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["showasshelv",{"_index":389,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["showbadgesopt",{"_index":1241,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["showfluidtextopt",{"_index":945,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["showpriorityleveltext",{"_index":519,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["showspinn",{"_index":2675,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["showtext",{"_index":952,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["showtextopt",{"_index":946,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["shuttedown",{"_index":2894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["side",{"_index":3036,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":1346,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":190,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sidebar.compon",{"_index":1372,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["sidebar.component.html",{"_index":1447,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1446,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":1444,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:105",{"_index":1467,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:113",{"_index":1468,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:121",{"_index":1469,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:128",{"_index":1480,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:138",{"_index":1472,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:146",{"_index":1479,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:17",{"_index":2756,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":1464,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":2755,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":1465,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:27",{"_index":1485,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:28",{"_index":2760,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":2759,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:30",{"_index":1489,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:33",{"_index":1490,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":2758,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:36",{"_index":1462,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:41",{"_index":2757,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:45",{"_index":1488,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:46",{"_index":1487,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:53",{"_index":1476,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:66",{"_index":1473,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:75",{"_index":1474,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:81",{"_index":1482,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:90",{"_index":1483,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar/antenna",{"_index":1371,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/weath",{"_index":2724,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidenav",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{}}}],["sidenav.servic",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenavreloadsubscript",{"_index":2597,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["sidenavservic",{"_index":36,"title":{"injectables/SidenavService.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"overview.html":{}}}],["sidenv",{"_index":2503,"title":{},"body":{"injectables/SidenavService.html":{}}}],["similar",{"_index":3042,"title":{},"body":{"license.html":{}}}],["simplechang",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["singl",{"_index":3037,"title":{},"body":{"license.html":{}}}],["six",{"_index":2294,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["size",{"_index":404,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["sizeopt",{"_index":515,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["slider",{"_index":2288,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sm",{"_index":563,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["small",{"_index":2299,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["smallest",{"_index":2293,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sned",{"_index":1817,"title":{},"body":{"injectables/AuthService.html":{}}}],["softwar",{"_index":2952,"title":{},"body":{"license.html":{}}}],["solid",{"_index":484,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["sort",{"_index":673,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["sound",{"_index":989,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["soundingalarm",{"_index":1062,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["soundtoplay",{"_index":1200,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1554,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["span",{"_index":1523,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["special",{"_index":1548,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specif",{"_index":2384,"title":{},"body":{"components/OverviewComponent.html":{}}}],["specifi",{"_index":1552,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["spinner",{"_index":291,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":2133,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["spirit",{"_index":3043,"title":{},"body":{"license.html":{}}}],["spitz",{"_index":2297,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["src/.../alarm.t",{"_index":2892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/actions/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.t",{"_index":2793,"title":{},"body":{"coverage.html":{}}}],["src/app/actions/actions.module.t",{"_index":275,"title":{},"body":{"modules/ActionsModule.html":{}}}],["src/app/actions/buttons/buttons.component.t",{"_index":1924,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/actions/buttons/buttons.component.ts:18",{"_index":1929,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/buttons/buttons.component.ts:28",{"_index":1930,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/shelv",{"_index":2491,"title":{},"body":{"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.t",{"_index":2568,"title":{},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.t",{"_index":2502,"title":{},"body":{"injectables/SidenavService.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts:18",{"_index":2521,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:23",{"_index":2510,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:33",{"_index":2522,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:36",{"_index":2520,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:42",{"_index":2517,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:49",{"_index":2515,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:56",{"_index":2511,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:63",{"_index":2512,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:71",{"_index":2518,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:79",{"_index":2513,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:87",{"_index":2514,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/wiki",{"_index":2772,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antenna",{"_index":1310,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.module.t",{"_index":1367,"title":{},"body":{"modules/AntennasModule.html":{}}}],["src/app/antennas/antennas.service.t",{"_index":1380,"title":{},"body":{"injectables/AntennasService.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.service.ts:18",{"_index":1404,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:21",{"_index":1412,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:24",{"_index":1407,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:27",{"_index":1410,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:30",{"_index":1402,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:33",{"_index":1403,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:36",{"_index":1393,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:50",{"_index":1396,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:61",{"_index":1397,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:83",{"_index":1395,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:91",{"_index":1399,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas/antennas.component.t",{"_index":1344,"title":{},"body":{"components/AntennasComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:16",{"_index":1353,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:26",{"_index":1354,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:32",{"_index":1356,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/tests_fixtures.t",{"_index":2803,"title":{},"body":{"coverage.html":{}}}],["src/app/app",{"_index":1733,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":1568,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:117",{"_index":1609,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:138",{"_index":1590,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:150",{"_index":1610,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:160",{"_index":1606,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:168",{"_index":1608,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:181",{"_index":1594,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:210",{"_index":1604,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":1615,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":1630,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":1619,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":1626,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":1584,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":1617,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":1618,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:84",{"_index":1631,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:85",{"_index":1616,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":1628,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":1711,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":1763,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["src/app/auth/auth.module.t",{"_index":1793,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.t",{"_index":1795,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:117",{"_index":1829,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:140",{"_index":1832,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:150",{"_index":1824,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:163",{"_index":1825,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:176",{"_index":1818,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:188",{"_index":1835,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:195",{"_index":1836,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":1849,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:202",{"_index":1833,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:210",{"_index":1842,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:219",{"_index":1844,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:228",{"_index":1838,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:25",{"_index":1850,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:30",{"_index":1845,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:35",{"_index":1848,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:41",{"_index":1846,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:46",{"_index":1814,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:60",{"_index":1816,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:69",{"_index":1821,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:86",{"_index":1826,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.t",{"_index":2125,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:102",{"_index":2138,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:112",{"_index":2141,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:20",{"_index":2150,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:25",{"_index":2149,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:30",{"_index":2154,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:35",{"_index":2152,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:41",{"_index":2135,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:53",{"_index":2147,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:54",{"_index":2153,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":2139,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:75",{"_index":2137,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/building/build",{"_index":1905,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"coverage.html":{}}}],["src/app/building/building.module.t",{"_index":1903,"title":{},"body":{"modules/BuildingModule.html":{}}}],["src/app/data/alarm",{"_index":655,"title":{},"body":{"classes/AlarmConfig.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.t",{"_index":988,"title":{},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.ts:21",{"_index":999,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:24",{"_index":1001,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:27",{"_index":1003,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:30",{"_index":1005,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:33",{"_index":1007,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:40",{"_index":1009,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.t",{"_index":2817,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/cdb.service.t",{"_index":1931,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:15",{"_index":1951,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:20",{"_index":1949,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:25",{"_index":1939,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:39",{"_index":1947,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:50",{"_index":1946,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:58",{"_index":1940,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:72",{"_index":1944,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.t",{"_index":1965,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/http",{"_index":1987,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.t",{"_index":2066,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":2078,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":2075,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":2074,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":2084,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":2081,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":2077,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/user.service.t",{"_index":2676,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/data/user.service.ts:26",{"_index":2681,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/data/user.service.ts:40",{"_index":2682,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/health/health",{"_index":1975,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.t",{"_index":1973,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ia",{"_index":2024,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/map/fixtures.t",{"_index":2820,"title":{},"body":{"coverage.html":{}}}],["src/app/map/map.module.t",{"_index":2192,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/map/map.service.t",{"_index":2195,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/map/map.service.ts:19",{"_index":2200,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:44",{"_index":2204,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:7",{"_index":2198,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map/map.component.t",{"_index":2177,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map/map.component.ts:16",{"_index":2184,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:21",{"_index":2183,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:31",{"_index":2185,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/materi",{"_index":2212,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview",{"_index":2368,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.t",{"_index":2398,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.t",{"_index":2382,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":2387,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":2388,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.t",{"_index":2821,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/alarm",{"_index":298,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.t",{"_index":506,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:104",{"_index":526,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:108",{"_index":538,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:114",{"_index":553,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:12",{"_index":727,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:120",{"_index":557,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:125",{"_index":556,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:131",{"_index":560,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:137",{"_index":561,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:142",{"_index":565,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:147",{"_index":524,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:15",{"_index":728,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:161",{"_index":548,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:175",{"_index":547,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:18",{"_index":726,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:197",{"_index":539,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:21",{"_index":725,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:214",{"_index":541,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:24",{"_index":729,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:250",{"_index":543,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:27",{"_index":724,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:289",{"_index":545,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:297",{"_index":550,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:30",{"_index":722,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:57",{"_index":525,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:62",{"_index":536,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:67",{"_index":528,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:72",{"_index":529,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:78",{"_index":533,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:84",{"_index":532,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:89",{"_index":535,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:9",{"_index":723,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:94",{"_index":537,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:99",{"_index":531,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/fixtures.t",{"_index":2836,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/prop",{"_index":2404,"title":{},"body":{"components/PropsTableComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":2480,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/statu",{"_index":2533,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.t",{"_index":2095,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:15",{"_index":2110,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:18",{"_index":2109,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:21",{"_index":2123,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:24",{"_index":2111,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:27",{"_index":2122,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:30",{"_index":2121,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:33",{"_index":2113,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:36",{"_index":2115,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:39",{"_index":2117,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:42",{"_index":2119,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:45",{"_index":2107,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:51",{"_index":2108,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/table/fixtures.t",{"_index":2838,"title":{},"body":{"coverage.html":{}}}],["src/app/tabular/table/table.component.t",{"_index":2847,"title":{},"body":{"coverage.html":{}}}],["src/app/tabular/tabular",{"_index":2560,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/tabular.module.t",{"_index":2557,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/test_fixtures.t",{"_index":2849,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weath",{"_index":2683,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":2718,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/weather/weather.service.t",{"_index":2856,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weather/weather.component.t",{"_index":2696,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather/weather.component.ts:16",{"_index":2703,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:27",{"_index":2706,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:33",{"_index":2705,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.docker.t",{"_index":2858,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.t",{"_index":2860,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":323,"title":{"index.html":{},"license.html":{}},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["startanim",{"_index":310,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["startanimation(blinktim",{"_index":339,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["startup",{"_index":820,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":345,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["state.url",{"_index":1784,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["state_change_timestamp",{"_index":2322,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["statement",{"_index":2784,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":992,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{}}}],["station",{"_index":251,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["stationconfig",{"_index":2687,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["statu",{"_index":231,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":568,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["statusviewcompon",{"_index":230,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":2997,"title":{},"body":{"license.html":{}}}],["stop",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["stopanim",{"_index":311,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["storag",{"_index":1820,"title":{},"body":{"injectables/AuthService.html":{}}}],["storageitem",{"_index":2822,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":657,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["storeallowedact",{"_index":1810,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeallowedactions(allowed_act",{"_index":1837,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken",{"_index":1811,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken(token",{"_index":1841,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeus",{"_index":1812,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeuser(us",{"_index":1843,"title":{},"body":{"injectables/AuthService.html":{}}}],["stream",{"_index":1026,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{},"coverage.html":{}}}],["streamnam",{"_index":1090,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["string",{"_index":430,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["string(count",{"_index":1669,"title":{},"body":{"components/AppComponent.html":{}}}],["structur",{"_index":886,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":887,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subalarm",{"_index":1533,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["subclass",{"_index":2970,"title":{},"body":{"license.html":{}}}],["subcompon",{"_index":1925,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["subscrib",{"_index":1913,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["subscript",{"_index":1486,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["subscriptionlik",{"_index":1493,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["subsubtre",{"_index":881,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subsystem",{"_index":2370,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subtre",{"_index":807,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtree[childid",{"_index":883,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtreeisempti",{"_index":884,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["succesful",{"_index":1781,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["succesfulli",{"_index":2636,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["success",{"_index":1831,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["successfulli",{"_index":2592,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["such",{"_index":1285,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"license.html":{}}}],["sudo",{"_index":2916,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":3022,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1542,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summari",{"_index":1411,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'nam",{"_index":192,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.compon",{"_index":1379,"title":{},"body":{"modules/AntennasModule.html":{},"modules/BuildingModule.html":{},"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.html",{"_index":1544,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.scss",{"_index":1543,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.t",{"_index":1541,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:108",{"_index":1910,"title":{},"body":{"components/BuildingSummaryComponent.html":{}}}],["summary.component.ts:111",{"_index":1978,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:15",{"_index":1547,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:18",{"_index":2765,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:19",{"_index":1914,"title":{},"body":{"components/BuildingSummaryComponent.html":{}}}],["summary.component.ts:22",{"_index":1915,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:25",{"_index":1559,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:27",{"_index":2769,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:28",{"_index":1976,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:33",{"_index":1557,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:35",{"_index":2767,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":1560,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:42",{"_index":1912,"title":{},"body":{"components/BuildingSummaryComponent.html":{}}}],["summary.component.ts:44",{"_index":2766,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:45",{"_index":1980,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:50",{"_index":1916,"title":{},"body":{"components/BuildingSummaryComponent.html":{}}}],["summary.component.ts:51",{"_index":2768,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:53",{"_index":1981,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:55",{"_index":1550,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:61",{"_index":1911,"title":{},"body":{"components/BuildingSummaryComponent.html":{}}}],["summary.component.ts:62",{"_index":1558,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:64",{"_index":1979,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:76",{"_index":1909,"title":{},"body":{"components/BuildingSummaryComponent.html":{}}}],["summary.component.ts:79",{"_index":1977,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary/antenna",{"_index":1378,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["summary/build",{"_index":1904,"title":{},"body":{"modules/BuildingModule.html":{},"components/BuildingSummaryComponent.html":{},"coverage.html":{}}}],["summary/health",{"_index":1974,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weath",{"_index":2721,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary_url",{"_index":1428,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["supplement",{"_index":2962,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":2990,"title":{},"body":{"license.html":{}}}],["support",{"_index":382,"title":{},"body":{"components/AlarmCardComponent.html":{},"modules.html":{}}}],["svg",{"_index":2738,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"modules.html":{}}}],["svgicon",{"_index":1621,"title":{},"body":{"components/AppComponent.html":{}}}],["svgpath",{"_index":2201,"title":{},"body":{"injectables/MapService.html":{}}}],["system",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["t.valu",{"_index":2638,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["tabl",{"_index":620,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/PropsTableComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["table'},{'nam",{"_index":221,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["table.compon",{"_index":2490,"title":{},"body":{"modules/SharedModule.html":{}}}],["table.component.html",{"_index":2408,"title":{},"body":{"components/PropsTableComponent.html":{}}}],["table.component.scss",{"_index":2407,"title":{},"body":{"components/PropsTableComponent.html":{}}}],["table.component.t",{"_index":2406,"title":{},"body":{"components/PropsTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:17",{"_index":2409,"title":{},"body":{"components/PropsTableComponent.html":{}}}],["table.component.ts:27",{"_index":2410,"title":{},"body":{"components/PropsTableComponent.html":{}}}],["table.svg",{"_index":1649,"title":{},"body":{"components/AppComponent.html":{}}}],["table/prop",{"_index":2405,"title":{},"body":{"components/PropsTableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["table/table.compon",{"_index":2559,"title":{},"body":{"modules/TabularModule.html":{}}}],["tablecompon",{"_index":233,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tableid",{"_index":1451,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":2861,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":2424,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":2437,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":235,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":1757,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular",{"_index":1744,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular.modul",{"_index":1375,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{}}}],["tabularmodul",{"_index":1366,"title":{"modules/TabularModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcompon",{"_index":234,"title":{"components/TabularViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":619,"title":{},"body":{"components/AlarmComponent.html":{},"components/StatusViewComponent.html":{}}}],["taken",{"_index":3012,"title":{},"body":{"license.html":{}}}],["target",{"_index":1137,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["targetanimationst",{"_index":1242,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["td",{"_index":1534,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/PropsTableComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":3006,"title":{},"body":{"license.html":{}}}],["term",{"_index":2960,"title":{},"body":{"license.html":{}}}],["terrain",{"_index":2305,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["test",{"_index":2287,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"index.html":{}}}],["text",{"_index":381,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["textclass",{"_index":600,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["textclass.push('clear",{"_index":606,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["textclass.push('mainten",{"_index":605,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["textclass.push('reli",{"_index":603,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["textclass.push('set",{"_index":607,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["textclass.push('shelv",{"_index":604,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["textclass.push('unknown",{"_index":602,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["textclass.push('unreli",{"_index":601,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["th",{"_index":756,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/PropsTableComponent.html":{}}}],["this._getsubtree(childalarm",{"_index":882,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._getsubtree(this.selectedalarm",{"_index":871,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._initi",{"_index":1419,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this._starttimer(blinktime).subscrib",{"_index":372,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this._stoptim",{"_index":374,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this.acklist",{"_index":930,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":933,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.actionssidenavservice.canclos",{"_index":1656,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.clos",{"_index":1652,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.setsidenav(this.actionssidenav",{"_index":1651,"title":{},"body":{"components/AppComponent.html":{}}}],["this.add_or_update_alarm(alarm",{"_index":1166,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.add_or_update_alarm(alarm.asalarm(object.assign",{"_index":1223,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarm",{"_index":126,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.ack",{"_index":130,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.alarm.core_id",{"_index":479,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.mod",{"_index":464,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.shelv",{"_index":354,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.showasmainten",{"_index":466,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.state_change_timestamp",{"_index":128,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.alarm.valid",{"_index":476,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valu",{"_index":468,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.value_change_timestamp",{"_index":358,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this.alarm_id",{"_index":684,"title":{},"body":{"classes/AlarmConfig.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmchangestream.next(ani",{"_index":1075,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmchangesubscript",{"_index":1498,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmchangesubscription.unsubscrib",{"_index":1502,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmconfig",{"_index":1918,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["this.alarmconfig[0",{"_index":1919,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["this.alarmiconspriorityset",{"_index":2552,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsset",{"_index":2342,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["this.alarmiconsunreliableset",{"_index":2343,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["this.alarmnam",{"_index":453,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarmnamemaxs",{"_index":481,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["this.alarms.push(alarm",{"_index":2332,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["this.alarmsarray",{"_index":1217,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray.push(alarm",{"_index":1183,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[alarm.core_id",{"_index":1179,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[core_id",{"_index":1120,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmservice.alarmchangestream",{"_index":2614,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.alarmchangestream.subscrib",{"_index":1499,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.get(alarm_id",{"_index":1512,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.get(childid",{"_index":878,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":2647,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(this.alarmconfig[0].alarm_id",{"_index":1920,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.stationconfig.alarm_id",{"_index":2753,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.alarmservice.getalarm(conf[0",{"_index":1565,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.alarmservice.getalarm(this.selectedantenna",{"_index":1506,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.getalarm(this.stationconfig",{"_index":2695,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{}}}],["this.alarmservice.getname(selectedantenna",{"_index":1521,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.getshelveregistries(this.alarm_id",{"_index":2655,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.initi",{"_index":1650,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.isalarmindexavail",{"_index":2618,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.shelvealarm",{"_index":2665,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":2671,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmsindex",{"_index":1122,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsindexes[alarm.core_id",{"_index":1184,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":934,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.antennaclicked.emit(this.selectedantenna",{"_index":1515,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennaimageset",{"_index":1435,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennaimageunreliableset",{"_index":1442,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennasconfig",{"_index":1424,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennasmapnam",{"_index":1433,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennasservice.antennasconfig",{"_index":1513,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.antennassummaryconfig",{"_index":1563,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.antennasservice.devicesconfig",{"_index":1514,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.initi",{"_index":1497,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["this.antennassummaryconfig",{"_index":1431,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.audio",{"_index":1081,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.addeventlistener('end",{"_index":1203,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.load",{"_index":1206,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.paus",{"_index":1195,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.play",{"_index":1207,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.src",{"_index":1202,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.getallowedactions()['can_shelv",{"_index":2625,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.getallowedactions()['can_unshelv",{"_index":2627,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.gettoken",{"_index":1110,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["this.authservice.getus",{"_index":1659,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.authservice.hasvalidtoken().pipe(map((respons",{"_index":1786,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.authservice.login",{"_index":2162,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginstatu",{"_index":1078,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.loginstatusstream.subscrib",{"_index":1071,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["this.authservice.logout",{"_index":1660,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.redirecturl",{"_index":1787,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["this.blinkingclass",{"_index":458,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.blinkingstatus.emit(blink",{"_index":585,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.blinkingstatus.emit(fals",{"_index":373,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this.blinkingstatus.emit(tru",{"_index":370,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this.blinkingtim",{"_index":371,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this.blinkingtimer.unsubscrib",{"_index":376,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this.buildfiletree(tree_data",{"_index":852,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":896,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buttontooltiptext",{"_index":2499,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.canacknowledg",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":2664,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.cansound",{"_index":1080,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.getbroadcastthreshold",{"_index":1232,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.initi",{"_index":1079,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdref.detectchang",{"_index":459,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.changealarms('al",{"_index":1170,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms(alarm.core_id",{"_index":1167,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changeloginstatus(fals",{"_index":1856,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.changeloginstatus(tru",{"_index":1868,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.check_request_and_reload",{"_index":2610,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":928,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":920,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":913,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(descend",{"_index":918,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":926,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscrib",{"_index":830,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":931,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":927,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":919,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":925,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklogin(url",{"_index":1785,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.childrenid",{"_index":1503,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.childrenids.push(child.alarm_id",{"_index":1505,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.clearsoundsifack(alarm",{"_index":1189,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.clos",{"_index":2527,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.connect",{"_index":1082,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(fals",{"_index":1235,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(tru",{"_index":1084,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.subscrib",{"_index":1069,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustim",{"_index":1230,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustimer.unsubscrib",{"_index":1231,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.coord",{"_index":2741,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["this.countbyview",{"_index":1172,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.currentclass",{"_index":455,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.currentclass[1",{"_index":586,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.currentimag",{"_index":581,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.currenttextclass",{"_index":583,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.currenttim",{"_index":1204,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.custom_nam",{"_index":683,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["this.datasourc",{"_index":828,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.datasource.data",{"_index":851,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.dateformat",{"_index":747,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.definealarmsandicon",{"_index":1917,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimag",{"_index":2338,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["this.dependenciesid",{"_index":1508,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.destroy",{"_index":1073,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.devicesconfig",{"_index":1426,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.disableblink",{"_index":353,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":1644,"title":{},"body":{"components/AppComponent.html":{}}}],["this.elementref.nativeelement.children[0",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.emitsound(alarm.sound",{"_index":1196,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.errormessag",{"_index":2155,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":907,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.focusmonitor.stopmonitoring(buttonref",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.form",{"_index":2605,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.form.get('message').value).subscrib",{"_index":2672,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.form.valid",{"_index":2629,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.formbuilder.group",{"_index":2160,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formgroup",{"_index":2159,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.password.valu",{"_index":2164,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.user.valu",{"_index":2163,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.generatealarmslist",{"_index":2333,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["this.get(alarm_id",{"_index":1151,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.get(config.alarm_id",{"_index":1124,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.get(id",{"_index":1133,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmlist",{"_index":1085,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmnam",{"_index":454,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.getbuttontooltiptext",{"_index":2500,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.getcanacknowledg",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.getchildren",{"_index":825,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getclass",{"_index":456,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.getconfigurationdata().subscribe((r",{"_index":1952,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getconnectionpath",{"_index":1102,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.gethttphead",{"_index":1860,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["this.getimag",{"_index":582,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.getlevel",{"_index":823,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmockalarm",{"_index":2331,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["this.gettextclass",{"_index":584,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.gettoken",{"_index":1854,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettreedata",{"_index":850,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getus",{"_index":1672,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hidespinn",{"_index":2667,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.http.delete(this.read_url(url",{"_index":2022,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(this.read_url(url",{"_index":2019,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(url",{"_index":1859,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.read_url(url",{"_index":2020,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(url",{"_index":1873,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(this.read_url(url",{"_index":2021,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclient.get(summary_url).subscribe((respons",{"_index":1430,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["this.httpclient.get(url",{"_index":1434,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.httpclient.get(url).subscribe((respons",{"_index":1423,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.httpclientservice.get(backendurls.users_list",{"_index":2680,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":1956,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(url).pip",{"_index":1141,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.post(backendurls.shelve_api",{"_index":1148,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.tickets_multiple_ack",{"_index":1131,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.unshelve_api",{"_index":1154,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.iasconfigur",{"_index":1953,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(tru",{"_index":1955,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1922,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1923,"title":{},"body":{"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["this.imag",{"_index":590,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.imagesunreli",{"_index":591,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.imagesunreliable.unknown",{"_index":588,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.initi",{"_index":1072,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isexpand",{"_index":824,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isiniti",{"_index":1077,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isnavigationcompact",{"_index":1658,"title":{},"body":{"components/AppComponent.html":{}}}],["this.istextalarm",{"_index":587,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.isvalidiasio(json",{"_index":2090,"title":{},"body":{"classes/Iasio.html":{}}}],["this.labelmod",{"_index":613,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.lastalarmid",{"_index":2530,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.loadalarmsconfig",{"_index":1420,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["this.loadimag",{"_index":1421,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.loginstatu",{"_index":1852,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginstatusstream.next(statu",{"_index":1853,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logout",{"_index":1871,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.maticonregistri",{"_index":1642,"title":{},"body":{"components/AppComponent.html":{}}}],["this.maxblinkinterv",{"_index":361,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this.messag",{"_index":2601,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.message.reset",{"_index":2649,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.message.valu",{"_index":2662,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.nestednodemap.get(nod",{"_index":902,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":903,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":901,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":908,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.optionalalarmnam",{"_index":478,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.parammapsubscript",{"_index":2606,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.parammapsubscription.unsubscrib",{"_index":2619,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.password",{"_index":2158,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.password.seterrors({'incorrect",{"_index":2172,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.play",{"_index":1205,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.playalarmsound(alarm",{"_index":1187,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.prioritytext",{"_index":977,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["this.readalarmmessage(payload.act",{"_index":1093,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessageslist(payload.data",{"_index":1097,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readcountbyviewmessage(payload.data",{"_index":1100,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.reload",{"_index":2613,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.removeallowedact",{"_index":1895,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removetoken",{"_index":1880,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removeus",{"_index":1881,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.requestshelveinfo",{"_index":2648,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.requeststatu",{"_index":2634,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.resetcountbyview",{"_index":1087,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.resettim",{"_index":1092,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.route.parammap",{"_index":2607,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.router.navigate(['/login",{"_index":1789,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.router.navigate(['/tabular",{"_index":2441,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['antenna",{"_index":2442,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['weath",{"_index":2443,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate([redirect",{"_index":2166,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([{outlet",{"_index":1653,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{}}}],["this.routing.gotoantenna",{"_index":1567,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.routing.gotoweath",{"_index":2771,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1566,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.routingservice.cleanactionoutlet",{"_index":2526,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoacknowledge(alarm_id",{"_index":2529,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoshelve(alarm_id",{"_index":2532,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.selectedalarm",{"_index":835,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedalarm.alarm_id",{"_index":2761,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedantenna",{"_index":1357,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.alarm_id",{"_index":1520,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.children",{"_index":1504,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.placemark",{"_index":1516,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedst",{"_index":2707,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.seterrormessage(error",{"_index":2168,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.shelv",{"_index":2653,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shelvedatmessag",{"_index":2604,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shouldreload.next(tru",{"_index":2531,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.showactionbadg",{"_index":451,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.showaspendingack",{"_index":450,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.showasshelv",{"_index":452,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.showspinn",{"_index":2661,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.showtextoptions.indexof(this.showtext",{"_index":976,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["this.sidenav",{"_index":2523,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.clos",{"_index":2525,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.open",{"_index":2524,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.toggl",{"_index":2528,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenavreloadsubscript",{"_index":2611,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavreloadsubscription.unsubscrib",{"_index":2620,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.canclos",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.closeandclean",{"_index":2621,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.gotoacknowledge(this.alarm.core_id",{"_index":132,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.sidenavservice.gotoshelve(this.alarm.core_id",{"_index":2501,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.sidenavservice.open",{"_index":2615,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.shouldreload",{"_index":2612,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sizeoptions.indexof(this.s",{"_index":580,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["this.soundingalarm",{"_index":1194,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.spinnerservice.hid",{"_index":2167,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.spinnerservice.show",{"_index":2161,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.startanimation(blinkinterv",{"_index":368,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this.stationconfig.alarm_id",{"_index":2762,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.stopanim",{"_index":363,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["this.storeallowedactions(allowed_act",{"_index":1867,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storetoken(token",{"_index":1878,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(user_data['usernam",{"_index":1866,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(usernam",{"_index":1879,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tableid",{"_index":1507,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.targetanimationst",{"_index":1267,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["this.text",{"_index":612,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.timeout",{"_index":2602,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.reset(this.defaulttimeout",{"_index":2650,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.valu",{"_index":2663,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.value).viewvalu",{"_index":2639,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts.find(t",{"_index":2637,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts[0].valu",{"_index":2587,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timezon",{"_index":749,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.treecontrol",{"_index":826,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":911,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":821,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.triggeralarmsnonvalidconnectionst",{"_index":1070,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.unshelv",{"_index":2652,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.updateacklist",{"_index":831,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.updatechildrenid",{"_index":1501,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.updatedata",{"_index":832,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.updatetableid",{"_index":1500,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.url",{"_index":2778,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.url.match(/^https?:\\/\\//i",{"_index":2779,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.us",{"_index":2156,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.user.seterrors({'incorrect",{"_index":2171,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user_select",{"_index":2666,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.userservice.requestuserslist",{"_index":1655,"title":{},"body":{"components/AppComponent.html":{}}}],["this.weatherservice.initi",{"_index":2770,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.websocketbridge.connect(connectionpath",{"_index":1103,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.alarm",{"_index":1088,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.count",{"_index":1098,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.upd",{"_index":1095,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.listen(connectionpath",{"_index":1104,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.addeventlisten",{"_index":1083,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.clos",{"_index":1114,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.stream(streams.updates).send",{"_index":1113,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["thorugh",{"_index":2417,"title":{},"body":{"injectables/RoutingService.html":{}}}],["those",{"_index":2223,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["threshold",{"_index":1945,"title":{},"body":{"injectables/CdbService.html":{}}}],["through",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["ticket",{"_index":1136,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["tile",{"_index":1238,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["tile'},{'nam",{"_index":179,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tile.compon",{"_index":2486,"title":{},"body":{"modules/SharedModule.html":{}}}],["tile.component.html",{"_index":1240,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.scss",{"_index":1239,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.t",{"_index":1237,"title":{},"body":{"components/AlarmTileComponent.html":{},"coverage.html":{}}}],["tile.component.ts:105",{"_index":1259,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:121",{"_index":1258,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:134",{"_index":1255,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:154",{"_index":1256,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:171",{"_index":1257,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:19",{"_index":1245,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:24",{"_index":1248,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:29",{"_index":1250,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:35",{"_index":1252,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:40",{"_index":1246,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:45",{"_index":1251,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:50",{"_index":1253,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:55",{"_index":1254,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:60",{"_index":1247,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:65",{"_index":1263,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:70",{"_index":1262,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:75",{"_index":1261,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:80",{"_index":1265,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:85",{"_index":1260,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:90",{"_index":1244,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile/alarm",{"_index":1236,"title":{},"body":{"components/AlarmTileComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["tile/fixtures.t",{"_index":2831,"title":{},"body":{"coverage.html":{}}}],["time",{"_index":331,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmTooltipComponent.html":{},"license.html":{}}}],["timediff",{"_index":359,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["timeout",{"_index":1146,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["timeoutopt",{"_index":2567,"title":{"interfaces/TimeoutOption.html":{}},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["timer",{"_index":330,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"classes/AlarmSounds.html":{}}}],["timer'",{"_index":1224,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timestamp",{"_index":1045,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timezon",{"_index":737,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["titl",{"_index":759,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["todo",{"_index":1640,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["togeth",{"_index":3013,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":214,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["toggledefault",{"_index":2367,"title":{},"body":{"components/MaterialToggleColorsComponent.html":{}}}],["toggleshelveunshelv",{"_index":2651,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["togglesidenav",{"_index":1581,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":1109,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["token_storage_nam",{"_index":1800,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar",{"_index":1678,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":418,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{}}}],["tooltip'},{'nam",{"_index":181,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tooltip.compon",{"_index":2485,"title":{},"body":{"modules/SharedModule.html":{}}}],["tooltip.component.html",{"_index":1289,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":1288,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.t",{"_index":1276,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"coverage.html":{}}}],["tooltip.component.ts:32",{"_index":1291,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:37",{"_index":1292,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:40",{"_index":1294,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:43",{"_index":1290,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:54",{"_index":1293,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip/alarm",{"_index":1275,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["tooltipdirect",{"_index":396,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/StatusViewComponent.html":{}}}],["tooltipdirectionopt",{"_index":1243,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["top",{"_index":492,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/TabularViewComponent.html":{}}}],["top:0",{"_index":2763,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["transform",{"_index":494,"title":{},"body":{"components/AlarmCardComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{}}}],["transit",{"_index":366,"title":{},"body":{"components/AlarmBlinkComponent.html":{}}}],["transpar",{"_index":721,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":165,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":285,"title":{},"body":{"modules/ActionsModule.html":{}}}],["tree.component.html",{"_index":788,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":789,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":766,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":935,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":936,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":772,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":773,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":771,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":284,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree/fixtures.t",{"_index":2789,"title":{},"body":{"coverage.html":{}}}],["tree_data",{"_index":849,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[this.selectedalarm.core_id",{"_index":870,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":809,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":811,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":1957,"title":{},"body":{"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{}}}],["trigger",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["triggeralarmsnonvalidconnectionst",{"_index":1220,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["true",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WikiButtonComponent.html":{}}}],["type",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialColorsComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["type1",{"_index":994,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["type2",{"_index":995,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type3",{"_index":996,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type4",{"_index":997,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["typeof",{"_index":894,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unack",{"_index":1598,"title":{},"body":{"components/AppComponent.html":{}}}],["unblock",{"_index":2673,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["uncombin",{"_index":3038,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":893,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["under",{"_index":1219,"title":{},"body":{"classes/AlarmSounds.html":{},"index.html":{},"license.html":{}}}],["uniqu",{"_index":2678,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["unit",{"_index":2934,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":573,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["unknown.svg",{"_index":1440,"title":{},"body":{"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["unreali",{"_index":1249,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["unreli",{"_index":462,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["unselect",{"_index":1481,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["unselectantenna",{"_index":1457,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["unselecteddescend",{"_index":917,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unset",{"_index":981,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{}}}],["unshelv",{"_index":2496,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["unshelvealarms(alarms_id",{"_index":1153,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["unsubscrib",{"_index":336,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["updat",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["updateacklist",{"_index":929,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updatechildrenid",{"_index":1458,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["updatedata",{"_index":848,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updateselectedantenna",{"_index":1352,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updateselectedantenna(selectedantenna",{"_index":1355,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updatetableid",{"_index":1459,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["uppercas",{"_index":495,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{}}}],["url",{"_index":542,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["url('https://material.angular.io/assets/img/examples/shiba1.jpg",{"_index":2346,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["us",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":1116,"title":{"interfaces/User.html":{}},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{}}}],["user'",{"_index":3027,"title":{},"body":{"license.html":{}}}],["user.servic",{"_index":1967,"title":{},"body":{"modules/DataModule.html":{}}}],["user_data",{"_index":1863,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_select",{"_index":2589,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["user_storage_nam",{"_index":1801,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernam",{"_index":1607,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userservic",{"_index":1576,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"modules/DataModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalu",{"_index":1727,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":2981,"title":{},"body":{"license.html":{}}}],["v",{"_index":890,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":1023,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["valid.svg",{"_index":1984,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["validators.requir",{"_index":2157,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validity.unreli",{"_index":1222,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{}}}],["valu",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.clear",{"_index":469,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_crit",{"_index":475,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_high",{"_index":473,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_low",{"_index":470,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_medium",{"_index":472,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value[k",{"_index":891,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["value_change_timestamp",{"_index":2323,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["value_change_transit",{"_index":2324,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["var",{"_index":159,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":318,"title":{},"body":{"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"coverage.html":{}}}],["verbatim",{"_index":2958,"title":{},"body":{"license.html":{}}}],["veri",{"_index":2302,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["verifi",{"_index":1765,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["version",{"_index":2900,"title":{},"body":{"index.html":{},"license.html":{}}}],["vertic",{"_index":497,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/PropsTableComponent.html":{}}}],["via",{"_index":2935,"title":{},"body":{"index.html":{}}}],["view",{"_index":664,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'nam",{"_index":232,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":1746,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":2535,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.html",{"_index":2536,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.scss",{"_index":2562,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.t",{"_index":2534,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":2563,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:19",{"_index":2540,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:22",{"_index":2543,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.ts:25",{"_index":2551,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:28",{"_index":2549,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:31",{"_index":2550,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:34",{"_index":2548,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:40",{"_index":2541,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:45",{"_index":2539,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:55",{"_index":2545,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:62",{"_index":2544,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view/statu",{"_index":2483,"title":{},"body":{"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"coverage.html":{}}}],["view/tabular",{"_index":1745,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["viewbox",{"_index":1320,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{}}}],["viewchild",{"_index":1632,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('actionssidenav",{"_index":1614,"title":{},"body":{"components/AppComponent.html":{}}}],["viewvalu",{"_index":2570,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["visibl",{"_index":627,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["visual",{"_index":87,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["void",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["warn",{"_index":2217,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["weather",{"_index":237,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather'},{'nam",{"_index":241,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather.component.html",{"_index":2700,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":2699,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":2694,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["weather.svg",{"_index":1647,"title":{},"body":{"components/AppComponent.html":{}}}],["weather/weather.compon",{"_index":2723,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.modul",{"_index":1725,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weather/weather/weather.compon",{"_index":1747,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["weatherbackupwsmarkercompon",{"_index":236,"title":{"components/WeatherBackupWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercompon",{"_index":240,"title":{"components/WeatherComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdatamarkercompon",{"_index":242,"title":{"components/WeatherDataMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermap",{"_index":2698,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermapcompon",{"_index":244,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermodul",{"_index":1710,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherprimarywsconnectorcompon",{"_index":245,"title":{"components/WeatherPrimaryWsConnectorComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherprimarywsmarkercompon",{"_index":248,"title":{"components/WeatherPrimaryWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservic",{"_index":2686,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherset",{"_index":2823,"title":{},"body":{"coverage.html":{}}}],["weathersidebar",{"_index":2697,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathersidebarcompon",{"_index":249,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherstationsidebarcompon",{"_index":250,"title":{"components/WeatherStationSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummarycompon",{"_index":252,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["webserv",{"_index":1043,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{}}}],["websocket",{"_index":1044,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websocketbridg",{"_index":1018,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["weight",{"_index":486,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["well",{"_index":2303,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["wether",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["whatev",{"_index":2998,"title":{},"body":{"license.html":{}}}],["whenev",{"_index":834,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{}}}],["whether",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["width",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikbuttoncompon",{"_index":1926,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["wiki",{"_index":254,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikibuttoncompon",{"_index":253,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["window",{"_index":2777,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["window.open(this.url",{"_index":2780,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["without",{"_index":2986,"title":{},"body":{"license.html":{}}}],["word",{"_index":1556,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/PropsTableComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":2966,"title":{},"body":{"license.html":{}}}],["worth",{"_index":2399,"title":{},"body":{"modules/OverviewModule.html":{}}}],["wrap",{"_index":622,"title":{},"body":{"components/AlarmComponent.html":{},"components/PropsTableComponent.html":{}}}],["wrapper",{"_index":1680,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewCardComponent.html":{}}}],["wrong",{"_index":2440,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":239,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmBlinkComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/BuildingSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/PropsTableComponent.html":{},"components/SandboxAlarmCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["x",{"_index":763,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["xs",{"_index":562,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["y",{"_index":762,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["yellow",{"_index":471,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["yum",{"_index":2917,"title":{},"body":{"index.html":{}}}],["z",{"_index":1270,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/OverviewCardComponent.html":{}}}],["zero",{"_index":1668,"title":{},"body":{"components/AppComponent.html":{},"components/LegendComponent.html":{}}}],["zone.j",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":272,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BuildingModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ./ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canAcknowledge\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCanAcknowledge\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack-button/ack-button.component.ts:25\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCanAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCanAcknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Defines whether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the inputs of the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the changes in the Inputs of the component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Initializes the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Handle click on ack button, it triggers ack sidenav through the Router service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canAcknowledge:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:25\n                            \n                        \n\n                \n                    \n                        Defines wether or not the Acknowledge can be performed\nIt is updated when there are changes in the alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, AfterViewInit, Input, ElementRef, SimpleChanges } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit, OnChanges, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n  * Defines wether or not the Acknowledge can be performed\n  * It is updated when there are changes in the alarm\n  */\n  canAcknowledge = true;\n\n  /**\n   * Builds an instance of the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initializes the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method to handle the changes on the inputs of the component\n  * @param {SimpleChanges} changes Object containing the changes in the Inputs of the component\n  */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.alarm && changes.alarm.previousValue !== changes.alarm.currentValue) {\n      this.canAcknowledge = this.getCanAcknowledge();\n    }\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   * @return {boolean} true if the {@link Alarm} can be acknowledged, false if not.\n   */\n  getCanAcknowledge(): boolean {\n    if (this.alarm != null && this.alarm.state_change_timestamp > 0) {\n      return !this.alarm.ack;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Defines whether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled(): boolean {\n    return !this.sidenavService.canClose || !this.canAcknowledge;\n  }\n\n  /**\n  * Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n  */\n  onClick() {\n    this.sidenavService.goToAcknowledge(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./ack-button.component.css\n                \n                .ack-button {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 2px;\n  margin-right: 4px;\n  margin-left: 4px;\n  border-radius: 24px;\n  min-width: 1px;\n  width: 32px;\n  height: 32px;\n}\n\n.ack-button-icon {\n  width: 21px;\n  margin: auto;\n}\n\n.mat-flat-button {\n  line-height: 28px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/actions/actions.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AckButtonComponent\n                        \n                        \n                            AckComponent\n                        \n                        \n                            AckTreeComponent\n                        \n                        \n                            ButtonsComponent\n                        \n                        \n                            ShelveButtonComponent\n                        \n                        \n                            ShelveComponent\n                        \n                        \n                            WikiButtonComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SidenavService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AckButtonComponent\n                        \n                        \n                            AckComponent\n                        \n                        \n                            ButtonsComponent\n                        \n                        \n                            ShelveButtonComponent\n                        \n                        \n                            ShelveComponent\n                        \n                        \n                            WikiButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AckComponent } from './ack/ack.component';\nimport { ShelveComponent } from './shelve/shelve.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidenavService } from './sidenav.service';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AckComponent,\n    AckTreeComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ],\n  providers: [\n    SidenavService,\n  ],\n  exports: [\n    AckButtonComponent,\n    AckComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ]\n})\nexport class ActionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmBlinkComponent.html":{"url":"components/AlarmBlinkComponent.html","title":"component - AlarmBlinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmBlinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-blink/alarm-blink.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to manage the blinking animation on different components\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-blink\n            \n\n            \n                styleUrls\n                ./alarm-blink.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alarm-blink.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                blinkingTimer\n                            \n                            \n                                maxBlinkInterval\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _startTimer\n                            \n                            \n                                _stopTimer\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                startAnimation\n                            \n                            \n                                    Public\n                                stopAnimation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                disableBlink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blinkingStatus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:38\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableBlink\n                    \n                    \n                        Variable to enable animation\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blinkingStatus\n                    \n                    \n                        Event emitted to notify when the alarm should start or stop blinking\n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _startTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n_startTimer(time: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:137\n                            \n                        \n\n\n                \n                    \n                            Internal method to start the timer for the animation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the time in milliseconds after which the timer should finish\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _stopTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n_stopTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            Internal method to stop (unsubscribe from) the timer\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the alarm values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the changes in the Inputs of the component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startAnimation(blinkTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Method to start the blinking animation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        blinkTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the time in milliseconds for which the alarm should blink\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stopAnimation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Method to go to the normal state to stop the animation\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            blinkingTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blinkingTimer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:33\n                            \n                        \n\n                \n                    \n                        Blinking timer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxBlinkInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxBlinkInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-blink/alarm-blink.component.ts:38\n                            \n                        \n\n                \n                    \n                        Maximum blikining time in miliseconds\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, OnChanges, Input, Output, SimpleChanges } from '@angular/core';\nimport { interval, Observable } from 'rxjs';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Component used to manage the blinking animation on different components\n */\n@Component({\n  selector: 'app-alarm-blink',\n  templateUrl: './alarm-blink.component.html',\n  styleUrls: ['./alarm-blink.component.css']\n})\nexport class AlarmBlinkComponent implements OnInit, OnChanges {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n  * Variable to enable animation\n  */\n  @Input() disableBlink = false;\n\n  /**\n  * Event emitted to notify when the alarm should start or stop blinking\n  */\n  @Output() blinkingStatus = new EventEmitter();\n\n  /**\n  * Blinking timer\n  */\n  public blinkingTimer: any;\n\n  /**\n  * Maximum blikining time in miliseconds\n  */\n  maxBlinkInterval = 10000;\n\n  /**\n  * Builds a new instance\n  */\n  constructor(\n  ) { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n  }\n\n  /**\n  * Method to handle the changes on the alarm values\n  * @param {SimpleChanges} changes Object containing the changes in the Inputs of the component\n  */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.disableBlink) {\n      return;\n    }\n\n    if (this.alarm) {\n      if (this.alarm.shelved) {\n        return;\n      }\n      const currentTime = (new Date).getTime();\n      const lastChange = this.alarm.value_change_timestamp;\n      const timeDiff = currentTime - lastChange;\n      let blinkInterval = this.maxBlinkInterval;\n\n      if ( timeDiff >= 0) {\n        blinkInterval = this.maxBlinkInterval - timeDiff;\n        if (blinkInterval  0) && (currentAlarmValue === 0) ) {\n        this.stopAnimation();\n        return;\n      }\n      // clear to set transition\n      if ( (previousAlarmValue === 0) && (currentAlarmValue > 0) ) {\n        this.startAnimation(blinkInterval);\n        return;\n      }\n      // set to different priority transition\n      if ( (previousAlarmValue > 0) && (currentAlarmValue > 0) && (previousAlarmValue !== currentAlarmValue)) {\n        this.startAnimation(blinkInterval);\n        return;\n      }\n    }\n  }\n\n  /**\n  * Method to start the blinking animation\n  * @param {number} blinkTime the time in milliseconds for which the alarm should blink\n  */\n  public startAnimation(blinkTime: number): void {\n    this.blinkingStatus.emit(true);\n    this.blinkingTimer = this._startTimer(blinkTime).subscribe( () => {\n      this.stopAnimation();\n    });\n  }\n\n\n  /**\n  * Method to go to the normal state to stop the animation\n  */\n  public stopAnimation(): void {\n    this.blinkingStatus.emit(false);\n    this._stopTimer();\n  }\n\n  /**\n  * Internal method to start the timer for the animation\n  * @param {number} time the time in milliseconds after which the timer should finish\n  */\n  _startTimer(time: number): Observable {\n    return interval(time);\n  }\n\n  /**\n  * Internal method to stop (unsubscribe from) the timer\n  */\n  _stopTimer(): void {\n    if (this.blinkingTimer) {\n      this.blinkingTimer.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./alarm-blink.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmBlinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmCardComponent.html":{"url":"components/AlarmCardComponent.html","title":"component - AlarmCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-card/alarm-card.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as cards with text support for the\npriority of the alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-card\n            \n\n            \n                styleUrls\n                ./alarm-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarmName\n                            \n                            \n                                blinkingClass\n                            \n                            \n                                currentClass\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeBlinkingState\n                            \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                disableBlink\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-card/alarm-card.component.ts:71\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for change detection in html\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value : 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableBlink\n                    \n                    \n                        Variable to disable animation\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeBlinkingState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeBlinkingState(blinking: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Function executed to change the blinking state according to a boolean parameter\nIt is executed when the inner AlarmBlinkComponent emits a value on its\nAlarmBlinkComponent EventEmitter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        blinking\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                true if it should blink, false if not\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:169\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:127\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the inputs of the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the changes in the Inputs of the component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:71\n                            \n                        \n\n                \n                    \n                        Name of the alarm to display in the box\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blinkingClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blinkingClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:49\n                            \n                        \n\n                \n                    \n                        Contains the name of the class to add for blinking, if the alarm should blink, otherwise its empty\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentClass:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:54\n                            \n                        \n\n                \n                    \n                        Contains the current classes for displaying the component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showAsPendingAck:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:60\n                            \n                        \n\n                \n                    \n                        Defines wether or not the alarm must be displayed with the pending ack badge activated.\nTrue if it must be activated, false if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showAsShelved:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:66\n                            \n                        \n\n                \n                    \n                        Defines wether or not the alarm must be displayed with the shelved badge activated.\nTrue if it must be activated, false if not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, Input, ChangeDetectorRef, SimpleChanges } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as cards with text support for the\n * priority of the alarm\n */\n@Component({\n  selector: 'app-alarm-card',\n  templateUrl: './alarm-card.component.html',\n  styleUrls: ['./alarm-card.component.scss']\n})\nexport class AlarmCardComponent implements OnInit, OnChanges {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Variable to disable animation\n   */\n  @Input() disableBlink = false;\n\n  /**\n  * Contains the name of the class to add for blinking, if the alarm should blink, otherwise its empty\n  */\n  blinkingClass = '';\n\n  /**\n  * Contains the current classes for displaying the component.\n  */\n  currentClass = [];\n\n  /**\n   * Defines wether or not the alarm must be displayed with the pending ack badge activated.\n   * True if it must be activated, false if not\n   */\n  showAsPendingAck = false;\n\n  /**\n   * Defines wether or not the alarm must be displayed with the shelved badge activated.\n   * True if it must be activated, false if not\n   */\n  showAsShelved = false;\n\n  /**\n  * Name of the alarm to display in the box\n  */\n  alarmName = '';\n\n  /**\n  * Builds a new instance\n  * @param {ChangeDetectorRef} cdRef Used for change detection in html\n  */\n  constructor(\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method to handle the changes on the inputs of the component\n  * @param {SimpleChanges} changes Object containing the changes in the Inputs of the component\n  */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.showActionBadges && changes.showActionBadges.previousValue !== changes.showActionBadges.currentValue) {\n      this.showAsPendingAck = this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n      this.showAsShelved = this.showActionBadges && this.alarm != null && this.alarm.shelved;\n    }\n    if (changes.alarm && changes.alarm.previousValue !== changes.alarm.currentValue) {\n      this.alarmName = this.getAlarmName();\n      this.currentClass = this.getClass();\n      this.showAsPendingAck = this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n      this.showAsShelved = this.showActionBadges && this.alarm != null && this.alarm.shelved;\n    }\n  }\n\n  /**\n  * Function executed to change the blinking state according to a boolean parameter\n  * It is executed when the inner {@link AlarmBlinkComponent} emits a value on its\n  * {@link AlarmBlinkComponent#blinkingStatus} {@link EventEmitter}\n  * @param {boolean} blinking true if it should blink, false if not\n  */\n  public changeBlinkingState(blinking: boolean) {\n    if (this.disableBlink) {\n      return;\n    }\n    if (blinking) {\n      this.blinkingClass = 'blinking';\n    } else {\n      this.blinkingClass = '';\n    }\n    this.currentClass = this.getClass();\n    this.cdRef.detectChanges();\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('alarm-card-blue');\n      result.push('alarm-card-unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('alarm-card-green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('alarm-card-blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('alarm-card-gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('alarm-card-green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('alarm-card-yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('alarm-card-yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('alarm-card-red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('alarm-card-red');\n    } else {\n      result.push('alarm-card-blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('alarm-card-unreliable');\n    }\n    if (this.blinkingClass !== '') {\n      result.push('blinking');\n    }\n    return result;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n      {{this.alarmName}}\n      \n        \n      \n    \n    \n\n      \n\n        \n        \n          \n        \n        \n          \n        \n\n        \n        \n          \n        \n        \n          \n        \n\n      \n\n    \n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./alarm-card.component.scss\n                \n                .alarm-card {\n  border-width: 4px;\n  border-style: solid;\n  border-radius: 4px;\n  font-weight: normal;\n\n  min-height: 60px;\n  width: 84.5px;\n  padding: 0 2px;\n  height: 60px;\n  margin-bottom: 15px;\n  line-height: normal;\n\n  .alarm-card-content {\n    height: 100%;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    .alarm-name {\n      padding-left: 1px;\n    }\n    .alarm-priority {\n      font-size: 10px;\n      text-transform: uppercase;\n      padding: 2px 0px;\n    }\n  }\n\n  .alarm-card-badges {\n    height: 100%;\n\n    .badges {\n      vertical-align: middle;\n      height: 100%;\n      min-width: 12px;\n\n      .badge-icon {\n        width: 100%;\n        &.ack-icon { margin-top: 18%; }\n        &.shelve-icon { margin-bottom: 14%; }\n      }\n      .badge-off {\n        opacity: 0.08;\n      }\n    }\n\n  }\n\n}\n\n.alarm-card-green {\n}\n\n.alarm-card-yellow {\n  font-weight: bold;\n}\n\n.alarm-card-red {\n  font-weight: bold;\n}\n\n.alarm-card-gray {\n  font-weight: bold;\n}\n\n.alarm-card-blue {\n  font-weight: bold;\n}\n\n.alarm-card-unreliable {\n  font-weight: normal;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{this.alarmName}}                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                ./alarm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentClass\n                            \n                            \n                                currentImage\n                            \n                            \n                                currentTextClass\n                            \n                            \n                                    Private\n                                labelLocationOptions\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                            \n                                    Private\n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeBlinkingState\n                            \n                            \n                                getImage\n                            \n                            \n                                getTextClass\n                            \n                            \n                                isTextAlarm\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showPriorityLevelText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                disableBlink\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                labelLocation\n                            \n                            \n                                labelMode\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blinkingStatus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:147\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for change detection in html\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableBlink\n                    \n                    \n                        Variable to disable animation\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelLocation\n                    \n                    \n                        Defines the direction of the label\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelMode\n                    \n                    \n                        Defines wether or not the component will display the text of the label\nwith the alarm priority\n\n                        \n                            Default value : 'text'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:84\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by sizeOptions\n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                    \n                        Alarm object associated to the component\n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:94\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blinkingStatus\n                    \n                    \n                        Event emitted to notify when the alarm should start or stop blinking \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:108\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeBlinkingState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeBlinkingState(blinking: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:197\n                            \n                        \n\n\n                \n                    \n                            Function executed to change and propagate the blinking state according to a boolean parameter\nIt is executed when the inner AlarmBlinkComponent emits a value on its\nAlarmBlinkComponent EventEmitter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        blinking\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                true if it should blink, false if not\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:214\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    url of the image\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:250\n                            \n                        \n\n\n                \n                    \n                            Returns the class to be used to display the text\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    list of css classes\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTextAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nisTextAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:289\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed as a text alarm or as an icon alarm\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:175\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the inputs of the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the changes in the Inputs of the component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\nChecks and corrects some of the components inputs\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showPriorityLevelText\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowPriorityLevelText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:297\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm should display the priority text in the related label\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if mode is 'text' else False\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentClass:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['alarm-component-md', '']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:114\n                            \n                        \n\n                \n                    \n                        Contains the current classes for displaying the component.\nThe first element contains a reference for the size, and the second contains the blinking status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentImage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentImage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:125\n                            \n                        \n\n                \n                    \n                        Contains the current image to display in the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentTextClass:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:120\n                            \n                        \n\n                \n                    \n                        Contains the current classes for displaying the component if it is a text alarm.\nThe first element contains a reference for the size, and the second contains the blinking status\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            labelLocationOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        labelLocationOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['right', 'bottom']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:147\n                            \n                        \n\n                \n                    \n                        Available locations for the label component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showAsPendingAck:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:131\n                            \n                        \n\n                \n                    \n                        Defines wether or not the alarm must be displayed with the pending ack badge activated.\nTrue if it must be activated, false if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showAsShelved:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:137\n                            \n                        \n\n                \n                    \n                        Defines wether or not the alarm must be displayed with the shelved badge activated.\nTrue if it must be activated, false if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:142\n                            \n                        \n\n                \n                    \n                        Available sizes for the alarm componet\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit, OnChanges, ChangeDetectorRef, SimpleChanges } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit, OnChanges {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines wether or not the component will display the text of the label\n   * with the alarm priority\n   */\n  @Input() labelMode = 'text';\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Defines the direction of the label\n   */\n  @Input() labelLocation = 'right';\n\n  /**\n   * Variable to disable animation\n   */\n  @Input() disableBlink = false;\n\n\n  /** Event emitted to notify when the alarm should start or stop blinking */\n  @Output() blinkingStatus = new EventEmitter();\n\n  /**\n  * Contains the current classes for displaying the component.\n  * The first element contains a reference for the size, and the second contains the blinking status\n  */\n  currentClass = ['alarm-component-md', ''];\n\n  /**\n  * Contains the current classes for displaying the component if it is a text alarm.\n  * The first element contains a reference for the size, and the second contains the blinking status\n  */\n  currentTextClass: string[] = null;\n\n  /**\n  * Contains the current image to display in the component\n  */\n  currentImage: string = null;\n\n  /**\n   * Defines wether or not the alarm must be displayed with the pending ack badge activated.\n   * True if it must be activated, false if not\n   */\n  showAsPendingAck = false;\n\n  /**\n   * Defines wether or not the alarm must be displayed with the shelved badge activated.\n   * True if it must be activated, false if not\n   */\n  showAsShelved = false;\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n   * Available locations for the label component\n   */\n  private labelLocationOptions = ['right', 'bottom'];\n\n  /**\n  * Builds a new instance\n  * @param {ChangeDetectorRef} cdRef Used for change detection in html\n  */\n  constructor(\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  /**\n  * Executed when the component is initiating\n  * Checks and corrects some of the components inputs\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size)  0;\n      this.showAsShelved = this.showActionBadges && this.alarm != null && this.alarm.shelved;\n    }\n    if (changes.alarm && changes.alarm.previousValue !== changes.alarm.currentValue) {\n      this.currentImage = this.getImage();\n      this.currentTextClass = this.getTextClass();\n      this.showAsPendingAck = this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n      this.showAsShelved = this.showActionBadges && this.alarm != null && this.alarm.shelved;\n    }\n  }\n\n  /**\n  * Function executed to change and propagate the blinking state according to a boolean parameter\n  * It is executed when the inner {@link AlarmBlinkComponent} emits a value on its\n  * {@link AlarmBlinkComponent#blinkingStatus} {@link EventEmitter}\n  * @param {boolean} blinking true if it should blink, false if not\n  */\n  public changeBlinkingState(blinking: boolean) {\n    this.blinkingStatus.emit(blinking);\n    if (this.disableBlink) {\n      return;\n    }\n    if (blinking) {\n      this.currentClass[1] = 'blinking';\n    } else {\n      this.currentClass[1] = '';\n    }\n    this.cdRef.detectChanges();\n  }\n\n  /**\n  * Returns the URL of the current image to use depending on the Alarm status\n  * @return {string} url of the image\n  */\n  getImage(): string {\n    if (this.isTextAlarm()) {\n      return null;\n    }\n    if (!this.alarm) {\n      return this.imagesUnreliable.unknown;\n    }\n    let imagesToUse = this.images;\n    if (this.alarm.validity === 0) {\n      imagesToUse = this.imagesUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      return imagesToUse.shelved;\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      return imagesToUse.unknown;\n    } else if (this.alarm.showAsMaintenance()) {\n      return imagesToUse.maintenance;\n    } else if (this.alarm.value === Value.cleared) {\n      return imagesToUse.clear;\n    } else if (this.alarm.value === Value.set_low) {\n      return imagesToUse.set_low;\n    } else if (this.alarm.value === Value.set_medium) {\n      return imagesToUse.set_medium;\n    } else if (this.alarm.value === Value.set_high) {\n      return imagesToUse.set_high;\n    } else if (this.alarm.value === Value.set_critical) {\n      return imagesToUse.set_critical;\n    } else {\n      return this.imagesUnreliable.unknown;\n    }\n  }\n\n  /**\n  * Returns the class to be used to display the text\n  * @return {string[]} list of css classes\n  */\n  getTextClass(): string[] {\n    const textClass = ['text'];\n    if (!this.alarm) {\n      textClass.push('unreliable');\n      textClass.push('unknown');\n      return textClass;\n    }\n    if (this.alarm.validity === 0) {\n      textClass.push('unreliable');\n    } else {\n      textClass.push('reliable');\n    }\n    if (this.alarm.shelved === true) {\n      textClass.push('shelved');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      textClass.push('unknown');\n    } else if (this.alarm.showAsMaintenance()) {\n      textClass.push('maintenance');\n    } else if (this.alarm.value === Value.cleared) {\n      textClass.push('clear');\n    } else if (this.alarm.value === Value.set_low) {\n      textClass.push('set-low');\n    } else if (this.alarm.value === Value.set_medium) {\n      textClass.push('set-medium');\n    } else if (this.alarm.value === Value.set_high) {\n      textClass.push('set-high');\n    } else if (this.alarm.value === Value.set_critical) {\n      textClass.push('set-critical');\n    } else {\n      textClass.push('unreliable');\n      textClass.push('unknown');\n    }\n    return textClass;\n  }\n\n  /**\n   * Check if the alarm must be displayed as a text alarm or as an icon alarm\n   * @return {boolean} True if the {@link text}  {@link Input} is defined, false if not\n   */\n  isTextAlarm(): boolean {\n    return this.text !== '';\n  }\n\n  /**\n   * Check if the alarm should display the priority text in the related label\n   * @return {boolean} True if mode is 'text' else False\n   */\n  showPriorityLevelText(): boolean {\n    return this.labelMode === 'text';\n  }\n\n}\n\n    \n\n    \n         \n\n\n\n\n\n  \n    \n      \n    \n\n    \n      \n\n         \n\n        \n          \n            {{this.text}}\n          \n        \n\n        \n          \n            \n          \n        \n\n      \n      \n        \n          \n          \n            \n          \n          \n            \n          \n\n          \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        \n          \n        \n      \n      \n      \n    \n\n  \n\n\n\n\n\n\n  \n    \n      \n    \n\n     \n\n    \n      \n        {{this.text}}\n      \n    \n\n    \n      \n        \n      \n    \n\n    \n      \n      \n        \n      \n      \n        \n      \n\n      \n      \n        \n      \n      \n        \n      \n    \n\n    \n      \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./alarm.component.scss\n                \n                $cem: 1px;\n$xs-cem: 1*$cem;\n$sm-cem: 1.2*$cem;\n$md-cem: 1.6*$cem;\n$lg-cem: 3.0*$cem;\n$status-cem: 1*$cem;\n\n.alarm-bottom-tag-table {\n  display: flex;\n  flex-wrap: wrap;\n  height: 100%;\n  padding: 0;\n\n  .alarm-table-cell {\n    box-sizing: border-box;\n    flex-grow: 1;\n    overflow: visible;\n    text-align: center;\n  }\n\n  .main-column {\n    width: 60%;\n  }\n\n  .badges-column {\n    width: 40%;\n  }\n\n  .alarm-row {\n    height: 80%;\n  }\n\n  .label-row {\n    height: 20%;\n  }\n\n}\n\n.alarm-icon-right-tag-table {\n  display: flex;\n  flex-wrap: wrap;\n  height: 100%;\n  padding: 0;\n\n  .alarm-table-cell {\n    box-sizing: border-box;\n    flex-grow: 1;\n    overflow: visible;\n    text-align: center;\n    border: 1px solid red;\n  }\n\n  .column {\n    width: 30%;\n  }\n\n}\n\n.alarm-component {\n\n  .alarm-label-container {\n    padding-left: 6px;\n    &.bottom {\n      margin: auto;\n      padding:0;\n      line-height: 0;\n    }\n  }\n\n  .icon {\n    display: inline-block;\n    height: 100%;\n\n    .alarm-icon{\n      height: 100%;\n      display: block;\n    }\n\n  }\n\n  .text {\n    width: 100%;\n    vertical-align: middle;\n    height: 100%;\n    padding-right: 6%;\n  }\n\n  .badges{\n    vertical-align: middle;\n    height: 100%;\n    min-width: 12px;\n\n    .badge-icon{\n      width: 100%;\n\n      &.ack-icon{\n        margin-top: 6%;\n      }\n\n      &.shelve-icon{\n        margin-bottom: 6%;\n      }\n\n      &.badge-off{\n        opacity: 0.08;\n      }\n    }\n\n    &.hidden {\n      visibility: hidden;\n    }\n  }\n\n}\n\n.alarm-component-xs {\n  @extend .alarm-component;\n  height: 19*$xs-cem;\n  line-height: 19*$xs-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$xs-cem;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n\n}\n\n.alarm-component-sm {\n  @extend .alarm-component;\n  height: 19*$sm-cem;\n  line-height: 19*$sm-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$sm-cem;\n    margin-left: 4px;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n\n}\n\n.alarm-component-md {\n  @extend .alarm-component;\n  height: 19*$md-cem;\n  line-height: 19*$md-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$md-cem;\n    margin-left: 4px;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n}\n\n.alarm-component-lg {\n  @extend .alarm-component;\n  height: 19*$lg-cem;\n  line-height: 19*$lg-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$lg-cem;\n    margin-left: 10px;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n}\n\n.alarm-component-status {\n  @extend .alarm-component;\n  height: 19*$status-cem;\n  line-height: 19*$status-cem;\n\n  .badges{\n    @extend .badges;\n    width: 11*$status-cem;\n\n    .badge-icon{\n      @extend .badge-icon;\n\n      &.ack-icon{\n        @extend .ack-icon;\n        margin-top: 0;\n      }\n\n      &.shelve-icon{\n        @extend .shelve-icon;\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  {{this.text}}                                                                                                                                                                                                                                                                                                                                                       {{this.text}}                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmConfig.html":{"url":"classes/AlarmConfig.html","title":"class - AlarmConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm-config.ts\n        \n\n            \n                Description\n            \n            \n                Stores the displaying configuration of an Alarm\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm_id\n                            \n                            \n                                    Public\n                                children\n                            \n                            \n                                    Public\n                                custom_name\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                placemark\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/alarm-config.ts:25\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmConfig instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:7\n                            \n                        \n\n                \n                    \n                        ID of the associated Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:19\n                            \n                        \n\n                \n                    \n                        List of children Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            custom_name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        custom_name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:10\n                            \n                        \n\n                \n                    \n                        Custom name to display the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:25\n                            \n                        \n\n                \n                    \n                        Group of the alarm, in order to classify it for views that require some sort of classification of Alarms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:22\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to a location on a map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:13\n                            \n                        \n\n                \n                    \n                        Type associated to the Alarm, used to decide how to display the alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:16\n                            \n                        \n\n                \n                    \n                        View where the alarm is displayed Alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm-config.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class AlarmConfig {\n\n  /** ID of the associated {@link Alarm} */\n  public alarm_id: string;\n\n  /** Custom name to display the {@link Alarm} */\n  public custom_name: string;\n\n  /** Type associated to the {@link Alarm}, used to decide how to display the alarm */\n  public type: string;\n\n  /** View where the alarm is displayed {@link Alarm} */\n  public view: string;\n\n  /** List of children {@link Alarm} */\n  public children = [];\n\n  /** ID to map the {@link Alarm} to a location on a map */\n  public placemark: string;\n\n  /** Group of the alarm, in order to classify it for views that require some sort of classification of {@link Alarm}s */\n  public group: string;\n\n  /**\n  * Builds a new AlarmConfig instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  public get name(): string {\n    if (this.custom_name) {\n      return this.custom_name;\n    } else {\n      return this.alarm_id;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmHeaderComponent.html":{"url":"components/AlarmHeaderComponent.html","title":"component - AlarmHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-header/alarm-header.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as headers in a table or list\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-header\n            \n\n            \n                styleUrls\n                ./alarm-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarmName\n                            \n                            \n                                blinkingClass\n                            \n                            \n                                currentClass\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeBlinkingState\n                            \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                disableBlink\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-header/alarm-header.component.ts:70\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for change detection in html\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value : 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableBlink\n                    \n                    \n                        Variable to disable animation\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeBlinkingState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeBlinkingState(blinking: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Function executed to change the blinking state according to a boolean parameter\nIt is executed when the inner AlarmBlinkComponent emits a value on its\nAlarmBlinkComponent EventEmitter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        blinking\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                true if it should blink, false if not\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:166\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the inputs of the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the changes in the Inputs of the component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:70\n                            \n                        \n\n                \n                    \n                        Name of the alarm to display in the box\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            blinkingClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        blinkingClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:48\n                            \n                        \n\n                \n                    \n                        Contains the name of the class to add for blinking, if the alarm should blink, otherwise its empty\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentClass:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:53\n                            \n                        \n\n                \n                    \n                        Contains the current classes for displaying the component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showAsPendingAck:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:59\n                            \n                        \n\n                \n                    \n                        Defines wether or not the alarm must be displayed with the pending ack badge activated.\nTrue if it must be activated, false if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showAsShelved:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:65\n                            \n                        \n\n                \n                    \n                        Defines wether or not the alarm must be displayed with the shelved badge activated.\nTrue if it must be activated, false if not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, Input, ChangeDetectorRef, SimpleChanges } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as headers in a table or list\n */\n@Component({\n  selector: 'app-alarm-header',\n  templateUrl: './alarm-header.component.html',\n  styleUrls: ['./alarm-header.component.scss']\n})\nexport class AlarmHeaderComponent implements OnInit, OnChanges {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Variable to disable animation\n   */\n  @Input() disableBlink = false;\n\n  /**\n  * Contains the name of the class to add for blinking, if the alarm should blink, otherwise its empty\n  */\n  blinkingClass = '';\n\n  /**\n  * Contains the current classes for displaying the component.\n  */\n  currentClass = [];\n\n  /**\n   * Defines wether or not the alarm must be displayed with the pending ack badge activated.\n   * True if it must be activated, false if not\n   */\n  showAsPendingAck = false;\n\n  /**\n   * Defines wether or not the alarm must be displayed with the shelved badge activated.\n   * True if it must be activated, false if not\n   */\n  showAsShelved = false;\n\n  /**\n  * Name of the alarm to display in the box\n  */\n  alarmName = '';\n\n  /**\n  * Builds a new instance\n  * @param {ChangeDetectorRef} cdRef Used for change detection in html\n  */\n  constructor(\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method to handle the changes on the inputs of the component\n  * @param {SimpleChanges} changes Object containing the changes in the Inputs of the component\n  */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.showActionBadges && changes.showActionBadges.previousValue !== changes.showActionBadges.currentValue) {\n      this.showAsPendingAck = this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n      this.showAsShelved = this.showActionBadges && this.alarm != null && this.alarm.shelved;\n    }\n    if (changes.alarm && changes.alarm.previousValue !== changes.alarm.currentValue) {\n      this.alarmName = this.getAlarmName();\n      this.currentClass = this.getClass();\n      this.showAsPendingAck = this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n      this.showAsShelved = this.showActionBadges && this.alarm != null && this.alarm.shelved;\n    }\n  }\n\n  /**\n  * Function executed to change the blinking state according to a boolean parameter\n  * It is executed when the inner {@link AlarmBlinkComponent} emits a value on its\n  * {@link AlarmBlinkComponent#blinkingStatus} {@link EventEmitter}\n  * @param {boolean} blinking true if it should blink, false if not\n  */\n  public changeBlinkingState(blinking: boolean) {\n    if (this.disableBlink) {\n      return;\n    }\n    if (blinking) {\n      this.blinkingClass = 'blinking';\n    } else {\n      this.blinkingClass = '';\n    }\n    this.currentClass = this.getClass();\n    this.cdRef.detectChanges();\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('blue');\n      result.push('unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('red');\n    } else {\n      result.push('blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('unreliable');\n    }\n    result.push(this.blinkingClass);\n    return result;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  \n    \n        {{this.alarmName}}\n    \n    \n      \n    \n  \n\n\n  \n    \n\n      \n      \n        \n      \n      \n        \n      \n\n      \n      \n        \n      \n      \n        \n      \n\n    \n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./alarm-header.component.scss\n                \n                .alarm-header-container {\n  height: 100%;\n}\n\n.alarm-header-color {\n  height: 100%;\n  width: 10px;\n  border-radius: 4px 0px 0px 4px;\n  margin-right: 10px;\n  display: flex;\n}\n\n.alarm-header-name {\n  padding-top: 20px;\n  padding-right: 4px;\n}\n\n.alarm-header-badges {\n  position: relative;\n  margin: 12px 0 12px 0px;\n}\n\n.badges{\n\n  .badge-icon{\n    position: absolute;\n    height: 35%;\n    left: 106%;\n  }\n\n  .ack-icon{\n    top: 2%;\n  }\n\n  .shelve-icon{\n    bottom: 2%;\n  }\n\n  .badge-off{\n    opacity: 0.08;\n  }\n}\n\n.green {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.yellow {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.red {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.gray {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.blue {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.unreliable {\n  background: transparent;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{this.alarmName}}                                                                                                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:9\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:27\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:21\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:18\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:15\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:24\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit, OnChanges, ChangeDetectorRef, SimpleChanges } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit, OnChanges {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines wether or not the component will display the text of the label\n   * with the alarm priority\n   */\n  @Input() labelMode = 'text';\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Defines the direction of the label\n   */\n  @Input() labelLocation = 'right';\n\n  /**\n   * Variable to disable animation\n   */\n  @Input() disableBlink = false;\n\n\n  /** Event emitted to notify when the alarm should start or stop blinking */\n  @Output() blinkingStatus = new EventEmitter();\n\n  /**\n  * Contains the current classes for displaying the component.\n  * The first element contains a reference for the size, and the second contains the blinking status\n  */\n  currentClass = ['alarm-component-md', ''];\n\n  /**\n  * Contains the current classes for displaying the component if it is a text alarm.\n  * The first element contains a reference for the size, and the second contains the blinking status\n  */\n  currentTextClass: string[] = null;\n\n  /**\n  * Contains the current image to display in the component\n  */\n  currentImage: string = null;\n\n  /**\n   * Defines wether or not the alarm must be displayed with the pending ack badge activated.\n   * True if it must be activated, false if not\n   */\n  showAsPendingAck = false;\n\n  /**\n   * Defines wether or not the alarm must be displayed with the shelved badge activated.\n   * True if it must be activated, false if not\n   */\n  showAsShelved = false;\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n   * Available locations for the label component\n   */\n  private labelLocationOptions = ['right', 'bottom'];\n\n  /**\n  * Builds a new instance\n  * @param {ChangeDetectorRef} cdRef Used for change detection in html\n  */\n  constructor(\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  /**\n  * Executed when the component is initiating\n  * Checks and corrects some of the components inputs\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size)  0;\n      this.showAsShelved = this.showActionBadges && this.alarm != null && this.alarm.shelved;\n    }\n    if (changes.alarm && changes.alarm.previousValue !== changes.alarm.currentValue) {\n      this.currentImage = this.getImage();\n      this.currentTextClass = this.getTextClass();\n      this.showAsPendingAck = this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n      this.showAsShelved = this.showActionBadges && this.alarm != null && this.alarm.shelved;\n    }\n  }\n\n  /**\n  * Function executed to change and propagate the blinking state according to a boolean parameter\n  * It is executed when the inner {@link AlarmBlinkComponent} emits a value on its\n  * {@link AlarmBlinkComponent#blinkingStatus} {@link EventEmitter}\n  * @param {boolean} blinking true if it should blink, false if not\n  */\n  public changeBlinkingState(blinking: boolean) {\n    this.blinkingStatus.emit(blinking);\n    if (this.disableBlink) {\n      return;\n    }\n    if (blinking) {\n      this.currentClass[1] = 'blinking';\n    } else {\n      this.currentClass[1] = '';\n    }\n    this.cdRef.detectChanges();\n  }\n\n  /**\n  * Returns the URL of the current image to use depending on the Alarm status\n  * @return {string} url of the image\n  */\n  getImage(): string {\n    if (this.isTextAlarm()) {\n      return null;\n    }\n    if (!this.alarm) {\n      return this.imagesUnreliable.unknown;\n    }\n    let imagesToUse = this.images;\n    if (this.alarm.validity === 0) {\n      imagesToUse = this.imagesUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      return imagesToUse.shelved;\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      return imagesToUse.unknown;\n    } else if (this.alarm.showAsMaintenance()) {\n      return imagesToUse.maintenance;\n    } else if (this.alarm.value === Value.cleared) {\n      return imagesToUse.clear;\n    } else if (this.alarm.value === Value.set_low) {\n      return imagesToUse.set_low;\n    } else if (this.alarm.value === Value.set_medium) {\n      return imagesToUse.set_medium;\n    } else if (this.alarm.value === Value.set_high) {\n      return imagesToUse.set_high;\n    } else if (this.alarm.value === Value.set_critical) {\n      return imagesToUse.set_critical;\n    } else {\n      return this.imagesUnreliable.unknown;\n    }\n  }\n\n  /**\n  * Returns the class to be used to display the text\n  * @return {string[]} list of css classes\n  */\n  getTextClass(): string[] {\n    const textClass = ['text'];\n    if (!this.alarm) {\n      textClass.push('unreliable');\n      textClass.push('unknown');\n      return textClass;\n    }\n    if (this.alarm.validity === 0) {\n      textClass.push('unreliable');\n    } else {\n      textClass.push('reliable');\n    }\n    if (this.alarm.shelved === true) {\n      textClass.push('shelved');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      textClass.push('unknown');\n    } else if (this.alarm.showAsMaintenance()) {\n      textClass.push('maintenance');\n    } else if (this.alarm.value === Value.cleared) {\n      textClass.push('clear');\n    } else if (this.alarm.value === Value.set_low) {\n      textClass.push('set-low');\n    } else if (this.alarm.value === Value.set_medium) {\n      textClass.push('set-medium');\n    } else if (this.alarm.value === Value.set_high) {\n      textClass.push('set-high');\n    } else if (this.alarm.value === Value.set_critical) {\n      textClass.push('set-critical');\n    } else {\n      textClass.push('unreliable');\n      textClass.push('unknown');\n    }\n    return textClass;\n  }\n\n  /**\n   * Check if the alarm must be displayed as a text alarm or as an icon alarm\n   * @return {boolean} True if the {@link text}  {@link Input} is defined, false if not\n   */\n  isTextAlarm(): boolean {\n    return this.text !== '';\n  }\n\n  /**\n   * Check if the alarm should display the priority text in the related label\n   * @return {boolean} True if mode is 'text' else False\n   */\n  showPriorityLevelText(): boolean {\n    return this.labelMode === 'text';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmInfoComponent.html":{"url":"components/AlarmInfoComponent.html","title":"component - AlarmInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-info/alarm-info.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display general information about an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-info\n            \n\n            \n                styleUrls\n                ./alarm-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateFormat\n                            \n                            \n                                    Public\n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-info/alarm-info.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:21\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timezone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timezone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm} from '../../data/alarm';\nimport { Locale } from '../../settings';\n\n/**\n * Component used to display general information about an alarm\n */\n@Component({\n  selector: 'app-alarm-info',\n  templateUrl: './alarm-info.component.html',\n  styleUrls: ['./alarm-info.component.scss']\n})\nexport class AlarmInfoComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /** String to store the formatting of dates, read form the settings */\n  public dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  public timezone: string;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Alarm ID\n      {{alarm?.core_id}}\n    \n    \n      Description\n      {{alarm?.description}}\n    \n    \n      Last Change\n      {{alarm?.timestamp | date: dateFormat: timezone}}\n    \n  \n\n  \n    \n      Last Properties\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./alarm-info.component.scss\n                \n                .alarm-info {\n  table {\n    vertical-align: top;\n    width: 450px;\n  }\n\n  th {\n    padding-right: 16px;\n    font-weight: normal;\n    vertical-align: top;\n    width: 120px;\n  }\n\n  .props-container {\n    padding: 10px 0 0 0;\n\n    .props-container-title {\n      padding-bottom: 4px;\n    }\n\n    .props-container-body {\n      font-size: 90%;\n      overflow-y: auto;\n      overflow-x: auto;\n      max-width: 450px;\n      max-height: 200px;\n    }\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Alarm ID      {{alarm?.core_id}}              Description      {{alarm?.description}}              Last Change      {{alarm?.timestamp | date: dateFormat: timezone}}                  Last Properties                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output, SimpleChanges, SimpleChange } from '@angular/core';\nimport { OnInit, OnChanges } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe( () => {\n      this.updateAckList();\n    });\n    this.updateData();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whenever the alarm changes)\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedAlarm) {\n      if (changes.selectedAlarm.previousValue) {\n        const alarm: SimpleChange = changes.selectedAlarm;\n        const prevAlarmCoreID = alarm.previousValue.core_id;\n        const currentAlarmCoreID = alarm.currentValue.core_id;\n        const prevDependenciesString = alarm.previousValue.dependencies.sort().join();\n        const currentDependenciesString = alarm.currentValue.dependencies.sort().join();\n        const dependenciesChange = (prevDependenciesString !== currentDependenciesString);\n        const coreIDChange = (prevAlarmCoreID !== currentAlarmCoreID);\n        if ((coreIDChange === true) || (dependenciesChange === true)) {\n          this.updateData();\n        }\n      } else {\n        this.updateData();\n      }\n    }\n  }\n\n\n  /**\n   * Update the data for the dataSource\n   */\n  updateData() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {any}  the tree data in a JSON format\n   */\n  getTreeData(): any {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {any}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm): any {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    const subTreeIsEmpty = Object.keys(subTree).length === 0;\n    if ( subTreeIsEmpty ) {\n      return null;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {AlarmItemNode[]} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number): AlarmItemNode[] {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {AlarmItemFlatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode: any;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output, SimpleChanges, SimpleChange } from '@angular/core';\nimport { OnInit, OnChanges } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe( () => {\n      this.updateAckList();\n    });\n    this.updateData();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whenever the alarm changes)\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedAlarm) {\n      if (changes.selectedAlarm.previousValue) {\n        const alarm: SimpleChange = changes.selectedAlarm;\n        const prevAlarmCoreID = alarm.previousValue.core_id;\n        const currentAlarmCoreID = alarm.currentValue.core_id;\n        const prevDependenciesString = alarm.previousValue.dependencies.sort().join();\n        const currentDependenciesString = alarm.currentValue.dependencies.sort().join();\n        const dependenciesChange = (prevDependenciesString !== currentDependenciesString);\n        const coreIDChange = (prevAlarmCoreID !== currentAlarmCoreID);\n        if ((coreIDChange === true) || (dependenciesChange === true)) {\n          this.updateData();\n        }\n      } else {\n        this.updateData();\n      }\n    }\n  }\n\n\n  /**\n   * Update the data for the dataSource\n   */\n  updateData() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {any}  the tree data in a JSON format\n   */\n  getTreeData(): any {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {any}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm): any {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    const subTreeIsEmpty = Object.keys(subTree).length === 0;\n    if ( subTreeIsEmpty ) {\n      return null;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {AlarmItemNode[]} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number): AlarmItemNode[] {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {AlarmItemFlatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode: any;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmLabelComponent.html":{"url":"components/AlarmLabelComponent.html","title":"component - AlarmLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-label/alarm-label.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display a label related to the alarm priority\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-label\n            \n\n            \n                styleUrls\n                ./alarm-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentClass\n                            \n                            \n                                currentSizeClass\n                            \n                            \n                                noPaddingOptions\n                            \n                            \n                                priorityText\n                            \n                            \n                                priorityTextClass\n                            \n                            \n                                showFluidTextOptions\n                            \n                            \n                                showTextOptions\n                            \n                            \n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getPriorityText\n                            \n                            \n                                getPriorityTextClass\n                            \n                            \n                                getSizeClass\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                fluidText\n                            \n                            \n                                noPadding\n                            \n                            \n                                showText\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-label/alarm-label.component.ts:78\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fluidText\n                    \n                    \n                        Defines the presentation of the label\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        noPadding\n                    \n                    \n                        Defines the presentation of the label\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showText\n                    \n                    \n                        Defines if the priority text should be displayed (if set state for the alarm)\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Size options\n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriorityText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriorityText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:163\n                            \n                        \n\n\n                \n                    \n                            Returns a string related to the name of the alarm priority\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    alarm prioritity name for the display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriorityTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriorityTextClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:177\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSizeClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSizeClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:196\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the inputs of the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the changes in the Inputs of the component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentClass:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:63\n                            \n                        \n\n                \n                    \n                        Contains the current classes for displaying the component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSizeClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSizeClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:68\n                            \n                        \n\n                \n                    \n                        Contains the current class for the for displaying size\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noPaddingOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noPaddingOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:53\n                            \n                        \n\n                \n                    \n                        Padding Options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priorityText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priorityText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:73\n                            \n                        \n\n                \n                    \n                        The text that will display the priority of the alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priorityTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priorityTextClass:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:78\n                            \n                        \n\n                \n                    \n                        The class used to display the priority of the alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showFluidTextOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showFluidTextOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:48\n                            \n                        \n\n                \n                    \n                        Show fluid text options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTextOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showTextOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:43\n                            \n                        \n\n                \n                    \n                        Show text options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:58\n                            \n                        \n\n                \n                    \n                        Size Options\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Alarm, Value } from '../../data/alarm';\n\n\n/**\n * Component used to display a label related to the alarm priority\n */\n@Component({\n  selector: 'app-alarm-label',\n  templateUrl: './alarm-label.component.html',\n  styleUrls: ['./alarm-label.component.scss']\n})\nexport class AlarmLabelComponent implements OnInit, OnChanges {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n  * Size options\n  */\n  @Input() size = 'md';\n\n  /**\n  * Defines if the priority text should be displayed (if set state for the alarm)\n  */\n  @Input() showText = true;\n\n  /**\n   * Defines the presentation of the label\n   */\n  @Input() fluidText = false;\n\n  /**\n   * Defines the presentation of the label\n   */\n  @Input() noPadding = false;\n\n  /**\n  * Show text options\n  */\n  showTextOptions = [true, false];\n\n  /**\n  * Show fluid text options\n  */\n  showFluidTextOptions = [true, false];\n\n  /**\n  * Padding Options\n  */\n  noPaddingOptions = [true, false];\n\n  /**\n  * Size Options\n  */\n  sizeOptions = ['xs', 'sm', 'md', 'lg'];\n\n  /**\n  * Contains the current classes for displaying the component.\n  */\n  currentClass = [];\n\n  /**\n  * Contains the current class for the for displaying size\n  */\n  currentSizeClass: string = null;\n\n  /**\n  * The text that will display the priority of the alarm\n  */\n  priorityText = '';\n\n  /**\n  * The class used to display the priority of the alarm\n  */\n  priorityTextClass = [];\n\n  /**\n  * Builds a new instance\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.showTextOptions.indexOf(this.showText) \n    \n\n    \n        \n  \n    {{this.priorityText}}\n  \n\n\n    \n\n    \n                \n                    ./alarm-label.component.scss\n                \n                $cem: 10px;\n$xs-cem: 0.8*$cem;\n$sm-cem: 1.0*$cem;\n$md-cem: 1.4*$cem;\n$lg-cem: 1.4*$cem;\n\n.no-padding {\n  padding: 0 !important;\n}\n\n.fluid-text {\n  min-width: unset !important;\n}\n\n.hide-label {\n  visibility: hidden;\n  border: 1px solid red;\n}\n\n.priority-text {\n  margin: auto;\n  font-weight: bold;\n  &.hide-text {\n    visibility: hidden;\n    line-height: 0.2em !important;\n  }\n}\n\n.unreliable {\n  padding: 2px 2px !important;\n}\n\n.alarm-label {\n  text-transform: uppercase;\n  line-height: 1em;\n  display: inline-flex;\n\n  &.hide-text {\n    line-height: 0.2em;\n  }\n\n  .alarm-label-content {\n    border-radius: 2px;\n    padding: 2px 2px;\n    text-align: center;\n  }\n\n}\n\n.alarm-label-xs {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $xs-cem;\n    &.hide-text {\n      width: 16px;\n    }\n  }\n}\n\n.alarm-label-sm {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $sm-cem;\n    min-width: 40px;\n    &.hide-text {\n      min-width: unset;\n      width: 20px !important;\n    }\n  }\n}\n\n.alarm-label-md {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $md-cem;\n    min-width: 78px;\n    &.hide-text {\n      min-width: unset;\n      width: 30px !important;\n    }\n  }\n}\n\n.alarm-label-lg {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $lg-cem;\n    &.hide-text {\n      width: 40px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{this.priorityText}}  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmSounds.html":{"url":"classes/AlarmSounds.html","title":"class - AlarmSounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmSounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.service.ts\n        \n\n            \n                Description\n            \n            \n                Class used to model the different sound options and their corresponding audio files\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                none\n                            \n                            \n                                    Static\n                                type1\n                            \n                            \n                                    Static\n                                type2\n                            \n                            \n                                    Static\n                                type3\n                            \n                            \n                                    Static\n                                type4\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSoundsource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            none\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        none:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:21\n                            \n                        \n\n                \n                    \n                        This is the type for alarms with no sound \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_1.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:24\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE1 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_2.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:27\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE2 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type3:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_3.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:30\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE3 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type4:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_4.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:33\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE4 \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getSoundsource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSoundsource(sound: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Given a sound type, retruns the associated audiofile\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sound\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The sound type, e.g. TYPE1, TYPE2, etc.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the filepath of the corresponding audio file\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { interval } from 'rxjs';\nimport { WebSocketBridge } from 'django-channels';\nimport { environment } from '../../environments/environment';\nimport { Alarm, Validity, Value } from '../data/alarm';\nimport { AlarmConfig } from '../data/alarm-config';\nimport { BackendUrls, Streams, Assets } from '../settings';\nimport { CdbService } from '../data/cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { AuthService } from '../auth/auth.service';\n\n\n/**\n* Class used to model the different sound options and their corresponding audio files\n*/\nexport class AlarmSounds {\n\n  /** This is the type for alarms with no sound */\n  static none = '';\n\n  /** The name of the audio file associated to the sound TYPE1 */\n  static type1 = 'Alarm_Sound_1.mp3';\n\n  /** The name of the audio file associated to the sound TYPE2 */\n  static type2 = 'Alarm_Sound_2.mp3';\n\n  /** The name of the audio file associated to the sound TYPE3 */\n  static type3 = 'Alarm_Sound_3.mp3';\n\n  /** The name of the audio file associated to the sound TYPE4 */\n  static type4 = 'Alarm_Sound_4.mp3';\n\n  /**\n  * Given a sound type, retruns the associated audiofile\n  * @param {string} sound The sound type, e.g. TYPE1, TYPE2, etc.\n  * @returns {string} the filepath of the corresponding audio file\n  */\n  static getSoundsource(sound: string): string {\n    if (sound === 'TYPE1') {\n      return Assets.SOUNDS + AlarmSounds.type1;\n    } else if (sound === 'TYPE2') {\n      return Assets.SOUNDS + AlarmSounds.type2;\n    } else if (sound === 'TYPE3') {\n      return Assets.SOUNDS + AlarmSounds.type3;\n    } else if (sound === 'TYPE4') {\n      return Assets.SOUNDS + AlarmSounds.type4;\n    }\n    return null;\n  }\n}\n\n/**\n* Service that connects and receives {@link Alarm} messages from the\n* IAS Webserver through Websockets\n*/\n@Injectable()\nexport class AlarmService {\n\n  /**\n  * Timestamp related with the last received message\n  */\n  public lastReceivedMessageTimestamp: number = (new Date).getTime();\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public connectionStatusStream = new BehaviorSubject(false);\n\n  /**\n  * Array of {@link Alarm} objects\n  */\n  public alarmsArray: Alarm[] = [];\n\n  /**\n  * Index for the alarmsArray { core_id: arrayIndex }\n  */\n  public alarmsIndexes: {[core_id: string]: number} = {};\n\n  /**\n  * Stream of notifications of changes in\n  * the dictionary of {@link Alarm} objects\n  */\n  public alarmChangeStream = new BehaviorSubject(true);\n\n  /**\n  * Django Channels WebsocketBridge,\n  * used to connect to Django Channels through Websockets\n  */\n  public webSocketBridge: WebSocketBridge = new WebSocketBridge();\n\n  /**\n  * Defines wether or not the display should emit sounds when alarms are triggered.\n  * It is used to avoid sounds when the page is refreshed, and only allow them after that\n  */\n  public canSound: boolean;\n\n  /**\n  * Reference to the audio object used to play the sounds\n  */\n  public audio = new Audio();\n\n  /**\n  * Id of the currenlty sounding Alarm\n  */\n  public soundingAlarm: string;\n\n  /**\n  * Defines wether or not the service is initialized\n  */\n  public isInitialized = false;\n\n  /**\n  * Information about the count of alarms by view\n  */\n  public countByView = {};\n\n  /**\n  * Connection status timer\n  */\n  public connectionStatusTimer: any;\n\n  /**\n   * Builds an instance of the service\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   * @param {AuthService} authService Service used for authentication\n   */\n  constructor(\n    private cdbService: CdbService,\n    private httpClientService: HttpClientService,\n    private authService: AuthService,\n  ) {\n    this.connectionStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.triggerAlarmsNonValidConnectionState();\n        }\n      }\n    );\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === true) {\n          this.initialize();\n        } else {\n          this.destroy();\n        }\n      }\n    );\n  }\n\n  /**\n  * Sends an {@link Alarm} change event\n  *\n  * @param {Any} any the core_id of the updated alarm,\n  * or 'all' if all were updated\n  */\n  changeAlarms(any: any) {\n    this.alarmChangeStream.next(any);\n  }\n\n  /******* SERVICE INITIALIZATION *******/\n\n  /**\n  * Start connection to the backend through websockets\n  */\n  initialize() {\n    if (this.isInitialized || !this.authService.loginStatus) {\n      return;\n    }\n    this.cdbService.initialize();\n    this.isInitialized = true;\n    this.canSound = false;\n    this.audio = new Audio();\n    this.connect();\n    this.webSocketBridge.socket.addEventListener(\n      'open', () => {\n        this.connectionStatusStream.next(true);\n        this.getAlarmList();\n      }\n    );\n    this.webSocketBridge.socket.addEventListener(\n      'close', () => {\n        this.resetCountByView();\n      }\n    );\n    this.webSocketBridge.demultiplex(Streams.ALARMS, (payload: any, streamName: any) => {\n    // console.log('notify ', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessage(payload.action, payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.UPDATES, (payload: any, streamName: any) => {\n      // console.log('request', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessagesList(payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.COUNTER, (payload: any, streamName: any) => {\n      // console.log('counter ', payload);\n      if (this.authService.loginStatus) {\n        this.readCountByViewMessage(payload.data);\n      }\n    });\n  }\n\n  /**\n  *  Start connection to the backend through websockets\n  */\n  connect() {\n    const connectionPath = this.getConnectionPath();\n    this.webSocketBridge.connect(connectionPath);\n    this.webSocketBridge.listen(connectionPath);\n    console.log('Connected to webserver at');\n  }\n\n  /**\n  *  Connection path using authentication data\n  */\n  getConnectionPath() {\n    return environment.websocketPath + '?token=' + this.authService.getToken();\n  }\n\n  /**\n  *  Disconnect from the backend\n  */\n  destroy() {\n    // Close connection\n    if (this.isInitialized) {\n      this.webSocketBridge.stream(Streams.UPDATES).send({\n        'action': 'close'\n      });\n      this.webSocketBridge.socket.close(\n        1000, 'User logout', {keepClosed: true});\n      this.resetCountByView();\n    }\n    this.isInitialized = false;\n    console.log('Connection to webserver closed');\n  }\n\n  /******* ALARM HANDLING *******/\n\n  /**\n   * Returns an Alarm object\n   * @param core_id core_id of the Alarm to return\n   * @returns {Alarm} Alarm object corresponding to the given core_id\n   */\n  get(core_id: string): Alarm {\n    return this.alarmsArray[this.alarmsIndexes[core_id]] as Alarm;\n  }\n\n  /**\n   * Returns a boolean to check if there is information available about an alarm\n   * @param core_id core_id of the Alarm\n   * @returns {boolean} true if there is information about the alarm\n   */\n  isAlarmIndexAvailable(core_id: string): boolean {\n    return (core_id in this.alarmsIndexes);\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm} associated to a given {@link AlarmConfig}\n  * @param {AlarmConfig} config the corresponding AlarmConfig from where to get the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm} associated to the given {@link AlarmConfig}\n  */\n  getAlarm(config: AlarmConfig): Alarm {\n    if (config) {\n      return this.get(config.alarm_id);\n    }\n  }\n\n  /**\n  * Returns the custom_name of the {@link Alarm} given a corresponding {@link AlarmConfig}.\n  * If there is no custom_name, it returns the alarm_id\n  * @param {AlarmConfig} config the corresponding AlarmConfig from where to get the {@link Alarm}\n  * @returns {string} the name associated to the given {@link AlarmConfig}\n  */\n  getName(config: AlarmConfig): string {\n    if (config) {\n      if (config.custom_name) {\n        return config.custom_name;\n      } else {\n        return config.alarm_id;\n      }\n    }\n  }\n\n  /**\n   * Acknowledges a list of Alarms with a message\n   * @param {string[]} alarm_ids list of ids of the alarms to acknowledge\n   * @param {string} message message of the acknowledgement\n   * @param {string} user user that performs the acknowledgement\n   * @returns {json} response of the HTTP request of the acknowledge\n   */\n  acknowledgeAlarms(alarms_ids: string[], message: string, user: string): any {\n    const data = {\n      'alarms_ids': alarms_ids,\n      'message': message,\n      'user': user\n    };\n    return this.httpClientService.put(BackendUrls.TICKETS_MULTIPLE_ACK, data).pipe(\n    map(\n      (response) => {\n        for (const id of alarms_ids) {\n          const alarm = this.get(id);\n          alarm.acknowledge();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Get information about old tickets related to a target alarm\n   * @param alarm_id id of the target alarm\n   * @returns {any[]} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getMissingAcks(alarm_id: string) {\n    const url = BackendUrls.TICKETS_INFO + '?alarm_id=' + alarm_id;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Gets the open {@link ShelveRegistry} for an {@link Alarm}\n   * @param {string} alarm_id id of the target alarm\n   * @param {number} status id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getShelveRegistries(alarm_id: string, status: number): any {\n    const url = BackendUrls.SHELVE_REGS_FILTER + '?alarm_id=' + alarm_id + '&status=' + status;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string} alarm_id id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @param {string} timeout the timeout for the shelving\n   * @param {string} user the user who performed the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  shelveAlarm(alarm_id: string, message: string, timeout: string, user: string): any {\n    const data = {\n      'alarm_id': alarm_id,\n      'message': message,\n      'timeout': timeout,\n      'user': user\n    };\n    return this.httpClientService.post(BackendUrls.SHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 201) {\n          const alarm = this.get(alarm_id);\n          alarm.shelve();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string[]} alarms_ids id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  unshelveAlarms(alarms_ids: string[], message: string): any {\n    const data = {\n      'alarms_ids': alarms_ids,\n    };\n    return this.httpClientService.put(BackendUrls.UNSHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 200) {\n          for (const id of alarms_ids) {\n            const alarm = this.get(id);\n            alarm.unshelve();\n          }\n        }\n        return response;\n      }\n    ));\n  }\n\n  /******* HANDLING OF ALARM MESSAGES FROM THE CORE *******/\n\n  /**\n  * Get the complete list of alarms from the webserver database\n   * through the websocket\n   */\n  getAlarmList() {\n    this.webSocketBridge.stream(Streams.UPDATES).send({\n      'action': 'list'\n    });\n  }\n\n  /**\n   * Reads an alarm message from the Core and modify the service alarms list\n   * depending on the action value.\n   * @param {string} action create, update or delete\n   * @param {Object} obj dictionary with values for alarm fields (as generic object)\n   */\n  readAlarmMessage(action: string, obj: Object) {\n    if ( action === 'create' || action === 'update' ) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n      this.changeAlarms(alarm.core_id);\n    }\n  }\n\n  /**\n   * Reads a list of alarm messages form the Core and add them to the\n   * service alarms list\n   * @param {Object[]} alarmsList list of dictionaries with values for alarm fields (as generic objects)\n   */\n  readAlarmMessagesList(alarmsList: Object[]) {\n    for (const obj of alarmsList) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n    }\n    this.changeAlarms('all');\n    this.canSound = true;\n  }\n\n  /**\n   * Reads the count by view object received from the webserver\n   * @param {Object} countByView\n   */\n  readCountByViewMessage(countByView: Object) {\n    this.countByView = countByView;\n  }\n\n  /**\n   * Method to clear the count by view if there is the ws connection is closed\n   */\n  resetCountByView() {\n    this.countByView = {};\n  }\n\n  /**\n   * Adds or updates an {@link Alarm} to the AlarmService\n   * @param {Alarm} alarm the {@link Alarm} to add or update\n   */\n  add_or_update_alarm(alarm: Alarm) {\n    let old_alarm_value = Value.cleared;\n    let old_alarm_ack = true;\n    if (alarm.core_id in this.alarmsIndexes) {\n      const old_alarm = this.alarmsArray[this.alarmsIndexes[alarm.core_id]];\n      old_alarm_value = old_alarm.value;\n      old_alarm_ack = old_alarm.ack;\n      this.alarmsArray[this.alarmsIndexes[alarm.core_id]] = alarm;\n    } else {\n      const newLength = this.alarmsArray.push(alarm);\n      this.alarmsIndexes[alarm.core_id] = newLength - 1;\n    }\n    if (old_alarm_value === Value.cleared && alarm.value !== Value.cleared) {\n      if (alarm.sound !== 'NONE') {\n        this.playAlarmSound(alarm);\n      }\n    }\n    if (!old_alarm_ack && alarm.ack) {\n      if (alarm.sound !== 'NONE') {\n        this.clearSoundsIfAck(alarm);\n      }\n    }\n  }\n\n  /**\n   * Reproduces the sound of a given {@link Alarm}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  playAlarmSound(alarm: Alarm) {\n    if (!this.canSound || alarm.shelved) {\n      return;\n    }\n    const repeat = alarm.shouldRepeat();\n    if (repeat) {\n      this.soundingAlarm = alarm.core_id;\n      this.audio.pause();\n      this.emitSound(alarm.sound, repeat);\n    } else if (this.audio.paused) {\n      this.emitSound(alarm.sound, repeat);\n    }\n  }\n\n  /**\n   * Reproduces a sound\n   * @param {string} sound the type of sound to reproduce\n   * @param {boolean} repeat true if the sound should be repeated, false if not\n   */\n  emitSound(sound: string, repeat: boolean) {\n    // console.log('calling emitSound with: ', sound);\n    this.audio = new Audio();\n    const soundToPlay = AlarmSounds.getSoundsource(sound);\n    if (soundToPlay === null || soundToPlay === '') {\n      return;\n    }\n    this.audio.src = soundToPlay;\n    if (repeat) {\n      this.audio.addEventListener('ended', function() {\n        this.currentTime = 0;\n        this.play();\n      }, false);\n    }\n    this.audio.load();\n    this.audio.play();\n  }\n\n  /**\n   * Stops the sound of a given {@link Alarm}, only if the sound is being repeated\n   * It is intended to be used when critical alarms (repeated) are acknowledged.\n   * Once the sound stops, it check there is another non-acknowledged alarm and plays its sound repeatedly,\n   * by calling {@link AlarmService.html#playAlarmSound}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  clearSoundsIfAck(alarm: Alarm) {\n    if (!alarm.shouldRepeat()) {\n      return;\n    }\n    if (this.soundingAlarm === alarm.core_id) {\n      this.audio.pause();\n      this.soundingAlarm = null;\n      for (alarm of this.alarmsArray) {\n        if (!alarm.ack && alarm.sound !== 'NONE' && alarm.shouldRepeat()) {\n          this.soundingAlarm = alarm.core_id;\n          this.playAlarmSound(alarm);\n          return;\n        }\n      }\n    }\n  }\n\n  /******* PERIODIC CHECK OF VALIDITY OF ALARMS *******/\n\n  /**\n   * Set selected state to alarms under an non-valid connection\n   */\n  triggerAlarmsNonValidConnectionState() {\n    for (const alarm of this.alarmsArray) {\n      alarm.validity = Validity.unreliable;\n      this.add_or_update_alarm(Alarm.asAlarm(Object.assign({}, alarm)));\n    }\n    this.changeAlarms('all');\n  }\n\n  /**\n   * Resets the status connection check timer\n   * The timer's period is equal to the broadcastThreshold obtained by {@link CdbService.html#getBroadcastRate}\n   */\n  resetTimer() {\n    if (this.connectionStatusTimer) {\n      this.connectionStatusTimer.unsubscribe();\n      this.connectionStatusStream.next(true);\n    }\n    const broadcastThreshold = this.cdbService.getBroadcastThreshold();\n    this.connectionStatusTimer = interval(1000 * broadcastThreshold).subscribe( () => {\n      this.connectionStatusStream.next(false);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmTileComponent.html":{"url":"components/AlarmTileComponent.html","title":"component - AlarmTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-tile/alarm-tile.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as tiles in the overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-tile\n            \n\n            \n                styleUrls\n                ./alarm-tile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-tile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarmName\n                            \n                            \n                                currentClass\n                            \n                            \n                                showBadgesOptions\n                            \n                            \n                                sizeOptions\n                            \n                            \n                                targetAnimationState\n                            \n                            \n                                tooltipDirectionOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeBlinkingState\n                            \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                disableBlink\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:90\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for change detection in html\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value : 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableBlink\n                    \n                    \n                        Variable to disable animation\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Image set related to the alarm\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Image set related to unrealiable states for the alarm\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by sizeOptions\n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:55\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changeBlinkingState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changeBlinkingState(blinking: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            Function executed to change the blinking state according to a boolean parameter\nIt is executed when the inner AlarmBlinkComponent emits a value on its\nAlarmBlinkComponent EventEmitter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        blinking\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                true if it should blink, false if not\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:171\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the inputs of the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the changes in the Inputs of the component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:90\n                            \n                        \n\n                \n                    \n                        Name of the alarm to display in the box\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentClass:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:85\n                            \n                        \n\n                \n                    \n                        Contains the current classes for displaying the component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBadgesOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showBadgesOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:75\n                            \n                        \n\n                \n                    \n                        Show badges options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:70\n                            \n                        \n\n                \n                    \n                        Size options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetAnimationState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        targetAnimationState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:65\n                            \n                        \n\n                \n                    \n                        Auxiliary variable to follow the status of the animation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipDirectionOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tooltipDirectionOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['right', 'left']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:80\n                            \n                        \n\n                \n                    \n                        Tooltip Direction Options\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, Input, ChangeDetectorRef, SimpleChanges } from '@angular/core';\nimport { AlarmImageSet } from '../alarm/alarm.component';\nimport { Alarm, Value, Validity, OperationalMode } from '../../data/alarm';\n\n\n/**\n * Component used to display alarms as tiles in the overview\n */\n@Component({\n  selector: 'app-alarm-tile',\n  templateUrl: './alarm-tile.component.html',\n  styleUrls: ['./alarm-tile.component.scss'],\n})\nexport class AlarmTileComponent implements OnInit, OnChanges {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n  * Image set related to the alarm\n  */\n  @Input() images: AlarmImageSet;\n\n  /**\n  * Image set related to unrealiable states for the alarm\n  */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Variable to disable animation\n   */\n  @Input() disableBlink = false;\n\n  /**\n   * Auxiliary variable to follow the status of the animation\n   */\n  targetAnimationState: string;\n\n  /**\n  * Size options\n  */\n  sizeOptions = ['xs', 'sm', 'md', 'lg'];\n\n  /**\n  * Show badges options\n  */\n  showBadgesOptions = [true, false];\n\n  /**\n  * Tooltip Direction Options\n  */\n  tooltipDirectionOptions = ['right', 'left'];\n\n  /**\n  * Contains the current classes for displaying the component.\n  */\n  currentClass = [];\n\n  /**\n  * Name of the alarm to display in the box\n  */\n  alarmName = '';\n\n  /**\n  * Builds a new instance\n  * @param {ChangeDetectorRef} cdRef Used for change detection in html\n  */\n  constructor(\n    private cdRef: ChangeDetectorRef\n  ) {\n    this.targetAnimationState = 'tile-background-normal';\n  }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size)  this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('alarm-tile-blue');\n      result.push('alarm-tile-unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('alarm-tile-green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('alarm-tile-blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('alarm-tile-gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('alarm-tile-green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('alarm-tile-yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('alarm-tile-yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('alarm-tile-red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('alarm-tile-red');\n    } else {\n      result.push('alarm-tile-blue');\n    }\n    if (this.alarm.validity === Validity.unreliable && this.alarm.shelved !== true) {\n      result.push('alarm-tile-unreliable');\n    }\n    if (this.targetAnimationState === 'blinking') {\n      result.push('blinking');\n    } else {\n      result.push('tile-background-normal');\n    }\n    return result;\n  }\n\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{alarmName}}\n      \n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./alarm-tile.component.scss\n                \n                .alarm-tile-container {\n  display:block;\n  position: relative;\n}\n\n.alarm-tile-background {\n  position: absolute;\n  border-width: 4px;\n  border-style: solid;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.alarm-tile {\n  position: relative;\n  z-index: 10;\n\n  .alarm-tile-content {\n\n    padding: 48px;\n    padding-top: 38px;\n    padding-bottom: 68px;\n\n    .title {\n      text-transform: uppercase;\n      padding-bottom: 10px;\n      text-align: center;\n    }\n\n    .alarm {\n      display: inline-flex;\n      width: 100%;\n\n      app-alarm {\n        margin: auto;\n      }\n\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{alarmName}}                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmTooltipComponent.html":{"url":"components/AlarmTooltipComponent.html","title":"component - AlarmTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-tooltip/alarm-tooltip.component.ts\n\n\n    \n        Description\n    \n    \n        Component that defines the content and layout of the tooltip over Alarm Components\nIn order to use it you have to put the AlarmTooltipComponent inside an ng-template\nand assign the ng-template to the main container of the parent component with some additional paramenters,\nsuch as data-container=\"body\".\nFor example:\n\n   \n     \n   \n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-tooltip\n            \n\n            \n                styleUrls\n                ./alarm-tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-tooltip.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateFormat\n                            \n                            \n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:43\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:37\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\nInitializes the dateFormat and timezone\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:40\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timezone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timezone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:43\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\nimport { Locale } from '../../settings';\n\n/**\n* Component that defines the content and layout of the tooltip over Alarm Components\n* In order to use it you have to put the {@link AlarmTooltipComponent} inside an ng-template\n* and assign the ng-template to the main container of the parent component with some additional paramenters,\n* such as data-container=\"body\".\n*\n* For example:\n*\n* \n*   \n*     \n*   \n**/\n@Component({\n  selector: 'app-alarm-tooltip',\n  templateUrl: './alarm-tooltip.component.html',\n  styleUrls: ['./alarm-tooltip.component.scss']\n})\nexport class AlarmTooltipComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /** String to store the formatting of dates, read form the settings */\n  dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  timezone: string;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  * Initializes the dateFormat and timezone\n  */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Alarm ID\n      {{alarm?.core_id}}\n    \n    \n      Description\n      {{ alarm?.description }}\n    \n    \n      Last Change\n      {{ alarm?.timestamp | date: dateFormat: timezone }}\n    \n  \n  \n    \n      Last Properties\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./alarm-tooltip.component.scss\n                \n                ::ng-deep .tooltip {\n  animation-name: delayedFadeIn;\n  animation-duration: 0.5s; /* Control animation time */\n}\n\n::ng-deep .tooltip-inner {\n  font-size: 11px;\n  min-width: 350px;\n  max-width: 500px;\n  font-family: monospace;\n  vertical-align: top;\n  text-align: left;\n  background: rgba(0, 0, 0, 0.85);\n\n  table {\n    vertical-align: top;\n  }\n\n  th {\n    width: 120px;\n    vertical-align: top;\n  }\n\n  .props-container {\n    padding: 10px 0 0 0;\n\n    .props-container-title {\n      padding-bottom: 4px;\n      font-weight: bold;\n    }\n\n    .props-table-container {\n      overflow-y: auto;\n      overflow-x: auto;\n    }\n  }\n}\n\n@keyframes delayedFadeIn {\n  0% {opacity: 0;}\n  75% {opacity: 0;} /* Set this to 99% for no fade-in. */\n  100% {opacity: 1;}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Alarm ID      {{alarm?.core_id}}              Description      {{ alarm?.description }}              Last Change      {{ alarm?.timestamp | date: dateFormat: timezone }}                  Last Properties          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n\n               "},"components/AntennaMarkerComponent.html":{"url":"components/AntennaMarkerComponent.html","title":"component - AntennaMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennaMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display an Antenna in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antenna-marker\n            \n\n            \n                styleUrls\n                ./antenna-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antenna-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNgClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                cx\n                            \n                            \n                                cy\n                            \n                            \n                                placemark\n                            \n                            \n                                r\n                            \n                            \n                                viewbox\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        The Alarm to associate to the antenna \n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cx\n                    \n                    \n                        The position of the antenna in the X axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cy\n                    \n                    \n                        The position of the antenna in the Y axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placemark\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : {'name': '', 'opt_cx': 0, 'opt_cy': 0}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        r\n                    \n                    \n                        Radius of the antenna \n\n                        \n                            Default value : 1\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewbox\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : '0 0 10 10'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNgClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNgClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class that should be used to draw the marker\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:41\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:40\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle antennas configuration\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the CSS class that should be used to draw the marker\n   */\n  getNgClass() {\n    let colorClass = 'green';\n    if (this.alarm.shelved === true) {\n      colorClass = 'green';\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      colorClass = 'blue';\n    } else if (this.alarm.showAsMaintenance()) {\n      colorClass = 'grey';\n    } else if (this.alarm.value === Value.cleared) {\n      colorClass = 'green';\n    } else if (this.alarm.value === Value.set_low) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_medium) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_high) {\n      colorClass = 'red';\n    } else if (this.alarm.value === Value.set_critical) {\n      colorClass = 'red';\n    } else {\n      colorClass = 'green';\n    }\n\n    if (this.alarm.validity === 0) {\n      return [colorClass, 'unreliable'];\n    } else {\n      return [colorClass];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./antenna-marker.component.scss\n                \n                .antenna-marker {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennaMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasComponent.html":{"url":"components/AntennasComponent.html","title":"component - AntennasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas/antennas.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Antennas Alarms both in a sidebar (instantiated in a AntennasSidebar),\nand a map (instantiated by a AntennasMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas\n            \n\n            \n                styleUrls\n                ./antennas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSelectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSelectedAntenna(selectedAntenna: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedAntenna\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAntenna:     AlarmConfig\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n* Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\n* and a map (instantiated by a {@link AntennasMap})\n*/\n@Component({\n  selector: 'app-antennas',\n  templateUrl: './antennas.component.html',\n  styleUrls: ['./antennas.component.scss']\n})\nexport class AntennasComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedAntenna: AlarmConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AlarmConfig}\n   */\n  updateSelectedAntenna(selectedAntenna: AlarmConfig): void {\n    this.selectedAntenna = selectedAntenna;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./antennas.component.scss\n                \n                mat-sidenav-container {\n  background: transparent;\n  height: 100%;\n}\n\n#antennas-map {\n}\n\n#antennas-sidenav {\n  background: transparent;\n  width: 960px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AntennasModule.html":{"url":"modules/AntennasModule.html","title":"module - AntennasModule","body":"\n                   \n\n\n\n\n    Modules\n    AntennasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAntennasModule -->\n\nTabularModule->AntennasModule\n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/antennas/antennas.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AntennaMarkerComponent\n                        \n                        \n                            AntennasComponent\n                        \n                        \n                            AntennasMapComponent\n                        \n                        \n                            AntennasSidebarComponent\n                        \n                        \n                            AntennasSummaryComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AntennasService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TabularModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AntennasSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AntennasComponent } from './antennas/antennas.component';\nimport { AntennasMapComponent } from './antennas-map/antennas-map.component';\nimport { AntennasSidebarComponent } from './antennas-sidebar/antennas-sidebar.component';\nimport { DataModule } from '../data/data.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { TabularModule } from '../tabular/tabular.module';\nimport { AntennasService } from './antennas.service';\nimport { AntennaMarkerComponent } from './antennas-map-markers/antenna-marker/antenna-marker.component';\nimport { AntennasSummaryComponent } from './antennas-summary/antennas-summary.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    ActionsModule,\n    IasMaterialModule,\n    MapModule,\n    SharedModule,\n    TabularModule,\n  ],\n  providers: [\n    AntennasService\n  ],\n  declarations: [\n    AntennasComponent,\n    AntennasMapComponent,\n    AntennasSidebarComponent,\n    AntennaMarkerComponent,\n    AntennasSummaryComponent\n  ],\n  exports: [\n    AntennasSummaryComponent\n  ]\n})\nexport class AntennasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AntennasService.html":{"url":"injectables/AntennasService.html","title":"injectable - AntennasService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AntennasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the AntennasModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                antennaImageSet\n                            \n                            \n                                    Public\n                                antennaImageUnreliableSet\n                            \n                            \n                                    Public\n                                antennasConfig\n                            \n                            \n                                    Public\n                                antennasMapName\n                            \n                            \n                                    Public\n                                antennasSummaryConfig\n                            \n                            \n                                    Public\n                                devicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                loadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas.service.ts:36\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the initialize method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Define the icons used by this module components\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:36\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:30\n                            \n                        \n\n                \n                    \n                        Set of antenna icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:33\n                            \n                        \n\n                \n                    \n                        Set of antenna Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:18\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for each antenna *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : AntennasSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:24\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasSummaryConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:27\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the antennas summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devicesConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devicesConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:21\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for other devices related with the array *\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AlarmConfig } from '../data/alarm-config';\nimport { Assets } from '../settings';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** List of Alarm configuration for each antenna **/\n  public antennasConfig: AlarmConfig [] = [];\n\n  /** List of Alarm configuration for other devices related with the array **/\n  public devicesConfig: AlarmConfig [] = [];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: AlarmConfig [] = [];\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      this.antennasConfig = response['antennas'] as AlarmConfig[];\n      this.devicesConfig = response['devices'] as AlarmConfig[];\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as AlarmConfig[];\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSidebarComponent.html":{"url":"components/AntennasSidebarComponent.html","title":"component - AntennasSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Display used to show the list of antennas' alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-sidebar\n            \n\n            \n                styleUrls\n                ./antennas-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarmChangeSubscription\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                antennasService\n                            \n                            \n                                childrenIds\n                            \n                            \n                                dependenciesIds\n                            \n                            \n                                tableIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getAntennas\n                            \n                            \n                                getDevices\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                unselectAntenna\n                            \n                            \n                                updateChildrenIds\n                            \n                            \n                                updateTableIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                antennaClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(antennasService: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:36\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Selected antenna object, null if it is nothing selected \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        antennaClicked\n                    \n                    \n                        Event emitted to notify when an antenna is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Return the list of antennas Alarm configuration\n\n\n                            \n                            \n                            \n                                Returns :     AlarmConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Return the list of Alarm configuration for global devices\n\n\n                            \n                            \n                            \n                                Returns :     AlarmConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(alarmConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Indicates if the antenna is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Executed after the component, or its inputs are changed\nCurrently updates the childrenIds and the tableIds whenever the selectedAntenna changes\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is destryed\nCurrently, unsubscribes from changes in Alarms form AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(alarmConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:146\n                            \n                        \n\n\n                \n                    \n                            Action performed when the antenna is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked antenna\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unselectAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nunselectAntenna()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            If there is a selected antenna it will be unselected\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateChildrenIds\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateChildrenIds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTableIds\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTableIds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmChangeSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmChangeSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:27\n                            \n                        \n\n                \n                    \n                        Subscription to changes in Alarms\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:46\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:45\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childrenIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        childrenIds:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        List that contains the core_ids of the alarms associated to the children of the selectedAntenna \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dependenciesIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dependenciesIds:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:33\n                            \n                        \n\n                \n                    \n                        List that contains the core_ids of the dependencies of the Alarm of the selectedAntenna \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableIds:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:36\n                            \n                        \n\n                \n                    \n                        List that contains the core_ids of the alarms to be passed ot the Table \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, OnChanges, OnDestroy, Input, Output } from '@angular/core';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n * Display used to show the list of antennas' alarms\n */\n@Component({\n  selector: 'app-antennas-sidebar',\n  templateUrl: './antennas-sidebar.component.html',\n  styleUrls: ['./antennas-sidebar.component.scss']\n})\nexport class AntennasSidebarComponent implements OnInit, OnChanges, OnDestroy {\n\n  /** Selected antenna object, null if it is nothing selected */\n  @Input() selectedAntenna: AlarmConfig = null;\n\n  /** Event emitted to notify when an antenna is selected */\n  @Output() antennaClicked = new EventEmitter();\n\n  /**\n   * Subscription to changes in Alarms\n   */\n  alarmChangeSubscription: ISubscription;\n\n  /** List that contains the core_ids of the alarms associated to the children of the {@link selectedAntenna} */\n  childrenIds = [];\n\n  /** List that contains the core_ids of the dependencies of the {@link Alarm} of the {@link selectedAntenna} */\n  dependenciesIds = [];\n\n  /** List that contains the core_ids of the alarms to be passed ot the Table */\n  tableIds = [];\n\n  /**\n  * Builds an instance of the component\n  * @param {AntennasService} antennasService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {RoutingService} routing Service used to redirect to other views\n   */\n  constructor(\n    public antennasService: AntennasService,\n    public alarmService: AlarmService\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n    this.alarmChangeSubscription = this.alarmService.alarmChangeStream.subscribe( (change) => {\n      if ( this.selectedAntenna && (change === 'all' || change === this.selectedAntenna) ) {\n        this.updateTableIds();\n      }\n    });\n  }\n\n  /**\n   * Executed after the component, or its inputs are changed\n   * Currently updates the {@link childrenIds} and the {@link tableIds} whenever the {@link selectedAntenna} changes\n   */\n  ngOnChanges() {\n    this.updateChildrenIds();\n    this.updateTableIds();\n  }\n\n  /**\n  * Executed when the component is destryed\n  * Currently, unsubscribes from changes in {@link Alarm}s form {@link AlarmService}\n  */\n  ngOnDestroy() {\n    if (this.alarmChangeSubscription) {\n      this.alarmChangeSubscription.unsubscribe();\n    }\n  }\n\n  updateChildrenIds() {\n    this.childrenIds = [];\n    if (this.selectedAntenna && this.selectedAntenna.children) {\n      for (const child of this.selectedAntenna.children) {\n        this.childrenIds.push(child.alarm_id);\n      }\n    }\n  }\n\n  updateTableIds() {\n    const alarm = this.alarmService.getAlarm(this.selectedAntenna);\n    if (!alarm) {\n      this.tableIds = this.childrenIds;\n    } else if (this.dependenciesIds !== alarm.dependencies) {\n      this.dependenciesIds = alarm.dependencies.slice();\n      this.tableIds = Array.from(new Set(this.childrenIds.concat(this.dependenciesIds)));\n    }\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Return the list of antennas Alarm configuration\n  * @returns {list} list of {@link AlarmConfig}\n  */\n  getAntennas(): AlarmConfig [] {\n    return this.antennasService.antennasConfig;\n  }\n\n  /**\n  * Return the list of Alarm configuration for global devices\n  * @returns {list} list of {@link AlarmConfig}\n  */\n  getDevices(): AlarmConfig [] {\n    return this.antennasService.devicesConfig;\n  }\n\n  /**\n  * If there is a selected antenna it will be unselected\n  */\n  unselectAntenna() {\n    this.selectedAntenna = null;\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n  * Indicates if the antenna is selected or not\n  * @param {AlarmConfig} alarmConfig configuration of the alarm\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(alarmConfig: AlarmConfig): boolean {\n    return this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark);\n  }\n\n  /**\n  * Action performed when the antenna is clicked\n  * @param {AlarmConfig} alarmConfig configuration of the clicked antenna\n  */\n  onClick(alarmConfig: AlarmConfig) {\n    if ( this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark) ) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = alarmConfig;\n    }\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n     \n  \n\n\n\n\n   ANTENNAS \n\n\n\n\n    \n      chevron_left\n       {{alarmService.getName(this.selectedAntenna)}} \n    \n\n\n\n\n  \n    \n      \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n          Alarm ID\n          {{this.selectedAntenna.alarm_id}}\n        \n        \n          Antenna (Pad)\n          {{this.alarmService.getName(selectedAntenna)}} ({{this.selectedAntenna.placemark}})\n        \n      \n    \n    \n      \n    \n  \n\n  \n    \n      Antenna devices alarms\n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./antennas-sidebar.component.scss\n                \n                .antennas-sidebar-card {\n  padding: 0 12px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  .antennas-sidebar-title {\n    padding: 12px 0px;\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n\n    .return-link {\n      cursor: pointer;\n\n      i {\n        vertical-align: middle;\n        font-size: 25px;\n      }\n\n      span {\n        vertical-align: middle;\n      }\n    }\n  }\n\n  .antennas-sidebar-content {\n    padding: 12px 0px;\n    height: 100%;\n    overflow-y: auto;\n\n    .antennas-container {\n      margin: 6px 0px 20px 0px;\n\n      .grid-container {\n        display: grid;\n        grid-template-columns: auto auto auto auto auto auto auto auto auto auto;\n        grid-column-gap: 10px;\n        grid-row-gap: 10px;\n\n        .grid-item {\n          height: 60px;\n          line-height: 62px;\n          border-radius: 4px;\n          padding: 0;\n          position: relative;\n          cursor: pointer;\n        }\n\n      }\n    }\n\n    .global-devices-container {\n      margin: 20px 0px 6px 0px;\n\n      .grid-container {\n        display: grid;\n        grid-template-columns: auto auto auto;\n        grid-column-gap: 10px;\n        grid-row-gap: 10px;\n\n        .grid-item {\n          height: 60px;\n          line-height: 62px;\n          border-radius: 4px;\n          padding: 0;\n          position: relative;\n          cursor: pointer;\n        }\n\n      }\n\n    }\n\n    .antennas-detail {\n\n      margin-left: 28px;\n      margin-right: 28px;\n\n      &.alarm-info {\n        padding-bottom: 12px;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n        border-bottom-color: rgba(255, 255, 255, 0.12);\n        display: flex;\n        flex-flow: row;\n\n        .header {\n          font-weight: bold;\n        }\n\n        .alarm-buttons {\n          flex: 1 1 auto;\n          align-self: center;\n        }\n\n        table {\n          vertical-align: top;\n        }\n\n        th {\n          padding-right: 16px;\n          font-weight: normal;\n        }\n      }\n\n      &.subalarms {\n        // padding-top: 20px;\n\n        .subalarms-header {\n          padding: 20px 0 10px 0px;\n          font-weight: bold;\n        }\n      }\n\n      &.devices-alarms {\n\n        padding-top: 20px;\n\n        table {\n            width: 100%;\n        }\n\n        td {\n          padding: 5px;\n          height: 40px;\n\n          &.antenna {\n            padding-left: 0px;\n            font-weight: bold;\n            width: 25%;\n          }\n\n          &.device {\n            padding-left: 20px;\n            font-weight: bold;\n            width: 40%;\n          }\n        }\n        .icon {\n          padding-left: 20px;\n          height: 30px;\n          width: fit-content;\n        }\n        .text {\n          padding-left: 0;\n          height: 30px;\n          width: 75%;\n          text-align: left;\n        }\n        .status {\n          padding-left: 20px;\n        }\n        .buttons {\n          width: 60%;\n        }\n      }\n\n      &.footer {\n        width: 100%;\n        font-size: 14px;\n        display: table;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n        padding-top: 50px;\n\n        button {\n          margin: 0px 10px 0px 10px;\n        }\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ANTENNAS           chevron_left       {{alarmService.getName(this.selectedAntenna)}}                                                                                                                                                                                                                                                                 Alarm ID          {{this.selectedAntenna.alarm_id}}                          Antenna (Pad)          {{this.alarmService.getName(selectedAntenna)}} ({{this.selectedAntenna.placemark}})                                              Antenna devices alarms              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSummaryComponent.html":{"url":"components/AntennasSummaryComponent.html","title":"component - AntennasSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-summary/antennas-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the Antennas Arrays\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-summary\n            \n\n            \n                styleUrls\n                ./antennas-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, antennasService: AntennasService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:15\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get Antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        Service used to get Antennas configuration\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:41\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Summarized state of the Antennas Arrays\n */\n@Component({\n  selector: 'app-antennas-summary',\n  templateUrl: './antennas-summary.component.html',\n  styleUrls: ['./antennas-summary.component.scss']\n})\nexport class AntennasSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {AntennasService} antennasService Service used to get Antennas configuration\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public antennasService: AntennasService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    const conf = this.antennasService.antennasSummaryConfig;\n    if (conf && conf[0]) {\n      return this.alarmService.getAlarm(conf[0]);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Antennas View\n   */\n  redirect() {\n    this.routing.goToAntennas();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./antennas-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSidenav\n                            \n                            \n                                    Public\n                                actionsSidenavService\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isNavigationCompacted\n                            \n                            \n                                navigationSidenavItems\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionsLink\n                            \n                            \n                                getNavItemCountClass\n                            \n                            \n                                getNavItemCountText\n                            \n                            \n                                getUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, authService: AuthService, userService: UserService, actionsSidenavService: SidenavService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:68\n                            \n                        \n\n                \n                    \n                            Builds an instance of the application, with its related services and complements\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used for authentication\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage information about user accounts\n\n                                                        \n                                                \n                                                \n                                                        actionsSidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for the navigation\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular material registry for custom icons\n\n                                                        \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionsLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionsLink(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Returns the links for the router outlets to navigate the different views,\nconsidering of the actionsSidenav can be closed or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an item of the navigation sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    The links in a dictionary\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountClass(navItem: any, countByView: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:181\n                            \n                        \n\n\n                \n                    \n                            Method to get the class related to the count of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the countByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the classname for the nav item mark\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountText(navItem: any, countByView: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:210\n                            \n                        \n\n\n                \n                    \n                            Method to get the text related to the mark of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the counterByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text related to the count for the nav item\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            Method to get the username\n\" Uses the getUser method defined on the AuthService\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the username\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Method to logout an authenticated user\n\" Uses the logout method defined on the AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Method executed when the application is initiated\nInitializes the AlarmService and passes its actionsSidenav to the ActionsSidenavService for it to control it\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isNavigationCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('actionsSidenav')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Reference to the Actions sidenav (right sidenav)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:85\n                            \n                        \n\n                \n                    \n                        Service for the navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:82\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms of this component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:83\n                            \n                        \n\n                \n                    \n                        Service used for authentication\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavigationCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isNavigationCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationSidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navigationSidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                        Navigation Sidenav Menu of the application (left sidenav) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:88\n                            \n                        \n\n                \n                    \n                        instance of an Angular {\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userService:     UserService\n\n                    \n                \n                    \n                        \n                            Type :     UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:84\n                            \n                        \n\n                \n                    \n                        Service used to manage information about user accounts\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AlarmService } from './data/alarm.service';\nimport { SidenavService } from './actions/sidenav.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthService } from './auth/auth.service';\nimport { UserService } from './data/user.service';\nimport { Router } from '@angular/router';\n\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n  * Reference to the Actions sidenav (right sidenav)\n  */\n  @ViewChild('actionsSidenav') public actionsSidenav: MatSidenav;\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isNavigationCompacted = true;\n\n  // TODO: Use only custom svgIcons\n  /** Navigation Sidenav Menu of the application (left sidenav) */\n  navigationSidenavItems = [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ];\n\n\n  /**\n   * Builds an instance of the application, with its related services and complements\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   * @param {AuthService} authService Service used for authentication\n   * @param {UserService} userService Service used to manage information about user accounts\n   * @param {SidenavService} actionsSidenavService Service for the navigation\n   * @param {MatIconRegistry} matIconRegistry Angular material registry for custom icons\n   * @param {DomSanitizer} matIconRegistry Angular material DOM sanitizer for custom icons\n   * @param {Router} router instance of an Angular {@link Router} to handle routing\n   */\n  constructor(\n    public alarmService: AlarmService,\n    public authService: AuthService,\n    public userService: UserService,\n    public actionsSidenavService: SidenavService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    public router: Router,\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ias_overview',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-overview.svg')\n      )\n      .addSvgIcon(\n        'ias_weather',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-weather.svg')\n      )\n      .addSvgIcon(\n        'ias_antenna',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-antenna.svg')\n      )\n      .addSvgIcon(\n        'ias_table',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-table.svg')\n      );\n  }\n\n  /**\n   * Method executed when the application is initiated\n   * Initializes the {@link AlarmService} and passes its {@link actionsSidenav} to the {@link ActionsSidenavService} for it to control it\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n    this.actionsSidenavService.setSidenav(this.actionsSidenav);\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.actionsSidenavService.close();\n          this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n        } else if (value === true) {\n          this.userService.requestUsersList();\n        }\n      }\n    );\n  }\n\n  /**\n  * Returns the links for the router outlets to navigate the different views,\n  * considering of the actionsSidenav can be closed or not\n  * @param {any} item an item of the navigation sidenav\n  * @returns {Object} The links in a dictionary\n  */\n  getActionsLink(item: any): Object {\n    if (this.actionsSidenavService.canClose) {\n      return {outlets: { primary: item.link, actions: null }};\n    } else {\n      return {outlets: { primary: item.link }};\n    }\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isNavigationCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isNavigationCompacted = !this.isNavigationCompacted;\n    return this.isNavigationCompacted;\n  }\n\n  /**\n   * Method to get the username\n   \" Uses the getUser method defined on the {@link AuthService}\n   * @returns {string} the username\n   */\n  getUser(): string {\n    return this.authService.getUser();\n  }\n\n  /**\n   * Method to logout an authenticated user\n   \" Uses the logout method defined on the {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Method to get the class related to the count of the nav items\n   * to highlight or not the presence of unack alarms by view\n   \" It is expected to use the countByView\n   * defined on the {@link AlarmService}\n   * and the configuration defined in the navigationSidenavItems\n   * variable\n   * @returns {string} the classname for the nav item mark\n   */\n   getNavItemCountClass(navItem: any, countByView: any): string {\n     const navItemCounter = navItem.counter;\n     const availableCounters = Object.keys(countByView);\n     if (navItemCounter === '') {\n       return 'hide-count';\n     } else {\n       if (availableCounters.indexOf(navItemCounter) > -1) {\n         if (countByView[navItemCounter] > 0) {\n           return 'nonzero-count';\n         }\n         if (countByView[navItemCounter] === 0) {\n           return 'zero-count';\n         }\n       } else {\n         return 'unknown-count';\n       }\n\n     }\n   }\n\n   /**\n    * Method to get the text related to the mark of the nav items\n    * to highlight or not the presence of unack alarms by view\n    \" It is expected to use the counterByView\n    * defined on the {@link AlarmService}\n    * and the configuration defined in the navigationSidenavItems\n    * variable\n    * @returns {string} the text related to the count for the nav item\n    */\n    getNavItemCountText(navItem: any, countByView: any): string {\n      const navItemCounter = navItem.counter;\n      const availableCounters = Object.keys(countByView);\n      if (navItemCounter === '') {\n        return '';\n      } else {\n        if (availableCounters.indexOf(navItemCounter) > -1) {\n          const count = countByView[navItemCounter];\n          if (count >= 0) {\n            if (count 100');\n            }\n          } else {\n            return String(count);  // this case should not happen\n          }\n        } else {\n          return '?';\n        }\n\n      }\n    }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n      \n       Integrated Alarm System \n    \n    \n      \n        account_circle {{ this.getUser() }}\n      \n      \n        \n          exit_to_appLog out\n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                {{ getNavItemCountText(item, alarmService.countByView) }}\n              \n              \n                \n                  {{ item.icon }}\n                \n                \n                  {{ item.icon }}\n                \n              \n            \n            {{ item.title }} \n          \n        \n      \n    \n\n    \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                html, body {\n  box-sizing: border-box;\n  height: 100%;\n  margin: 0;\n}\n\n#app-toolbar {\n\n  padding: 0;\n\n  .btn-wrapper {\n    padding: 0 16px;\n  }\n\n  .content-wrapper {\n    padding: 0 16px;\n    width: 100%;\n  }\n\n  .user-wrapper {\n    padding: 0 24px;\n  }\n\n  img.ias-logo {\n    width: 35px;\n    margin-right: 10px;\n  }\n\n}\n\n#actions-sidenav  {\n  width: 500px;\n  min-height: 100%;\n}\n\n\n#main-content  {\n  height: calc(100vh - 64px) !important;\n}\n\n#navigation-sidenav {\n\n  min-width: 70px;\n\n  p {\n    padding-right: 50px;\n  }\n\n  /deep/ .mat-list-item-content {\n    padding: 0px 12px;\n  }\n\n  /deep/ .mat-list-text {\n    padding-left: 0;\n    width: 74%;\n  }\n\n  mat-nav-list a.mat-list-item {\n\n    height: 86px;\n\n    mat-icon {\n      height: 44px;\n      width: 44px;\n    }\n\n    &.active-link {\n\n      /deep/ .mat-line {\n        font-weight: bold;\n      }\n\n    }\n\n  }\n\n  &.compacted {\n\n    width: unset;\n\n    .ias.ias-logo-container {\n      padding: .725rem 0;\n      width: 60%;\n      left: 20%;\n    }\n\n    img.ias.ias-logo {\n      width: 30px;\n    }\n\n    mat-nav-list a.mat-list-item {\n\n      padding-left: 0px;\n\n    }\n\n  }\n\n}\n\n\n.ias-nav-button-container {\n\n  .ias-count-label {\n    position: absolute;\n    top: 9px;\n    right: 7px;\n    text-align: center;\n    font-weight: 700;\n\n    &.hide-count {\n      display: none;\n    }\n\n    &.nonzero-count {\n      font-size: 10px;\n      border-radius: .25em;\n      padding: 2.75px 5px;\n      border-width: 0px;\n      border-style: hidden;\n    }\n\n    &.zero-count {\n      display: none;\n    }\n\n    &.unknown-count {\n      font-size: 11px;\n      border-radius: .25em;\n      border-width: 2px;\n      border-style: solid;\n      padding: 0px 2px;\n    }\n\n  }\n\n  .ias-icon {\n    display: inline-block;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                           Integrated Alarm System                       account_circle {{ this.getUser() }}                              exit_to_appLog out                                                                                            {{ getNavItemCountText(item, alarmService.countByView) }}                                                              {{ item.icon }}                                                  {{ item.icon }}                                                      {{ item.title }}                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Application module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            AntennasModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            OverviewModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TabularModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BASE_HREF, DatePipe } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { DataModule } from './data/data.module';\nimport { ActionsModule } from './actions/actions.module';\nimport { AntennasModule } from './antennas/antennas.module';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { HealthModule } from './health/health.module';\nimport { MapModule } from './map/map.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { AppComponent } from './app.component';\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    ActionsModule,\n    AntennasModule,\n    AppRoutingModule,\n    AuthModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n    MapModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nMaterialSandboxModule\n\nMaterialSandboxModule\n\nAppRoutingModule -->\n\nMaterialSandboxModule->AppRoutingModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MaterialSandboxComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RoutingService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IasMaterialModule\n                        \n                        \n                            MaterialSandboxModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutingService } from './routing.service';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { AckComponent } from '../actions/ack/ack.component';\nimport { AntennasComponent } from '../antennas/antennas/antennas.component';\nimport { MaterialSandboxComponent } from '../material-sandbox/material-sandbox.components';\nimport { MaterialSandboxModule } from '../material-sandbox/material-sandbox.module';\nimport { OverviewComponent } from '../overview/overview/overview.component';\nimport { ShelveComponent } from '../actions/shelve/shelve.component';\nimport { TabularViewComponent } from '../tabular/tabular-view/tabular-view.component';\nimport { WeatherComponent } from '../weather/weather/weather.component';\nimport { AuthLoginGuard } from '../auth/auth-login.guard';\nimport { LoginComponent } from '../auth/login/login.component';\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent},\n  { path: 'overview', component: OverviewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular/:filter', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'acknowledge/:alarmID', component: AckComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'shelve/:alarmID', component: ShelveComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'weather', component: WeatherComponent, canActivate: [AuthLoginGuard]},\n  { path: 'sandbox', component: MaterialSandboxComponent, canActivate: [AuthLoginGuard]},\n  { path: 'antennas', component: AntennasComponent, canActivate: [AuthLoginGuard]},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    MaterialSandboxModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthLoginGuard.html":{"url":"guards/AuthLoginGuard.html","title":"guard - AuthLoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthLoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth-login.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-login.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Builds an instance of the guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:31\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next activated route\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next state of router navigation, used to retrieve the url that is going to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckLogin(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:42\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged in.\nIf false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the nexturl to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n/**\n* Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthLoginGuard implements CanActivate {\n\n  /**\n  * Builds an instance of the guard\n  * @param {AuthService} authService service used to check and handle authorization\n  * @param {Router} router Angular router used to navigate the application\n  */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n  * Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n  * @param {ActivatedRouteSnapshot} next the next activated route\n  * @param {RouterStateSnapshot} state the next state of router navigation, used to retrieve the url that is going to be navigated\n  * @returns {Observable} true if navigation is permitted, false if not\n  */\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n\n  /**\n  * Checks wether or not the user is logged in.\n  * If false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n  * @param {string} url the nexturl to be navigated\n  * @returns {boolean} true if navigation is permitted, false if not\n  */\n  checkLogin(url: string): Observable {\n    return this.authService.hasValidToken().pipe(map((response: any) => {\n      if (response === true) {\n        return true;\n      } else {\n        // Store the attempted URL for redirecting\n        this.authService.redirectUrl = url;\n\n        // Navigate to the login page with extras\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }));\n\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IasMaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoginComponent } from './login/login.component';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    IasMaterialModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to request and handle tokens and authorization\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ACTIONS_STORAGE_NAME\n                            \n                            \n                                loginStatus\n                            \n                            \n                                    Public\n                                loginStatusStream\n                            \n                            \n                                redirectUrl\n                            \n                            \n                                TOKEN_STORAGE_NAME\n                            \n                            \n                                USER_STORAGE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLoginStatus\n                            \n                            \n                                getAllowedActions\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                hasValidToken\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                removeAllowedActions\n                            \n                            \n                                removeToken\n                            \n                            \n                                removeUser\n                            \n                            \n                                storeAllowedActions\n                            \n                            \n                                storeToken\n                            \n                            \n                                storeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:46\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient used to request the token for authentication\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLoginStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeLoginStatus(status: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:60\n                            \n                        \n\n\n                \n                    \n                            Changes the loginStatus and sneds the corresponding update in the loginStatusStream\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the new login status\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:176\n                            \n                        \n\n\n                \n                    \n                            Returns the user permission over the specified action stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    the permission as a boolean\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:150\n                            \n                        \n\n\n                \n                    \n                            Returns the token stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the token as a string, or undefined if there is no token\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:163\n                            \n                        \n\n\n                \n                    \n                            Returns the user stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the user name as a string, or undefined if there is no user\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValidToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasValidToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:86\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged-in, which is true if there is a valid token\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if there is a valid token, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:117\n                            \n                        \n\n\n                \n                    \n                            Requests a token from the server, sending user and password information.\nSaves the token in the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the user\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the password of the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of true if the login is successful, observable of false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:140\n                            \n                        \n\n\n                \n                    \n                            Logs out of the server by deleting the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:202\n                            \n                        \n\n\n                \n                    \n                            Deletes the allowed_actions from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:188\n                            \n                        \n\n\n                \n                    \n                            Deletes the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:195\n                            \n                        \n\n\n                \n                    \n                            Deletes the user from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreAllowedActions(allowed_actions: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:228\n                            \n                        \n\n\n                \n                    \n                            Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allowed_actions\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            Stores a given the token in the local storage, replacing the previous token, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the token to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreUser(user: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:219\n                            \n                        \n\n\n                \n                    \n                            Stores a given the user in the local storage, replacing the previous user, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIONS_STORAGE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ACTIONS_STORAGE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IAS-ACTIONS'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:30\n                            \n                        \n\n                \n                    \n                        Name for the browser to use in order to save the allowed actions in the local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginStatus:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                        Store if the user is logged in or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginStatusStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginStatusStream:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:46\n                            \n                        \n\n                \n                    \n                        Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:35\n                            \n                        \n\n                \n                    \n                        Store the URL so we can redirect after logging in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_STORAGE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_STORAGE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IAS-TOKEN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                        Name for the browser to use in order to save the token in the local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_STORAGE_NAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        USER_STORAGE_NAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IAS-USER'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Name for the browser to use in order to save the user in the local storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { BackendUrls } from '../settings';\nimport { environment } from '../../environments/environment';\n\n\n/**\n* Service used to request and handle tokens and authorization\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n  * Name for the browser to use in order to save the token in the local storage\n  */\n  TOKEN_STORAGE_NAME = 'IAS-TOKEN';\n\n  /**\n  * Name for the browser to use in order to save the user in the local storage\n  */\n  USER_STORAGE_NAME = 'IAS-USER';\n\n  /**\n  * Name for the browser to use in order to save the allowed actions in the local storage\n  */\n  ACTIONS_STORAGE_NAME = 'IAS-ACTIONS';\n\n  /**\n  * Store the URL so we can redirect after logging in\n  */\n  redirectUrl: string;\n\n\n  /**\n  * Store if the user is logged in or not\n  */\n  loginStatus = false;\n\n  /**\n  * Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n  */\n  public loginStatusStream = new BehaviorSubject(null);\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClient} http Angular HttpClient used to request the token for authentication\n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Changes the {@link loginStatus} and sneds the corresponding update in the {@link loginStatusStream}\n   * @param {boolean} status the new login status\n   */\n  changeLoginStatus(status: boolean) {\n    this.loginStatus = status;\n    this.loginStatusStream.next(status);\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n   * Checks wether or not the user is logged-in, which is true if there is a valid token\n   * @returns { Observable} true if there is a valid token, false if not\n   */\n  hasValidToken(): Observable {\n    if (!this.getToken()) {\n      this.changeLoginStatus(false);\n      return of(false);\n    } else {\n      const url = `${environment.httpUrl}${BackendUrls.VALIDATE_TOKEN}`;\n      return this.http.get(url, {headers: this.getHttpHeaders()} ).pipe(\n        map((response: any) => {\n          const user_data = response['user_data'];\n          const allowed_actions = response['allowed_actions'];\n          this.storeUser(user_data['username']);\n          this.storeAllowedActions(allowed_actions);\n          this.changeLoginStatus(true);\n          return true;\n        }),\n        catchError( error => {\n          console.error(error);\n          this.logout();\n          return of(false);\n        }\n      ));\n    }\n  }\n\n  /**\n   * Requests a token from the server, sending user and password information.\n   * Saves the token in the local storage\n   * @param {string} username the name of the user\n   * @param {string} password the password of the user\n   * @returns {Observable} observable of true if the login is successful, observable of false if not\n   */\n  login(username: string, password: string): Observable {\n    const url = `${environment.httpUrl}${BackendUrls.TOKEN}`;\n    return this.http.post(url, {\n      username: username,\n      password: password\n    }).pipe(map((response: any) => {\n      console.log('Login repsonse:', response);\n      const token = response['token'];\n      if (token) {\n        this.storeToken(token);\n        this.storeUser(username);\n        this.changeLoginStatus(true);\n        return true;\n      } else {\n        this.changeLoginStatus(false);\n        return false;\n      }\n    }));\n  }\n\n  /**\n   * Logs out of the server by deleting the token from the local storage\n   */\n  logout(): void {\n    this.changeLoginStatus(false);\n    this.removeToken();\n    this.removeUser();\n  }\n\n  /**\n  * Returns the token stored in the local storage\n  * @returns {string | undefined} the token as a string, or undefined if there is no token\n  */\n  getToken(): string | undefined {\n    const token = localStorage.getItem(this.TOKEN_STORAGE_NAME);\n    if (token === null) {\n      return undefined;\n    } else {\n      return JSON.parse(token);\n    }\n  }\n\n  /**\n  * Returns the user stored in the local storage\n  * @returns {string | undefined} the user name as a string, or undefined if there is no user\n  */\n  getUser(): string | undefined {\n    const user = localStorage.getItem(this.USER_STORAGE_NAME);\n    if (user === null) {\n      return undefined;\n    } else {\n      return JSON.parse(user);\n    }\n  }\n\n  /**\n  * Returns the user permission over the specified action stored in the local storage\n  * @returns {boolean | undefined} the permission as a boolean\n  */\n  getAllowedActions(): boolean {\n    const allowed_actions = localStorage.getItem(this.ACTIONS_STORAGE_NAME);\n    if (allowed_actions === null) {\n      return undefined;\n    } else {\n      return JSON.parse(allowed_actions);\n    }\n  }\n\n  /**\n  * Deletes the token from the local storage\n  */\n  removeToken() {\n    localStorage.removeItem(this.TOKEN_STORAGE_NAME);\n  }\n\n  /**\n  * Deletes the user from the local storage\n  */\n  removeUser() {\n    localStorage.removeItem(this.USER_STORAGE_NAME);\n  }\n\n  /**\n  * Deletes the allowed_actions from the local storage\n  */\n  removeAllowedActions() {\n    localStorage.removeItem(this.ACTIONS_STORAGE_NAME);\n  }\n\n  /**\n  * Stores a given the token in the local storage, replacing the previous token, if any\n  * @param {string} token the token to be stored\n  */\n  storeToken(token: string) {\n    localStorage.removeItem(this.TOKEN_STORAGE_NAME);\n    localStorage.setItem(this.TOKEN_STORAGE_NAME, JSON.stringify(token));\n  }\n\n  /**\n  * Stores a given the user in the local storage, replacing the previous user, if any\n  * @param {string} user the user to be stored\n  */\n  storeUser(user: string) {\n    localStorage.removeItem(this.USER_STORAGE_NAME);\n    localStorage.setItem(this.USER_STORAGE_NAME, JSON.stringify(user));\n  }\n\n  /**\n  * Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n  * @param {string} permission the user allowed_actions to be stored\n  */\n  storeAllowedActions(allowed_actions: Object) {\n    this.removeAllowedActions();\n    localStorage.setItem(this.ACTIONS_STORAGE_NAME, JSON.stringify(allowed_actions));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BuildingModule.html":{"url":"modules/BuildingModule.html","title":"module - BuildingModule","body":"\n                   \n\n\n\n\n    Modules\n    BuildingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BuildingModule\n\n\n\ncluster_BuildingModule_declarations\n\n\n\ncluster_BuildingModule_imports\n\n\n\ncluster_BuildingModule_exports\n\n\n\n\nBuildingSummaryComponent\n\nBuildingSummaryComponent\n\n\n\nBuildingModule\n\nBuildingModule\n\nBuildingModule -->\n\nBuildingSummaryComponent->BuildingModule\n\n\n\n\n\nBuildingSummaryComponent \n\nBuildingSummaryComponent \n\nBuildingSummaryComponent  -->\n\nBuildingModule->BuildingSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nBuildingModule -->\n\nDataModule->BuildingModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nBuildingModule -->\n\nIasMaterialModule->BuildingModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nBuildingModule -->\n\nSharedModule->BuildingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/building/building.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BuildingSummaryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BuildingSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { BuildingSummaryComponent } from './building-summary/building-summary.component';\n\n@NgModule({\n  declarations: [\n    BuildingSummaryComponent\n  ],\n  exports: [\n    BuildingSummaryComponent\n  ],\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    SharedModule\n  ]\n})\nexport class BuildingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BuildingSummaryComponent.html":{"url":"components/BuildingSummaryComponent.html","title":"component - BuildingSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BuildingSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/building/building-summary/building-summary.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-building-summary\n            \n\n            \n                styleUrls\n                ./building-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./building-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmConfig\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService, httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/building/building-summary/building-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/building/building-summary/building-summary.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/building/building-summary/building-summary.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/building/building-summary/building-summary.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/building/building-summary/building-summary.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/building/building-summary/building-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        Configuration for displaying the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/building/building-summary/building-summary.component.ts:19\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/building/building-summary/building-summary.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/building/building-summary/building-summary.component.ts:50\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { HttpClientService } from '../../data/http-client.service';\nimport { BackendUrls } from '../../settings';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\nimport { Assets } from '../../settings';\n\n@Component({\n  selector: 'app-building-summary',\n  templateUrl: './building-summary.component.html',\n  styleUrls: ['./building-summary.component.scss']\n})\nexport class BuildingSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** Configuration for displaying the {@link Alarm} */\n  public alarmConfig: AlarmConfig[];\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n    private httpClient: HttpClientService\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.loadAlarmsConfig();\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    if (this.alarmConfig && this.alarmConfig[0]) {\n      return this.alarmService.get(this.alarmConfig[0].alarm_id);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const summary_url = BackendUrls.BUILDING_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.alarmConfig = response as AlarmConfig[];\n        }\n      }\n    });\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'building-valid-clear.svg',\n      set_low: Assets.ICONS + 'building-valid-low.svg',\n      set_medium: Assets.ICONS + 'building-valid-low.svg',\n      set_high: Assets.ICONS + 'building-valid-critical.svg',\n      set_critical: Assets.ICONS + 'building-valid-critical.svg',\n      unknown: Assets.ICONS + 'building-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'building-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'building-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'building-invalid-clear.svg',\n      set_low: Assets.ICONS + 'building-invalid-low.svg',\n      set_medium: Assets.ICONS + 'building-invalid-low.svg',\n      set_high: Assets.ICONS + 'building-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'building-invalid-critical.svg',\n      unknown: Assets.ICONS + 'building-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'building-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'building-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./building-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BuildingSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Set of buttons used to trigger actions over AlarmService\nContains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons\n            \n\n            \n                styleUrls\n                ./buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the buttons\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Set of buttons used to trigger actions over AlarmService\n * Contains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n */\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the buttons\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./buttons.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBroadcastRate\n                            \n                            \n                                getBroadcastThreshold\n                            \n                            \n                                getConfigurationData\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:25\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastRate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastRate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast rate from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastRate' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastThreshold\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastThreshold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast threshold from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastThreshold' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:20\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:25\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : BackendUrls.CDB_IAS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:15\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { BackendUrls } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = BackendUrls.CDB_IAS;\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return this.getConfigurationData().subscribe((res) => {\n      this.iasConfiguration = res;\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {json} IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get refresh broadcast rate from IAS configuration data\n  * @returns {number} contains the 'broadcastRate' in seconds\n  */\n  getBroadcastRate(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastRate']);\n    } catch (e) {\n      value = 10;\n    }\n    return value;\n  }\n\n  /**\n  * Get refresh broadcast threshold from IAS configuration data\n  * @returns {number} contains the 'broadcastThreshold' in seconds\n  */\n  getBroadcastThreshold(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastThreshold']);\n    } catch (e) {\n      value = 11;\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the services and data models\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AlarmService\n                        \n                        \n                            CdbService\n                        \n                        \n                            HttpClientService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AlarmService } from './alarm.service';\nimport { UserService } from './user.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\n\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClient,\n    HttpClientService,\n    UserService\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nHealthModule -->\n\nIasMaterialModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains the components associated to the health of the IAS\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HealthSummaryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HealthSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\n\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                ./health-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmConfig\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService, httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:28\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmConfig:     AlarmConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:28\n                            \n                        \n\n                \n                    \n                        Configuration for displaying the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:53\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { HttpClientService } from '../../data/http-client.service';\nimport { BackendUrls } from '../../settings';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.scss']\n})\nexport class HealthSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** Configuration for displaying the {@link Alarm} */\n  public alarmConfig: AlarmConfig[];\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n    private httpClient: HttpClientService\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.loadAlarmsConfig();\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    if (this.alarmConfig && this.alarmConfig[0]) {\n      return this.alarmService.get(this.alarmConfig[0].alarm_id);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const summary_url = BackendUrls.HEALTH_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.alarmConfig = response as AlarmConfig[];\n        }\n      }\n    });\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-clear-valid.svg',\n      set_low: Assets.ICONS + 'ias_health-others-valid.svg',\n      set_medium: Assets.ICONS + 'ias_health-others-valid.svg',\n      set_high: Assets.ICONS + 'ias_health-critical-valid.svg',\n      set_critical: Assets.ICONS + 'ias_health-critical-valid.svg',\n      unknown: Assets.ICONS + 'ias_health-clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'ias_health-clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'ias_health-clear-valid.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-clear-invalid.svg',\n      set_low: Assets.ICONS + 'ias_health-others-invalid.svg',\n      set_medium: Assets.ICONS + 'ias_health-others-invalid.svg',\n      set_high: Assets.ICONS + 'ias_health-critical-invalid.svg',\n      set_critical: Assets.ICONS + 'ias_health-critical-invalid.svg',\n      unknown: Assets.ICONS + 'ias_health-clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'ias_health-clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'ias_health-clear-valid.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./health-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                read_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:14\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HTTP Service used to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url, data)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url, data)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nread_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Proesses the url for the request by adding the base url for http requests\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the processed target url\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from '../auth/auth.service';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /**\n  * Builds an instance of the service\n  * @param {HttpClient} http Angular HTTP Service used to perform HTTP requests\n  * @param {AuthService} authService service used to check and handle authorization\n  */\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.authService.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.authService.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param {string} url target url\n  * @returns {Response} the response of the request\n  */\n  get(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.get(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.post(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.put(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param {string} url target url with the selected object id\n  * @returns {Response} the response of the request\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.delete(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Proesses the url for the request by adding the base url for http requests\n  * @param {string} url target url\n  * @returns {string} the processed target url\n  */\n  read_url(url: string): string {\n    return environment.httpUrl + url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    IasMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for the required Angular Material components\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                ./legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clear_invalid\n                            \n                            \n                                clear_valid\n                            \n                            \n                                maintenance\n                            \n                            \n                                priority_0\n                            \n                            \n                                priority_1\n                            \n                            \n                                priority_2\n                            \n                            \n                                priority_3\n                            \n                            \n                                priority_4\n                            \n                            \n                                set_invalid\n                            \n                            \n                                set_valid\n                            \n                            \n                                unknown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:15\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'maintenance-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in maintenance state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_0:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-0.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority zero (clear) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_1:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-1.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority low \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_2:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-2.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority medium \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_3:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-3.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority high \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_4:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-4.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority critical \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'unknown-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in unknown state \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Assets } from '../../settings';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Reference to the icon used to display Alarms in clear and valid states */\n  clear_valid = Assets.ICONS + 'clear-valid.svg';\n\n  /** Reference to the icon used to display Alarms in clear and invalid states */\n  clear_invalid = Assets.ICONS + 'clear-invalid.svg';\n\n  /** Reference to the icon used to display Alarms in unknown state */\n  unknown = Assets.ICONS + 'unknown-valid.svg';\n\n  /** Reference to the icon used to display Alarms in maintenance state */\n  maintenance = Assets.ICONS + 'maintenance-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and valid states */\n  set_valid = Assets.ICONS + 'set-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and invalid states */\n  set_invalid = Assets.ICONS + 'set-invalid.svg';\n\n  /** Reference to the icon used to display Alarms with priority zero (clear) */\n  priority_0 = Assets.ICONS + 'priority-0.svg';\n\n  /** Reference to the icon used to display Alarms with priority low */\n  priority_1 = Assets.ICONS + 'priority-1.svg';\n\n  /** Reference to the icon used to display Alarms with priority medium */\n  priority_2 = Assets.ICONS + 'priority-2.svg';\n\n  /** Reference to the icon used to display Alarms with priority high */\n  priority_3 = Assets.ICONS + 'priority-3.svg';\n\n  /** Reference to the icon used to display Alarms with priority critical */\n  priority_4 = Assets.ICONS + 'priority-4.svg';\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    LEGEND\n\n    \n      \n\n        \n\n          \n            \n               Clear Valid\n            \n            \n               Clear Invalid\n            \n          \n\n          \n            \n               Set Valid\n            \n            \n               Set Invalid\n            \n          \n\n        \n\n        \n          \n             Maintenance\n          \n          \n             Unknown\n          \n        \n\n        \n\n          \n            \n               Low\n            \n            \n               Medium\n            \n          \n\n          \n            \n               High\n            \n            \n               Critical\n            \n          \n\n        \n      \n    \n\n\n    \n\n    \n                \n                    ./legend.component.css\n                \n                .legend {\n  font-size: 12px;\n  font-weight: normal;\n  text-align: left;\n  width: 100%;\n}\n\n.legend-icon {\n  display: inline-block;\n  margin-right: 6px;\n  text-align: center;\n  width: 18px;\n  font-weight: bold;\n}\n\n.legend-priority {\n  display: inline-block;\n  margin-right: 6px;\n  text-align: center;\n  width: 24px;\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    LEGEND                                                       Clear Valid                                       Clear Invalid                                                           Set Valid                                       Set Invalid                                                             Maintenance                                 Unknown                                                               Low                                       Medium                                                           High                                       Critical                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component that defines the login form\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                message\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder used to build forms\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Performs the login, by calling the login() function of AuthService passing the user and password retrieved from the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Performs the logout, by calling the logout() function of AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the component and defines its form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetErrorMessage(error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Sets the errorMessage to display, based on the status code of the error returned by the request.\nIf the status code is 400, it shows that the credentials are not valid\nIf the status code is not 400, it shows that there was a problem communicating with the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the error returned by the request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:53\n                            \n                        \n\n                \n                    \n                        service used to check and handle authorization\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                        Error message to be displayed if the ogin is not successful\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        Message with the current login status, to be displayed in the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the password from the form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:54\n                            \n                        \n\n                \n                    \n                        Angular router used to navigate the application\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the username from the form\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from '../auth.service';\n\n/**\n * Component that defines the login form\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Message with the current login status, to be displayed in the component\n   */\n  message: string;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Form control used to retrieve the username from the form\n   */\n  user: FormControl;\n\n  /**\n   * Form control used to retrieve the password from the form\n   */\n  password: FormControl;\n\n\n  /**\n   * Error message to be displayed if the ogin is not successful\n   */\n  errorMessage = undefined;\n\n\n  /**\n   * Builds an instance of the component\n   * @param {FormBuilder} formBuilder Angular FormBuilder used to build forms\n   * @param {AuthService} authService service used to check and handle authorization\n   * @param {Router} router Angular router used to navigate the application\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    public authService: AuthService,\n    public router: Router,\n    private spinnerService: NgxSpinnerService\n  ) {\n  }\n\n  /**\n   * Initializes the component and defines its form\n   */\n  ngOnInit() {\n    this.errorMessage = undefined;\n    this.user = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [Validators.required]);\n    this.formGroup = this.formBuilder.group({\n      user: this.user,\n      password: this.password,\n    });\n  }\n\n  /**\n   * Performs the login, by calling the login() function of {@link AuthService} passing the user and password retrieved from the form\n   */\n  login() {\n    this.errorMessage = undefined;\n    this.spinnerService.show();\n    this.authService.login(\n      this.formGroup.controls.user.value,\n      this.formGroup.controls.password.value,\n    ).subscribe(\n      (response) => {\n        if (response === true) {\n          // Get the redirect URL from our auth service\n          // If no redirect has been set, use the default\n          const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '';\n          // Redirect the user\n          this.router.navigate([redirect]);\n        }\n        this.spinnerService.hide();\n      },\n      (error) => {\n        this.spinnerService.hide();\n        this.setErrorMessage(error);\n      }\n    );\n  }\n\n  /**\n   * Performs the logout, by calling the logout() function of {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Sets the {@link errorMessage} to display, based on the status code of the error returned by the request.\n   * If the status code is 400, it shows that the credentials are not valid\n   * If the status code is not 400, it shows that there was a problem communicating with the server.\n   * @param {Error} error the error returned by the request\n   */\n  setErrorMessage(error) {\n    if (error.status === 400) {\n      this.errorMessage = 'The credentials provided are not valid';\n    } else {\n      this.errorMessage = 'There was an error communicating with the Server';\n      console.error('Error communicating with Server: ', error);\n    }\n    this.user.setErrors({'incorrect': true});\n    this.password.setErrors({'incorrect': true});\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n       IAS ALMA \n    \n  \n  \n    \n        \n            \n                User\n                \n            \n            \n                Password\n                \n                 {{errorMessage}} \n            \n            \n                \n                  Login\n                \n            \n        \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .mat-card {\n  max-width: 580px;\n  margin: auto;\n\n  .mat-card-header {\n    border-top-left-radius: 0.375em;\n    border-top-right-radius: 0.375em;\n\n    .login-header {\n      text-align: center;\n      width: 100%;\n      margin-right: 16px;\n\n      .title {\n        display: block;\n        font-size: 34px;\n      }\n\n      .message {\n        display: block;\n        font-size: 12px;\n      }\n    }\n  }\n\n  .mat-card-content {\n    border-bottom-left-radius: 0.375em;\n    border-bottom-right-radius: 0.375em;\n  }\n}\n\n.login-form-container {\n  padding: 40px;\n\n  .form-group {\n\n    .form-field {\n      width: 100%;\n    }\n  }\n\n  .btn-login-container {\n    padding: 10px 0;\n    text-align: center;\n\n    .btn-login {\n      text-transform: uppercase;\n      font-weight: bold;\n      width: 100%;\n      display: inline-block;\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             IAS ALMA                                                 User                                                        Password                                 {{errorMessage}}                                                           Login                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component used to display a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapConfig\n                            \n                            \n                                mapdataAvailable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                    \n                        contains the configuration to draw the map\n\n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapdataAvailable\n                    \n                    \n                        Defines wether or no there is data available to draw the map\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Initiates the component when it is displayed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n* Reusable component used to display a map\n*/\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  /**\n  * Defines wether or no there is data available to draw the map\n  */\n  @Input() mapdataAvailable = false;\n\n  /**\n  * contains the configuration to draw the map\n  */\n  @Input() mapConfig = {};\n\n  /**\n  * Builds an instance of the component\n  */\n  constructor() { }\n\n  /**\n  * Initiates the component when it is displayed\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n  \n\n\n\n\n\n  \n\n\n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                .ws-map {\n\n  width: 100%;\n\n  &.full-height {\n    height: calc(100vh - 130px);\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n    Modules\n    MapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MapService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map/map.component';\nimport { MapService } from './map.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    MapComponent,\n  ],\n  providers: [\n    MapService\n  ],\n  exports: [\n    MapComponent,\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the maps\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSVGPaths\n                            \n                            \n                                mapdataProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.service.ts:7\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSVGPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSVGPaths(pathsGroup: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Transforms a group of paths into svgPaths\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathsGroup\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    svgPaths\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapdataProcessing\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapdataProcessing(placemarksGroups: any, pathsGroups: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Scaling and calculation of max and min values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemarksGroups\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of groups of placemarks\n\n                                                        \n                                                \n                                                \n                                                        pathsGroups\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The viewbox: list of 4 numbers used to define the size of the map\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n* Service used to handle the maps\n*/\n@Injectable()\nexport class MapService {\n\n  /**\n  * Builds an instance of the service\n  */\n  constructor() { }\n\n  /**\n  * Transforms a group of paths into svgPaths\n  * @param {any} pathsGroup group of paths\n  * @returns {any} svgPaths\n  */\n  getSVGPaths(pathsGroup: any): any {\n    const svgPaths = [];\n    for (let i = 0; i  0) {\n      dy = -1.0 * maxCY;\n    }\n    for (let k = 0; k \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialButtonsColorsComponent.html":{"url":"components/MaterialButtonsColorsComponent.html","title":"component - MaterialButtonsColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialButtonsColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display colors for different sets of material buttons\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-buttons-colors\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                Basic Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nRaised Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFlat Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nMini Fab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nIcon Buttons\n\n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1, 3]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-card',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmCardComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [true, false]) {\n       for (const value of [0, 1, 2, 3, 4]) {\n         for (const validity of [0, 1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Basic Buttons  Basic  Primary  Accent  Warn  Disabled  LinkRaised Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFlat Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkMini Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkIcon Buttons      favorite        favorite        favorite        favorite        favorite  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialButtonsColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialCardSampleComponent.html":{"url":"components/MaterialCardSampleComponent.html","title":"component - MaterialCardSampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialCardSampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display an example with the material card\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sample-card\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n  \n    \n    Shiba Inu\n    Dog Breed\n  \n  \n  \n    \n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    \n  \n  \n    LIKE\n    SHARE\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1, 3]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-card',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmCardComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [true, false]) {\n       for (const value of [0, 1, 2, 3, 4]) {\n         for (const validity of [0, 1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Shiba Inu    Dog Breed                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally      bred for hunting.            LIKE    SHARE  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialCardSampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialColorsComponent.html":{"url":"components/MaterialColorsComponent.html","title":"component - MaterialColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component that displays color palletes for Angular Material Elements.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-colors\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                {{palette}}\n\n  \n    {{item[1]}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                palettes\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palette\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        palette\n                    \n                    \n                        Name for the color pallete\n\n                        \n                            Default value : 'palette'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:123\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            palettes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        palettes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:39\n                            \n                        \n\n                \n                    \n                        List of grouped pairs (materialId, innerHTMLTextValue)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1, 3]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-card',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmCardComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [true, false]) {\n       for (const value of [0, 1, 2, 3, 4]) {\n         for (const validity of [0, 1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{palette}}      {{item[1]}}  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialSandboxComponent.html":{"url":"components/MaterialSandboxComponent.html","title":"component - MaterialSandboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialSandboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Main component to display some Angular Material Elements.\nUseful to check how the application would look if it includes those elements\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sandbox\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-sandbox.components.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1, 3]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-card',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmCardComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [true, false]) {\n       for (const value of [0, 1, 2, 3, 4]) {\n         for (const validity of [0, 1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialSandboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialSandboxModule.html":{"url":"modules/MaterialSandboxModule.html","title":"module - MaterialSandboxModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialSandboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MaterialSandboxModule\n\n\n\ncluster_MaterialSandboxModule_declarations\n\n\n\ncluster_MaterialSandboxModule_imports\n\n\n\ncluster_MaterialSandboxModule_exports\n\n\n\n\nMaterialButtonsColorsComponent\n\nMaterialButtonsColorsComponent\n\n\n\nMaterialSandboxModule\n\nMaterialSandboxModule\n\nMaterialSandboxModule -->\n\nMaterialButtonsColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialCardSampleComponent\n\nMaterialCardSampleComponent\n\nMaterialSandboxModule -->\n\nMaterialCardSampleComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialColorsComponent\n\nMaterialColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialToggleColorsComponent\n\nMaterialToggleColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialToggleColorsComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmCardComponent\n\nSandboxAlarmCardComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmCardComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmComponent\n\nSandboxAlarmComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmLabelComponent\n\nSandboxAlarmLabelComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmLabelComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmTileComponent\n\nSandboxAlarmTileComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmTileComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent  -->\n\nMaterialSandboxModule->MaterialButtonsColorsComponent \n\n\n\n\n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent  -->\n\nMaterialSandboxModule->MaterialCardSampleComponent \n\n\n\n\n\nMaterialColorsComponent \n\nMaterialColorsComponent \n\nMaterialColorsComponent  -->\n\nMaterialSandboxModule->MaterialColorsComponent \n\n\n\n\n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent  -->\n\nMaterialSandboxModule->MaterialToggleColorsComponent \n\n\n\n\n\nSandboxAlarmCardComponent \n\nSandboxAlarmCardComponent \n\nSandboxAlarmCardComponent  -->\n\nMaterialSandboxModule->SandboxAlarmCardComponent \n\n\n\n\n\nSandboxAlarmComponent \n\nSandboxAlarmComponent \n\nSandboxAlarmComponent  -->\n\nMaterialSandboxModule->SandboxAlarmComponent \n\n\n\n\n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent  -->\n\nMaterialSandboxModule->SandboxAlarmLabelComponent \n\n\n\n\n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent  -->\n\nMaterialSandboxModule->SandboxAlarmTileComponent \n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nMaterialSandboxModule -->\n\nIasMaterialModule->MaterialSandboxModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMaterialSandboxModule -->\n\nSharedModule->MaterialSandboxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material-sandbox/material-sandbox.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MaterialButtonsColorsComponent\n                        \n                        \n                            MaterialCardSampleComponent\n                        \n                        \n                            MaterialColorsComponent\n                        \n                        \n                            MaterialToggleColorsComponent\n                        \n                        \n                            SandboxAlarmCardComponent\n                        \n                        \n                            SandboxAlarmComponent\n                        \n                        \n                            SandboxAlarmLabelComponent\n                        \n                        \n                            SandboxAlarmTileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MaterialButtonsColorsComponent\n                        \n                        \n                            MaterialCardSampleComponent\n                        \n                        \n                            MaterialColorsComponent\n                        \n                        \n                            MaterialToggleColorsComponent\n                        \n                        \n                            SandboxAlarmCardComponent\n                        \n                        \n                            SandboxAlarmComponent\n                        \n                        \n                            SandboxAlarmLabelComponent\n                        \n                        \n                            SandboxAlarmTileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MaterialColorsComponent } from './material-sandbox.components';\nimport { MaterialToggleColorsComponent } from './material-sandbox.components';\nimport { MaterialButtonsColorsComponent } from './material-sandbox.components';\nimport { MaterialCardSampleComponent } from './material-sandbox.components';\nimport { SandboxAlarmLabelComponent } from './material-sandbox.components';\nimport { SandboxAlarmCardComponent } from './material-sandbox.components';\nimport { SandboxAlarmComponent } from './material-sandbox.components';\nimport { SandboxAlarmTileComponent } from './material-sandbox.components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    SharedModule,\n    NgbModule\n  ],\n  declarations: [\n    MaterialColorsComponent,\n    MaterialToggleColorsComponent,\n    MaterialButtonsColorsComponent,\n    MaterialCardSampleComponent,\n    SandboxAlarmLabelComponent,\n    SandboxAlarmCardComponent,\n    SandboxAlarmComponent,\n    SandboxAlarmTileComponent\n  ],\n  exports: [\n    MaterialColorsComponent,\n    MaterialToggleColorsComponent,\n    MaterialButtonsColorsComponent,\n    MaterialCardSampleComponent,\n    SandboxAlarmLabelComponent,\n    SandboxAlarmCardComponent,\n    SandboxAlarmComponent,\n    SandboxAlarmTileComponent\n  ],\n  entryComponents: [\n  ]\n})\nexport class MaterialSandboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialToggleColorsComponent.html":{"url":"components/MaterialToggleColorsComponent.html","title":"component - MaterialToggleColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialToggleColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display material toggle colors\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-toggle-colors\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                Material Toggle\nDefault \nPrimary \nAccent \nWarn\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1, 3]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-card',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmCardComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [true, false]) {\n       for (const value of [0, 1, 2, 3, 4]) {\n         for (const validity of [0, 1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Material ToggleDefault Primary Accent Warn'\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialToggleColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                ./overview-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.scss']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./overview-card.component.scss\n                \n                .ias.overview-card {\n  position: relative;\n  display: grid;\n  z-index: 100;\n  width: inherit;\n  margin: 40px 20px 40px 70px;\n\n  .marker-wrapper{\n    float: left;\n    position: absolute;\n    top: 10px;\n    left: -46px;\n    width: 46px;\n    height: 56px;\n    line-height: 56px;\n    z-index: 0;\n    text-align: left;\n    vertical-align: middle;\n    border-top-left-radius: 28px;\n    border-bottom-left-radius: 28px;\n\n    .marker {\n      margin: 0px 0px;\n      height: 100%;\n      position: absolute;\n      top:-2px;\n      left:-4px;\n      width: 56px;\n    }\n  }\n\n  .label{\n    position: absolute;\n    top: -1.45em;\n    right: 0;\n    height: 1em;\n    text-align: right;\n    text-transform: uppercase;\n    font-family: sans-serif;\n    font-size: 16px;\n    z-index: 1;\n  }\n\n  .content-wrapper{\n    position: relative;\n    top: 0;\n    left: 0;\n    min-height: 150px;\n    width: inherit;\n    min-width: 170px;\n\n    .content{\n      padding: 0px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n    \n\n    \n      \n         ANTENNAS \n          \n        \n          \n        \n      \n    \n\n    \n      \n         WEATHER \n          \n        \n          \n        \n      \n    \n  \n\n  \n\n    \n      \n         BUILDING \n          \n        \n          \n        \n      \n    \n\n    \n    \n\n  \n\n\n\n    \n\n    \n                \n                    ./overview.component.scss\n                \n                /* TODO: Remove provisory adjustments for the health marker if related resources are available */\n\n#ias-card-health-marker {\n  padding-left: 14px;\n  padding-right: 12px;\n}\n\n.ias-overview {\n  display: flex;\n  padding-top: 45px;\n\n  .content {\n    width: 100%;\n  }\n}\n\n.no-margin {\n  margin: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     IAS HEALTH                                                                  ANTENNAS                                                                  WEATHER                                                                      BUILDING                                                         '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n    Modules\n    OverviewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nBuildingModule\n\nBuildingModule\n\nOverviewModule -->\n\nBuildingModule->OverviewModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OverviewCardComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AntennasModule\n                        \n                        \n                            BuildingModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OverviewCardComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { AntennasModule } from '../antennas/antennas.module';\nimport { BuildingModule } from '../building/building.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    AntennasModule,\n    BuildingModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropsTableComponent.html":{"url":"components/PropsTableComponent.html","title":"component - PropsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/props-table/props-table.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display the properties of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-props-table\n            \n\n            \n                styleUrls\n                ./props-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./props-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/props-table/props-table.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/props-table/props-table.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/props-table/props-table.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm} from '../../data/alarm';\n\n/**\n * Component used to display the properties of an alarm\n */\n@Component({\n  selector: 'app-props-table',\n  templateUrl: './props-table.component.html',\n  styleUrls: ['./props-table.component.scss']\n})\nexport class PropsTableComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n       {{ prop.key }}: \n       {{ prop.value }} \n    \n  \n\n\n    \n\n    \n                \n                    ./props-table.component.scss\n                \n                .props-table-container {\n\n  table, th, td {\n    border-width: 0px;\n    border-style: solid;\n  }\n\n  table {\n    vertical-align: top;\n    width: 100%;\n  }\n\n  th, td {\n    vertical-align: top;\n    padding: 0px 4px;\n  }\n\n  th {\n    width: fit-content;\n  }\n\n  td {\n    max-width: 320px;\n    width: 100%;\n    word-wrap: break-word;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             {{ prop.key }}:        {{ prop.value }}       '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PropsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanActionOutlet\n                            \n                            \n                                goToAcknowledge\n                            \n                            \n                                goToAntennas\n                            \n                            \n                                goToLogin\n                            \n                            \n                                goToShelve\n                            \n                            \n                                goToWeather\n                            \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-routing/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cleanActionOutlet\n                            \n                            \n                        \n                    \n                \n                \n                    \ncleanActionOutlet()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Go to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Go to login and clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToWeather()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Go to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TableComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TableComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TableComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TableComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n  /**\n  * Go to the Antennas View\n  */\n  goToAntennas() {\n    this.router.navigate(['antennas']);\n  }\n\n  /**\n  * Go to the Weather View\n  */\n  goToWeather() {\n    this.router.navigate(['weather']);\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  goToAcknowledge(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['acknowledge', alarm_id]}}]);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  goToShelve(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['shelve', alarm_id]}}]);\n  }\n\n  /**\n  * Clean action outlet\n  */\n  cleanActionOutlet() {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n  * Go to login and clean action outlet\n  */\n  goToLogin() {\n    this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmCardComponent.html":{"url":"components/SandboxAlarmCardComponent.html","title":"component - SandboxAlarmCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm-card\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n   {{componentName}} \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:786\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:744\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:779\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:729\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:732\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     Alarm[]\n\n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:726\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm Tile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:723\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1, 3]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-card',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmCardComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [true, false]) {\n       for (const value of [0, 1, 2, 3, 4]) {\n         for (const validity of [0, 1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{componentName}}                     {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmComponent.html":{"url":"components/SandboxAlarmComponent.html","title":"component - SandboxAlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n  \n    {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n  \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelLocation\n                            \n                            \n                                labelMode\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelLocation\n                    \n                    \n                        Label location \n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:430\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelMode\n                    \n                    \n                        Show or hide label text \n\n                        \n                            Default value : 'text'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:424\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Size category \n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:427\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:502\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:485\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:442\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:477\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:418\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:421\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     Alarm[]\n\n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:415\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:412\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1, 3]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-card',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmCardComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [true, false]) {\n       for (const value of [0, 1, 2, 3, 4]) {\n         for (const validity of [0, 1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{componentName}} - labelMode: {{labelMode}} - size: {{size}}                      {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmLabelComponent.html":{"url":"components/SandboxAlarmLabelComponent.html","title":"component - SandboxAlarmLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm-label\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n   {{componentName}} \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:346\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:313\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:363\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     Alarm[]\n\n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:301\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AlarmLabel'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:298\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1, 3]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-card',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmCardComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [true, false]) {\n       for (const value of [0, 1, 2, 3, 4]) {\n         for (const validity of [0, 1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{componentName}}                     {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmTileComponent.html":{"url":"components/SandboxAlarmTileComponent.html","title":"component - SandboxAlarmTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm-tile\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n   {{componentName}} \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:652\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:635\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:592\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:627\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:577\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:580\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     Alarm[]\n\n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:574\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm Tile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:571\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1, 3]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-card',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmCardComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': 'critical',\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'value_change_timestamp': 0,\n        'value_change_transition': [0, 0],\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'TYPE1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [true, false]) {\n       for (const value of [0, 1, 2, 3, 4]) {\n         for (const validity of [0, 1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{componentName}}                     {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAlarmBlinkComponent\n\nAlarmBlinkComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlarmBlinkComponent->SharedModule\n\n\n\n\n\nAlarmCardComponent\n\nAlarmCardComponent\n\nSharedModule -->\n\nAlarmCardComponent->SharedModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nAlarmInfoComponent\n\nAlarmInfoComponent\n\nSharedModule -->\n\nAlarmInfoComponent->SharedModule\n\n\n\n\n\nAlarmLabelComponent\n\nAlarmLabelComponent\n\nSharedModule -->\n\nAlarmLabelComponent->SharedModule\n\n\n\n\n\nAlarmTileComponent\n\nAlarmTileComponent\n\nSharedModule -->\n\nAlarmTileComponent->SharedModule\n\n\n\n\n\nAlarmTooltipComponent\n\nAlarmTooltipComponent\n\nSharedModule -->\n\nAlarmTooltipComponent->SharedModule\n\n\n\n\n\nPropsTableComponent\n\nPropsTableComponent\n\nSharedModule -->\n\nPropsTableComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nAlarmBlinkComponent \n\nAlarmBlinkComponent \n\nAlarmBlinkComponent  -->\n\nSharedModule->AlarmBlinkComponent \n\n\n\n\n\nAlarmCardComponent \n\nAlarmCardComponent \n\nAlarmCardComponent  -->\n\nSharedModule->AlarmCardComponent \n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nAlarmInfoComponent \n\nAlarmInfoComponent \n\nAlarmInfoComponent  -->\n\nSharedModule->AlarmInfoComponent \n\n\n\n\n\nAlarmLabelComponent \n\nAlarmLabelComponent \n\nAlarmLabelComponent  -->\n\nSharedModule->AlarmLabelComponent \n\n\n\n\n\nAlarmTileComponent \n\nAlarmTileComponent \n\nAlarmTileComponent  -->\n\nSharedModule->AlarmTileComponent \n\n\n\n\n\nPropsTableComponent \n\nPropsTableComponent \n\nPropsTableComponent  -->\n\nSharedModule->PropsTableComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlarmBlinkComponent\n                        \n                        \n                            AlarmCardComponent\n                        \n                        \n                            AlarmComponent\n                        \n                        \n                            AlarmHeaderComponent\n                        \n                        \n                            AlarmInfoComponent\n                        \n                        \n                            AlarmLabelComponent\n                        \n                        \n                            AlarmTileComponent\n                        \n                        \n                            AlarmTooltipComponent\n                        \n                        \n                            PropsTableComponent\n                        \n                        \n                            StatusViewComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AlarmBlinkComponent\n                        \n                        \n                            AlarmComponent\n                        \n                        \n                            AlarmHeaderComponent\n                        \n                        \n                            StatusViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlarmBlinkComponent\n                        \n                        \n                            AlarmCardComponent\n                        \n                        \n                            AlarmComponent\n                        \n                        \n                            AlarmHeaderComponent\n                        \n                        \n                            AlarmInfoComponent\n                        \n                        \n                            AlarmLabelComponent\n                        \n                        \n                            AlarmTileComponent\n                        \n                        \n                            PropsTableComponent\n                        \n                        \n                            StatusViewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { AlarmHeaderComponent } from './alarm-header/alarm-header.component';\nimport { AlarmTooltipComponent } from './alarm-tooltip/alarm-tooltip.component';\nimport { AlarmCardComponent } from './alarm-card/alarm-card.component';\nimport { AlarmTileComponent } from './alarm-tile/alarm-tile.component';\nimport { AlarmInfoComponent } from './alarm-info/alarm-info.component';\nimport { AlarmBlinkComponent } from './alarm-blink/alarm-blink.component';\nimport { AlarmLabelComponent } from './alarm-label/alarm-label.component';\nimport { PropsTableComponent } from './props-table/props-table.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule\n  ],\n  declarations: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n    AlarmTooltipComponent,\n    AlarmCardComponent,\n    AlarmTileComponent,\n    AlarmInfoComponent,\n    AlarmLabelComponent,\n    PropsTableComponent,\n    AlarmBlinkComponent,\n  ],\n  exports: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n    AlarmCardComponent,\n    AlarmTileComponent,\n    AlarmInfoComponent,\n    AlarmLabelComponent,\n    AlarmBlinkComponent,\n    PropsTableComponent,\n  ],\n  entryComponents: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n    AlarmBlinkComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                ./shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonTooltipText\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve-button/shelve-button.component.ts:24\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Defines whether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the inputs of the component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object containing the changes in the Inputs of the component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Handle click on shelve button, it triggers the shelve sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buttonTooltipText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Shelve'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:24\n                            \n                        \n\n                \n                    \n                        The text to display in the button tooltip\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:34\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, AfterViewInit, Input, ElementRef, SimpleChanges } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit, OnChanges, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n  * The text to display in the button tooltip\n  */\n  buttonTooltipText = 'Shelve';\n\n\n  /**\n   * Instantiates the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method to handle the changes on the inputs of the component\n  * @param {SimpleChanges} changes Object containing the changes in the Inputs of the component\n  */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.alarm && changes.alarm.previousValue !== changes.alarm.currentValue) {\n      this.buttonTooltipText = this.getButtonTooltipText();\n    }\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Defines whether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled(): boolean {\n    return !this.sidenavService.canClose;\n  }\n\n  /**\n  * Handle click on shelve button, it triggers the shelve sidebar\n  */\n  onClick(): void {\n    this.sidenavService.goToShelve(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./shelve-button.component.css\n                \n                .shelve-button {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 0px;\n  margin: 0px 4px;\n  border-radius: 24px;\n  min-width: 1px;\n  width: 32px;\n  height: 32px;\n}\n\n.shelve-button-icon {\n  width: 18px;\n  margin: auto;\n}\n\n.mat-flat-button {\n  line-height: 28px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidenavService.html":{"url":"injectables/SidenavService.html","title":"injectable - SidenavService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SidenavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sidenav.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canClose\n                            \n                            \n                                lastAlarmId\n                            \n                            \n                                    Public\n                                shouldReload\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAndClean\n                            \n                            \n                                    Public\n                                goToAcknowledge\n                            \n                            \n                                    Public\n                                goToShelve\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setSidenav\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routingService: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routingService\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeAndClean\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAndClean()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav and cleans the actions outlet\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Opens the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSidenav(sidenav: MatSidenav)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Sets the reference to the sidenav\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenav\n                                                        \n                                                                    MatSidenav\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Reference to the sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Toggles the sidenav (open/close)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canClose:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:36\n                            \n                        \n\n                \n                    \n                        Defines wether or not the sidenav can be closed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                        Id of the last Alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldReload:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:18\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe status of the service connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the sidenav \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs';\nimport { RoutingService } from '../app-routing/routing.service';\n\n/**\n* Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public shouldReload = new BehaviorSubject(false);\n\n  /**\n  * Id of the last {@link Alarm}\n  */\n  lastAlarmId = '';\n\n  /**\n   * Builds an instance of the service\n   */\n  constructor(\n    private routingService: RoutingService\n  ) { }\n\n  /** Reference to the sidenav */\n  private sidenav: MatSidenav;\n\n  /** Defines wether or not the sidenav can be closed */\n  public canClose = true;\n\n  /**\n  * Sets the reference to the sidenav\n  * @param {MatSidenav} sidenav Reference to the sidenav\n  */\n  public setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n  }\n\n  /**\n  * Opens the sidenav\n  */\n  public open() {\n    return this.sidenav.open();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  public close() {\n    return this.sidenav.close();\n  }\n\n  /**\n  * Closes the sidenav and cleans the actions outlet\n  */\n  public closeAndClean() {\n    this.routingService.cleanActionOutlet();\n    return this.close();\n  }\n\n  /**\n  * Toggles the sidenav (open/close)\n  */\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  public goToAcknowledge(alarm_id: string) {\n    this.routingService.goToAcknowledge(alarm_id);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  public goToShelve(alarm_id: string) {\n    if (alarm_id === this.lastAlarmId) {\n      this.shouldReload.next(true);\n    } else {\n      this.lastAlarmId = alarm_id;\n    }\n    this.routingService.goToShelve(alarm_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                ./status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsPrioritySet\n                            \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                tooltipDirection\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/status-view/status-view.component.ts:45\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                    \n                        Defines the direction of the tooltip\n\n                        \n                            Default value : 'right'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the alarmTags\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsPrioritySet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsPrioritySet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Set of alarm priority icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, OperationalMode } from '../../data/alarm';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { Assets } from '../../settings';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /** Dash-separated string with the tags that define the state of an alarm */\n  @Input() value = '';\n\n  /** List of tags that define the state of an alarm */\n  private alarmTags = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Set of alarm priority icons */\n  public alarmIconsPrioritySet: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for priorities */\n    this.alarmIconsPrioritySet = new AlarmImageSet({\n      clear: Assets.ICONS + 'priority-0.svg',\n      set_low: Assets.ICONS + 'priority-1.svg',\n      set_medium: Assets.ICONS + 'priority-2.svg',\n      set_high: Assets.ICONS + 'priority-3.svg',\n      set_critical: Assets.ICONS + 'priority-4.svg',\n      unknown: Assets.ICONS + 'priority-0.svg',\n      maintenance: Assets.ICONS + 'priority-0.svg',\n      shelved: Assets.ICONS + 'priority-0.svg',\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./status-view.component.css\n                \n                .alarm-icon {\n  height: 100%;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n    Modules\n    TabularModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTabularModule -->\n\nTableComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nTabularModule->TableComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the components related to the Table view\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LegendComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TabularViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { TableComponent } from './table/table.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ActionsModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    TableComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TableComponent,\n  ],\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabularViewComponent.html":{"url":"components/TabularViewComponent.html","title":"component - TabularViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabularViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/tabular-view/tabular-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component that dispays all the Alarms in a table using the TableComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabular-view\n            \n\n            \n                styleUrls\n                ./tabular-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabular-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/tabular-view/tabular-view.component.ts:11\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Method executed when the Component is initializated\nDoes not do anything at the moment\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component that dispays all the Alarms in a table using the {@link TableComponent}\n*/\n@Component({\n  selector: 'app-tabular-view',\n  templateUrl: './tabular-view.component.html',\n  styleUrls: ['./tabular-view.component.scss']\n})\nexport class TabularViewComponent implements OnInit {\n\n  /**\n   * Instantiates the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the Component is initializated\n   * Does not do anything at the moment\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./tabular-view.component.scss\n                \n                .mat-card {\n\n  .mat-card-header {\n    display: block;\n    padding: 20px;\n    border-top-left-radius: 0.375em;\n    border-top-right-radius: 0.375em;\n  }\n\n  .mat-card-content {\n    border-bottom-left-radius: 0.375em;\n    border-bottom-right-radius: 0.375em;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabularViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutOption.html":{"url":"interfaces/TimeoutOption.html","title":"interface - TimeoutOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeoutOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/shelve/shelve.component.ts\n        \n\n            \n                Description\n            \n            \n                Definition of a timeout option for shelving an alarm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual value to be sent to the server \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to be displayed to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { UserService } from '../../data/user.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { Alarm } from '../../data/alarm';\nimport { Locale } from '../../settings';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '00:15:00', viewValue: '15 minutes'},\n    {value: '00:30:00', viewValue: '30 minutes'},\n    {value: '01:00:00', viewValue: '1 hour'},\n    {value: '02:00:00', viewValue: '2 hours'},\n    {value: '06:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * FormControl for the user who performs the action\n  */\n  user: FormControl;\n\n  /**\n   * Selected user\n   */\n  user_selected: string;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n  * Stores the error message returned by the Webserver if a shelve or unshelve request fails\n  */\n  errorMessage = '';\n\n  /**\n  * Stores the message with the information of when the alarm has been shelved and for how long\n  */\n  shelvedAtMessage = '';\n\n  /**\n   * Route param map subscription\n   */\n  paramMapSubscription: ISubscription;\n\n   /**\n    * Alarm change subscription\n    */\n  alarmChangeSubscription: ISubscription;\n\n  /**\n   * Sidenav service subscription\n   */\n sidenavReloadSubscription: ISubscription;\n\n /** String to store the formatting of dates, read form the settings */\n private dateFormat: string;\n\n /** String to store the timezone to display dates, read from the settings */\n private timezone: string;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {NgxSpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {UserService} userService Service to handle request to the users api\n   * @param {AuthService} authService Service to ask for the logged in user\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private userService: UserService,\n    public authService: AuthService\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n    this.user = new FormControl('', [Validators.required]);\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.shelvedAtMessage = '';\n    this.form = this.formBuilder.group({\n      user: this.user,\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.paramMapSubscription = this.route.paramMap\n    .subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.check_request_and_reload();\n    });\n    this.sidenavReloadSubscription = this.sidenavService.shouldReload\n    .subscribe(\n      value => {\n        if (value === true) {\n          this.reload();\n        }\n      }\n    );\n    this.alarmChangeSubscription = this.alarmService.alarmChangeStream\n    .subscribe( () => {\n      this.check_request_and_reload();\n    });\n    this.sidenavService.open();\n  }\n\n  /**\n  * Method to manage the information of the component\n  */\n  check_request_and_reload(): void {\n    const alarmDataAvailable = this.alarmService.isAlarmIndexAvailable(\n      this.alarm_id\n    );\n    if (alarmDataAvailable === true) {\n      if (this.alarm) {\n        if (this.alarm.core_id !== this.alarm_id) {\n          this.reload();\n        }\n      } else {\n        this.reload();\n      }\n    }\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    if (this.paramMapSubscription) {\n      this.paramMapSubscription.unsubscribe();\n    }\n    if (this.sidenavReloadSubscription) {\n      this.sidenavReloadSubscription.unsubscribe();\n    }\n    if (this.alarmChangeSubscription) {\n      this.alarmChangeSubscription.unsubscribe();\n    }\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    const allowedShelve = this.authService.getAllowedActions()['can_shelve'];\n    const allowedUnshelve = this.authService.getAllowedActions()['can_unshelve'];\n    const isAllowed = allowedShelve && allowedUnshelve;\n    return (this.alarm.shelved || this.form.valid) && isAllowed;\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    let action: string;\n    if (!this.alarm.shelved) {\n      action = 'Shelving';\n    } else {\n      action = 'Unshelving';\n    }\n    if (this.requestStatus === 1) {\n      return action + ' results';\n    } else if (this.requestStatus === -1 ) {\n      return 'Error ' + action;\n    } else if (this.requestStatus === -2) {\n      return 'Action not allowed';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        response = 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        response = 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    } else if (this.requestStatus === -2 ) {\n      response = 'The logged in user (' + this.authService.getUser();\n      if (!this.alarm.shelved) {\n        response += ') does not have permissions to perform the shelve.';\n      } else {\n        response += ') does not have permissions to perform the unshelve.';\n      }\n    }\n    return response;\n  }\n\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.shelvedAtMessage = '';\n    this.alarm = this.alarmService.get(this.alarm_id);\n    if (this.alarm.shelved) {\n      this.requestShelveInfo();\n    }\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Requests the alarm shelving info to the Webserver\n   */\n  requestShelveInfo(): void {\n    this.alarmService.getShelveRegistries(this.alarm_id, 1).subscribe(\n        (response: any) => {\n          const registry = response[0];\n          this.shelvedAtMessage = 'This Alarm was shelved at ' + registry['shelved_at'] +\n          ' with a duration of ' + this.timeouts.find(t => t.value === registry['timeout']).viewValue;\n        },\n        (error: any) => {\n          console.log('Error: ', error);\n          return error;\n        }\n      );\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(\n        this.alarm.core_id, message, timeout, this.user_selected\n      ).subscribe(\n          (response: any) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error: any) => {\n            if (error.status === 403) {\n              this.requestStatus = -2;\n            } else {\n              this.requestStatus = -1;\n            }\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response: any) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error: any) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Class that models a User\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Optional email \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique username \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\nimport { Subscription } from 'rxjs';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {Subscription} subscription to the list of users\n  */\n  requestUsersList(): Subscription {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to manage information about user accounts\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestUsersList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestUsersList\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequestUsersList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/user.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Get the list of users in the operators group\n\n\n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    subscription to the list of users\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                        List of authorized users\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\nimport { Subscription } from 'rxjs';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {Subscription} subscription to the list of users\n  */\n  requestUsersList(): Subscription {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherBackupWsMarkerComponent.html":{"url":"components/WeatherBackupWsMarkerComponent.html","title":"component - WeatherBackupWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherBackupWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display backups weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-backup-ws-marker\n            \n\n            \n                styleUrls\n                ./weather-backup-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-backup-ws-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm corresponding to the weather station\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { AlarmConfig } from '../../../data/alarm-config';\nimport { WeatherService } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display backups weather station in a map\n */\n@Component({\n  selector: 'app-weather-backup-ws-marker',\n  templateUrl: './weather-backup-ws-marker.component.html',\n  styleUrls: ['./weather-backup-ws-marker.component.scss']\n})\nexport class WeatherBackupWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: AlarmConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the {@link Alarm} corresponding to the weather station\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.getAlarm(this.stationConfig);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./weather-backup-ws-marker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherBackupWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather/weather.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms both in a sidebar (instantiated in a WeatherSidebar),\nand a map (instantiated by a WeatherMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelectedStation(selectedStation: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedStation\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStation:     AlarmConfig\n\n                    \n                \n                    \n                        \n                            Type :     AlarmConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n* Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\n* and a map (instantiated by a {@link WeatherMap})\n*/\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedStation: AlarmConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor(\n  ) { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AlarmConfig}\n   */\n  changeSelectedStation(selectedStation: AlarmConfig): void {\n    this.selectedStation = selectedStation;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                mat-sidenav-container {\n  background: transparent;\n  height: 100%;\n}\n\n#weather-map {\n}\n\n#weather-sidenav {\n  background: transparent;\n  width: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherDataMarkerComponent.html":{"url":"components/WeatherDataMarkerComponent.html","title":"component - WeatherDataMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherDataMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display the weather station summary information in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-data-marker\n            \n\n            \n                styleUrls\n                ./weather-data-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-data-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:29\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Variable to manage if the marker should be highlighted from hover\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Variable to manage if the marker should be highlighted\nfor example after the selection from a parent component\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:38\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { AlarmConfig } from '../../../data/alarm-config';\nimport { WeatherService } from '../../weather.service';\n\n\n/**\n * Marker to display the weather station summary information in a map\n */\n@Component({\n  selector: 'app-weather-data-marker',\n  templateUrl: './weather-data-marker.component.html',\n  styleUrls: ['./weather-data-marker.component.scss']\n})\nexport class WeatherDataMarkerComponent implements OnInit {\n\n  /** Station config related to the component */\n  @Input() stationConfig: AlarmConfig;\n\n  /** Variable to manage if the marker should be highlighted\n  * for example after the selection from a parent component\n  */\n  @Input() selected = false;\n\n  /** Variable to manage if the marker should be highlighted from hover\n  */\n  @Input() onHover = false;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() { }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./weather-data-marker.component.scss\n                \n                .ws-data-container {\n  border-style: solid;\n  border-width: 2px;\n  border-radius: 4px;\n  padding: 10px;\n  text-align: center;\n  font-size: 16px;\n  min-width: fit-content;\n\n  .weather-icons {\n  }\n\n  .icon {\n    padding: 0px 10px;\n    width: fit-content;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherDataMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the components related to the Weather system\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WeatherBackupWsMarkerComponent\n                        \n                        \n                            WeatherComponent\n                        \n                        \n                            WeatherDataMarkerComponent\n                        \n                        \n                            WeatherMapComponent\n                        \n                        \n                            WeatherPrimaryWsConnectorComponent\n                        \n                        \n                            WeatherPrimaryWsMarkerComponent\n                        \n                        \n                            WeatherSidebarComponent\n                        \n                        \n                            WeatherStationSidebarComponent\n                        \n                        \n                            WeatherSummaryComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WeatherSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\nimport { WeatherMapComponent } from './weather-map/weather-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherSidebarComponent } from './weather-sidebar/weather-sidebar.component';\nimport { WeatherService } from './weather.service';\nimport { WeatherStationSidebarComponent } from './weather-station-sidebar/weather-station-sidebar.component';\n\nimport {\n  WeatherBackupWsMarkerComponent\n} from './weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component';\nimport {\n  WeatherPrimaryWsMarkerComponent\n} from './weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component';\nimport {\n  WeatherPrimaryWsConnectorComponent\n} from './weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component';\nimport {\n  WeatherDataMarkerComponent\n} from './weather-map-markers/weather-data-marker/weather-data-marker.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    ActionsModule,\n    DataModule,\n    SharedModule,\n    MapModule,\n    IasMaterialModule,\n  ],\n  providers: [\n    WeatherService\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n    WeatherMapComponent,\n    WeatherComponent,\n    WeatherSidebarComponent,\n    WeatherStationSidebarComponent,\n    WeatherBackupWsMarkerComponent,\n    WeatherDataMarkerComponent,\n    WeatherPrimaryWsMarkerComponent,\n    WeatherPrimaryWsConnectorComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsConnectorComponent.html":{"url":"components/WeatherPrimaryWsConnectorComponent.html","title":"component - WeatherPrimaryWsConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n\n\n    \n        Description\n    \n    \n        Line connector between the weather station marker and the summarized weather\ninformation marker in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-connector\n            \n\n            \n                styleUrls\n                ./weather-primary-ws-connector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-connector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPath\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                coords\n                            \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        coords\n                    \n                    \n                        Array of coordinates for the connector path \n\n                            \n                            Type :    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Value to highlight the connector for hover related events \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Value to highlight the connector \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns the svg path used to draw the line in the map\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    svg path that represent the line\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n\n/**\n * Line connector between the weather station marker and the summarized weather\n * information marker in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-connector',\n  templateUrl: './weather-primary-ws-connector.component.html',\n  styleUrls: ['./weather-primary-ws-connector.component.scss']\n})\nexport class WeatherPrimaryWsConnectorComponent implements OnInit {\n\n  /** Array of coordinates for the connector path */\n  @Input() coords: [[0, 0]];\n\n  /** Value to highlight the connector */\n  @Input() selected: false;\n\n  /** Value to highlight the connector for hover related events */\n  @Input() onHover: false;\n\n  /**\n  * Builds an instance of the component */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the svg path used to draw the line in the map\n   * @returns {string} svg path that represent the line\n   */\n  getPath(): string {\n    let pathString = '';\n    let counter = 0;\n    for (const coord of this.coords) {\n      if (counter > 0) {\n        pathString += 'L ' + coord[0] + ' ' + coord[1] + ' ';\n      } else {\n        pathString += 'M ' + coord[0] + ' ' + coord[1] + ' ';\n      }\n      counter += 1;\n    }\n    return pathString;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./weather-primary-ws-connector.component.scss\n                \n                .ws-connector {\n  fill: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsMarkerComponent.html":{"url":"components/WeatherPrimaryWsMarkerComponent.html","title":"component - WeatherPrimaryWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display primary weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-marker\n            \n\n            \n                styleUrls\n                ./weather-primary-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                propagateBlinkingState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blinkingStatus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blinkingStatus\n                    \n                    \n                        Event emitted to notify when the alarm should start or stop blinking \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propagateBlinkingState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        propagateBlinkingState(blinking: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Function executed to propagate the blinking state according to a boolean parameter\nIt is executed when the inner AlarmComponent emits a value on its\nAlarmComponent EventEmitter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        blinking\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                true if it should blink, false if not\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:18\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { AlarmConfig } from '../../../data/alarm-config';\nimport { WeatherService } from '../../weather.service';\n\n/**\n * Marker to display primary weather station in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-marker',\n  templateUrl: './weather-primary-ws-marker.component.html',\n  styleUrls: ['./weather-primary-ws-marker.component.scss']\n})\nexport class WeatherPrimaryWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: AlarmConfig;\n\n  /** Event emitted to notify when the alarm should start or stop blinking */\n  @Output() blinkingStatus = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Function executed to propagate the blinking state according to a boolean parameter\n  * It is executed when the inner {@link AlarmComponent} emits a value on its\n  * {@link AlarmComponent#blinkingStatus} {@link EventEmitter}\n  * @param {boolean} blinking true if it should blink, false if not\n  */\n  public propagateBlinkingState(blinking: boolean) {\n    this.blinkingStatus.emit(blinking);\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.alarm_id);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./weather-primary-ws-marker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherStationSidebarComponent.html":{"url":"components/WeatherStationSidebarComponent.html","title":"component - WeatherStationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherStationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display an item containing a weather station summary in the interactive Sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-station-sidebar\n            \n\n            \n                styleUrls\n                ./weather-station-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-station-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAlarm\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAlarm\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Weather station config object \n\n                            \n                            Type :    AlarmConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the corresponding highlighted class when the component is selected\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the highlighted class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:29\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:28\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService } from '../weather.service';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n * Component to display an item containing a weather station summary in the interactive Sidebar\n */\n@Component({\n  selector: 'app-weather-station-sidebar',\n  templateUrl: './weather-station-sidebar.component.html',\n  styleUrls: ['./weather-station-sidebar.component.scss']\n})\nexport class WeatherStationSidebarComponent implements OnInit {\n\n  /** Weather station config object */\n  @Input() stationConfig: AlarmConfig;\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedAlarm: AlarmConfig = null;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  */\n  ngOnInit() { }\n\n  /**\n  * Returns the corresponding highlighted class when the component is selected\n  * @returns {string} the highlighted class\n  */\n  getClass(): string {\n    if (this.selectedAlarm && (this.selectedAlarm.alarm_id === this.stationConfig.alarm_id)) {\n      return 'highlighted';\n    }\n    return '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./weather-station-sidebar.component.scss\n                \n                .weather-station-sidebar {\n    height: 60px;\n    line-height: 20px;\n    width: 100%;\n    padding-right: 50px;\n    border-radius: 4px;\n    position: absolute;\n    top:0;\n    left:0;\n\n    .weather-icons {\n      line-height: initial;\n      margin: 14px 0;\n    }\n\n    .icon {\n      padding: 0 10px;\n      width: fit-content;\n    }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherStationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                ./weather-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle weather configuration data\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, initializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:28\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle weather configuration data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { WeatherService } from '../weather.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.scss']\n})\nexport class WeatherSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {WeatherService} weatherService Service used to retrieve and handle weather configuration data\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Initiates the component, initializes the {@link WeatherService} if not already initialized\n   */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Weather View\n   */\n  redirect() {\n    this.routing.goToWeather();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./weather-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n\n    .item {\n      border-right-width: 1px;\n      border-right-style: solid;\n\n      &.no-border {\n        border: solid;\n        border-width: 0;\n      }\n\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                ./wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDisabled\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Defines whether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Handle click on wiki button, it opens the url in another window\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  /**\n   * Defines whether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled(): boolean {\n    return !this.url;\n  }\n\n\n  /**\n  * Handle click on wiki button, it opens the url in another window\n  */\n  onClick() {\n    if (!this.url.match(/^https?:\\/\\//i)) {\n      this.url = 'http://' + this.url;\n    }\n    window.open(this.url, '_blank');\n  }\n}\n\n    \n\n    \n        \n   -->\n  \n  \n      \n  \n  \n      \n  \n\n\n    \n\n    \n                \n                    ./wiki-button.component.css\n                \n                .wiki-button {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 1px;\n  margin: 0px 4px;\n  border-radius: 24px;\n  min-width: 1px;\n  width: 32px;\n  height: 32px;\n}\n\n.wiki-button-icon {\n  width: 18px;\n  margin: auto;\n}\n\n.mat-flat-button {\n  line-height: 28px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmBlinkComponent', 'selector': 'app-alarm-blink'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BuildingSummaryComponent', 'selector': 'app-building-summary'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'PropsTableComponent', 'selector': 'app-props-table'},{'name': 'SandboxAlarmCardComponent', 'selector': 'app-sandbox-alarm-card'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/actions/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedTreeData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarmData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack/ack.component.ts\n            \n            \n                component\n            \n            \n                AckComponent\n            \n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                src/app/actions/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                component\n            \n            \n                ShelveComponent\n            \n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                interface\n            \n            \n                TimeoutOption\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/sidenav.service.ts\n            \n            \n                injectable\n            \n            \n                SidenavService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/actions/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                component\n            \n            \n                AntennaMarkerComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map/antennas-map.component.ts\n            \n            \n                component\n            \n            \n                AntennasMapComponent\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n            \n            \n                component\n            \n            \n                AntennasSidebarComponent\n            \n            \n                90 %\n                (19/21)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-summary/antennas-summary.component.ts\n            \n            \n                component\n            \n            \n                AntennasSummaryComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas.service.ts\n            \n            \n                injectable\n            \n            \n                AntennasService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas/antennas.component.ts\n            \n            \n                component\n            \n            \n                AntennasComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAntennasConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockDevicesConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesUnreliableSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app-routing/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/building/building-summary/building-summary.component.ts\n            \n            \n                component\n            \n            \n                BuildingSummaryComponent\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/data/alarm-config.ts\n            \n            \n                class\n            \n            \n                AlarmConfig\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                class\n            \n            \n                AlarmSounds\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/data/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/data/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/health/health-summary/health-summary.component.ts\n            \n            \n                component\n            \n            \n                HealthSummaryComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/map/fixtures.ts\n            \n            \n                variable\n            \n            \n                Map\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/map/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialButtonsColorsComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialCardSampleComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialColorsComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialSandboxComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                MaterialToggleColorsComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                SandboxAlarmCardComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                SandboxAlarmComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                SandboxAlarmLabelComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            \n                component\n            \n            \n                SandboxAlarmTileComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/overview/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/overview/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                AntennasSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                WeatherSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-blink/alarm-blink.component.ts\n            \n            \n                component\n            \n            \n                AlarmBlinkComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-blink/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-card/alarm-card.component.ts\n            \n            \n                component\n            \n            \n                AlarmCardComponent\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-card/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/alarm-header.component.ts\n            \n            \n                component\n            \n            \n                AlarmHeaderComponent\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-info/alarm-info.component.ts\n            \n            \n                component\n            \n            \n                AlarmInfoComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/alarm-label.component.ts\n            \n            \n                component\n            \n            \n                AlarmLabelComponent\n            \n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedClassesWhenHiddenText\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedClassesWhenShowText\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/alarm-tile.component.ts\n            \n            \n                component\n            \n            \n                AlarmTileComponent\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tooltip/alarm-tooltip.component.ts\n            \n            \n                component\n            \n            \n                AlarmTooltipComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/props-table/props-table.component.ts\n            \n            \n                component\n            \n            \n                PropsTableComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/tabular/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ChangedAlarm2\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ChangedAlarm5\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedReducedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedReducedTableRowsAfterChange\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarmsToDisplay\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/table.component.ts\n            \n            \n                component\n            \n            \n                TableComponent\n            \n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                alarm_types\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAntennas\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockPadsStatus\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherStationsConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherBackupWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherDataMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsConnectorComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsMarkerComponent\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map/weather-map.component.ts\n            \n            \n                component\n            \n            \n                WeatherMapComponent\n            \n            \n                100 %\n                (43/43)\n            \n        \n        \n            \n                \n                src/app/weather/weather-sidebar/weather-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherSidebarComponent\n            \n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherStationSidebarComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-summary/weather-summary.component.ts\n            \n            \n                component\n            \n            \n                WeatherSummaryComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                src/app/weather/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.docker.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 7.2.3\n        \n            @angular/cdk : ^7.3.0\n        \n            @angular/common : 7.2.3\n        \n            @angular/compiler : 7.2.3\n        \n            @angular/core : 7.2.3\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : 7.2.3\n        \n            @angular/http : 7.2.3\n        \n            @angular/material : ^7.3.0\n        \n            @angular/platform-browser : 7.2.3\n        \n            @angular/platform-browser-dynamic : 7.2.3\n        \n            @angular/platform-server : 7.2.3\n        \n            @angular/router : 7.2.3\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.2\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.3\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.24.0\n        \n            ngx-clipboard : ^11.1.9\n        \n            ngx-spinner : ^7.0.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.4.0\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 malfunctioning\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AntennasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BuildingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialSandboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_BuildingModule\n\n\n\ncluster_BuildingModule_declarations\n\n\n\ncluster_BuildingModule_exports\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_MaterialSandboxModule\n\n\n\ncluster_MaterialSandboxModule_declarations\n\n\n\ncluster_MaterialSandboxModule_exports\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nBuildingModule\n\nBuildingModule\n\nBuildingModule -->\n\nDataModule->BuildingModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\nHealthModule -->\n\nIasMaterialModule->HealthModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMaterialSandboxModule\n\nMaterialSandboxModule\n\nMaterialSandboxModule -->\n\nIasMaterialModule->MaterialSandboxModule\n\n\n\nBuildingModule -->\n\nIasMaterialModule->BuildingModule\n\n\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\nMaterialSandboxModule -->\n\nSharedModule->MaterialSandboxModule\n\n\n\nBuildingModule -->\n\nSharedModule->BuildingModule\n\n\n\n\n\nAlarmBlinkComponent \n\nAlarmBlinkComponent \n\nAlarmBlinkComponent  -->\n\nSharedModule->AlarmBlinkComponent \n\n\n\n\n\nAlarmCardComponent \n\nAlarmCardComponent \n\nAlarmCardComponent  -->\n\nSharedModule->AlarmCardComponent \n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nAlarmInfoComponent \n\nAlarmInfoComponent \n\nAlarmInfoComponent  -->\n\nSharedModule->AlarmInfoComponent \n\n\n\n\n\nAlarmLabelComponent \n\nAlarmLabelComponent \n\nAlarmLabelComponent  -->\n\nSharedModule->AlarmLabelComponent \n\n\n\n\n\nAlarmTileComponent \n\nAlarmTileComponent \n\nAlarmTileComponent  -->\n\nSharedModule->AlarmTileComponent \n\n\n\n\n\nPropsTableComponent \n\nPropsTableComponent \n\nPropsTableComponent  -->\n\nSharedModule->PropsTableComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\nAntennasModule -->\n\nTabularModule->AntennasModule\n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nTabularModule->TableComponent \n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\nAppRoutingModule -->\n\nMaterialSandboxModule->AppRoutingModule\n\n\n\n\n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent  -->\n\nMaterialSandboxModule->MaterialButtonsColorsComponent \n\n\n\n\n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent  -->\n\nMaterialSandboxModule->MaterialCardSampleComponent \n\n\n\n\n\nMaterialColorsComponent \n\nMaterialColorsComponent \n\nMaterialColorsComponent  -->\n\nMaterialSandboxModule->MaterialColorsComponent \n\n\n\n\n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent  -->\n\nMaterialSandboxModule->MaterialToggleColorsComponent \n\n\n\n\n\nSandboxAlarmCardComponent \n\nSandboxAlarmCardComponent \n\nSandboxAlarmCardComponent  -->\n\nMaterialSandboxModule->SandboxAlarmCardComponent \n\n\n\n\n\nSandboxAlarmComponent \n\nSandboxAlarmComponent \n\nSandboxAlarmComponent  -->\n\nMaterialSandboxModule->SandboxAlarmComponent \n\n\n\n\n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent  -->\n\nMaterialSandboxModule->SandboxAlarmLabelComponent \n\n\n\n\n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent  -->\n\nMaterialSandboxModule->SandboxAlarmTileComponent \n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nBuildingSummaryComponent\n\nBuildingSummaryComponent\n\nBuildingModule -->\n\nBuildingSummaryComponent->BuildingModule\n\n\n\nOverviewModule -->\n\nBuildingModule->OverviewModule\n\n\n\n\n\nBuildingSummaryComponent \n\nBuildingSummaryComponent \n\nBuildingSummaryComponent  -->\n\nBuildingModule->BuildingSummaryComponent \n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nMaterialButtonsColorsComponent\n\nMaterialButtonsColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialButtonsColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialCardSampleComponent\n\nMaterialCardSampleComponent\n\nMaterialSandboxModule -->\n\nMaterialCardSampleComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialColorsComponent\n\nMaterialColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialToggleColorsComponent\n\nMaterialToggleColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialToggleColorsComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmCardComponent\n\nSandboxAlarmCardComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmCardComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmComponent\n\nSandboxAlarmComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmLabelComponent\n\nSandboxAlarmLabelComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmLabelComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmTileComponent\n\nSandboxAlarmTileComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmTileComponent->MaterialSandboxModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAlarmBlinkComponent\n\nAlarmBlinkComponent\n\nSharedModule -->\n\nAlarmBlinkComponent->SharedModule\n\n\n\n\n\nAlarmCardComponent\n\nAlarmCardComponent\n\nSharedModule -->\n\nAlarmCardComponent->SharedModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nAlarmInfoComponent\n\nAlarmInfoComponent\n\nSharedModule -->\n\nAlarmInfoComponent->SharedModule\n\n\n\n\n\nAlarmLabelComponent\n\nAlarmLabelComponent\n\nSharedModule -->\n\nAlarmLabelComponent->SharedModule\n\n\n\n\n\nAlarmTileComponent\n\nAlarmTileComponent\n\nSharedModule -->\n\nAlarmTileComponent->SharedModule\n\n\n\n\n\nAlarmTooltipComponent\n\nAlarmTooltipComponent\n\nSharedModule -->\n\nAlarmTooltipComponent->SharedModule\n\n\n\n\n\nPropsTableComponent\n\nPropsTableComponent\n\nSharedModule -->\n\nPropsTableComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTabularModule -->\n\nTableComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    50 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
