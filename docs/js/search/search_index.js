var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.084,1,0.762]],["body/components/AckButtonComponent.html",[0,0.166,1,1.231,2,0.121,3,0.091,4,0.785,5,1.524,6,0.754,7,0.077,8,5.206,9,5.686,10,2.521,11,0.328,12,1.644,13,0.706,14,3.242,15,3.204,16,2.887,17,3.015,18,4.316,19,0.94,20,1.134,21,4.997,22,0.817,23,1.593,24,1.407,25,1.485,26,0.979,27,3.878,28,0.979,29,3.878,30,0.307,31,0.865,32,1.229,33,3.744,34,0.792,35,6.26,36,5.425,37,5.425,38,1.231,39,3.29,40,1.761,41,0.91,42,0.542,43,3.064,44,6.327,45,6.327,46,0.695,47,4.316,48,0.661,49,0.726,50,0.94,51,0.016,52,0.681,53,0.792,54,0.759,55,1.327,56,2.835,57,0.912,58,4.071,59,2.724,60,4.874,61,5.425,62,2.579,63,1.761,64,1.712,65,3.536,66,2.449,67,4.981,68,0.763,69,2.441,70,1.693,71,3.536,72,1.943,73,4.463,74,1.761,75,3.536,76,1.295,77,1.761,78,3.878,79,3.878,80,3.073,81,3.878,82,4.316,83,4.316,84,0.918,85,3.536,86,3.878,87,5.425,88,3.536,89,1.579,90,4.135,91,3.073,92,3.29,93,3.073,94,3.064,95,0.242,96,0.121,97,3.064,98,2.336,99,0.884,100,0.106,101,0.007,102,0.997,103,1.197,104,0.995,105,3.064,106,3.064,107,3.064,108,0.902,109,2.336,110,1.167,111,3.064,112,2.521,113,3.536,114,3.536,115,0.469,116,1.15,117,1.15,118,1.105,119,1.446,120,0.817,121,1.15,122,0.667,123,0.817,124,0.667,125,0.817,126,0.515,127,0.817,128,0.695,129,0.817,130,0.695,131,1.087,132,1.446,133,0.667,134,0.817,135,0.724,136,1.332,137,0.695,138,1.332,139,0.695,140,1.332,141,0.695,142,0.817,143,0.695,144,0.817,145,0.695,146,0.785,147,0.695,148,0.817,149,0.667,150,0.817,151,0.695,152,0.695,153,0.667,154,0.817,155,0.695,156,0.695,157,0.817,158,0.667,159,0.817,160,0.695,161,0.667,162,0.817,163,0.667,164,0.588,165,1.15,166,0.667,167,0.754,168,0.695,169,1.247,170,0.754,171,1.181,172,0.667,173,0.817,174,0.695,175,0.469,176,0.724,177,0.695,178,0.979,179,0.817,180,0.695,181,0.695,182,0.695,183,0.64,184,0.695,185,0.695,186,0.785,187,0.817,188,0.009,189,0.009]],["title/components/AckComponent.html",[0,0.084,122,0.731]],["body/components/AckComponent.html",[0,0.162,1,0.422,2,0.074,3,0.055,4,0.476,5,0.495,6,0.457,7,0.047,11,0.302,12,0.909,13,0.636,14,2.519,15,2.649,16,2.471,17,3.18,19,0.645,20,0.838,22,0.495,23,1.528,24,1.349,25,1.37,26,0.672,28,0.672,30,0.186,31,0.593,32,1.207,33,3.426,34,0.716,38,0.956,40,0.962,41,0.954,42,0.372,46,0.691,50,0.645,51,0.016,52,0.529,53,0.857,54,0.521,55,1.297,56,2.391,57,0.865,58,3.664,59,1.173,62,1.77,63,1.592,68,0.777,69,1.333,70,1.153,72,1.333,73,2.437,74,1.199,76,0.889,77,1.368,80,3.001,84,1.134,89,1.883,91,2.109,95,0.246,96,0.074,98,1.417,99,0.536,100,0.064,101,0.004,102,0.982,103,1.627,104,1.494,108,0.619,109,3.213,110,1.128,112,2.437,115,0.285,116,0.789,117,0.789,118,0.759,119,1.123,120,0.495,121,0.789,122,0.918,123,0.495,124,0.405,125,0.495,126,0.312,127,0.495,128,0.422,129,0.495,130,0.422,131,0.844,132,1.123,133,0.405,134,0.495,135,0.439,136,0.984,137,0.422,138,0.984,139,0.422,140,0.984,141,0.422,142,0.495,143,0.422,144,0.495,145,0.422,146,0.476,147,0.422,148,0.495,149,0.405,150,0.495,151,0.422,152,0.422,153,0.405,154,0.495,155,0.422,156,0.422,157,0.495,158,0.405,159,0.495,160,0.422,161,0.405,162,0.495,163,0.405,164,0.357,165,0.789,166,0.405,167,0.457,168,0.422,169,1.07,170,0.457,171,0.873,172,0.405,173,0.495,174,0.422,175,0.285,176,0.439,177,0.422,178,0.672,179,0.495,180,0.422,181,0.422,182,0.422,183,0.388,184,0.422,185,0.422,186,0.476,187,0.495,188,0.008,189,0.006,190,1.858,191,2.681,192,3.694,193,3.418,194,3.418,195,4.863,196,2.932,197,4.863,198,4.304,199,4.395,200,4.863,201,5.646,202,3.131,203,4.214,204,4.863,205,4.863,206,4.905,207,4.905,208,4.214,209,4.214,210,4.214,211,4.408,212,4.214,213,3.418,214,1.858,215,4.802,216,2.109,217,2.264,218,4.214,219,3.787,220,4.136,221,3.291,222,3.125,223,3.418,224,0.821,225,2.264,226,3.001,227,2.749,228,1.743,229,1.743,230,2.258,231,3.076,232,1.981,233,2.962,234,2.962,235,3.788,236,2.144,237,2.928,238,2.144,239,1.87,240,2.44,241,2.144,242,2.66,243,5.507,244,2.662,245,2.144,246,3.372,247,1.668,248,3.787,249,1.283,250,2.144,251,3.787,252,2.144,253,2.662,254,4.214,255,2.962,256,4.02,257,2.819,258,2.519,259,2.144,260,2.662,261,2.144,262,1.87,263,2.144,264,2.144,265,2.437,266,2.144,267,1.981,268,1.77,269,2.109,270,2.662,271,3.418,272,2.144,273,1.87,274,2.209,275,2.512,276,3.787,277,2.662,278,1.216,279,1.179,280,2.144,281,2.144,282,4.863,283,2.144,284,1.618,285,2.144,286,3.418,287,3.787,288,2.144,289,1.333,290,2.258,291,5.353,292,2.144,293,2.144,294,3.418,295,2.836,296,1.681,297,2.962,298,2.962,299,3.113,300,2.962,301,3.694,302,2.144,303,2.144,304,2.144,305,1.173,306,1.173,307,1.054,308,0.836,309,1.67,310,1.417,311,2.258,312,0.924,313,2.662,314,2.962,315,1.858,316,1.67,317,1.858,318,1.858,319,1.858,320,1.858,321,1.858,322,1.858,323,2.144,324,2.962,325,1.858,326,5.646,327,1.858,328,1.858,329,2.962,330,2.144,331,3.418,332,2.144,333,2.144,334,2.144,335,2.962,336,2.471,337,1.67,338,1.858,339,2.816,340,1.67,341,1.67,342,2.144,343,0.653,344,2.144,345,3.418,346,2.144,347,3.418,348,2.962,349,2.144,350,2.144,351,2.144,352,1.981,353,2.144,354,3.787,355,2.144,356,2.144,357,2.144,358,1.529,359,1.858,360,1.67,361,1.67,362,1.67,363,1.858,364,1.529,365,1.858,366,1.858,367,1.858,368,1.67,369,1.529,370,3.509,371,1.858,372,3.418,373,3.418,374,2.962,375,1.393,376,2.437,377,3.418,378,1.981,379,2.962,380,3.418,381,3.418,382,3.418]],["title/modules/ActionsModule.html",[383,0.793,384,2.006]],["body/modules/ActionsModule.html",[1,1.554,2,0.162,3,0.122,7,0.102,9,3.67,25,1.188,33,3.662,51,0.016,57,0.687,95,0.312,96,0.162,98,3.113,100,0.212,101,0.009,115,0.626,122,1.492,124,1.405,126,0.687,143,1.554,160,1.554,161,1.492,185,1.554,186,1.046,188,0.011,189,0.011,229,2.391,231,2.441,305,2.578,307,2.317,383,1.238,384,4.257,385,1.435,386,2.718,387,1.92,388,4.084,389,4.084,390,4.084,391,4.084,392,4.084,393,3.485,394,3.173,395,3.485,396,2.575,397,1.92,398,1.761,399,4.713,400,2.575,401,2.828,402,2.008,403,4.713,404,4.713,405,6.672,406,3.67,407,3.67,408,3.36,409,4.713,410,1.761,411,4.706,412,4.31,413,4.31,414,1.761,415,2.317,416,2.441,417,2.732,418,2.732,419,4.713]],["title/components/AlarmComponent.html",[0,0.084,126,0.564]],["body/components/AlarmComponent.html",[0,0.168,1,0.642,2,0.112,3,0.084,4,0.724,5,0.754,6,0.696,7,0.071,11,0.186,12,0.696,13,0.78,17,1.917,19,0.888,20,1.085,22,0.754,23,1.585,24,1.399,25,1.187,26,0.925,28,0.925,30,0.283,31,0.817,32,1.5,34,0.595,38,1.187,40,2.046,41,0.971,42,0.6,46,0.721,48,0.433,49,0.476,51,0.016,52,0.765,53,0.764,54,0.841,57,0.932,63,1.933,64,2.076,66,2.713,68,0.75,69,2.152,70,1.858,72,1.835,74,1.324,76,1.223,77,1.324,84,0.52,93,2.903,95,0.182,96,0.112,99,0.816,100,0.141,101,0.013,102,0.52,103,1.325,108,0.591,115,0.433,116,1.087,117,1.087,118,1.044,119,1.394,120,0.754,121,1.087,122,0.616,123,0.754,124,0.616,125,0.754,126,0.88,127,0.754,128,0.642,129,0.754,130,0.642,131,1.048,132,1.394,133,0.616,134,0.754,135,0.668,136,1.274,137,0.642,138,1.274,139,0.642,140,1.274,141,0.642,142,0.754,143,0.642,144,0.754,145,0.642,146,0.724,147,0.642,148,0.754,149,0.616,150,0.754,151,0.642,152,0.642,153,0.616,154,0.754,155,0.642,156,0.642,157,0.754,158,0.616,159,0.754,160,0.642,161,0.616,162,0.754,163,0.616,164,1.004,165,1.087,166,0.616,167,0.696,168,0.642,169,1.221,170,0.696,171,1.13,172,0.616,173,0.754,174,0.642,175,0.433,176,0.668,177,0.642,178,0.925,179,0.754,180,0.642,181,0.642,182,0.642,183,0.591,184,0.642,185,0.642,186,0.724,187,0.754,188,0.009,189,0.009,224,1.13,228,2.639,240,1.553,246,3.5,247,1.938,249,1.278,274,1.17,278,1.717,279,1.691,289,2.152,312,0.883,343,0.994,385,0.994,420,2.542,421,2.436,422,2.856,423,3.933,424,4.077,425,4.077,426,5.777,427,4.296,428,5.516,429,5.516,430,5.516,431,4.78,432,4.78,433,6.71,434,4.78,435,3.933,436,5.109,437,4.705,438,3.264,439,1.698,440,2.841,441,3.264,442,2.313,443,2.005,444,3.264,445,4.305,446,4.305,447,3.355,448,3.355,449,3.264,450,5.232,451,3.264,452,3.264,453,3.264,454,4.705,455,2.828,456,3.264,457,2.014,458,3.264,459,2.542,460,3.264,461,3.264,462,3.264,463,4.296,464,3.264,465,4.077,466,4.077,467,4.077,468,2.727,469,4.077,470,1.892,471,2.014,472,1.22,473,2.542,474,2.202,475,2.436,476,2.436,477,2.436,478,2.436,479,2.202,480,2.313,481,3.644,482,1.69,483,1.785,484,2.156,485,2.156,486,2.828,487,4.705]],["title/components/AlarmHeaderComponent.html",[0,0.084,128,0.762]],["body/components/AlarmHeaderComponent.html",[0,0.169,1,0.629,2,0.11,3,0.083,4,0.71,5,0.739,6,0.682,7,0.069,11,0.182,12,0.682,13,0.721,17,2.697,19,0.875,20,1.072,22,0.739,23,1.582,24,1.397,25,0.912,26,0.912,28,0.912,30,0.277,34,0.757,38,1.176,40,2.006,41,0.974,42,0.593,46,0.73,48,0.616,49,0.675,51,0.016,52,0.831,53,0.405,54,0.706,57,0.925,63,1.304,64,1.594,68,0.788,69,2.582,70,1.958,72,2.582,74,1.682,76,1.205,77,1.304,84,0.509,95,0.179,96,0.11,99,0.799,100,0.096,101,0.012,104,0.9,108,0.839,109,3.951,110,2.185,111,2.771,115,0.425,116,1.071,117,1.071,118,1.029,119,1.381,120,0.739,121,1.071,122,0.604,123,0.739,124,0.604,125,0.739,126,0.466,127,0.739,128,1.176,129,0.739,130,0.629,131,1.038,132,1.381,133,0.604,134,0.739,135,0.655,136,1.259,137,0.629,138,1.259,139,0.629,140,1.259,141,0.629,142,0.739,143,0.629,144,0.739,145,0.629,146,0.71,147,0.629,148,0.739,149,0.604,150,0.739,151,0.629,152,0.629,153,0.604,154,0.739,155,0.629,156,0.629,157,0.739,158,0.604,159,0.739,160,0.629,161,0.604,162,0.739,163,0.604,164,0.907,165,1.071,166,0.604,167,0.682,168,0.629,169,1.214,170,0.682,171,1.117,172,0.604,173,0.739,174,0.629,175,0.425,176,0.655,177,0.629,178,0.912,179,0.739,180,0.629,181,0.629,182,0.629,183,0.579,184,0.629,185,0.629,186,0.71,187,0.739,188,0.012,189,0.009,240,1.53,247,2.067,249,1.149,268,3.097,274,1.661,278,1.782,279,1.552,284,1.412,295,1.427,360,2.49,385,1.412,422,2.069,427,4.657,431,5.182,432,5.182,435,3.888,436,3.306,445,3.306,446,4.721,447,3.306,448,3.306,459,3.61,470,1.854,488,6.355,489,5.711,490,2.771,491,4.721,492,2.536,493,4.636,494,4.636,495,5.98,496,6.349,497,6.349,498,4.636,499,3.198,500,4.017,501,5.182,502,4.636,503,3.198,504,5.182,505,4.017,506,3.198,507,3.198,508,4.636,509,4.636,510,4.017,511,3.198,512,2.86,513,3.198,514,3.198,515,3.198,516,5.453,517,4.636,518,3.888,519,4.636,520,2.771,521,2.771,522,2.771,523,3.198,524,5.502,525,2.49,526,2.771,527,4.636,528,2.771,529,2.771,530,4.636,531,2.771,532,2.771,533,4.636,534,6.349,535,5.453,536,3.198,537,4.636,538,3.198,539,2.49,540,4.636]],["title/classes/AlarmImageSet.html",[101,0.007,440,1.651]],["body/classes/AlarmImageSet.html",[0,0.162,2,0.138,3,0.104,7,0.087,11,0.309,13,0.818,17,1.637,19,0.758,20,1.07,23,0.79,24,0.697,26,0.79,28,0.79,30,0.348,31,0.944,32,1.718,38,0.79,40,2.049,41,0.975,42,0.592,46,0.711,48,0.722,49,0.793,50,0.758,51,0.016,52,0.671,53,0.95,54,0.829,57,1.038,63,2.084,64,1.87,66,1.975,70,1.471,72,1.567,76,1.044,77,1.13,93,2.479,95,0.21,96,0.138,99,1.004,100,0.163,101,0.013,102,0.64,103,0.965,108,0.727,126,0.585,164,0.668,188,0.01,189,0.01,224,0.965,228,2.845,240,1.326,246,2.197,247,1.788,249,1.398,278,1.004,279,1.762,312,1.471,343,1.657,420,3.128,421,2.08,422,2.427,423,4.398,424,3.481,425,3.481,426,4.714,433,6.937,434,3.481,435,2.864,436,4.398,439,1.53,440,3.034,442,1.975,443,1.712,445,2.864,446,2.864,447,2.864,448,2.864,450,4.714,465,3.481,466,3.481,467,3.481,468,2.328,469,3.481,470,2.328,471,3.356,472,2.033,473,4.236,474,3.333,475,3.688,476,3.688,477,3.688,478,3.688,479,3.333,480,3.502,481,4.564,482,2.817,483,2.975,484,3.594,485,2.654,486,3.481,541,5.44,542,4.017,543,4.017,544,4.017,545,4.017,546,4.017,547,4.017,548,4.017]],["title/classes/AlarmItemFlatNode.html",[101,0.007,549,2.762]],["body/classes/AlarmItemFlatNode.html",[0,0.141,2,0.096,3,0.108,6,1.595,7,0.091,8,3.989,11,0.159,13,0.618,17,1.136,19,0.526,20,0.824,23,0.548,24,0.484,25,1.179,26,0.548,28,0.548,30,0.242,31,0.727,38,0.548,40,1.178,41,0.901,46,0.515,48,0.556,51,0.016,52,0.547,53,0.708,55,0.526,63,1.772,66,1.371,68,0.792,69,2.811,70,1.818,72,2.182,74,1.935,76,1.089,84,0.667,95,0.26,96,0.144,99,0.697,100,0.151,101,0.01,102,1.182,103,0.67,104,2.118,108,0.758,110,1.661,124,0.526,153,1.056,175,0.893,188,0.011,189,0.008,216,1.901,224,0.67,226,2.584,227,1.087,232,2.917,240,0.92,242,3.832,244,4.906,249,1.041,269,1.72,273,1.525,274,2.257,275,2.937,276,2.17,278,0.697,279,1.242,284,1.276,289,2.457,295,2.916,299,1.304,308,1.087,312,1.86,375,2.05,385,0.849,408,3.989,443,1.188,457,2.584,482,2.169,549,5.455,550,2.17,551,4.906,552,4.904,553,7.082,554,5.456,555,6.597,556,2.787,557,2.787,558,2.787,559,3.588,560,2.428,561,3.63,562,0.67,563,2.415,564,2.415,565,3.63,566,2.415,567,3.63,568,3.63,569,2.17,570,2.415,571,2.751,572,1.371,573,1.244,574,4.66,575,2.415,576,2.618,577,1.616,578,2.415,579,2.415,580,3.262,581,2.17,582,2.415,583,2.415,584,1.913,585,4.848,586,3.262,587,1.525,588,1.988,589,2.415,590,4.36,591,2.415,592,2.17,593,2.415,594,1.988,595,2.415,596,4.36,597,2.415,598,2.415,599,3.918,600,2.415,601,2.415,602,2.415,603,2.415,604,2.415,605,2.415,606,2.415,607,2.17,608,3.262,609,2.415,610,3.63,611,2.415,612,3.63,613,2.415,614,2.415,615,3.63,616,2.415,617,2.415,618,2.415,619,3.63,620,2.415,621,2.415,622,2.415,623,2.415,624,2.415,625,2.291,626,2.17,627,2.415,628,4.36,629,2.415,630,2.415,631,2.415,632,3.63,633,2.584,634,2.415,635,2.415,636,2.415,637,2.415,638,2.415,639,2.415,640,2.415,641,3.262,642,3.63,643,2.415,644,2.987,645,2.415,646,2.415,647,3.098,648,3.63,649,2.415,650,2.415,651,2.415,652,2.415,653,2.415,654,2.415,655,2.415,656,2.415,657,2.415,658,2.415,659,2.415,660,2.415,661,3.63,662,2.415,663,2.415,664,2.17,665,3.63,666,2.415,667,3.918,668,5.197,669,2.415,670,4.848,671,1.841,672,2.415,673,3.63,674,2.415,675,2.415,676,3.262,677,2.415,678,2.17,679,5.827,680,2.415,681,3.63,682,2.415,683,2.415,684,2.415,685,3.63,686,2.415,687,2.415,688,3.262,689,6.247,690,2.415,691,4.848,692,2.415,693,3.63,694,2.17,695,2.415,696,4.36,697,4.848,698,2.415,699,2.415,700,2.415,701,2.415,702,2.415,703,1.72,704,2.415,705,2.415,706,2.415,707,2.415,708,2.415,709,2.415,710,2.415,711,2.415,712,2.415,713,2.415,714,2.415,715,2.415]],["title/classes/AlarmItemNode.html",[101,0.007,574,2.762]],["body/classes/AlarmItemNode.html",[0,0.141,2,0.097,3,0.109,6,1.597,7,0.092,8,3.609,11,0.16,13,0.621,17,1.147,19,0.531,20,0.83,23,0.553,24,0.489,25,1.184,26,0.553,28,0.553,30,0.244,31,0.732,38,0.553,40,1.187,41,0.908,46,0.466,48,0.56,51,0.016,52,0.55,53,0.641,55,0.531,63,1.779,66,1.384,68,0.793,69,2.739,70,1.773,72,2.193,74,1.897,76,1.097,84,0.672,95,0.261,96,0.145,99,0.703,100,0.152,101,0.011,102,1.184,103,0.676,104,2.121,108,0.764,110,1.67,124,0.531,153,1.061,175,0.895,188,0.011,189,0.008,216,1.909,224,0.676,226,2.603,227,1.098,232,2.934,240,0.929,242,3.688,244,5.469,249,1.045,269,1.737,273,1.539,274,2.349,275,2.943,276,2.192,278,0.703,279,1.248,284,1.285,289,2.466,295,2.926,299,1.317,308,1.098,312,1.865,375,1.719,385,0.857,408,3.609,443,1.199,457,2.603,482,2.185,549,5.436,550,2.192,551,4.69,552,4.917,553,7.082,554,4.69,555,6.39,559,3.609,560,2.446,561,3.656,562,0.676,563,2.439,564,2.439,565,3.656,566,2.439,567,3.656,568,3.656,569,2.192,570,2.439,571,2.765,572,1.384,573,1.256,574,5.008,575,2.439,576,2.631,577,1.631,578,2.439,579,2.439,580,3.285,581,2.192,582,2.439,583,2.439,584,1.919,585,4.872,586,3.285,587,1.539,588,2.007,589,2.439,590,4.386,591,2.439,592,2.192,593,2.439,594,2.007,595,2.439,596,4.386,597,2.439,598,2.439,599,3.941,600,2.439,601,2.439,602,2.439,603,2.439,604,2.439,605,2.439,606,2.439,607,2.192,608,3.285,609,2.439,610,3.656,611,2.439,612,3.656,613,2.439,614,2.439,615,3.656,616,2.439,617,2.439,618,2.439,619,3.656,620,2.439,621,2.439,622,2.439,623,2.439,624,2.439,625,2.308,626,2.192,627,2.439,628,4.386,629,2.439,630,2.439,631,2.439,632,3.656,633,2.603,634,2.439,635,2.439,636,2.439,637,2.439,638,2.439,639,2.439,640,2.439,641,3.285,642,3.656,643,2.439,644,3.008,645,2.439,646,2.439,647,3.109,648,3.656,649,2.439,650,2.439,651,2.439,652,2.439,653,2.439,654,2.439,655,2.439,656,2.439,657,2.439,658,2.439,659,2.439,660,2.439,661,3.656,662,2.439,663,2.439,664,2.192,665,3.656,666,2.439,667,3.941,668,5.219,669,2.439,670,4.872,671,1.859,672,2.439,673,3.656,674,2.439,675,2.439,676,3.285,677,2.439,678,2.192,679,5.844,680,2.439,681,3.656,682,2.439,683,2.439,684,2.439,685,3.656,686,2.439,687,2.439,688,3.285,689,6.26,690,2.439,691,4.872,692,2.439,693,3.656,694,2.192,695,2.439,696,4.386,697,4.872,698,2.439,699,2.439,700,2.439,701,2.439,702,2.439,703,1.737,704,2.439,705,2.439,706,2.439,707,2.439,708,2.439,709,2.439,710,2.439,711,2.439,712,2.439,713,2.439,714,2.439,715,2.439,716,2.814,717,2.814]],["title/classes/AlarmSounds.html",[101,0.007,718,3.017]],["body/classes/AlarmSounds.html",[2,0.071,3,0.054,7,0.148,11,0.189,13,0.664,14,1.073,15,0.969,16,1.927,17,2.386,25,0.654,30,0.288,31,0.577,32,1.43,34,0.527,41,0.97,42,0.225,46,0.561,48,0.275,49,0.302,50,0.391,51,0.016,52,0.683,53,0.863,54,0.635,55,1.217,57,0.915,62,1.073,63,1.853,64,2.216,68,0.788,69,1.625,70,1.507,72,1.297,74,1.568,77,1.172,79,2.589,89,1.054,91,3.221,95,0.255,96,0.071,99,0.518,100,0.1,101,0.01,102,1.2,103,1.001,104,2.04,108,1.28,110,0.684,164,0.974,171,0.424,175,0.633,188,0.006,189,0.006,191,1.297,196,3.254,198,1.368,199,4.856,202,2.677,216,1.054,222,2.567,225,1.775,226,1.278,227,2.174,228,1.191,232,1.201,237,2.849,240,1.84,242,1.819,243,2.881,247,0.56,249,1.322,256,3.221,260,1.613,262,1.133,269,1.278,273,3.049,274,2.182,275,0.844,278,1.305,279,1.513,284,1.913,289,1.625,290,2.197,295,0.924,299,0.969,310,1.368,312,1.584,354,3.243,370,1.368,375,2.127,385,0.631,397,0.844,414,0.774,439,0.935,443,0.883,470,1.201,471,2.051,472,1.242,474,0.969,482,2.704,483,1.819,505,4.83,512,1.278,525,3.243,562,0.799,571,1.019,572,1.019,573,0.924,584,1.631,588,1.477,625,2.278,626,3.243,633,3.221,647,2.567,718,2.589,719,1.795,720,2.589,721,7.762,722,3.026,723,7.136,724,6.237,725,5.076,726,6.282,727,6.282,728,5.857,729,5.857,730,3.325,731,2.071,732,3.325,733,2.071,734,3.325,735,2.071,736,3.325,737,2.071,738,3.325,739,2.071,740,3.325,741,2.071,742,3.325,743,3.325,744,3.325,745,2.589,746,3.325,747,1.477,748,2.071,749,2.071,750,5.221,751,3.609,752,3.609,753,1.201,754,1.368,755,0.969,756,2.97,757,0.808,758,3.221,759,2.071,760,2.127,761,2.613,762,1.019,763,4.768,764,2.071,765,2.071,766,2.071,767,2.071,768,5.814,769,3.243,770,3.026,771,5.221,772,2.071,773,1.613,774,2.071,775,2.071,776,2.589,777,2.071,778,1.368,779,3.325,780,2.071,781,2.071,782,2.071,783,2.071,784,2.197,785,2.071,786,1.613,787,1.795,788,2.071,789,3.325,790,2.071,791,2.071,792,2.071,793,1.949,794,3.609,795,3.325,796,2.071,797,2.071,798,2.589,799,2.071,800,2.071,801,1.795,802,2.071,803,2.071,804,2.071,805,2.071,806,2.589,807,4.165,808,4.768,809,4.768,810,2.071,811,4.165,812,3.325,813,2.071,814,3.325,815,3.325,816,2.071,817,3.325,818,2.071,819,5.574,820,4.165,821,2.071,822,3.325,823,2.071,824,2.071,825,2.071,826,2.071,827,2.071,828,2.071,829,2.071,830,2.071,831,2.071,832,2.071,833,2.071,834,2.071,835,3.325,836,3.325,837,1.477,838,2.071,839,1.613,840,1.795,841,2.071,842,3.325,843,2.071,844,2.071,845,1.477,846,2.071,847,2.071,848,2.071,849,2.071,850,5.857,851,2.071,852,4.165,853,3.325,854,2.071,855,2.071,856,2.071,857,4.132,858,2.071,859,2.071,860,3.325,861,2.071,862,2.071,863,2.071,864,2.071,865,4.524,866,2.071,867,2.071,868,3.325,869,2.071,870,2.071,871,2.071,872,2.071,873,2.071,874,1.795,875,2.071,876,3.243,877,2.071,878,1.613,879,2.071,880,1.613,881,4.165,882,2.197,883,2.071,884,3.325,885,3.325,886,2.071,887,3.609,888,3.325,889,2.071,890,3.325,891,2.071,892,3.325,893,2.071,894,2.071,895,4.165,896,4.165,897,4.768,898,2.071,899,2.071,900,3.325,901,2.071,902,2.071,903,3.325,904,2.071,905,2.071,906,2.071,907,4.165,908,3.325,909,3.325,910,2.071,911,3.609,912,2.071,913,6.446,914,4.165,915,4.768,916,4.165,917,3.325,918,2.071,919,2.071,920,2.071,921,2.071,922,2.071,923,2.071,924,2.071,925,2.071,926,2.071,927,2.071,928,1.795,929,2.071,930,1.795,931,3.325,932,2.071,933,1.278,934,2.071,935,2.071,936,3.325,937,3.325,938,1.613,939,2.071,940,2.071,941,2.071,942,2.071,943,2.071,944,2.881,945,2.071,946,2.071,947,2.071,948,3.325,949,2.071,950,2.071,951,2.071,952,2.071,953,2.071]],["title/classes/AntennaConfig.html",[101,0.007,954,2.39]],["body/classes/AntennaConfig.html",[0,0.131,2,0.134,3,0.101,7,0.085,11,0.222,13,0.549,30,0.338,31,0.925,32,1.667,34,0.493,41,0.95,42,0.424,46,0.629,48,0.517,49,0.568,51,0.016,53,0.769,55,1.232,57,0.776,64,1.832,68,0.549,70,1.054,74,1.499,77,1.923,84,0.967,89,1.235,95,0.279,96,0.134,99,0.974,100,0.16,101,0.011,102,0.621,103,1.28,104,1.836,108,1.278,126,0.568,131,1.404,169,1.133,175,0.708,183,1.099,188,0.01,189,0.01,191,1.52,225,3.179,227,2.078,228,1.909,237,2.171,239,3.951,249,1.322,262,2.131,268,2.018,274,1.909,284,2.298,296,2.986,312,1.441,352,3.519,383,0.798,410,1.456,422,3.05,439,1.985,440,2.912,442,2.62,472,2.269,474,2.493,475,2.759,476,2.759,477,2.759,478,2.759,479,2.493,480,2.62,512,2.404,562,1.28,571,3.21,572,1.916,573,1.739,584,2.065,647,2.62,755,1.823,757,1.52,760,2.474,761,1.739,762,1.916,770,2.258,933,2.404,954,4.354,955,3.034,956,4.312,957,3.57,958,3.896,959,3.287,960,3.896,961,3.896,962,2.778,963,2.778,964,2.404,965,3.034,966,2.554,967,1.823,968,2.131,969,2.574,970,2.258,971,2.018,972,2.404,973,3.376,974,3.034,975,3.376,976,2.131,977,2.574,978,2.258,979,3.376,980,3.376,981,1.916,982,3.376,983,3.376,984,3.376,985,2.574,986,2.778,987,2.914,988,3.799,989,3.034,990,2.778,991,2.404,992,3.034,993,3.376,994,3.376,995,3.376,996,3.376,997,3.376,998,3.376,999,3.034,1000,3.376,1001,3.034,1002,3.376,1003,2.778,1004,2.778,1005,3.376,1006,2.778,1007,2.778,1008,3.376,1009,4.552,1010,4.312,1011,5.656,1012,4.312,1013,3.799,1014,3.799,1015,3.376]],["title/components/AntennaMarkerComponent.html",[0,0.084,130,0.762]],["body/components/AntennaMarkerComponent.html",[0,0.156,1,0.669,2,0.117,3,0.088,4,0.755,5,0.786,6,0.725,7,0.074,11,0.276,12,0.725,13,0.733,19,0.915,20,1.11,22,0.786,23,1.589,24,1.403,25,0.953,26,0.953,28,0.953,30,0.295,31,0.841,32,1.441,34,0.613,38,1.21,40,2.036,41,0.904,42,0.527,46,0.684,48,0.643,49,0.706,50,0.642,51,0.016,52,0.707,53,0.779,54,0.518,55,1.415,57,0.496,64,1.666,68,0.697,70,0.92,76,1.26,84,0.542,89,1.789,95,0.238,96,0.117,99,0.85,100,0.102,101,0.011,102,0.772,108,0.616,115,0.452,116,1.119,117,1.119,118,1.075,119,1.421,120,0.786,121,1.119,122,0.642,123,0.786,124,0.642,125,0.786,126,0.496,127,0.786,128,0.669,129,0.786,130,1.21,131,1.386,132,1.421,133,0.642,134,0.786,135,0.697,136,1.304,137,0.669,138,1.304,139,0.669,140,1.304,141,0.669,142,0.786,143,0.669,144,0.786,145,0.669,146,0.755,147,0.669,148,0.786,149,0.642,150,0.786,151,0.669,152,0.669,153,0.642,154,0.786,155,0.669,156,0.669,157,0.786,158,0.642,159,0.786,160,0.669,161,0.642,162,0.786,163,0.642,164,0.566,165,1.119,166,0.642,167,0.725,168,0.669,169,1.234,170,0.725,171,1.156,172,0.642,173,0.786,174,0.669,175,0.452,176,0.697,177,0.669,178,0.953,179,0.786,180,0.669,181,0.669,182,0.669,183,0.616,184,0.669,185,0.669,186,0.755,187,0.786,188,0.009,189,0.009,216,2.415,224,1.164,247,1.311,278,1.625,279,1.5,295,3.375,299,2.268,308,1.327,421,3.501,442,1.673,459,3.773,470,1.971,518,2.425,520,2.947,521,2.947,522,2.947,524,5.635,525,2.649,526,2.947,528,2.947,529,2.947,531,2.947,532,2.947,560,1.971,584,2.23,957,3.804,966,2.109,971,3.602,976,3.087,978,3.918,1016,5.348,1017,5.84,1018,5.84,1019,2.247,1020,3.455,1021,3.455,1022,6.152,1023,5.645,1024,5.645,1025,5.645,1026,4.892,1027,3.401,1028,3.773,1029,3.401,1030,6.152,1031,4.846,1032,6.152,1033,3.401,1034,4.846,1035,3.401,1036,6.152,1037,4.846,1038,4.846,1039,2.649,1040,4.846,1041,4.791,1042,2.649,1043,3.401,1044,3.401,1045,3.401,1046,3.401,1047,3.401,1048,7.5,1049,6.152,1050,3.401,1051,3.401,1052,4.846,1053,4.199]],["title/components/AntennasComponent.html",[0,0.084,133,0.731]],["body/components/AntennasComponent.html",[0,0.171,1,0.841,2,0.147,3,0.111,4,0.95,5,0.988,6,0.912,7,0.093,11,0.243,12,0.912,13,0.699,15,2.656,19,1.071,20,1.252,22,0.988,23,1.612,24,1.423,25,1.116,26,1.116,28,1.116,30,0.371,31,0.985,34,0.718,38,1.333,41,0.767,42,0.692,46,0.624,48,0.754,49,0.827,50,0.808,51,0.016,52,0.805,53,0.718,54,0.652,57,0.623,68,0.585,76,1.475,84,1.014,95,0.22,96,0.147,100,0.129,101,0.008,102,0.681,108,1.027,110,1.873,115,0.568,116,1.311,117,1.311,118,1.259,119,1.566,120,0.988,121,1.311,122,0.808,123,0.988,124,0.808,125,0.988,126,0.623,127,0.988,128,0.841,129,0.988,130,0.841,131,1.304,132,1.566,133,1.28,134,0.988,135,0.876,136,1.47,137,0.841,138,1.47,139,0.841,140,1.47,141,0.841,142,0.988,143,0.841,144,0.988,145,0.841,146,0.95,147,0.841,148,0.988,149,0.808,150,0.988,151,0.841,152,0.841,153,0.808,154,0.988,155,0.841,156,0.841,157,0.988,158,0.808,159,0.988,160,0.841,161,0.808,162,0.988,163,0.808,164,0.712,165,1.311,166,0.808,167,0.912,168,0.841,169,1.304,170,0.912,171,1.304,172,0.808,173,0.988,174,0.841,175,0.568,176,0.876,177,0.841,178,1.116,179,0.988,180,0.841,181,0.841,182,0.841,183,0.775,184,0.841,185,0.841,186,0.95,187,0.988,188,0.011,189,0.011,224,1.743,247,1.535,258,2.939,273,3.104,275,2.763,277,5.28,278,1.069,279,0.95,584,1.985,784,3.749,954,4.636,957,3.709,1054,3.708,1055,4.419,1056,5.675,1057,5.675,1058,5.675,1059,5.675,1060,6.285,1061,5.675,1062,5.675,1063,4.279,1064,5.675,1065,4.279,1066,4.918,1067,3.051,1068,3.708]],["title/modules/AntennasModule.html",[383,0.793,968,2.119]],["body/modules/AntennasModule.html",[2,0.171,3,0.129,7,0.108,51,0.016,95,0.312,96,0.171,100,0.216,101,0.009,115,0.663,130,1.486,131,1.247,133,1.426,135,1.548,137,1.486,139,1.566,188,0.012,189,0.012,229,2.455,383,1.283,384,3.913,385,1.52,386,2.792,387,2.033,393,3.536,394,3.22,395,3.536,396,2.67,397,2.033,398,1.865,400,2.67,401,2.933,402,2.126,414,1.865,415,2.454,416,2.584,417,2.892,418,2.892,584,1.46,968,4.492,971,3.913,1017,3.885,1018,3.885,1067,3.558,1069,4.324,1070,4.324,1071,4.324,1072,4.324,1073,4.324,1074,4.38,1075,4.989,1076,4.989,1077,4.324,1078,4.324,1079,3.885,1080,4.324,1081,3.296,1082,3.885,1083,4.324,1084,3.885,1085,3.885]],["title/injectables/AntennasService.html",[562,0.931,971,2.006]],["body/injectables/AntennasService.html",[0,0.147,2,0.119,3,0.09,7,0.075,11,0.279,13,0.64,30,0.301,31,0.852,32,1.682,34,0.785,41,0.921,42,0.534,46,0.712,48,0.652,49,0.715,50,0.654,51,0.016,52,0.377,53,0.861,54,0.528,55,1.349,57,0.715,64,1.192,68,0.701,70,0.937,74,1.605,77,2.117,84,1.083,89,1.557,95,0.271,96,0.119,99,0.866,100,0.148,101,0.009,102,0.552,103,1.491,104,1.746,108,1.231,126,0.505,131,1.389,169,1.137,175,0.824,183,1.033,188,0.009,189,0.009,191,1.915,225,3.097,227,2.42,228,1.76,237,2.001,239,3.825,249,1.214,262,2.686,268,2.543,274,2.223,278,1.551,279,1.377,284,2.176,296,2.805,312,1.328,352,3.596,383,1.006,410,1.295,422,3.188,439,2.01,440,3.097,442,2.805,472,2.131,474,2.298,475,2.543,476,2.543,477,2.543,478,2.543,479,2.298,480,2.415,512,3.03,562,1.37,571,3.345,572,1.704,573,1.547,584,1.991,647,3.051,755,1.622,757,1.352,760,2.669,761,2.191,762,1.704,770,2.847,933,3.03,954,4.484,955,2.699,956,3.244,957,1.896,959,2.138,962,2.471,963,2.471,964,2.138,965,2.699,966,2.754,967,2.298,968,2.686,969,2.29,970,2.009,971,2.543,972,3.03,973,5.377,974,3.824,975,5.377,976,2.686,977,3.244,978,2.847,979,5.377,980,4.256,981,2.415,982,5.377,983,5.377,984,5.377,985,3.244,986,4.424,987,3.12,988,3.502,989,2.699,990,2.471,991,3.03,992,4.831,993,3.003,994,3.003,995,3.003,996,3.003,997,3.003,998,3.003,999,2.699,1000,3.003,1001,2.699,1002,3.003,1003,4.424,1004,2.471,1005,3.003,1006,2.471,1007,4.424,1008,3.003,1009,4.482,1010,4.099,1011,5.377,1012,4.099,1013,3.502,1014,3.502,1015,3.003,1086,3.003,1087,4.911,1088,3.466,1089,3.466,1090,3.466,1091,3.466,1092,3.466,1093,3.466,1094,3.466,1095,3.466,1096,3.466,1097,3.466]],["title/components/AntennasSidebarComponent.html",[0,0.084,137,0.762]],["body/components/AntennasSidebarComponent.html",[0,0.159,1,0.601,2,0.105,3,0.079,4,0.679,5,0.706,6,0.652,7,0.066,11,0.371,12,0.652,13,0.727,15,2.487,19,0.847,20,1.045,22,0.706,23,1.577,24,1.392,25,0.882,26,0.882,28,0.882,30,0.265,31,0.779,32,1.39,34,0.568,38,1.151,39,2.964,40,1.647,41,0.946,42,0.488,46,0.683,48,0.777,49,0.654,50,1.177,51,0.016,52,0.79,53,0.874,54,0.95,55,1.271,57,0.445,63,1.262,64,1.542,68,0.809,69,2.073,70,1.213,74,1.262,76,1.166,77,1.647,84,0.846,90,3.868,95,0.241,96,0.105,99,0.764,100,0.092,101,0.006,102,1.073,108,1.219,110,2.151,115,0.406,116,1.036,117,1.036,118,0.996,119,1.352,120,0.706,121,1.036,122,0.577,123,0.706,124,0.577,125,0.706,126,0.654,127,0.706,128,0.601,129,0.706,130,0.601,131,1.394,132,1.352,133,0.577,134,0.706,135,0.626,136,1.227,137,1.151,138,1.227,139,0.601,140,1.227,141,0.601,142,0.706,143,0.601,144,0.706,145,0.601,146,0.679,147,0.601,148,0.706,149,0.577,150,0.706,151,0.601,152,0.601,153,0.577,154,0.706,155,0.601,156,0.601,157,0.706,158,0.577,159,0.706,160,0.601,161,0.577,162,0.706,163,0.577,164,0.508,165,1.036,166,0.577,167,0.652,168,0.601,169,1.199,170,0.652,171,1.088,172,0.577,173,0.706,174,0.601,175,0.406,176,0.626,177,0.601,178,0.882,179,0.706,180,0.601,181,0.601,182,0.601,183,0.553,184,0.601,185,0.601,186,0.679,187,0.706,188,0.009,189,0.009,191,1.75,196,2.323,216,2.406,217,1.303,224,1.078,240,1.481,247,1.762,249,1.169,258,2.323,267,2.6,268,2.323,274,2.633,275,2.994,278,0.764,279,0.679,284,1.985,308,1.192,312,0.827,410,1.142,457,2.768,559,3.789,560,3.393,587,2.454,784,2.964,793,1.431,954,4.778,956,2.964,966,2.773,967,2.487,971,3.905,974,3.493,1016,5.337,1060,4.605,1067,2.18,1068,5.403,1079,5.828,1098,2.18,1099,3.493,1100,3.493,1101,2.323,1102,4.486,1103,5.073,1104,5.854,1105,3.888,1106,5.854,1107,5.314,1108,3.057,1109,3.888,1110,3.493,1111,3.057,1112,3.493,1113,3.199,1114,3.057,1115,4.486,1116,3.057,1117,4.486,1118,4.486,1119,3.199,1120,4.174,1121,3.057,1122,2.649,1123,4.486,1124,4.486,1125,3.057,1126,6.235,1127,3.057,1128,2.964,1129,4.486,1130,3.057,1131,3.057,1132,3.888,1133,2.649,1134,2.649,1135,1.503,1136,1.672,1137,2.649,1138,2.18,1139,3.057,1140,3.057,1141,3.057,1142,3.057,1143,4.486,1144,5.854,1145,4.486,1146,4.486,1147,4.486,1148,4.486,1149,4.486]],["title/components/AntennasSummaryComponent.html",[0,0.084,139,0.762]],["body/components/AntennasSummaryComponent.html",[0,0.16,1,0.742,2,0.13,3,0.098,4,0.838,5,0.872,6,0.805,7,0.082,11,0.34,12,0.805,13,0.764,19,0.984,20,1.174,22,0.872,23,1.6,24,1.414,25,1.025,26,1.025,28,1.025,30,0.327,31,0.905,32,1.273,34,0.66,38,1.266,41,0.938,42,0.567,46,0.643,48,0.692,49,0.938,50,0.984,51,0.016,52,0.7,53,0.756,54,0.794,55,1.352,57,0.55,68,0.752,76,1.355,77,1.812,84,0.951,95,0.277,96,0.13,99,0.943,100,0.113,101,0.007,102,1.026,103,1.252,108,1.081,115,0.501,116,1.204,117,1.204,118,1.157,119,1.487,120,0.872,121,1.204,122,0.712,123,0.872,124,0.712,125,0.872,126,0.759,127,0.872,128,0.742,129,0.872,130,0.742,131,1.363,132,1.487,133,0.712,134,0.872,135,0.773,136,1.379,137,0.742,138,1.379,139,1.266,140,1.379,141,0.742,142,0.872,143,0.742,144,0.872,145,0.742,146,0.838,147,0.742,148,0.872,149,0.712,150,0.872,151,0.742,152,0.742,153,0.712,154,0.872,155,0.742,156,0.742,157,0.872,158,0.712,159,0.872,160,0.742,161,0.712,162,0.872,163,0.712,164,0.993,165,1.204,166,0.712,167,0.805,168,0.742,169,1.302,170,0.805,171,1.223,172,0.712,173,0.872,174,0.742,175,0.501,176,0.773,177,0.742,178,1.025,179,0.872,180,0.742,181,0.742,182,0.742,183,0.683,184,0.742,185,0.742,186,0.838,187,0.872,188,0.01,189,0.01,216,2.314,217,2.744,224,1.252,249,1.173,308,1.472,343,1.587,378,3.021,410,1.41,439,1.062,440,1.608,443,2.221,492,3.522,512,3.216,757,1.472,793,3.416,966,2.231,971,4.05,981,2.563,1016,5.107,1067,2.691,1084,5.577,1101,1.954,1128,3.444,1135,3.323,1136,4.102,1137,3.27,1150,2.691,1151,3.444,1152,4.059,1153,4.059,1154,4.059,1155,4.059,1156,2.691,1157,3.27,1158,4.059,1159,4.059,1160,2.939,1161,3.444,1162,4.983,1163,4.059,1164,3.717,1165,4.059,1166,3.774,1167,2.939,1168,2.939,1169,3.774,1170,2.691,1171,3.774,1172,2.939,1173,3.774]],["title/components/AppComponent.html",[0,0.084,141,0.762]],["body/components/AppComponent.html",[0,0.144,1,0.461,2,0.08,3,0.061,4,0.52,5,0.846,6,0.499,7,0.051,11,0.257,12,0.499,13,0.759,19,0.692,20,0.888,22,0.541,23,1.542,24,1.361,25,0.721,26,0.721,28,0.721,30,0.203,31,0.636,32,1.57,33,3.021,34,0.917,38,1.004,41,0.834,42,0.399,46,0.712,48,0.487,49,0.808,50,0.964,51,0.016,52,0.639,53,0.846,54,0.778,55,1.341,56,2.22,57,0.341,58,4.384,59,2.794,62,1.898,63,0.659,68,0.787,69,1.761,70,1.843,74,0.659,76,0.953,77,1.437,84,0.584,89,0.742,92,4.827,95,0.253,96,0.08,100,0.07,101,0.008,102,1.013,103,0.881,104,1.56,108,1.35,110,1.21,115,0.311,116,0.846,117,0.846,118,0.813,119,1.18,120,0.541,121,0.846,122,0.442,123,0.541,124,0.442,125,0.541,126,0.341,127,0.541,128,0.461,129,0.541,130,0.461,131,1.161,132,1.18,133,0.442,134,0.541,135,0.48,136,1.043,137,0.461,138,1.043,139,0.461,140,1.043,141,1.004,142,0.541,143,0.461,144,0.541,145,0.461,146,0.52,147,0.461,148,0.541,149,0.442,150,0.541,151,0.461,152,0.461,153,0.964,154,0.541,155,0.461,156,1.09,157,0.541,158,0.442,159,0.541,160,0.461,161,0.442,162,0.541,163,0.442,164,0.39,165,0.846,166,0.442,167,0.963,168,0.461,169,1.233,170,0.499,171,0.925,172,0.442,173,0.541,174,0.461,175,0.311,176,0.48,177,0.461,178,1.208,179,0.541,180,0.461,181,0.461,182,0.461,183,0.424,184,0.461,185,0.461,186,0.52,187,0.541,188,0.007,189,0.007,202,2.362,216,2.349,217,0.998,221,3.68,222,3.62,240,1.94,246,2.794,249,0.962,251,5.533,253,2.854,256,2.261,257,3.789,258,1.898,278,1.129,279,1.411,295,2.015,299,1.715,306,1.281,308,0.913,309,1.824,310,1.547,354,5.591,368,1.824,375,1.84,398,1.37,422,3.204,443,1.562,472,2.376,479,1.715,482,1.898,492,2.005,504,2.03,552,4.938,554,2.854,576,2.751,594,2.613,671,1.547,703,2.261,720,2.854,793,2.751,794,5.511,798,4.317,801,2.03,845,4.534,959,3.627,966,1.909,970,2.124,981,1.802,1156,1.67,1174,2.03,1175,3.876,1176,3.665,1177,3.665,1178,6.359,1179,6.537,1180,5.879,1181,6.359,1182,3.665,1183,3.665,1184,3.665,1185,5.095,1186,5.108,1187,6.687,1188,6.359,1189,2.342,1190,3.665,1191,3.516,1192,3.176,1193,4.426,1194,3.665,1195,2.342,1196,4.192,1197,2.854,1198,3.665,1199,2.342,1200,6.359,1201,3.642,1202,5.108,1203,5.108,1204,5.108,1205,3.627,1206,3.665,1207,3.665,1208,3.176,1209,3.665,1210,5.108,1211,3.665,1212,2.342,1213,3.665,1214,2.342,1215,3.374,1216,2.342,1217,2.342,1218,2.613,1219,2.342,1220,3.665,1221,4.426,1222,2.342,1223,3.665,1224,2.342,1225,3.665,1226,2.342,1227,2.342,1228,2.342,1229,2.342,1230,4.515,1231,6.537,1232,5.511,1233,4.515,1234,4.515,1235,4.515,1236,2.342,1237,5.108,1238,3.665,1239,2.342,1240,5.108,1241,2.342,1242,2.342,1243,1.67,1244,2.342,1245,2.03,1246,1.67,1247,1.67,1248,2.342,1249,1.824,1250,2.342,1251,2.342,1252,5.108,1253,5.108,1254,5.108,1255,2.342,1256,2.342,1257,2.342,1258,2.342,1259,2.342,1260,2.342,1261,2.342,1262,2.03,1263,1.445,1264,2.342,1265,2.342,1266,3.665,1267,4.515,1268,2.03,1269,5.108,1270,3.665,1271,3.665,1272,3.665,1273,3.665,1274,4.515,1275,1.824,1276,2.342,1277,2.342,1278,3.665,1279,3.665,1280,3.665,1281,3.665,1282,3.665,1283,5.108,1284,3.665]],["title/modules/AppModule.html",[383,0.793,1285,2.762]],["body/modules/AppModule.html",[2,0.162,3,0.122,7,0.102,11,0.268,24,0.819,51,0.016,95,0.314,96,0.162,100,0.182,101,0.009,115,0.626,141,1.555,188,0.011,189,0.011,229,2.392,231,2.443,305,2.58,307,2.32,383,1.442,384,3.857,385,1.437,386,2.72,387,2.72,393,3.485,394,3.174,395,3.485,396,2.577,397,1.922,398,1.763,400,2.577,402,2.01,411,4.709,412,4.312,413,4.312,414,1.763,415,2.32,416,2.443,417,2.734,418,2.734,968,4.074,1074,4.317,1081,3.116,1082,3.673,1175,3.505,1246,3.364,1247,3.364,1285,5.858,1286,4.088,1287,4.088,1288,4.088,1289,4.088,1290,4.92,1291,4.92,1292,4.595,1293,4.92,1294,4.92,1295,4.074,1296,4.717,1297,6.047,1298,5.241,1299,6.047,1300,6.047,1301,4.088,1302,4.088,1303,4.088,1304,4.717,1305,4.717,1306,4.088,1307,4.717,1308,4.717,1309,4.088,1310,4.717,1311,4.717]],["title/modules/AppRoutingModule.html",[383,0.793,1290,2.559]],["body/modules/AppRoutingModule.html",[0,0.168,2,0.169,3,0.128,7,0.107,51,0.016,74,1.388,95,0.313,96,0.169,100,0.187,104,1.388,115,0.655,122,1.174,126,0.719,131,0.857,133,1.174,149,1.174,152,1.482,153,0.931,156,1.224,158,1.174,161,1.174,166,1.286,167,1.052,169,0.857,172,1.174,188,0.012,189,0.012,217,2.905,229,2.23,240,2.054,306,2.699,383,1.275,385,1.503,386,2.536,387,2.011,394,3.211,396,2.652,397,2.011,398,1.844,400,2.652,401,2.912,402,2.103,410,1.844,414,1.844,415,2.427,416,2.556,837,5.609,1135,3.629,1175,2.86,1196,4.437,1263,3.045,1290,5.159,1303,4.276,1312,4.276,1313,4.276,1314,4.935,1315,4.276,1316,3.842,1317,4.935,1318,4.935,1319,4.935,1320,4.935,1321,4.935,1322,3.842,1323,4.935,1324,4.935,1325,4.935,1326,4.935,1327,3.842,1328,3.842,1329,4.935,1330,6.081,1331,4.935,1332,4.935,1333,4.935,1334,6.223,1335,4.935,1336,4.935,1337,4.935,1338,6.707,1339,4.935,1340,4.935,1341,4.935,1342,4.276,1343,4.935,1344,4.935]],["title/guards/AuthLoginGuard.html",[1330,3.017,1345,3.017]],["body/guards/AuthLoginGuard.html",[2,0.153,3,0.115,7,0.096,11,0.391,13,0.797,19,0.839,30,0.386,34,0.737,42,0.633,46,0.597,48,0.773,49,0.848,50,1.224,51,0.016,52,0.706,53,0.821,54,0.989,55,1.098,68,0.781,69,1.734,70,1.982,72,2.684,74,2.101,80,3.59,89,1.845,92,5.206,95,0.276,96,0.153,100,0.134,101,0.008,102,1.138,103,1.398,104,1.25,188,0.011,189,0.011,202,3.228,217,2.479,222,3.725,228,2.745,235,5.226,237,1.811,249,1.24,257,4.683,270,4.531,289,2.859,296,2.186,306,2.431,370,3.844,385,2.096,443,3.123,463,4.531,562,1.398,571,3.604,573,1.983,576,2.723,584,1.301,747,3.169,773,4.531,786,3.461,969,2.936,970,2.576,976,3.183,1136,2.431,1175,3.99,1263,4.408,1330,4.531,1338,5.965,1345,5.563,1346,6.883,1347,4.445,1348,5.819,1349,5.819,1350,4.445,1351,4.445,1352,3.373,1353,5.819,1354,7.144,1355,7.144,1356,4.445,1357,7.33,1358,4.149,1359,5.965,1360,5.819,1361,4.445,1362,5.043,1363,6.487,1364,5.819,1365,5.819,1366,3.852,1367,4.445,1368,4.445,1369,4.445,1370,3.852,1371,4.445,1372,4.445]],["title/modules/AuthModule.html",[383,0.793,1291,2.559]],["body/modules/AuthModule.html",[2,0.198,3,0.149,7,0.125,51,0.016,95,0.308,96,0.198,100,0.206,101,0.011,115,0.767,149,1.477,188,0.013,189,0.013,229,2.069,231,2.99,305,3.158,307,2.839,383,1.403,385,1.758,386,2.976,387,2.352,394,3.334,396,2.919,397,2.352,398,2.157,400,2.919,401,3.206,402,2.46,412,4.885,413,4.885,414,2.157,415,2.839,416,2.99,1291,5.263,1373,5.003,1374,5.003,1375,5.773,1376,5.773,1377,5.773]],["title/injectables/AuthService.html",[222,1.905,562,0.931]],["body/injectables/AuthService.html",[2,0.099,3,0.075,7,0.063,11,0.363,13,0.587,30,0.251,31,0.747,32,1.096,34,0.545,42,0.468,46,0.701,48,0.756,49,0.627,50,1.205,51,0.016,52,0.769,53,0.879,54,0.973,55,1.075,63,1.447,68,0.831,69,2.709,70,1.912,72,1.679,74,1.954,84,1.106,89,1.364,95,0.256,96,0.099,100,0.087,101,0.005,102,1.053,103,0.694,104,1.912,108,0.779,110,1.697,164,1.013,188,0.008,189,0.008,202,3.413,222,2.116,225,2.427,226,3.515,227,2.757,228,2.041,235,5.18,240,1.421,249,1.374,273,2.354,278,1.076,279,0.955,289,1.679,296,3.796,312,1.727,369,4.343,375,1.754,378,2.495,398,1.608,439,0.813,491,3.667,562,1.236,571,3.528,572,1.421,573,1.29,576,2.014,584,0.846,625,2.354,633,3.515,644,3.069,671,4.895,722,2.495,747,3.069,753,1.675,754,1.909,755,1.353,756,3.069,761,2.718,776,3.351,798,3.351,839,6.236,845,4.062,880,5.293,969,1.909,970,1.675,987,3.618,1136,2.354,1185,4.937,1215,3.764,1263,3.94,1352,2.981,1362,3.73,1378,2.505,1379,6.386,1380,6.386,1381,5.697,1382,4.304,1383,5.697,1384,4.937,1385,5.697,1386,5.697,1387,5.697,1388,5.697,1389,5.697,1390,4.304,1391,4.304,1392,4.304,1393,2.505,1394,4.304,1395,4.304,1396,2.89,1397,4.304,1398,2.89,1399,3.73,1400,6.034,1401,7.749,1402,2.89,1403,5.89,1404,3.069,1405,2.89,1406,2.89,1407,2.89,1408,4.304,1409,6.126,1410,2.89,1411,3.764,1412,3.73,1413,2.89,1414,2.89,1415,7.175,1416,2.89,1417,2.89,1418,4.304,1419,2.89,1420,6.386,1421,6.386,1422,4.304,1423,2.89,1424,4.304,1425,2.89,1426,2.89,1427,4.304,1428,2.89,1429,2.251,1430,2.89,1431,2.89,1432,2.89,1433,2.89,1434,2.89,1435,5.142,1436,3.73,1437,5.142,1438,4.304,1439,2.89,1440,2.89,1441,2.505,1442,2.89,1443,2.89,1444,2.89,1445,2.89,1446,2.89,1447,2.89,1448,2.89,1449,4.304,1450,2.89,1451,2.89,1452,2.89,1453,2.89,1454,2.89,1455,2.89,1456,2.89,1457,2.89,1458,2.89,1459,2.89,1460,2.89,1461,2.89,1462,2.89,1463,2.89,1464,2.89,1465,2.89,1466,4.304,1467,4.304,1468,2.89,1469,2.89,1470,2.89,1471,2.89,1472,2.89,1473,2.89,1474,2.89,1475,2.89]],["title/components/ButtonsComponent.html",[0,0.084,143,0.762]],["body/components/ButtonsComponent.html",[0,0.166,1,1.283,2,0.154,3,0.116,4,0.998,5,1.039,6,0.959,7,0.098,11,0.256,12,1.597,13,0.604,14,3.037,19,1.107,20,1.283,22,1.039,23,1.616,24,1.426,25,1.153,26,1.153,28,1.153,30,0.39,34,0.875,38,1.36,40,1.945,41,0.925,42,0.71,46,0.601,48,0.779,49,0.854,51,0.016,52,0.638,53,0.569,57,0.655,63,1.65,64,2.016,68,0.464,76,1.525,77,1.65,84,0.716,95,0.227,96,0.154,99,1.124,100,0.135,101,0.008,115,0.597,116,1.354,117,1.354,118,1.301,119,1.597,120,1.039,121,1.354,122,0.849,123,1.039,124,0.849,125,1.039,126,0.655,127,1.039,128,0.884,129,1.039,130,0.884,131,1.2,132,1.597,133,0.849,134,1.039,135,0.921,136,1.507,137,0.884,138,1.507,139,0.884,140,1.507,141,0.884,142,1.039,143,1.36,144,1.039,145,0.884,146,0.998,147,0.884,148,1.039,149,0.849,150,1.039,151,0.884,152,0.884,153,0.849,154,1.039,155,0.884,156,0.884,157,1.039,158,0.849,159,1.039,160,1.283,161,0.849,162,1.039,163,0.849,164,0.748,165,1.354,166,0.849,167,0.959,168,0.884,169,1.318,170,0.959,171,1.336,172,0.849,173,1.039,174,0.884,175,0.597,176,0.921,177,0.884,178,1.153,179,1.039,180,0.884,181,0.884,182,0.884,183,0.814,184,0.884,185,0.884,186,0.998,187,1.039,188,0.011,189,0.011,216,1.859,240,1.935,343,1.786,358,4.181,439,1.65,1399,5.082,1476,3.897,1477,5.864,1478,5.864,1479,5.864,1480,5.864,1481,5.864,1482,4.497]],["title/injectables/CdbService.html",[562,0.931,758,2.39]],["body/injectables/CdbService.html",[0,0.124,2,0.149,3,0.112,7,0.094,11,0.326,13,0.591,14,2.97,30,0.377,31,0.995,32,1.368,34,0.726,42,0.624,46,0.694,50,0.82,51,0.016,52,0.473,53,0.55,54,0.662,55,1.423,68,0.8,77,1.92,91,3.538,95,0.287,96,0.149,100,0.131,101,0.008,102,0.692,103,1.044,175,1.037,188,0.011,189,0.011,191,2.236,224,1.378,227,3.004,228,2.055,242,3.984,278,1.433,279,1.709,296,2.82,312,1.551,343,2.078,362,4.465,375,2.336,414,3.007,439,1.223,562,1.542,571,2.137,572,2.137,573,1.94,584,1.272,625,3.136,647,2.137,747,3.099,755,2.034,758,3.538,760,3.072,761,3.045,762,2.137,770,4.37,778,3.788,787,5.913,878,4.465,882,3.788,944,4.969,964,2.682,966,2.95,1041,3.385,1112,4.465,1205,3.538,1483,3.767,1484,6.823,1485,6.823,1486,6.823,1487,6.823,1488,6.823,1489,6.823,1490,3.767,1491,5.734,1492,4.347,1493,6.823,1494,5.734,1495,5.734,1496,5.913,1497,4.347,1498,5.734,1499,4.347,1500,4.347,1501,5.734,1502,4.347,1503,5.734,1504,4.347,1505,4.347,1506,4.347,1507,4.347,1508,3.099,1509,4.347,1510,4.347,1511,4.347,1512,4.347,1513,4.347,1514,4.347,1515,4.347,1516,5.734,1517,4.969,1518,4.347,1519,4.347]],["title/modules/DataModule.html",[383,0.793,393,1.813]],["body/modules/DataModule.html",[2,0.189,3,0.143,7,0.12,11,0.314,51,0.016,55,1.258,95,0.306,96,0.189,100,0.215,101,0.01,115,0.732,175,0.885,188,0.013,189,0.013,216,2.454,221,4.01,229,2.567,343,2.03,383,1.524,385,1.68,386,2.716,387,2.247,393,3.776,396,2.84,397,2.247,398,2.061,400,2.84,401,3.119,402,2.35,471,4.113,758,4.777,760,3.155,761,2.461,762,2.712,987,3.646,1429,4.294,1520,4.779,1521,4.779,1522,5.515,1523,7.164,1524,5.515,1525,5.515,1526,5.515]],["title/modules/HealthModule.html",[383,0.793,1292,2.39]],["body/modules/HealthModule.html",[0,0.145,2,0.191,3,0.144,7,0.121,11,0.317,51,0.016,64,2.306,95,0.304,96,0.191,100,0.224,101,0.01,115,0.74,145,1.589,146,1.597,188,0.013,189,0.013,229,1.996,343,2.042,383,1.529,385,1.697,386,2.932,387,2.27,393,3.632,395,3.632,396,2.858,397,2.27,398,2.082,400,2.858,401,3.138,402,2.374,414,2.506,417,3.229,418,3.229,1085,4.338,1292,4.966,1527,4.827,1528,4.827,1529,5.571,1530,4.827,1531,5.571,1532,4.338]],["title/components/HealthSummaryComponent.html",[0,0.084,145,0.762]],["body/components/HealthSummaryComponent.html",[0,0.162,1,0.639,2,0.112,3,0.084,4,0.721,5,0.751,6,0.693,7,0.071,11,0.313,12,0.693,13,0.686,19,0.885,20,1.082,22,0.751,23,1.584,24,1.4,25,0.922,26,0.922,28,0.922,30,0.282,31,0.814,32,1.526,34,0.594,38,1.185,41,0.949,42,0.51,46,0.691,48,0.623,49,0.878,50,0.885,51,0.016,52,0.655,53,0.809,54,0.715,55,1.137,57,0.802,68,0.738,84,1.018,95,0.272,96,0.112,99,0.813,100,0.098,101,0.006,102,0.877,103,1.322,104,1.32,108,0.996,115,0.432,116,1.083,117,1.083,118,1.041,119,1.392,120,0.751,121,1.083,122,0.614,123,0.751,124,0.614,125,0.751,126,0.683,127,0.751,128,0.639,129,0.751,130,0.639,131,1.046,132,1.392,133,0.614,134,0.751,135,0.666,136,1.271,137,0.639,138,1.271,139,0.639,140,1.271,141,0.639,142,0.751,143,0.639,144,0.751,145,1.185,146,1.633,147,0.639,148,0.751,149,0.614,150,0.751,151,0.639,152,0.639,153,0.614,154,0.751,155,0.639,156,0.639,157,0.751,158,0.614,159,0.751,160,0.639,161,0.614,162,0.751,163,0.614,164,0.541,165,1.083,166,0.614,167,0.693,168,0.639,169,1.261,170,0.693,171,1.127,172,0.614,173,0.751,174,0.639,175,0.432,176,0.666,177,0.639,178,0.922,179,0.751,180,0.639,181,0.639,182,0.639,183,0.589,184,0.639,185,0.639,186,0.721,187,0.751,188,0.009,189,0.009,216,2.304,217,2.568,225,2.994,237,1.911,239,3.843,249,1.242,284,1.835,308,1.268,312,1.63,343,1.429,352,2.719,378,2.719,410,1.215,414,2.252,422,3.135,439,1.977,440,3.05,442,2.707,443,1.999,474,2.195,475,2.43,476,2.43,477,2.43,478,2.43,479,2.195,480,2.307,483,2.566,492,3.296,755,1.521,757,1.268,760,2.455,762,1.599,793,3.116,964,2.006,981,2.307,987,3.01,989,2.531,991,3.718,992,4.693,999,2.531,1001,2.531,1009,4.441,1010,3.981,1012,3.981,1101,1.684,1135,3.142,1136,3.296,1150,2.318,1151,3.099,1152,3.653,1153,3.653,1154,3.653,1155,3.653,1156,2.318,1158,3.653,1159,3.653,1160,2.531,1161,3.099,1162,4.747,1163,3.653,1164,3.345,1165,3.653,1167,2.531,1168,3.653,1170,2.318,1172,2.531,1532,5.659,1533,6.297,1534,4.297,1535,6.026,1536,6.026,1537,6.026,1538,3.251,1539,3.251,1540,3.251,1541,3.099,1542,3.251,1543,3.251,1544,3.251,1545,3.251,1546,3.251,1547,3.251,1548,3.251,1549,7.661,1550,4.297,1551,3.653,1552,3.653,1553,3.251]],["title/injectables/HttpClientService.html",[562,0.931,760,1.578]],["body/injectables/HttpClientService.html",[2,0.13,3,0.098,7,0.082,11,0.408,13,0.665,30,0.329,34,0.967,42,0.568,46,0.673,48,0.857,49,0.761,50,1.353,51,0.016,52,0.78,53,0.857,54,1.093,55,1.379,56,2.57,63,1.47,66,2.57,68,0.824,89,1.657,95,0.262,96,0.13,100,0.114,101,0.007,102,1.181,103,1.626,104,1.815,175,1.029,188,0.01,189,0.01,191,2.038,222,3.646,227,3.076,228,2.887,237,3.114,240,1.725,249,1.316,275,2.129,284,1.592,289,2.038,310,2.503,312,1.413,336,4.055,423,2.701,472,1.953,491,4.989,562,1.438,576,2.446,644,3.727,647,3.172,753,2.196,754,2.503,760,2.129,761,3.435,839,4.659,840,4.529,857,6.624,880,5.023,987,3.701,1193,6.504,1352,3.468,1384,5.59,1393,3.283,1403,6.331,1404,3.727,1429,4.07,1436,4.529,1441,5.59,1554,6.426,1555,3.283,1556,5.226,1557,5.226,1558,3.453,1559,5.226,1560,6.45,1561,6.45,1562,5.226,1563,3.788,1564,5.226,1565,3.788,1566,5.226,1567,3.788,1568,3.788,1569,5.226,1570,3.788,1571,5.983,1572,5.226,1573,5.226,1574,3.788,1575,5.226,1576,3.788,1577,5.226,1578,3.788,1579,5.226,1580,5.226,1581,4.529,1582,3.788,1583,3.788,1584,3.788,1585,3.788,1586,7.306,1587,3.788,1588,3.788,1589,3.788,1590,3.788,1591,3.788]],["title/modules/IasMaterialModule.html",[383,0.793,394,1.651]],["body/modules/IasMaterialModule.html",[0,0.137,2,0.176,3,0.132,7,0.111,11,0.291,51,0.016,95,0.317,96,0.176,100,0.192,101,0.01,153,1.203,188,0.012,189,0.012,231,2.654,290,3.385,376,4.544,383,1.42,386,2.088,394,2.715,400,2.715,415,2.52,569,3.99,576,2.982,703,3.162,1245,4.441,1246,3.654,1592,5.124,1593,5.124,1594,6.935,1595,5.124,1596,6.935,1597,5.124,1598,6.935,1599,5.124,1600,6.935,1601,5.124,1602,6.935,1603,5.124,1604,6.935,1605,5.124,1606,6.935,1607,5.124,1608,6.935,1609,5.124,1610,6.935,1611,5.124,1612,6.935,1613,6.935,1614,5.124,1615,6.935,1616,5.124,1617,6.935,1618,5.124,1619,6.935,1620,6.935,1621,5.124,1622,6.935,1623,5.124,1624,6.935,1625,5.124,1626,6.935,1627,5.124,1628,6.935,1629,5.124,1630,6.935,1631,5.124,1632,4.441,1633,6.935,1634,4.441,1635,3.99]],["title/classes/Iasio.html",[101,0.007,1508,2.762]],["body/classes/Iasio.html",[2,0.155,3,0.117,7,0.098,11,0.419,30,0.393,31,1.022,34,0.932,41,0.835,42,0.492,46,0.7,48,0.782,49,0.954,50,1.235,51,0.016,52,0.712,53,0.973,54,0.997,60,5.097,63,2.267,64,2.025,68,0.792,69,2.803,70,1.592,74,1.273,93,2.793,100,0.136,101,0.014,102,1.104,104,1.95,108,1.185,110,1.494,178,0.89,188,0.011,189,0.011,228,2.11,242,2.476,249,1.364,284,1.793,289,2.703,312,1.77,343,1.793,352,2.624,481,4.747,482,3.05,483,3.221,484,3.89,485,2.99,577,3.413,599,4.585,647,3.408,722,3.413,724,6.383,745,4.585,769,4.585,876,4.585,878,3.525,1508,5.798,1636,3.922,1637,6.545,1638,7.366,1639,7.366,1640,7.366,1641,7.366,1642,5.888,1643,5.888,1644,5.888,1645,4.526,1646,5.888,1647,4.526,1648,4.526,1649,5.888,1650,5.888,1651,4.526,1652,4.585,1653,5.888,1654,4.526,1655,4.526,1656,4.526,1657,4.526,1658,4.526,1659,4.526,1660,4.526,1661,4.526,1662,4.526,1663,4.526,1664,4.526]],["title/components/LegendComponent.html",[0,0.084,147,0.762]],["body/components/LegendComponent.html",[0,0.16,1,0.662,2,0.116,3,0.087,4,0.747,5,0.777,6,0.717,7,0.073,11,0.191,12,0.717,13,0.813,19,0.907,20,1.103,22,0.777,23,1.588,24,1.402,25,0.945,26,0.945,28,0.945,30,0.292,31,0.835,34,0.609,38,1.204,41,0.957,42,0.61,46,0.695,48,0.638,49,0.7,51,0.016,52,0.523,57,0.49,62,4.083,68,0.347,84,0.536,95,0.186,96,0.116,100,0.101,101,0.006,115,0.921,116,1.11,117,1.11,118,1.067,119,1.414,120,0.777,121,1.11,122,0.635,123,0.777,124,0.635,125,0.777,126,0.49,127,0.777,128,0.662,129,0.777,130,0.662,131,1.063,132,1.414,133,0.635,134,0.777,135,0.689,136,1.296,137,0.662,138,1.296,139,0.662,140,1.296,141,0.662,142,0.777,143,0.662,144,0.777,145,0.662,146,0.747,147,1.204,148,0.777,149,0.635,150,0.777,151,0.662,152,0.662,153,0.635,154,0.777,155,0.662,156,0.662,157,0.777,158,0.635,159,0.777,160,0.662,161,0.635,162,0.777,163,0.635,164,0.56,165,1.11,166,0.635,167,0.717,168,0.662,169,1.231,170,0.717,171,1.149,172,0.635,173,0.777,174,0.662,175,0.447,176,0.689,177,0.662,178,0.945,179,0.777,180,0.662,181,0.662,182,0.662,183,0.609,184,0.662,185,0.662,186,0.747,187,0.777,188,0.009,189,0.009,224,1.155,225,3.021,239,3.878,247,2.144,278,1.852,279,1.645,422,3.518,439,2.124,443,3.189,455,5.305,474,3.56,479,3.427,480,3.601,492,2.63,757,1.312,928,5.305,1009,4.57,1208,4.166,1665,2.915,1666,4.808,1667,4.808,1668,6.122,1669,6.122,1670,6.122,1671,6.122,1672,6.122,1673,6.122,1674,6.122,1675,6.122,1676,6.122,1677,4.808,1678,3.364,1679,5.305,1680,3.364,1681,6.144,1682,3.364,1683,3.364,1684,6.789,1685,4.166,1686,3.364,1687,4.166,1688,3.364,1689,6.122,1690,4.166,1691,3.364,1692,4.166,1693,3.364,1694,6.122,1695,4.166,1696,3.364,1697,3.364,1698,3.364]],["title/components/LoginComponent.html",[0,0.084,149,0.731]],["body/components/LoginComponent.html",[0,0.161,1,0.613,2,0.107,3,0.081,4,0.692,5,0.72,6,0.665,7,0.068,11,0.306,12,0.665,13,0.78,19,0.859,20,1.057,22,0.72,23,1.58,24,1.394,25,0.895,26,0.895,28,0.895,30,0.271,31,0.79,32,1.399,34,0.576,38,1.162,40,1.281,41,0.376,42,0.495,46,0.701,48,0.785,49,0.663,50,0.859,51,0.016,52,0.643,53,0.858,54,0.694,55,1.239,56,2.239,57,0.454,63,1.281,66,2.239,68,0.716,70,1.454,77,1.281,84,0.941,89,1.704,92,5.059,95,0.243,96,0.107,100,0.094,101,0.006,102,1.001,103,1.094,104,0.878,108,0.973,115,0.414,116,1.051,117,1.051,118,1.01,119,1.365,120,0.72,121,1.051,122,0.589,123,0.72,124,0.589,125,0.72,126,0.454,127,0.72,128,0.613,129,0.72,130,0.613,131,1.026,132,1.365,133,0.589,134,0.72,135,0.639,136,1.242,137,0.613,138,1.242,139,0.613,140,1.242,141,0.613,142,0.72,143,0.613,144,0.72,145,0.613,146,0.692,147,0.613,148,0.72,149,1.115,150,0.72,151,0.613,152,0.613,153,0.589,154,0.72,155,0.613,156,0.613,157,0.72,158,0.589,159,0.72,160,0.613,161,0.589,162,0.72,163,0.589,164,1.178,165,1.051,166,0.589,167,0.665,168,0.613,169,1.206,170,0.665,171,1.101,172,0.589,173,0.72,174,0.613,175,0.414,176,0.639,177,0.613,178,0.895,179,0.72,180,0.613,181,0.613,182,0.613,183,0.565,184,0.613,185,0.613,186,0.692,187,0.72,188,0.009,189,0.009,191,2.305,198,5.129,199,4.589,202,3.068,214,2.703,215,5.606,219,4.894,220,4.602,222,3.784,225,2.797,227,2.305,228,1.118,229,1.926,230,3.008,231,2.784,232,3.804,237,1.855,247,1.775,249,0.933,257,3.116,267,3.426,278,1.138,279,0.692,287,5.409,289,2.451,290,3.008,291,5.517,305,1.706,306,1.706,307,1.534,311,3.008,312,1.231,313,3.545,316,2.429,336,4.276,337,2.429,340,2.429,341,3.545,364,3.246,414,1.701,439,1.512,457,2.809,576,2.942,594,4.214,671,3.905,845,4.953,933,3.647,976,3.59,1119,4.68,1136,3.233,1175,3.116,1215,3.008,1218,3.246,1263,4.698,1268,2.703,1352,3.116,1366,2.703,1370,3.945,1409,6.322,1411,3.905,1412,3.945,1541,2.061,1699,2.703,1700,4.552,1701,4.552,1702,6.02,1703,4.552,1704,4.552,1705,3.119,1706,3.119,1707,3.119,1708,4.552,1709,3.119,1710,5.447,1711,5.376,1712,5.91,1713,3.119,1714,4.552,1715,3.119,1716,3.119,1717,3.119,1718,3.119,1719,3.119,1720,5.122,1721,4.552,1722,3.119,1723,3.119,1724,3.119,1725,3.119,1726,3.119,1727,3.119,1728,3.119,1729,2.429,1730,3.119,1731,3.119,1732,4.552]],["title/components/MapComponent.html",[0,0.084,151,0.762]],["body/components/MapComponent.html",[0,0.168,1,0.88,2,0.154,3,0.116,4,0.993,5,1.033,6,0.954,7,0.097,11,0.254,12,0.954,13,0.602,19,1.103,20,1.28,22,1.033,23,1.616,24,1.426,25,1.149,26,1.149,28,1.149,30,0.388,34,0.74,38,1.357,40,2.014,41,0.539,42,0.708,46,0.676,48,0.776,49,0.851,51,0.016,52,0.635,57,0.652,68,0.461,72,2.279,74,1.644,77,1.644,84,0.712,95,0.173,96,0.154,100,0.134,101,0.008,115,0.594,116,1.349,117,1.349,118,1.297,119,1.593,120,1.033,121,1.349,122,0.844,123,1.033,124,0.844,125,1.033,126,0.652,127,1.033,128,0.88,129,1.033,130,0.88,131,1.198,132,1.593,133,0.844,134,1.033,135,0.916,136,1.503,137,0.88,138,1.503,139,0.88,140,1.503,141,0.88,142,1.033,143,0.88,144,1.033,145,0.88,146,0.993,147,0.88,148,1.033,149,0.844,150,1.033,151,1.357,152,0.88,153,0.844,154,1.033,155,0.88,156,0.88,157,1.033,158,0.844,159,1.033,160,0.88,161,0.844,162,1.033,163,0.844,164,0.744,165,1.349,166,0.844,167,0.954,168,0.88,169,1.317,170,0.954,171,1.333,172,0.844,173,1.033,174,0.88,175,0.864,176,0.916,177,0.88,178,1.149,179,1.033,180,0.88,181,0.88,182,0.88,183,0.81,184,0.88,185,0.88,186,0.993,187,1.033,188,0.011,189,0.011,247,1.866,278,1.46,279,1.297,343,1.78,468,3.387,560,2.593,584,2.22,966,2.184,978,3.999,1733,3.876,1734,4.55,1735,5.843,1736,5.843,1737,6.507,1738,6.507,1739,5.843,1740,4.473,1741,4.473]],["title/modules/MapModule.html",[383,0.793,1074,2.245]],["body/modules/MapModule.html",[2,0.198,3,0.149,7,0.125,51,0.016,95,0.298,96,0.198,100,0.227,101,0.011,115,0.764,151,1.595,188,0.013,189,0.013,229,2.614,383,1.4,385,1.752,386,2.972,387,2.344,396,2.913,397,2.344,398,2.15,400,2.913,401,3.199,402,2.451,1074,4.643,1742,4.985,1743,4.985,1744,4.985,1745,4.985,1746,5.165,1747,5.753,1748,5.753,1749,5.753]],["title/injectables/MapService.html",[562,0.931,1746,2.559]],["body/injectables/MapService.html",[2,0.186,3,0.14,7,0.118,11,0.405,13,0.733,30,0.471,34,0.836,42,0.774,46,0.682,48,0.877,49,0.962,50,1.246,51,0.016,52,0.718,54,1.006,55,1.397,68,0.733,89,2.093,95,0.21,96,0.186,100,0.163,101,0.01,102,0.865,104,1.527,188,0.013,189,0.013,242,2.97,274,2.55,279,1.205,295,3.175,436,3.871,500,4.705,562,1.71,584,2.083,667,5.142,676,5.142,837,5.41,957,2.97,1026,4.705,1746,4.362,1750,4.705,1751,6.603,1752,6.603,1753,5.429,1754,6.603,1755,5.429,1756,5.096,1757,7.586,1758,7.403,1759,5.429,1760,5.429,1761,5.429,1762,5.429,1763,4.705,1764,5.429,1765,4.228,1766,5.429,1767,5.429,1768,5.429]],["title/components/MaterialSandboxComponent.html",[0,0.084,152,0.762]],["body/components/MaterialSandboxComponent.html",[0,0.161,1,0.683,2,0.119,3,0.09,4,0.771,5,0.803,6,0.741,7,0.075,11,0.198,12,1.706,13,0.507,19,0.929,20,1.123,22,0.803,23,1.592,24,1.408,25,0.968,26,0.968,28,0.968,30,0.302,34,0.623,38,1.222,41,0.419,42,0.713,46,0.453,51,0.015,52,0.535,54,0.75,57,0.506,66,2.42,68,0.358,73,5.67,76,1.279,77,1.384,84,0.554,95,0.134,96,0.119,100,0.104,101,0.007,108,1.233,115,0.462,116,1.136,117,1.572,118,1.092,119,1.435,120,0.803,121,1.136,122,0.656,123,0.803,124,0.656,125,0.803,126,0.506,127,0.803,128,0.683,129,0.803,130,0.683,131,1.078,132,1.435,133,0.656,134,0.803,135,0.712,136,1.319,137,0.683,138,1.319,139,0.683,140,1.319,141,0.683,142,0.803,143,0.683,144,0.803,145,0.683,146,0.771,147,0.683,148,0.803,149,0.656,150,0.803,151,0.683,152,1.222,153,1.408,154,0.803,155,0.683,156,0.683,157,0.803,158,0.656,159,0.803,160,0.683,161,0.656,162,0.803,163,0.656,164,0.95,165,1.136,166,0.656,167,0.741,168,0.683,169,1.241,170,0.741,171,1.17,172,0.656,173,0.803,174,0.683,175,0.462,176,0.712,177,0.683,178,1.521,179,0.803,180,0.683,181,0.683,182,0.683,183,0.629,184,0.683,185,0.683,186,0.771,187,0.803,188,0.009,189,0.009,246,3.911,247,1.331,274,1.763,275,2.531,278,0.869,289,1.919,422,2.926,463,3.832,551,2.706,576,2.303,703,3.525,874,5.9,1132,4.264,1175,2.852,1275,5.301,1322,4.448,1342,4.264,1404,3.509,1632,5.383,1710,5.9,1763,4.264,1769,4.95,1770,3.012,1771,4.921,1772,4.921,1773,4.921,1774,4.921,1775,3.476,1776,3.476,1777,6.808,1778,6.808,1779,6.808,1780,6.808,1781,6.808,1782,6.808,1783,6.808,1784,6.808,1785,6.808,1786,6.808,1787,7.646,1788,7.693,1789,6.212,1790,3.832,1791,4.264,1792,4.921,1793,5.713,1794,4.921,1795,4.921,1796,4.921,1797,6.212,1798,4.921,1799,4.921,1800,6.808,1801,7.458,1802,7.646,1803,6.212,1804,3.476,1805,6.808,1806,6.808,1807,6.808,1808,6.212,1809,4.921,1810,4.921,1811,6.212,1812,4.921,1813,4.921,1814,4.921,1815,4.264,1816,4.921,1817,4.921,1818,4.921,1819,4.264,1820,4.921,1821,4.921,1822,4.921,1823,4.921,1824,3.832,1825,3.476,1826,3.476,1827,3.476,1828,3.476,1829,3.476,1830,3.476]],["title/components/OverviewCardComponent.html",[0,0.084,155,0.762]],["body/components/OverviewCardComponent.html",[0,0.167,1,0.914,2,0.16,3,0.12,4,1.031,5,1.073,6,0.991,7,0.101,11,0.264,12,0.991,19,1.13,20,1.303,22,1.073,23,1.619,24,1.429,25,1.178,26,1.178,28,1.178,30,0.403,34,0.758,38,1.377,41,0.56,42,0.721,46,0.551,48,0.795,49,0.873,51,0.016,52,0.651,57,0.677,68,0.479,84,0.74,95,0.18,96,0.16,100,0.14,101,0.009,115,0.617,116,1.383,117,1.383,118,1.329,119,1.617,120,1.073,121,1.383,122,0.877,123,1.073,124,0.877,125,1.073,126,0.677,127,1.073,128,0.914,129,1.073,130,0.914,131,1.215,132,1.617,133,0.877,134,1.073,135,0.952,136,1.53,137,0.914,138,1.53,139,0.914,140,1.53,141,0.914,142,1.073,143,0.914,144,1.073,145,0.914,146,1.031,147,0.914,148,1.073,149,0.877,150,1.073,151,0.914,152,0.914,153,0.877,154,1.073,155,1.377,156,1.519,157,1.073,158,0.877,159,1.073,160,0.914,161,0.877,162,1.073,163,0.877,164,0.773,165,1.383,166,0.877,167,0.991,168,0.914,169,1.327,170,0.991,171,1.357,172,0.877,173,1.073,174,0.914,175,0.617,176,0.952,177,0.914,178,1.178,179,1.073,180,0.914,181,0.914,182,0.914,183,0.841,184,0.914,185,0.914,186,1.031,187,1.073,188,0.011,189,0.011,224,1.439,267,3.471,443,2.552,1151,3.956,1734,4.663,1791,6.066,1831,5.743,1832,5.16,1833,4.026,1834,5.19,1835,5.989,1836,5.989,1837,4.646,1838,4.646]],["title/components/OverviewComponent.html",[0,0.084,158,0.731]],["body/components/OverviewComponent.html",[0,0.169,1,0.916,2,0.16,3,0.12,4,1.034,5,1.076,6,0.993,7,0.101,11,0.265,12,0.993,19,1.132,20,1.305,22,1.076,23,1.619,24,1.429,25,1.18,26,1.18,28,1.18,30,0.404,34,0.759,38,1.378,41,0.561,42,0.722,46,0.552,48,0.797,49,0.874,51,0.016,52,0.653,57,0.679,68,0.48,84,0.742,95,0.18,96,0.16,100,0.14,101,0.009,115,0.619,116,1.386,117,1.386,118,1.332,119,1.618,120,1.076,121,1.386,122,0.879,123,1.076,124,0.879,125,1.076,126,0.679,127,1.076,128,0.916,129,1.076,130,0.916,131,1.289,132,1.618,133,0.879,134,1.076,135,0.954,136,1.533,137,0.916,138,1.533,139,0.916,140,1.533,141,0.916,142,1.076,143,0.916,144,1.076,145,0.916,146,1.473,147,0.916,148,1.076,149,0.879,150,1.076,151,0.916,152,0.916,153,0.879,154,1.076,155,0.916,156,1.305,157,1.076,158,1.323,159,1.076,160,0.916,161,0.879,162,1.076,163,0.879,164,0.775,165,1.386,166,0.879,167,0.993,168,0.916,169,1.353,170,0.993,171,1.359,172,0.879,173,1.076,174,0.916,175,0.619,176,0.954,177,0.916,178,1.18,179,1.076,180,0.916,181,0.916,182,0.916,183,0.844,184,0.916,185,0.916,186,1.034,187,1.076,188,0.011,189,0.011,224,1.442,343,1.827,414,2.242,793,3.28,959,3.702,1136,3.281,1839,4.038,1840,5.199,1841,6,1842,6,1843,6,1844,4.659,1845,4.659]],["title/modules/OverviewModule.html",[383,0.793,1293,2.559]],["body/modules/OverviewModule.html",[0,0.136,2,0.173,3,0.13,7,0.109,11,0.287,46,0.581,51,0.016,59,3.946,64,2.17,95,0.309,96,0.173,100,0.217,101,0.009,115,0.67,155,1.569,156,1.461,158,1.506,188,0.012,189,0.012,229,1.808,343,1.922,383,1.552,385,1.537,386,2.806,387,2.056,393,3.546,394,3.229,395,3.546,396,2.689,397,2.056,398,1.886,400,2.689,401,2.953,402,2.15,414,1.886,415,2.481,416,2.613,417,2.925,418,2.925,882,4.169,968,4.145,972,3.894,1292,4.675,1293,5.4,1295,4.145,1302,4.372,1306,4.372,1309,4.372,1832,3.929,1846,4.372,1847,4.372,1848,5.046,1849,4.372,1850,5.046,1851,6.311,1852,5.469,1853,5.046,1854,5.046]],["title/injectables/RoutingService.html",[562,0.931,1135,1.905]],["body/injectables/RoutingService.html",[2,0.153,3,0.115,7,0.097,11,0.407,13,0.601,17,2.913,30,0.386,34,0.737,41,0.83,42,0.484,46,0.698,49,0.849,50,1.3,51,0.016,52,0.749,53,0.872,54,1.05,55,1.3,57,0.946,68,0.77,81,3.467,84,1.19,89,1.412,91,3.595,92,5.063,95,0.225,96,0.153,100,0.134,101,0.008,102,1.097,108,0.806,110,1.923,131,1.011,166,1.3,169,1.011,178,0.876,188,0.011,189,0.011,196,3.798,217,1.897,224,1.4,228,2.628,240,2.588,249,1.361,257,3.377,265,4.911,279,1.529,284,2.098,306,2.435,562,1.56,576,2.726,607,3.467,641,3.467,793,3.547,1135,2.865,1162,5.327,1196,5.404,1218,4.911,1249,3.467,1262,5.969,1263,4.006,1316,5.968,1358,5.591,1855,3.859,1856,5.826,1857,5.826,1858,6.888,1859,5.048,1860,6.888,1861,6.888,1862,5.048,1863,6.888,1864,5.826,1865,4.453,1866,4.453,1867,4.453,1868,5.048,1869,4.453,1870,4.453,1871,4.453,1872,5.048,1873,4.453,1874,5.048,1875,4.453,1876,5.826,1877,4.453,1878,4.453,1879,4.453,1880,4.453,1881,4.453,1882,4.453]],["title/modules/SharedModule.html",[383,0.793,395,1.813]],["body/modules/SharedModule.html",[0,0.163,2,0.171,3,0.129,7,0.108,11,0.283,12,1.335,13,0.646,17,2.927,41,0.825,51,0.016,57,1.047,95,0.308,96,0.171,100,0.216,101,0.009,115,0.662,126,1.17,128,1.579,163,1.515,164,0.829,188,0.012,189,0.012,229,1.786,231,2.581,240,2.067,305,2.726,307,2.451,343,1.907,383,1.547,384,2.581,385,1.518,386,2.79,387,2.031,393,3.535,394,3.219,395,3.788,396,2.669,397,2.031,398,1.863,400,2.669,401,2.931,402,2.124,411,4.877,412,4.466,413,4.466,414,1.863,415,2.451,416,2.581,417,2.889,489,3.881,1081,3.293,1328,3.881,1824,4.877,1883,4.319,1884,4.319,1885,4.984,1886,4.319,1887,4.984,1888,6.263,1889,6.263,1890,5.427,1891,6.263,1892,4.984,1893,3.554,1894,4.984]],["title/components/ShelveButtonComponent.html",[0,0.084,160,0.762]],["body/components/ShelveButtonComponent.html",[0,0.166,1,0.697,2,0.122,3,0.092,4,0.787,5,1.526,6,0.756,7,0.077,10,2.528,11,0.328,12,1.675,13,0.706,14,3.246,15,3.207,16,2.893,17,2.353,18,4.325,19,0.942,20,1.136,21,5.005,22,0.819,23,1.594,24,1.407,25,0.981,26,0.981,27,3.886,28,0.981,29,3.886,30,0.308,31,0.866,32,1.231,33,3.746,34,0.793,36,5.431,37,5.431,38,1.232,39,3.297,40,1.763,41,0.88,42,0.543,43,3.073,44,6.331,45,6.331,46,0.682,47,4.325,50,0.942,51,0.016,52,0.682,53,0.793,54,0.761,55,1.247,56,2.84,57,1.144,58,3.563,59,2.73,60,4.881,61,5.431,62,2.585,63,1.763,64,1.716,68,0.785,69,1.946,70,1.35,72,1.946,73,4.469,74,1.404,76,1.298,77,1.763,78,3.886,79,3.886,80,3.079,81,3.886,82,4.325,83,4.325,84,0.92,86,3.886,87,5.431,89,1.582,90,4.141,93,3.079,95,0.242,96,0.122,97,3.073,98,2.342,99,0.886,100,0.107,101,0.007,102,0.998,103,1.199,104,0.998,105,3.073,106,3.073,107,3.073,109,2.342,110,1.17,112,2.528,115,0.471,116,1.153,117,1.153,118,1.108,119,1.447,120,0.819,121,1.153,122,0.669,123,0.819,124,0.669,125,0.819,126,0.517,127,0.819,128,0.697,129,0.819,130,0.697,131,1.088,132,1.447,133,0.669,134,0.819,135,0.726,136,1.334,137,0.697,138,1.334,139,0.697,140,1.334,141,0.697,142,0.819,143,0.697,144,0.819,145,0.697,146,0.787,147,0.697,148,0.819,149,0.669,150,0.819,151,0.697,152,0.697,153,0.669,154,0.819,155,0.697,156,0.697,157,0.819,158,0.669,159,0.819,160,1.232,161,0.669,162,0.819,163,0.669,164,0.59,165,1.153,166,0.669,167,0.756,168,0.697,169,1.248,170,0.756,171,1.183,172,0.669,173,0.819,174,0.697,175,0.471,176,0.726,177,0.697,178,0.981,179,0.819,180,0.697,181,0.697,182,0.697,183,0.642,184,0.697,185,0.697,186,0.787,187,0.819,188,0.009,189,0.009,224,1.199,246,3.428,247,1.695,248,4.497,249,1.002,258,2.585,406,5.689,518,2.528,1895,6.331,1896,6.268,1897,3.546,1898,4.325,1899,4.991,1900,3.546,1901,3.546,1902,3.546,1903,3.546,1904,3.546,1905,3.546]],["title/injectables/SidenavService.html",[33,1.905,562,0.931]],["body/injectables/SidenavService.html",[2,0.14,3,0.105,7,0.088,11,0.378,13,0.566,16,4.144,17,2.913,24,0.706,30,0.353,31,0.953,32,1.728,33,2.699,34,0.695,41,0.861,42,0.597,46,0.721,48,0.729,49,0.8,50,1.254,51,0.016,52,0.723,53,0.905,54,1.013,55,1.349,57,0.968,58,4.966,62,3.702,68,0.784,70,1.484,72,2.141,84,1.105,89,1.74,95,0.257,96,0.14,100,0.122,101,0.008,102,0.989,103,1.597,108,0.737,164,0.913,188,0.01,189,0.01,196,3.702,240,2.452,247,1.484,249,1.321,256,4.695,265,3.913,278,1.552,279,1.378,284,2.177,312,1.484,439,1.544,562,1.492,572,2.001,573,1.816,625,3.002,703,4.411,756,3.913,768,4.756,773,4.274,776,4.274,778,3.626,793,3.11,969,2.689,970,2.359,1135,3.515,1170,2.902,1196,5.097,1221,6.438,1243,2.902,1358,4.739,1859,4.756,1862,4.756,1868,4.756,1872,4.756,1874,4.756,1906,3.527,1907,5.488,1908,5.488,1909,6.646,1910,6.646,1911,6.646,1912,6.646,1913,5.488,1914,4.07,1915,5.488,1916,4.07,1917,4.07,1918,4.07,1919,4.07,1920,4.07,1921,5.488,1922,4.07,1923,4.07,1924,5.488,1925,4.07,1926,4.07,1927,4.07,1928,4.07,1929,4.07,1930,4.07,1931,4.07,1932,4.07,1933,4.07,1934,4.07,1935,5.488,1936,4.07,1937,4.07]],["title/components/StatusViewComponent.html",[0,0.084,163,0.731]],["body/components/StatusViewComponent.html",[0,0.165,1,0.654,2,0.114,3,0.086,4,0.738,5,0.768,6,0.709,7,0.072,11,0.189,12,0.709,17,1.943,19,0.9,20,1.096,22,0.768,23,1.587,24,1.401,25,0.938,26,0.938,28,0.938,30,0.288,31,0.828,32,1.535,34,0.604,38,1.197,40,1.989,41,0.956,42,0.606,46,0.715,51,0.016,52,0.519,53,0.816,57,0.887,63,1.341,64,1.639,68,0.492,70,1.647,72,1.86,84,0.759,95,0.236,96,0.114,99,0.831,100,0.1,101,0.006,103,1.339,108,0.602,115,0.442,116,1.101,117,1.101,118,1.058,119,1.406,120,0.768,121,1.101,122,0.628,123,0.768,124,0.628,125,0.768,126,0.695,127,0.768,128,0.654,129,0.768,130,0.654,131,1.057,132,1.406,133,0.628,134,0.768,135,0.681,136,1.287,137,0.654,138,1.287,139,0.654,140,1.287,141,0.654,142,0.768,143,0.654,144,0.768,145,0.654,146,0.738,147,0.654,148,0.768,149,0.628,150,0.768,151,0.654,152,0.654,153,0.628,154,0.768,155,0.654,156,0.654,157,0.768,158,0.628,159,0.768,160,0.654,161,0.628,162,0.768,163,1.149,164,1.149,165,1.101,166,0.628,167,0.709,168,0.654,169,1.227,170,0.709,171,1.142,172,0.628,173,0.768,174,0.654,175,0.442,176,0.681,177,0.654,178,0.938,179,0.768,180,0.654,181,0.654,182,0.654,183,0.602,184,0.654,185,0.654,186,0.738,187,0.768,188,0.009,189,0.009,224,1.146,225,2.032,239,2.608,240,1.574,247,1.29,249,0.828,267,2.764,274,1.709,278,1.611,279,1.569,312,1.508,410,1.243,422,3.362,435,3.975,439,2.184,440,3.211,442,2.741,443,2.859,445,3.4,446,3.4,447,3.4,448,3.4,470,1.928,473,3.713,474,3.234,475,2.887,476,2.887,477,2.887,478,2.887,479,3.017,480,3.17,757,1.297,793,2.232,991,2.942,1009,4.589,1164,3.4,1550,4.342,1581,4.132,1679,5.587,1681,5.988,1684,6.406,1685,5.277,1687,2.882,1690,2.882,1692,2.882,1695,2.882,1734,3.713,1893,5.271,1938,6.406,1939,2.882,1940,4.768,1941,4.768,1942,6.089,1943,6.089,1944,6.089,1945,6.709,1946,6.089,1947,4.768,1948,3.325,1949,4.768,1950,6.709,1951,3.325,1952,3.325,1953,3.713,1954,3.325,1955,4.768,1956,4.768,1957,3.325,1958,3.325,1959,3.325,1960,3.325,1961,3.325,1962,2.882,1963,3.325,1964,3.325,1965,3.325]],["title/modules/TabularModule.html",[383,0.793,1294,2.559]],["body/modules/TabularModule.html",[0,0.141,2,0.184,3,0.138,7,0.116,11,0.305,51,0.016,95,0.308,96,0.184,100,0.221,101,0.01,115,0.712,147,1.512,163,1.011,166,1.517,167,1.143,188,0.012,189,0.012,229,1.92,343,1.995,383,1.509,384,3.983,385,1.632,386,2.882,387,2.183,394,3.277,395,3.599,396,2.791,397,2.183,398,2.002,400,2.791,401,3.065,402,2.283,414,2.002,415,2.635,416,2.775,418,3.106,472,2.448,492,3.583,793,3.065,1081,3.54,1294,5.36,1327,4.173,1328,5.101,1893,3.821,1966,4.644,1967,4.644,1968,5.359,1969,4.644,1970,5.359,1971,5.359,1972,5.359]],["title/interfaces/TimeoutOption.html",[1973,2.119,1974,3.017]],["body/interfaces/TimeoutOption.html",[0,0.143,2,0.139,3,0.069,7,0.058,11,0.151,12,0.863,13,0.563,14,1.379,16,2.345,17,1.648,19,0.502,20,0.796,23,0.524,24,0.462,26,0.524,28,0.524,30,0.231,31,0.702,32,0.568,33,2.891,34,0.337,38,0.524,40,0.749,41,0.937,42,0.29,46,0.245,51,0.016,53,0.512,54,0.746,55,1.168,56,1.99,57,1.126,58,3.373,59,1.456,62,1.379,63,1.377,66,1.309,68,0.799,69,1.578,70,1.323,72,1.578,74,1.138,76,0.692,77,0.749,84,1.056,89,1.551,91,1.643,95,0.263,96,0.091,98,1.759,99,0.665,100,0.122,101,0.005,102,1.025,103,1.593,104,1.742,108,0.482,109,3.611,110,1.615,112,2.885,161,0.502,164,0.443,188,0.011,189,0.008,191,2.293,192,3.506,196,1.379,198,4.09,199,4.486,201,4.737,202,2.951,203,2.307,206,2.307,207,2.307,208,2.307,209,2.307,210,2.307,211,3.15,212,2.307,215,4.578,216,1.962,217,2.085,218,3.506,219,3.15,220,3.811,221,3.045,222,2.891,224,0.64,225,2.329,226,2.496,227,2.701,228,1.45,229,1.45,230,1.759,231,2.831,232,1.543,233,2.307,234,2.307,235,2.885,237,2.972,240,2.355,246,3.626,247,1.873,248,5.623,249,1.288,251,4.256,253,2.073,254,4.737,255,2.307,256,3.373,257,2.345,258,2.095,260,2.073,265,1.898,267,2.836,268,1.379,269,1.643,270,2.073,275,1.085,278,0.665,279,1.647,284,0.811,287,3.15,289,1.038,290,1.759,291,5.288,295,2.184,296,2.406,297,2.307,298,4.241,299,3.294,300,2.307,301,4.737,305,1.456,306,1.456,307,1.309,308,1.038,309,2.073,310,1.759,311,2.673,312,1.323,313,3.811,314,3.506,315,2.307,316,2.073,317,2.307,318,2.307,319,2.307,320,2.307,321,3.506,322,2.307,324,3.506,325,2.307,326,6.184,327,2.307,328,3.506,329,2.307,335,5.365,336,4.014,337,2.073,338,2.307,339,3.611,340,2.073,341,2.073,348,3.506,359,3.506,360,4.821,361,2.073,362,2.073,363,2.307,364,1.898,365,2.307,366,2.307,367,2.307,368,2.073,369,2.885,370,1.759,375,1.085,483,1.456,518,4.842,745,3.15,770,3.168,865,6.001,887,3.506,933,2.496,1053,3.506,1161,2.673,1192,2.307,1249,3.15,1411,2.673,1534,1.898,1541,1.759,1702,2.307,1720,4.737,1898,3.506,1973,2.213,1974,3.811,1975,2.307,1976,3.506,1977,6.925,1978,4.046,1979,2.662,1980,2.662,1981,2.662,1982,2.662,1983,4.046,1984,2.662,1985,2.662,1986,2.662,1987,5.466,1988,2.662,1989,2.662,1990,2.073,1991,2.662,1992,2.662,1993,2.662,1994,2.662,1995,2.662,1996,2.662,1997,4.046,1998,2.662,1999,4.893,2000,2.662,2001,2.307,2002,2.662,2003,4.046,2004,2.662,2005,4.046,2006,2.662,2007,2.662,2008,2.662,2009,2.662,2010,4.046,2011,4.046,2012,2.662,2013,2.662,2014,2.662,2015,2.662,2016,2.662,2017,2.662,2018,2.662,2019,2.662,2020,2.662,2021,2.662,2022,2.662,2023,2.307,2024,2.662,2025,4.046,2026,2.662,2027,2.662,2028,4.046,2029,2.662,2030,2.662,2031,4.046,2032,4.046,2033,2.662,2034,2.662]],["title/interfaces/User.html",[202,1.651,1973,2.119]],["body/interfaces/User.html",[2,0.184,3,0.138,7,0.116,11,0.304,13,0.552,30,0.464,31,1.136,32,1.141,42,0.582,48,0.711,49,0.78,51,0.016,53,0.829,54,0.998,55,1.334,56,2.632,68,0.675,95,0.285,96,0.184,100,0.197,101,0.013,102,0.853,103,1.286,188,0.012,189,0.012,191,2.088,202,3.411,221,2.772,227,2.088,237,2.667,249,1.334,274,2.534,311,3.536,336,3.794,375,2.181,439,1.506,471,4.039,562,1.573,753,3.103,754,3.536,755,2.505,760,3.079,761,2.921,762,2.632,1191,4.168,1215,5.079,1352,3.103,1541,3.536,1558,3.536,1729,4.168,1756,3.536,1973,3.58,2035,4.168,2036,6.662,2037,5.672,2038,4.639,2039,4.639]],["title/injectables/UserService.html",[221,2.006,562,0.931]],["body/injectables/UserService.html",[2,0.177,3,0.133,7,0.112,11,0.364,13,0.66,30,0.448,31,1.111,32,1.484,34,0.81,42,0.696,46,0.641,48,0.85,49,0.933,50,0.974,51,0.016,52,0.561,53,0.81,54,0.975,55,1.438,56,3.148,68,0.717,95,0.281,96,0.177,100,0.192,101,0.012,102,0.822,103,1.24,188,0.012,189,0.012,191,2.497,202,3.467,221,3.315,227,2.497,237,2.608,249,1.111,274,2.731,311,3.41,336,3.71,375,2.608,439,1.452,471,3.185,562,1.672,753,2.992,754,3.41,755,2.416,760,3.181,761,3.105,762,2.538,1191,4.985,1215,4.229,1352,3.71,1490,4.473,1541,3.41,1558,4.229,1729,4.02,1756,4.229,1973,2.823,2035,4.02,2036,5.547,2037,4.473,2038,6.304,2039,4.473,2040,6.401,2041,5.162]],["title/components/WeatherBackupWsMarkerComponent.html",[0,0.084,168,0.762]],["body/components/WeatherBackupWsMarkerComponent.html",[0,0.167,1,0.736,2,0.129,3,0.097,4,0.831,5,0.865,6,0.799,7,0.081,11,0.295,12,0.799,13,0.719,19,0.979,20,1.169,22,0.865,23,1.599,24,1.412,25,1.02,26,1.02,28,1.02,30,0.325,31,0.9,32,1.577,34,0.656,38,1.262,40,1.806,41,0.926,42,0.564,46,0.658,48,0.689,49,0.755,50,0.707,51,0.016,52,0.647,53,0.853,54,0.571,55,1.316,57,0.546,68,0.719,76,1.348,84,0.596,95,0.277,96,0.129,99,0.936,100,0.113,101,0.007,102,0.826,108,0.939,115,0.497,116,1.197,117,1.197,118,1.151,119,1.482,120,0.865,121,1.197,122,0.707,123,0.865,124,0.707,125,0.865,126,0.755,127,0.865,128,0.736,129,0.865,130,0.736,131,1.114,132,1.482,133,0.707,134,0.865,135,0.767,136,1.373,137,0.736,138,1.373,139,0.736,140,1.373,141,0.736,142,0.865,143,0.736,144,0.865,145,0.736,146,0.831,147,0.736,148,0.865,149,0.707,150,0.865,151,0.736,152,0.736,153,0.707,154,0.865,155,0.736,156,0.736,157,0.865,158,0.707,159,0.865,160,0.736,161,0.707,162,0.865,163,0.707,164,0.623,165,1.197,166,0.707,167,0.799,168,1.262,169,1.367,170,1.711,171,1.643,172,0.707,173,0.865,174,0.736,175,0.497,176,0.767,177,0.736,178,1.02,179,0.865,180,0.736,181,0.736,182,0.736,183,1.294,184,0.736,185,0.736,186,0.831,187,0.865,188,0.01,189,0.01,216,2.451,224,1.246,247,1.402,249,1.032,284,1.579,308,1.461,410,1.938,421,3.324,439,1.054,440,1.596,472,1.938,584,2.192,722,3.005,757,1.461,966,2.222,967,2.783,1019,2.474,1020,3.697,1021,3.697,1028,2.916,1039,2.916,1042,4.038,1101,3.324,1534,4.577,2042,3.985,2043,4.495,2044,4.813,2045,3.429,2046,3.929,2047,2.474,2048,3.425,2049,2.924,2050,3.246,2051,3.246,2052,3.246,2053,2.048,2054,3.246]],["title/components/WeatherComponent.html",[0,0.084,172,0.731]],["body/components/WeatherComponent.html",[0,0.171,1,0.839,2,0.147,3,0.11,4,0.947,5,0.986,6,0.91,7,0.093,11,0.243,12,0.91,13,0.698,15,2.651,19,1.069,20,1.25,22,0.986,23,1.611,24,1.422,25,1.114,26,1.114,28,1.114,30,0.37,31,0.983,34,0.717,38,1.332,40,1.201,41,0.766,42,0.692,46,0.624,48,0.752,49,0.825,50,0.805,51,0.016,52,0.804,53,0.717,54,0.65,57,0.622,68,0.584,76,1.473,84,1.013,95,0.219,96,0.147,100,0.128,101,0.008,102,0.68,108,1.026,110,1.87,115,0.567,116,1.308,117,1.308,118,1.257,119,1.564,120,0.986,121,1.308,122,0.805,123,0.986,124,0.805,125,0.986,126,0.622,127,0.986,128,0.839,129,0.986,130,0.839,131,1.176,132,1.564,133,0.805,134,0.986,135,0.874,136,1.469,137,0.839,138,1.469,139,0.839,140,1.469,141,0.839,142,0.986,143,0.839,144,0.986,145,0.839,146,0.947,147,0.839,148,0.986,149,0.805,150,0.986,151,0.839,152,0.839,153,0.805,154,0.986,155,0.839,156,0.839,157,0.986,158,0.805,159,0.986,160,0.839,161,0.805,162,0.986,163,0.805,164,0.71,165,1.308,166,0.805,167,0.91,168,0.839,169,1.352,170,0.91,171,1.302,172,1.278,173,0.986,174,0.839,175,0.567,176,0.874,177,0.839,178,1.114,179,0.986,180,0.839,181,0.839,182,0.839,183,0.773,184,0.839,185,0.839,186,0.947,187,0.986,188,0.011,189,0.011,224,1.741,247,1.532,258,2.934,273,3.098,275,2.76,277,5.275,278,1.067,279,0.947,560,2.474,584,1.983,784,3.743,957,3.705,1055,4.411,1066,4.909,2049,3.693,2053,2.334,2055,3.698,2056,5.665,2057,5.665,2058,5.665,2059,5.665,2060,6.28,2061,5.665,2062,5.665,2063,5.665,2064,4.268,2065,4.268,2066,3.698]],["title/components/WeatherDataMarkerComponent.html",[0,0.084,174,0.762]],["body/components/WeatherDataMarkerComponent.html",[0,0.168,1,0.72,2,0.126,3,0.095,4,0.812,5,0.845,6,0.78,7,0.079,11,0.334,12,0.78,13,0.713,19,0.963,20,1.155,22,0.845,23,1.597,24,1.41,25,1.003,26,1.003,28,1.003,30,0.317,31,0.886,32,1.476,34,0.646,38,1.25,40,1.947,41,0.916,42,0.555,46,0.667,48,0.677,49,0.743,50,0.963,51,0.016,52,0.691,53,0.846,54,0.777,55,1.306,56,3.125,57,0.533,68,0.713,74,1.788,76,1.326,84,0.583,95,0.259,96,0.126,99,0.915,100,0.11,101,0.007,102,0.935,108,1.15,115,0.486,116,1.178,117,1.178,118,1.132,119,1.468,120,0.845,121,1.178,122,0.691,123,0.845,124,0.691,125,0.845,126,0.743,127,0.845,128,0.72,129,0.845,130,0.72,131,1.103,132,1.468,133,0.691,134,0.845,135,0.749,136,1.357,137,0.72,138,1.357,139,0.72,140,1.357,141,0.72,142,0.845,143,0.72,144,0.845,145,0.72,146,0.812,147,0.72,148,0.845,149,0.691,150,0.845,151,0.72,152,0.72,153,0.691,154,0.845,155,0.72,156,0.72,157,0.845,158,0.691,159,0.845,160,0.72,161,0.691,162,0.845,163,0.691,164,0.609,165,1.178,166,0.691,167,0.78,168,0.72,169,1.352,170,0.78,171,1.203,172,0.691,173,0.845,174,1.25,175,1.063,176,0.749,177,0.72,178,1.003,179,0.845,180,0.72,181,0.72,182,0.72,183,1.21,184,0.72,185,0.72,186,0.812,187,0.845,188,0.01,189,0.01,196,2.642,216,2.469,224,1.226,247,1.38,249,1.103,275,2.723,278,1.275,279,1.132,284,1.935,308,1.427,375,2.079,410,1.367,421,3.752,472,1.906,580,3.973,584,2.204,587,2.79,966,2.195,967,2.749,981,2.509,1019,2.417,1020,3.638,1021,3.638,1101,2.642,1113,3.638,1138,2.609,1201,4.531,1205,3.921,1790,3.973,1890,4.421,2042,4.025,2043,4.54,2044,4.861,2045,3.416,2046,3.88,2047,2.417,2048,3.37,2049,2.888,2053,2.001,2067,5.09,2068,5.102,2069,3.659,2070,3.659,2071,3.659,2072,3.659,2073,3.659,2074,3.659]],["title/modules/WeatherModule.html",[383,0.793,1295,2.119]],["body/modules/WeatherModule.html",[0,0.127,2,0.155,3,0.117,7,0.098,11,0.256,51,0.016,59,3.213,95,0.312,96,0.155,100,0.208,101,0.008,115,0.599,168,1.447,169,1.345,170,1.253,171,1.507,172,1.389,174,1.447,175,0.78,176,1.507,177,1.447,178,1.361,180,1.447,181,1.447,182,1.447,183,1.064,184,1.545,188,0.011,189,0.011,229,2.341,307,2.218,343,1.789,383,1.418,384,3.811,385,1.374,386,2.662,387,1.838,393,3.444,394,3.136,395,3.444,396,2.503,397,1.838,398,1.685,400,2.503,401,2.749,402,1.922,414,1.685,415,2.218,416,2.336,417,2.614,418,2.614,472,2.195,584,2.026,1074,4.265,1078,3.908,1080,5.091,1081,2.979,1082,3.512,1083,5.662,1085,3.512,1295,4.495,2043,4.271,2044,4.316,2045,3.284,2053,2.467,2075,3.908,2076,3.908,2077,4.51,2078,3.908,2079,3.908,2080,4.51,2081,5.874,2082,3.512,2083,3.512,2084,3.908,2085,4.51,2086,4.189,2087,3.512,2088,4.51]],["title/components/WeatherPrimaryWsConnectorComponent.html",[0,0.084,177,0.762]],["body/components/WeatherPrimaryWsConnectorComponent.html",[0,0.16,1,0.754,2,0.132,3,0.099,4,0.851,5,0.885,6,0.817,7,0.083,11,0.218,12,0.817,13,0.543,15,2.465,19,0.994,20,1.184,22,0.885,23,1.602,24,1.414,25,1.036,26,1.036,28,1.036,30,0.332,34,0.667,38,1.275,40,1.975,41,0.462,42,0.655,46,0.647,48,0.7,49,0.768,51,0.016,52,0.573,53,0.485,57,0.558,68,0.724,74,1.482,76,1.37,84,0.61,93,3.25,95,0.148,96,0.132,100,0.115,101,0.007,104,1.078,115,0.509,116,1.217,117,1.217,118,1.169,119,1.497,120,0.885,121,1.217,122,0.723,123,0.885,124,0.723,125,0.885,126,0.558,127,0.885,128,0.754,129,0.885,130,0.754,131,1.125,132,1.497,133,0.723,134,0.885,135,0.785,136,1.39,137,0.754,138,1.39,139,0.754,140,1.39,141,0.754,142,0.885,143,0.754,144,0.885,145,0.754,146,0.851,147,0.754,148,0.885,149,0.723,150,0.885,151,0.754,152,0.754,153,0.723,154,0.885,155,0.754,156,0.754,157,0.885,158,0.723,159,0.885,160,0.754,161,0.723,162,0.885,163,0.723,164,0.637,165,1.217,166,0.723,167,0.817,168,0.754,169,1.371,170,0.817,171,1.64,172,0.723,173,0.885,174,0.754,175,0.509,176,0.785,177,1.275,178,1.571,179,0.885,180,0.754,181,0.754,182,0.754,183,1.09,184,0.754,185,0.754,186,0.851,187,0.885,188,0.01,189,0.01,224,1.266,249,1.045,275,2.453,279,1.439,295,2.892,299,1.794,375,2.146,421,3.357,472,1.969,512,3.25,584,2.223,837,5.007,977,3.48,978,3.054,1151,3.48,1201,4.622,1232,5.217,1790,4.102,2042,3.934,2043,4.438,2067,5.217,2087,5.601,2089,3.321,2090,6.085,2091,7.522,2092,5.268,2093,5.268,2094,5.268,2095,6.482,2096,6.482,2097,5.268,2098,3.833,2099,3.833,2100,3.833,2101,5.617,2102,3.833,2103,6.482,2104,3.833,2105,3.833,2106,5.268,2107,5.268,2108,3.833]],["title/components/WeatherPrimaryWsMarkerComponent.html",[0,0.084,180,0.762]],["body/components/WeatherPrimaryWsMarkerComponent.html",[0,0.167,1,0.736,2,0.129,3,0.097,4,0.831,5,0.864,6,0.798,7,0.081,11,0.295,12,0.798,13,0.718,19,0.978,20,1.169,22,0.864,23,1.599,24,1.412,25,1.019,26,1.019,28,1.019,30,0.325,31,0.9,32,1.577,34,0.656,38,1.262,40,1.805,41,0.926,42,0.564,46,0.658,48,0.688,49,0.755,50,0.706,51,0.016,52,0.647,53,0.853,54,0.57,55,1.315,57,0.545,68,0.718,76,1.347,84,0.596,95,0.276,96,0.129,99,0.935,100,0.112,101,0.007,102,0.825,108,1.076,115,0.497,116,1.197,117,1.197,118,1.15,119,1.482,120,0.864,121,1.197,122,0.706,123,0.864,124,0.706,125,0.864,126,0.755,127,0.864,128,0.736,129,0.864,130,0.736,131,1.114,132,1.482,133,0.706,134,0.864,135,0.766,136,1.373,137,0.736,138,1.373,139,0.736,140,1.373,141,0.736,142,0.864,143,0.736,144,0.864,145,0.736,146,0.831,147,0.736,148,0.864,149,0.706,150,0.864,151,0.736,152,0.736,153,0.706,154,0.864,155,0.736,156,0.736,157,0.864,158,0.706,159,0.864,160,0.736,161,0.706,162,0.864,163,0.706,164,0.622,165,1.197,166,0.706,167,0.798,168,0.736,169,1.356,170,0.798,171,1.643,172,0.706,173,0.864,174,0.736,175,0.497,176,0.766,177,0.736,178,1.58,179,0.864,180,1.262,181,0.736,182,0.736,183,1.22,184,0.736,185,0.736,186,0.831,187,0.864,188,0.01,189,0.01,216,2.477,224,1.245,247,1.402,249,1.032,284,1.954,308,1.46,410,1.937,421,3.323,439,1.053,440,1.595,472,1.937,584,2.191,587,2.834,757,1.46,966,2.221,967,2.782,1019,2.472,1020,3.695,1021,3.695,1028,2.914,1039,2.914,1042,4.035,1101,3.323,1534,4.575,2042,3.984,2043,4.494,2044,4.812,2045,3.429,2046,3.927,2047,2.472,2048,3.424,2049,2.923,2050,3.243,2051,3.243,2052,3.243,2053,2.047,2054,3.243]],["title/injectables/WeatherService.html",[562,0.931,2045,1.729]],["body/injectables/WeatherService.html",[0,0.127,2,0.081,3,0.061,7,0.051,11,0.291,13,0.528,30,0.393,31,0.639,32,1.699,34,0.466,41,0.874,42,0.4,46,0.703,48,0.312,49,0.343,50,0.855,51,0.016,52,0.493,53,0.9,54,0.69,55,1.264,57,0.928,63,1.441,64,0.809,68,0.69,70,0.636,74,1.274,77,1.792,80,2.27,84,0.816,89,1.166,95,0.238,96,0.081,99,0.588,100,0.111,101,0.007,102,0.816,103,1.23,104,1.035,108,1.114,110,1.69,126,0.343,131,0.639,164,1.059,169,1.203,175,0.846,183,1.272,188,0.007,189,0.007,191,1.435,224,0.884,225,3.349,227,2.484,228,1.318,230,2.43,237,2.4,239,4.218,249,1.235,262,2.012,268,1.905,278,1.28,279,1.137,284,2.111,289,1.435,296,2.732,312,1.845,343,0.717,352,2.132,410,0.879,421,3.051,422,3.419,439,2.156,440,3.329,442,3.409,468,2.132,472,1.375,474,2.981,475,3.299,476,3.299,477,3.299,478,3.299,479,2.981,480,3.132,481,2.992,482,2.346,483,1.287,484,1.555,485,1.555,562,1.088,571,3.355,572,1.157,573,1.05,584,1.96,647,2.897,755,1.101,757,0.918,760,2.264,761,1.641,762,1.157,770,2.132,778,2.43,956,2.992,957,2.801,959,1.452,962,1.678,963,1.678,964,1.452,966,2.201,967,1.722,972,2.27,976,2.012,977,2.43,978,2.132,981,1.809,985,2.43,986,3.651,987,2.477,988,2.623,990,1.678,991,3.16,1003,3.651,1004,1.678,1006,2.623,1007,3.651,1009,4.693,1010,4.792,1012,4.792,1013,2.623,1014,2.623,1086,2.039,1120,4.542,1205,3.16,1295,2.012,1550,4.943,1551,4.587,1552,4.587,1756,4.508,1953,2.865,2045,1.641,2049,3.293,2109,1.832,2110,4.438,2111,4.438,2112,4.438,2113,4.438,2114,4.438,2115,4.438,2116,4.438,2117,4.438,2118,4.438,2119,4.438,2120,4.438,2121,4.438,2122,4.438,2123,3.679,2124,3.679,2125,4.438,2126,3.679,2127,2.353,2128,3.188,2129,2.353,2130,3.188,2131,2.865,2132,2.353,2133,2.353,2134,3.188,2135,2.353,2136,2.353,2137,2.353,2138,4.96,2139,2.353,2140,2.353,2141,2.353,2142,2.353,2143,3.188,2144,2.353,2145,2.353,2146,4.96,2147,2.353,2148,3.188,2149,2.353,2150,2.353,2151,2.353,2152,2.353,2153,4.587,2154,4.587,2155,2.353,2156,1.832,2157,2.039,2158,2.039,2159,3.188,2160,2.039,2161,2.039,2162,2.039,2163,2.039,2164,2.039,2165,2.039,2166,2.039,2167,2.039,2168,2.039,2169,2.039,2170,2.039,2171,2.039,2172,2.039,2173,6.286,2174,2.039,2175,6.286,2176,2.039,2177,6.286,2178,2.039,2179,2.039,2180,2.039,2181,2.039,2182,6.286,2183,4.438,2184,2.039]],["title/components/WeatherSidebarComponent.html",[0,0.084,181,0.762]],["body/components/WeatherSidebarComponent.html",[0,0.159,1,0.543,2,0.095,3,0.071,4,0.613,5,0.638,6,0.589,7,0.06,11,0.357,12,1.067,13,0.75,14,2.155,15,2.343,19,0.785,20,0.984,22,0.638,23,1.565,24,1.381,25,0.818,26,0.818,28,0.818,30,0.24,31,0.722,32,1.463,34,0.527,38,1.096,39,2.75,40,1.567,41,0.9,42,0.453,46,0.67,48,0.553,49,0.606,50,1.23,51,0.016,52,0.772,53,0.911,54,0.993,55,1.34,57,0.403,63,1.171,64,1.915,68,0.784,69,2.331,70,1.507,74,1.567,76,1.082,77,1.567,84,0.797,90,3.681,95,0.259,96,0.095,99,0.691,100,0.083,101,0.005,102,1.131,103,0.664,104,1.767,108,1.082,110,1.972,115,0.367,116,0.961,117,0.961,118,0.924,119,1.287,120,0.638,121,0.961,122,0.522,123,0.638,124,0.522,125,0.638,126,0.606,127,0.638,128,0.543,129,0.638,130,0.543,131,1.32,132,1.287,133,0.522,134,0.638,135,0.566,136,1.156,137,0.543,138,1.156,139,0.543,140,1.156,141,0.543,142,0.638,143,0.543,144,0.638,145,0.543,146,0.613,147,0.543,148,0.638,149,0.522,150,0.638,151,0.543,152,0.543,153,0.522,154,0.638,155,0.543,156,0.543,157,0.638,158,0.522,159,0.638,160,0.543,161,0.522,162,0.638,163,0.522,164,0.927,165,0.961,166,0.522,167,0.589,168,0.543,169,1.383,170,0.589,171,1.025,172,0.522,173,0.638,174,0.543,175,0.665,176,0.566,177,0.543,178,0.818,179,0.638,180,0.543,181,1.096,182,0.543,183,1.409,184,0.543,185,0.543,186,0.613,187,0.638,188,0.01,189,0.008,191,1.623,196,2.155,199,4.533,202,2.133,216,2.367,224,1,237,1.126,240,2.308,246,2.276,247,1.126,249,1.305,258,2.885,267,3.64,268,2.155,274,2.25,275,2.849,278,0.691,279,0.613,284,1.913,307,1.359,308,1.078,312,0.747,336,1.602,375,1.696,378,2.412,410,1.033,439,0.778,501,3.607,559,3.57,560,3.229,587,2.276,633,3.437,757,1.078,784,2.75,966,2.435,967,2.343,1098,1.971,1099,3.241,1100,3.241,1101,2.155,1103,3.607,1105,3.607,1109,2.395,1110,3.241,1112,4.653,1113,2.968,1120,2.968,1122,2.395,1128,2.75,1138,1.971,1243,1.971,1496,3.607,1652,5.444,2001,2.395,2023,2.395,2042,4.019,2045,3.307,2046,4.305,2047,1.826,2048,2.75,2049,3.697,2053,1.512,2060,4.338,2066,4.828,2082,4.89,2086,5.24,2185,3.607,2186,7.348,2187,4.162,2188,4.162,2189,5.006,2190,6.862,2191,6.517,2192,4.162,2193,4.162,2194,2.764,2195,2.764,2196,4.162,2197,5.571,2198,4.162,2199,2.764,2200,2.395,2201,4.162,2202,2.764,2203,4.162,2204,2.764,2205,3.607,2206,2.764,2207,2.395,2208,2.764,2209,2.395,2210,2.764,2211,2.764,2212,2.764,2213,2.764,2214,2.764,2215,2.764,2216,2.764,2217,2.764,2218,2.764,2219,2.764,2220,2.764,2221,4.162,2222,4.162,2223,2.764,2224,2.764,2225,2.764,2226,2.764,2227,2.764]],["title/classes/WeatherStationConfig.html",[101,0.007,2049,1.905]],["body/classes/WeatherStationConfig.html",[0,0.106,2,0.092,3,0.069,7,0.058,11,0.23,13,0.418,30,0.351,31,0.703,32,1.679,41,0.911,42,0.441,46,0.626,48,0.538,49,0.59,50,0.503,51,0.016,52,0.29,53,0.815,54,0.406,55,1.11,57,0.966,63,1.866,64,1.393,68,0.564,70,0.721,74,1.14,77,1.378,80,1.645,89,0.845,95,0.249,96,0.092,99,0.667,100,0.122,101,0.009,102,0.871,103,0.973,104,1.14,108,1.166,110,0.88,126,0.389,131,0.463,164,0.91,169,1.239,175,0.726,183,1.344,188,0.008,189,0.008,191,1.04,224,0.641,225,3.386,227,2.134,228,1.452,230,1.762,237,2.397,239,4.277,249,1.331,262,1.458,268,1.381,284,2.243,289,1.04,296,2.69,312,1.904,343,1.234,352,1.546,410,0.997,421,2.833,422,3.335,439,2.116,440,3.185,442,3.262,468,1.546,472,0.997,474,3.104,475,3.435,476,3.435,477,3.435,478,3.435,479,3.104,480,3.262,481,3.887,482,2.537,483,2.216,484,2.676,485,1.762,562,0.973,571,3.166,572,1.311,573,1.19,584,1.941,647,2.409,755,1.248,757,1.04,760,1.996,761,1.19,762,1.311,770,1.546,778,1.762,956,3.236,957,3.521,959,2.499,962,1.901,963,1.901,964,1.645,966,1.83,967,1.248,972,1.645,976,1.458,977,1.762,978,1.546,981,1.311,985,1.762,986,1.901,987,2.216,988,2.888,990,1.901,991,2.499,1003,1.901,1004,1.901,1006,2.888,1007,1.901,1009,4.723,1010,4.903,1012,4.903,1013,2.888,1014,2.888,1120,3.901,1205,2.499,1295,1.458,1550,5.09,1551,4.824,1552,4.824,1756,4.652,1953,2.076,2045,1.19,2049,3.262,2109,2.076,2110,2.311,2111,2.311,2112,2.311,2113,2.311,2114,2.311,2115,2.311,2116,2.311,2117,2.311,2118,2.311,2119,2.311,2120,2.311,2121,2.311,2122,2.311,2125,2.311,2128,2.311,2130,2.311,2131,2.076,2134,2.311,2138,5.394,2143,2.311,2146,5.394,2148,2.311,2153,4.26,2154,4.26,2156,2.076,2157,3.51,2158,3.51,2159,5.368,2160,2.311,2161,2.311,2162,2.311,2163,2.311,2164,2.311,2165,2.311,2166,2.311,2167,2.311,2168,2.311,2169,2.311,2170,2.311,2171,2.311,2172,2.311,2173,6.431,2174,2.311,2175,6.431,2176,2.311,2177,6.431,2178,2.311,2179,2.311,2180,2.311,2181,2.311,2182,6.431,2183,4.741,2184,2.311,2228,4.051,2229,2.667,2230,2.667,2231,2.667,2232,2.667,2233,2.667]],["title/components/WeatherStationSidebarComponent.html",[0,0.084,182,0.762]],["body/components/WeatherStationSidebarComponent.html",[0,0.168,1,0.711,2,0.124,3,0.093,4,0.803,5,0.835,6,0.771,7,0.078,11,0.332,12,0.771,13,0.711,19,0.955,20,1.148,22,0.835,23,1.596,24,1.409,25,0.995,26,0.995,28,0.995,30,0.314,31,0.878,32,1.47,34,0.64,38,1.243,40,1.872,41,0.914,42,0.55,46,0.665,48,0.672,49,0.737,50,0.955,51,0.016,52,0.688,53,0.873,54,0.771,55,1.301,57,0.527,63,1.779,68,0.782,76,1.316,84,0.576,95,0.267,96,0.124,99,0.904,100,0.109,101,0.012,102,0.93,108,1.145,110,2.087,115,0.48,116,1.169,117,1.169,118,1.123,119,1.46,120,0.835,121,1.169,122,0.682,123,0.835,124,0.682,125,0.835,126,0.737,127,0.835,128,0.711,129,0.835,130,0.711,131,1.097,132,1.46,133,0.682,134,0.835,135,0.741,136,1.348,137,0.711,138,1.348,139,0.711,140,1.348,141,0.711,142,0.835,143,0.711,144,0.835,145,0.711,146,0.803,147,0.711,148,0.835,149,0.682,150,0.835,151,0.711,152,0.711,153,0.682,154,0.835,155,0.711,156,0.711,157,0.835,158,0.682,159,0.835,160,0.711,161,0.682,162,0.835,163,0.682,164,0.601,165,1.169,166,0.682,167,0.771,168,0.711,169,1.371,170,0.771,171,1.195,172,0.682,173,0.835,174,0.711,175,0.48,176,0.741,177,0.711,178,0.995,179,0.835,180,0.711,181,0.711,182,1.243,183,1.462,184,0.711,185,0.711,186,0.803,187,0.835,188,0.01,189,0.01,196,2.62,216,2.465,224,1.216,247,1.368,249,1.155,258,3.274,275,2.809,278,0.904,279,0.803,284,1.925,308,1.41,343,1.541,410,1.351,427,4.923,439,1.017,552,3.608,581,4.545,587,2.767,722,2.933,757,1.41,966,2.181,967,2.731,981,2.488,1098,2.578,1099,3.94,1100,3.94,1101,2.62,1110,3.94,1113,3.608,1133,3.134,1134,3.134,1138,2.578,1201,4.917,2042,4.014,2045,3.41,2046,3.856,2047,2.389,2048,4.177,2049,3.272,2053,1.978,2086,5.233,2185,4.385,2200,3.134,2207,3.134,2234,5.06,2235,3.616,2236,3.616,2237,3.616,2238,3.616,2239,3.616]],["title/components/WeatherSummaryComponent.html",[0,0.084,184,0.762]],["body/components/WeatherSummaryComponent.html",[0,0.159,1,0.729,2,0.127,3,0.096,4,0.823,5,0.856,6,0.791,7,0.08,11,0.336,12,0.791,13,0.761,19,0.972,20,1.163,22,0.856,23,1.598,24,1.412,25,1.013,26,1.013,28,1.013,30,0.322,31,0.894,32,1.261,34,0.652,38,1.257,41,0.93,42,0.56,46,0.64,48,0.684,49,0.931,50,1.117,51,0.016,52,0.73,53,0.809,54,0.902,55,1.345,57,0.54,68,0.749,77,1.955,84,0.942,89,1.875,95,0.276,96,0.127,99,0.927,100,0.111,101,0.007,102,1.018,103,1.237,108,1.071,115,0.492,116,1.189,117,1.189,118,1.143,119,1.476,120,0.856,121,1.189,122,0.7,123,0.856,124,0.7,125,0.856,126,0.75,127,0.856,128,0.729,129,0.856,130,0.729,131,1.109,132,1.476,133,0.7,134,0.856,135,0.76,136,1.366,137,0.729,138,1.366,139,0.729,140,1.366,141,0.729,142,0.856,143,0.729,144,0.856,145,0.729,146,0.823,147,0.729,148,0.856,149,0.7,150,0.856,151,0.729,152,0.729,153,0.7,154,0.856,155,0.729,156,0.729,157,0.856,158,0.7,159,0.856,160,0.729,161,0.7,162,0.856,163,0.7,164,0.617,165,1.189,166,0.7,167,0.791,168,0.729,169,1.385,170,0.791,171,1.212,172,0.7,173,0.856,174,0.729,175,0.849,176,0.76,177,0.729,178,1.013,179,0.856,180,0.729,181,0.729,182,0.729,183,0.671,184,1.257,185,0.729,186,0.823,187,0.856,188,0.01,189,0.01,216,2.304,217,2.724,249,1.262,308,1.446,343,1.568,378,2.985,410,1.386,439,1.043,443,2.194,492,3.496,757,1.446,793,3.401,966,2.211,976,3.236,981,2.532,1101,2.667,1128,3.402,1135,3.302,1136,4.087,1150,2.644,1151,3.402,1152,4.01,1153,4.01,1154,4.01,1156,2.644,1157,3.214,1158,4.01,1159,4.01,1160,2.888,1161,3.402,1162,4.956,1163,4.01,1164,3.672,1165,4.01,1167,2.888,1168,2.888,1170,2.644,1172,2.888,1834,4.463,2042,3.899,2045,3.482,2053,2.028,2083,5.551,2138,4.01,2146,4.01,2153,4.01,2154,4.01,2209,3.214,2240,5.15,2241,3.709,2242,3.709,2243,3.709,2244,3.709,2245,3.709,2246,3.709]],["title/components/WikiButtonComponent.html",[0,0.084,185,0.762]],["body/components/WikiButtonComponent.html",[0,0.165,1,0.855,2,0.149,3,0.112,4,0.965,5,1.004,6,0.927,7,0.094,10,3.099,11,0.247,12,1.584,13,0.591,14,2.97,15,3.003,16,3.955,19,1.082,20,1.262,22,1.004,23,1.613,24,1.424,25,1.128,26,1.128,27,4.465,28,1.128,29,4.465,30,0.377,34,0.726,38,1.342,39,3.788,40,1.92,41,0.773,42,0.698,46,0.628,48,0.761,49,0.835,50,0.82,51,0.016,52,0.698,53,0.55,54,0.662,57,0.633,68,0.591,84,0.913,86,4.465,89,1.818,90,3.788,94,3.767,95,0.168,96,0.149,100,0.131,101,0.008,115,0.577,116,1.324,117,1.324,118,1.273,119,1.576,120,1.004,121,1.324,122,0.82,123,1.004,124,0.82,125,1.004,126,0.633,127,1.004,128,0.855,129,1.004,130,0.855,131,1.184,132,1.576,133,0.82,134,1.004,135,0.89,136,1.482,137,0.855,138,1.482,139,0.855,140,1.482,141,0.855,142,1.004,143,0.855,144,1.004,145,0.855,146,0.965,147,0.855,148,1.004,149,0.82,150,1.004,151,0.855,152,0.855,153,0.82,154,1.004,155,0.855,156,0.855,157,1.004,158,0.82,159,1.004,160,0.855,161,0.82,162,1.004,163,0.82,164,0.723,165,1.324,166,0.82,167,0.927,168,0.855,169,1.309,170,0.927,171,1.314,172,0.82,173,1.004,174,0.855,175,0.577,176,0.89,177,0.855,178,1.128,179,1.004,180,0.855,181,0.855,182,0.855,183,0.787,184,0.855,185,1.342,186,1.723,187,1.004,188,0.011,189,0.011,224,1.378,228,2.662,249,0.995,407,5.523,577,3.955,761,1.94,786,4.465,930,4.969,2247,6.146,2248,5.734,2249,4.347,2250,5.734,2251,4.347,2252,5.734,2253,4.347,2254,4.347]],["title/coverage.html",[2255,4.599]],["body/coverage.html",[0,0.175,1,0.72,7,0.079,8,4.935,9,2.849,10,4.188,33,1.799,41,0.441,51,0.016,53,0.463,101,0.014,122,0.691,124,0.691,126,0.533,128,0.72,130,0.72,133,0.691,135,0.749,137,0.72,139,0.72,141,0.72,143,0.72,145,0.72,147,0.72,149,0.691,151,0.72,152,0.72,155,0.72,158,0.691,160,0.72,161,0.691,163,0.691,166,0.691,168,0.72,170,1.088,171,1.417,172,0.691,174,0.72,175,0.677,176,0.749,177,0.72,178,1.25,180,0.72,181,0.72,182,0.72,183,0.924,184,0.72,185,0.72,188,0.01,189,0.01,190,3.171,202,1.559,216,1.16,221,1.895,222,1.799,312,0.99,406,2.849,407,2.849,408,4.188,420,3.973,440,1.559,488,4.421,489,2.849,490,3.171,492,2.001,549,2.609,550,4.574,562,1.791,574,2.609,577,2.121,584,2.026,718,2.849,719,4.421,753,3.405,755,1.712,756,2.609,757,1.427,758,2.258,760,1.491,954,2.258,955,3.973,965,2.849,971,1.895,1016,4.531,1017,2.849,1018,2.849,1019,4.198,1054,3.171,1077,3.171,1079,2.849,1084,2.849,1098,4.188,1135,1.799,1150,4.188,1174,3.171,1205,4.966,1275,6.455,1298,3.171,1316,2.849,1322,2.849,1327,2.849,1378,3.171,1400,2.849,1476,3.171,1483,3.171,1508,2.609,1532,2.849,1533,3.171,1554,3.171,1555,3.171,1636,3.171,1665,3.171,1699,3.171,1733,3.171,1746,2.417,1750,3.171,1769,3.171,1770,3.171,1831,3.171,1832,2.849,1833,3.171,1839,3.171,1855,3.171,1893,2.609,1895,3.171,1906,3.171,1938,3.171,1939,4.421,1973,2.79,1974,2.849,1975,4.421,2035,3.973,2042,3.962,2043,3.921,2044,3.88,2045,1.633,2049,1.799,2055,3.171,2083,2.849,2084,3.171,2086,3.638,2087,2.849,2089,3.171,2109,3.973,2156,2.849,2247,3.171,2255,3.171,2256,3.659,2257,3.171,2258,7.244,2259,3.659,2260,6.683,2261,6.921,2262,5.102,2263,3.659,2264,8.049,2265,3.659,2266,5.874,2267,5.102,2268,5.874,2269,6.355,2270,3.659,2271,5.102,2272,5.874,2273,3.659,2274,3.659,2275,3.659,2276,5.874,2277,5.102,2278,3.171,2279,6.355,2280,3.659,2281,7.102,2282,3.659,2283,5.102,2284,3.659,2285,6.355,2286,3.659,2287,3.659,2288,5.874,2289,3.659,2290,3.659,2291,7.102,2292,6.921,2293,3.659,2294,3.659,2295,3.659,2296,3.659,2297,6.683,2298,3.659,2299,3.659,2300,3.659,2301,3.659,2302,3.659,2303,3.659,2304,3.659,2305,3.659,2306,3.659]],["title/dependencies.html",[385,1.421,2307,3.225]],["body/dependencies.html",[51,0.016,96,0.196,188,0.013,189,0.013,231,2.962,305,3.128,306,3.128,307,3.35,385,1.742,387,2.776,402,2.437,573,3.04,751,4.956,752,4.956,876,4.454,1243,4.078,1246,5.189,1247,4.858,1301,4.956,1411,3.778,1634,4.956,1635,4.454,2082,4.454,2308,5.719,2309,8.076,2310,5.719,2311,6.813,2312,5.719,2313,5.719,2314,5.719,2315,5.719,2316,4.956,2317,5.719,2318,5.719,2319,5.719,2320,5.719,2321,5.719,2322,5.719,2323,5.719,2324,5.719,2325,5.719,2326,5.719,2327,5.719,2328,5.719,2329,5.719,2330,5.719,2331,5.719,2332,5.719,2333,5.719,2334,6.813,2335,4.956,2336,5.719,2337,5.719]],["title/miscellaneous/enumerations.html",[2338,2.795,2339,4.042]],["body/miscellaneous/enumerations.html",[30,0.5,41,0.694,51,0.016,77,1.62,188,0.013,189,0.013,225,3.11,256,3.554,274,2.615,279,1.827,295,3.256,299,3.415,339,4.52,442,2.832,470,3.965,474,2.695,475,2.983,476,2.983,477,2.983,478,2.983,479,2.695,480,2.832,539,5.327,608,4.485,1558,4.52,1765,5.327,1962,4.991,1990,4.485,2278,4.991,2338,4.991,2339,4.991,2340,7.298,2341,7.298,2342,4.991,2343,5.76,2344,4.991,2345,5.76,2346,4.991,2347,5.76,2348,4.991]],["title/index.html",[30,0.28,262,1.764,806,2.512]],["body/index.html",[0,0.152,3,0.137,7,0.115,13,0.726,24,0.922,48,1.001,51,0.012,52,0.578,76,1.694,78,5.074,188,0.012,189,0.012,211,4.137,247,1.987,257,3.079,273,2.906,289,2.072,296,2.612,312,1.437,358,3.788,361,4.137,376,3.788,398,1.985,414,2.746,457,3.278,468,3.079,472,1.985,576,3.439,577,4.259,586,5.488,625,2.906,722,3.079,753,3.079,882,4.854,938,4.137,970,3.079,985,3.51,1119,3.788,1197,4.137,1358,3.788,1400,4.137,1411,4.304,1840,4.604,1852,4.604,2316,6.736,2346,4.604,2349,5.312,2350,7.047,2351,7.347,2352,5.646,2353,5.312,2354,6.515,2355,5.312,2356,5.312,2357,5.312,2358,5.312,2359,5.312,2360,5.312,2361,5.312,2362,5.312,2363,5.312,2364,6.65,2365,5.312,2366,6.515,2367,7.54,2368,7.047,2369,6.515,2370,5.312,2371,5.312,2372,4.604,2373,5.312,2374,6.853,2375,5.312,2376,5.312,2377,5.312,2378,5.312,2379,5.312,2380,5.312,2381,5.312,2382,5.312,2383,5.312,2384,5.312,2385,5.312,2386,6.515,2387,7.54,2388,6.515,2389,5.312,2390,7.347,2391,5.312,2392,5.312,2393,5.312,2394,5.312,2395,5.312]],["title/license.html",[262,1.764,806,2.512,2396,2.795]],["body/license.html",[3,0.184,4,0.752,7,0.105,13,0.773,15,1.586,32,1.598,46,0.519,50,0.64,51,0.009,54,0.859,59,2.644,62,3.363,63,1.9,66,3.194,76,1.257,101,0.006,108,1.258,118,0.752,153,1.063,175,0.816,188,0.009,189,0.009,191,1.322,198,3.722,202,2.06,229,2.49,232,3.266,242,3.082,247,0.917,269,2.091,274,1.215,295,2.157,299,2.262,312,1.524,339,2.239,343,1.032,358,4.631,364,2.417,369,3.447,370,2.239,371,4.882,374,2.937,375,2.646,376,2.417,378,3.764,379,2.937,423,2.417,491,3.447,510,2.937,539,5.532,577,3.56,587,1.854,588,5.066,592,3.764,625,1.854,633,2.091,664,2.639,678,3.764,688,2.639,694,4.387,720,2.639,722,4.191,725,2.937,769,4.387,882,4.903,911,2.937,933,2.091,938,5.711,967,1.586,972,3.79,1055,3.764,1119,5.292,1128,2.239,1155,2.639,1161,3.193,1175,4.468,1197,2.639,1218,2.417,1352,1.965,1359,4.189,1404,3.447,1517,2.937,1558,3.193,1635,2.639,1652,5.837,1765,3.764,1815,2.937,1819,2.937,1824,2.639,1973,3.082,1976,2.937,1990,4.783,2090,2.937,2131,3.764,2205,2.937,2257,2.937,2335,2.937,2342,2.937,2344,2.937,2352,6.975,2364,5.323,2372,7.01,2374,2.937,2396,6.89,2397,7.867,2398,7.23,2399,3.39,2400,3.39,2401,4.834,2402,5.634,2403,4.834,2404,6.143,2405,6.143,2406,6.143,2407,3.39,2408,3.39,2409,3.39,2410,3.39,2411,3.39,2412,6.143,2413,7.104,2414,4.834,2415,3.39,2416,5.634,2417,4.834,2418,3.39,2419,7.334,2420,6.494,2421,7.951,2422,3.39,2423,7.89,2424,4.834,2425,4.834,2426,3.39,2427,3.39,2428,5.634,2429,3.39,2430,3.39,2431,5.634,2432,4.834,2433,4.834,2434,4.834,2435,3.39,2436,4.834,2437,3.39,2438,3.39,2439,3.39,2440,6.752,2441,7.334,2442,3.39,2443,3.39,2444,5.634,2445,6.949,2446,4.834,2447,3.39,2448,3.39,2449,3.39,2450,3.39,2451,3.39,2452,3.39,2453,3.39,2454,3.39,2455,3.39,2456,6.494,2457,6.752,2458,5.634,2459,3.39,2460,3.39,2461,3.39,2462,3.39,2463,3.39,2464,3.39,2465,5.634,2466,5.634,2467,6.752,2468,6.494,2469,4.834,2470,3.39,2471,3.39,2472,3.39,2473,3.39,2474,3.39,2475,3.39,2476,5.634,2477,4.834,2478,4.834,2479,4.834,2480,4.834,2481,4.834,2482,3.39,2483,3.39,2484,3.39,2485,3.39,2486,3.39,2487,3.39,2488,3.39,2489,3.39,2490,4.834,2491,3.39,2492,4.834,2493,3.39,2494,4.834,2495,6.143,2496,3.39,2497,3.39,2498,3.39,2499,3.39,2500,3.39,2501,3.39,2502,3.39,2503,4.834,2504,3.39,2505,3.39,2506,3.39,2507,3.39,2508,3.39,2509,3.39,2510,3.39]],["title/modules.html",[383,1.087]],["body/modules.html",[51,0.013,188,0.013,189,0.013,383,1.214,384,3.069,393,2.773,394,2.525,395,2.773,468,3.435,968,3.241,1074,3.435,1247,5.802,1285,4.225,1290,3.915,1291,3.915,1292,3.656,1293,3.915,1294,3.915,1295,3.241,2101,7.052,2511,8.137,2512,8.159,2513,5.926]],["title/overview.html",[156,1.044]],["body/overview.html",[0,0.077,1,1.389,33,2.858,51,0.016,100,0.108,101,0.007,115,0.476,122,1.333,124,1.097,126,1.029,128,1.389,130,1.143,133,1.097,135,1.19,137,1.143,139,1.389,141,1.389,143,1.389,145,1.389,147,1.143,149,1.097,151,1.389,152,1.143,155,1.389,156,0.705,158,1.333,160,1.389,161,1.333,163,1.333,166,1.333,168,1.143,172,1.097,174,1.143,176,1.19,177,1.143,180,1.143,181,1.143,182,1.143,184,1.389,185,1.389,188,0.01,189,0.01,216,1.842,217,1.528,221,3.01,229,1.285,299,1.679,339,2.37,383,1.03,384,4.196,385,1.092,386,1.462,387,1.462,388,3.108,389,3.108,390,3.108,391,3.108,392,3.108,393,3.652,394,3.197,395,3.714,396,2.144,397,1.462,398,1.34,562,0.862,758,3.586,760,2.368,968,4.388,971,3.01,1041,3.918,1069,3.108,1070,3.108,1071,3.108,1072,3.108,1073,3.108,1074,4.302,1135,2.858,1285,5.739,1286,3.108,1287,3.108,1288,3.108,1289,3.108,1290,4.84,1291,4.666,1292,4.63,1293,5.229,1294,5.076,1295,4.436,1312,3.108,1313,3.108,1315,3.108,1345,2.793,1373,3.108,1374,3.108,1520,3.108,1521,3.108,1527,3.108,1528,3.108,1530,3.108,1742,3.108,1743,3.108,1744,3.108,1745,3.108,1746,3.839,1846,3.108,1847,3.108,1849,3.108,1883,3.108,1884,3.108,1886,3.108,1966,3.108,1967,3.108,1969,3.108,1973,1.962,2045,2.593,2075,3.108,2076,3.108,2078,3.108,2079,3.108,2348,3.108,2514,3.587,2515,3.587]],["title/routes.html",[217,2.261]],["body/routes.html",[51,0.014,188,0.014,189,0.014,217,2.736]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":295,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AppComponent.html":{},"injectables/MapService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["0.8.26",{"_index":2337,"title":{},"body":{"dependencies.html":{}}}],["0.svg",{"_index":1685,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["00:15:00",{"_index":1981,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["00:30:00",{"_index":1984,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["01:00:00",{"_index":1986,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["02:00:00",{"_index":1988,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["06:00:00",{"_index":1989,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["1",{"_index":299,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["1).subscrib",{"_index":2020,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["1.0",{"_index":1767,"title":{},"body":{"injectables/MapService.html":{}}}],["1.1.8",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":2333,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":2353,"title":{},"body":{"index.html":{}}}],["1.svg",{"_index":1687,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["1/1",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1041,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/CdbService.html":{},"overview.html":{}}}],["10/10",{"_index":2287,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1275,"title":{},"body":{"components/AppComponent.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["1000",{"_index":844,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["11",{"_index":1519,"title":{},"body":{"injectables/CdbService.html":{}}}],["11.1.3",{"_index":2331,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2283,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1992,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["12/12",{"_index":2270,"title":{},"body":{"coverage.html":{}}}],["12:00:00",{"_index":1991,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["13",{"_index":2514,"title":{},"body":{"overview.html":{}}}],["13/13",{"_index":2268,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":2272,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1982,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["16/16",{"_index":2286,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":2274,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":2275,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":339,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["2.0.8",{"_index":2324,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2318,"title":{},"body":{"dependencies.html":{}}}],["2.22.2",{"_index":2330,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2321,"title":{},"body":{"dependencies.html":{}}}],["2.svg",{"_index":1690,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["20",{"_index":501,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["200",{"_index":874,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialSandboxComponent.html":{}}}],["20000",{"_index":2225,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["2007",{"_index":2401,"title":{},"body":{"license.html":{}}}],["201",{"_index":869,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["22/22",{"_index":2302,"title":{},"body":{"coverage.html":{}}}],["25/25",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":2259,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":2399,"title":{},"body":{"license.html":{}}}],["3",{"_index":539,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.0.0",{"_index":2326,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2328,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":1692,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["3/3",{"_index":2261,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1985,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["30/30",{"_index":2267,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1782,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["33",{"_index":2515,"title":{},"body":{"overview.html":{}}}],["36/36",{"_index":2277,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1765,"title":{},"body":{"injectables/MapService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.1.3",{"_index":2319,"title":{},"body":{"dependencies.html":{}}}],["4.svg",{"_index":1695,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["4/4",{"_index":2260,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1710,"title":{},"body":{"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{}}}],["403",{"_index":338,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["4d0",{"_index":2487,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":2488,"title":{},"body":{"license.html":{}}}],["5",{"_index":2344,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["5/5",{"_index":2269,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1783,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["500",{"_index":1781,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["6",{"_index":1990,"title":{},"body":{"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["6.0.0",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":2309,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":2334,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2273,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1780,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["7",{"_index":2346,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["7/7",{"_index":2276,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1779,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["8",{"_index":2348,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["8/8",{"_index":2279,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1778,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["9/9",{"_index":2258,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":1777,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["_",{"_index":641,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_blank",{"_index":2254,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["_getsubtree(alarm",{"_index":653,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_initi",{"_index":986,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["_nodedata",{"_index":642,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":643,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":646,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["a100",{"_index":1786,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a400",{"_index":1785,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["a700",{"_index":1784,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accent",{"_index":1787,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["accept",{"_index":2509,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1155,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"license.html":{}}}],["accompani",{"_index":2468,"title":{},"body":{"license.html":{}}}],["accord",{"_index":286,"title":{},"body":{"components/AckComponent.html":{}}}],["account",{"_index":1191,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["account_circl",{"_index":1278,"title":{},"body":{"components/AppComponent.html":{}}}],["ack",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack'},{'nam",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack.component.html",{"_index":194,"title":{},"body":{"components/AckComponent.html":{}}}],["ack.component.scss",{"_index":193,"title":{},"body":{"components/AckComponent.html":{}}}],["ack/ack.compon",{"_index":403,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackcompon",{"_index":122,"title":{"components/AckComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acklist",{"_index":583,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["acknowledg",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["acknowledge/:alarmid",{"_index":1340,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["acknowledge/unacknowledg",{"_index":282,"title":{},"body":{"components/AckComponent.html":{}}}],["acknowledgealarms(alarms_id",{"_index":849,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["acknowledgedalarm",{"_index":195,"title":{},"body":{"components/AckComponent.html":{}}}],["acktre",{"_index":342,"title":{},"body":{"components/AckComponent.html":{}}}],["acktreecompon",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":240,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["actions/ack/ack.compon",{"_index":1320,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/actions.modul",{"_index":1081,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["actions/shelve/shelve.compon",{"_index":1325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/sidenav.servic",{"_index":1244,"title":{},"body":{"components/AppComponent.html":{}}}],["actionsmodul",{"_index":384,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["actionssidenav",{"_index":1178,"title":{},"body":{"components/AppComponent.html":{}}}],["actionssidenavservic",{"_index":1179,"title":{},"body":{"components/AppComponent.html":{}}}],["activ",{"_index":463,"title":{},"body":{"components/AlarmComponent.html":{},"guards/AuthLoginGuard.html":{},"components/MaterialSandboxComponent.html":{}}}],["activatedrout",{"_index":218,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["activatedroutesnapshot",{"_index":1354,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["actual",{"_index":1978,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["actual_compon",{"_index":187,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ad",{"_index":1580,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["add",{"_index":887,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["add_or_update_alarm(alarm",{"_index":894,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["addit",{"_index":2416,"title":{},"body":{"license.html":{}}}],["address",{"_index":2499,"title":{},"body":{"license.html":{}}}],["addsvgicon",{"_index":1252,"title":{},"body":{"components/AppComponent.html":{}}}],["administr",{"_index":367,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["afterviewinit",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["again",{"_index":363,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["agil",{"_index":1816,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["alarm",{"_index":41,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["alarm'},{'nam",{"_index":127,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm.ack",{"_index":909,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.acknowledg",{"_index":854,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.asalarm(obj",{"_index":884,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.component.html",{"_index":425,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.scss",{"_index":424,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.core_id",{"_index":897,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.depend",{"_index":656,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies.length",{"_index":654,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.servic",{"_index":1524,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.shelv",{"_index":871,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.shouldrepeat",{"_index":914,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.sound",{"_index":907,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.unshelv",{"_index":875,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valid",{"_index":940,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.valu",{"_index":906,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm/alarm.compon",{"_index":1892,"title":{},"body":{"modules/SharedModule.html":{}}}],["alarm?.core_id",{"_index":372,"title":{},"body":{"components/AckComponent.html":{}}}],["alarm?.descript",{"_index":373,"title":{},"body":{"components/AckComponent.html":{}}}],["alarm_id",{"_index":196,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["alarm_sound_1.mp3",{"_index":732,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_2.mp3",{"_index":734,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_3.mp3",{"_index":736,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_4.mp3",{"_index":738,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_typ",{"_index":2298,"title":{},"body":{"coverage.html":{}}}],["alarmchangestream",{"_index":782,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmcompon",{"_index":126,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmconfig",{"_index":1126,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmconfig.placemark",{"_index":1145,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmheadercompon",{"_index":128,"title":{"components/AlarmHeaderComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmiconspriorityset",{"_index":1942,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsset",{"_index":1943,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsunreliableset",{"_index":1944,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmid",{"_index":1534,"title":{},"body":{"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmimageset",{"_index":440,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["alarmitemflatnod",{"_index":549,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":574,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":705,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmnam",{"_index":534,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.length",{"_index":536,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmname.substring(0",{"_index":538,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarmnamemaxs",{"_index":496,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["alarms_d",{"_index":2293,"title":{},"body":{"coverage.html":{}}}],["alarms_id",{"_index":850,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsarray",{"_index":779,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmservic",{"_index":216,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservice.countbyview",{"_index":1282,"title":{},"body":{"components/AppComponent.html":{}}}],["alarmservice.html#playalarmsound",{"_index":934,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsindex",{"_index":781,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmslist",{"_index":888,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsound",{"_index":718,"title":{"classes/AlarmSounds.html":{}},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["alarmsounds.getsoundsource(sound",{"_index":921,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type1",{"_index":764,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type2",{"_index":765,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type3",{"_index":766,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type4",{"_index":767,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmstoack",{"_index":197,"title":{},"body":{"components/AckComponent.html":{}}}],["alarmstoackfromselect",{"_index":582,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":1945,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["allow",{"_index":370,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["allowed_act",{"_index":1415,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowedshelv",{"_index":2003,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["allowedunshelv",{"_index":2005,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alma",{"_index":1732,"title":{},"body":{"components/LoginComponent.html":{}}}],["alreadi",{"_index":1128,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["and/or",{"_index":2436,"title":{},"body":{"license.html":{}}}],["angular",{"_index":576,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"index.html":{}}}],["angular/anim",{"_index":2308,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["angular/cdk/collect",{"_index":564,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/cdk/tre",{"_index":566,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":2371,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":402,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1429,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1634,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":305,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1301,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":1243,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1611,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":1614,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1621,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/expans",{"_index":1629,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/form",{"_index":1623,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1245,"title":{},"body":{"components/AppComponent.html":{},"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":1597,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":1618,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/menu",{"_index":1609,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":1599,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":1601,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/select",{"_index":1625,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1616,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":1603,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/snack",{"_index":1631,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":1605,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":1607,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1627,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":569,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":1246,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":306,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["anoth",{"_index":930,"title":{},"body":{"classes/AlarmSounds.html":{},"components/WikiButtonComponent.html":{}}}],["antenna",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antenna'",{"_index":1118,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antenna.svg",{"_index":1257,"title":{},"body":{"components/AppComponent.html":{}}}],["antennaclick",{"_index":1107,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaconfig",{"_index":954,"title":{"classes/AntennaConfig.html":{}},"body":{"classes/AntennaConfig.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["antennaconfig.antenna",{"_index":1140,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaimageset",{"_index":983,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennaimageunreliableset",{"_index":984,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennamarkercompon",{"_index":130,"title":{"components/AntennaMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennas'},{'nam",{"_index":134,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas.component.html",{"_index":1059,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.component.scss",{"_index":1058,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.join",{"_index":2211,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["antennas.servic",{"_index":1067,"title":{},"body":{"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["antennas/antennas.compon",{"_index":1076,"title":{},"body":{"modules/AntennasModule.html":{}}}],["antennas/antennas.modul",{"_index":1302,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["antennas/antennas.servic",{"_index":1047,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["antennas/antennas/antennas.compon",{"_index":1321,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["antennascompon",{"_index":133,"title":{"components/AntennasComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasconfig",{"_index":973,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmap",{"_index":1057,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennasmapcompon",{"_index":135,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasmapnam",{"_index":979,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennasmodul",{"_index":968,"title":{"modules/AntennasModule.html":{}},"body":{"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["antennasservic",{"_index":971,"title":{"injectables/AntennasService.html":{}},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasset",{"_index":965,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["antennassettings.mapkey",{"_index":980,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["antennassidebar",{"_index":1056,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennassidebarcompon",{"_index":137,"title":{"components/AntennasSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummarycompon",{"_index":139,"title":{"components/AntennasSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummaryconfig",{"_index":982,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["api",{"_index":233,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["app",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["app.compon",{"_index":1310,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":1177,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":1176,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":1297,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":141,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1161,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["applic",{"_index":1175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["application/json",{"_index":1436,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["appmodul",{"_index":1285,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":1334,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":1290,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":2447,"title":{},"body":{"license.html":{}}}],["array",{"_index":512,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["arrayindex",{"_index":780,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["artifact",{"_index":2381,"title":{},"body":{"index.html":{}}}],["asiasio",{"_index":1642,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":1650,"title":{},"body":{"classes/Iasio.html":{}}}],["ask",{"_index":234,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["asset",{"_index":757,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["assets.icon",{"_index":1009,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["assets.sound",{"_index":763,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["assets/img/ia",{"_index":1254,"title":{},"body":{"components/AppComponent.html":{}}}],["associ",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["asterisc",{"_index":2032,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["attempt",{"_index":1363,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["attribut",{"_index":481,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["audio",{"_index":723,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["audiofil",{"_index":743,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["auth",{"_index":1726,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.servic",{"_index":1366,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":1331,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.modul",{"_index":1305,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.servic",{"_index":310,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{}}}],["auth/login/login.compon",{"_index":1333,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authent",{"_index":798,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["authloginguard",{"_index":1330,"title":{"guards/AuthLoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{}}}],["authmodul",{"_index":1291,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1352,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"license.html":{}}}],["authservic",{"_index":222,"title":{"injectables/AuthService.html":{}},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["automat",{"_index":2378,"title":{},"body":{"index.html":{}}}],["auxiliari",{"_index":652,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["avail",{"_index":468,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MapComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{},"modules.html":{}}}],["availablecount",{"_index":1271,"title":{},"body":{"components/AppComponent.html":{}}}],["availablecounters.indexof(navitemcount",{"_index":1273,"title":{},"body":{"components/AppComponent.html":{}}}],["avoid",{"_index":785,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["axi",{"_index":1032,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["b",{"_index":2456,"title":{},"body":{"license.html":{}}}],["backend",{"_index":807,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurl",{"_index":755,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["backendurls.antennas_summari",{"_index":1000,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.antennas_view",{"_index":993,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["backendurls.cdb_ia",{"_index":1503,"title":{},"body":{"injectables/CdbService.html":{}}}],["backendurls.files_json",{"_index":1004,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["backendurls.health_summari",{"_index":1546,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["backendurls.pads_statu",{"_index":2163,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["backendurls.shelve_regs_filt",{"_index":864,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurls.tickets_info",{"_index":859,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["background",{"_index":1789,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["backup",{"_index":170,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["badg",{"_index":445,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["bar",{"_index":1632,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["base",{"_index":66,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["basic",{"_index":1801,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["be",{"_index":269,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["befor",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":572,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["behaviorsubject(fals",{"_index":778,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["behaviorsubject(nul",{"_index":1427,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(tru",{"_index":783,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["belong",{"_index":2158,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["below",{"_index":2417,"title":{},"body":{"license.html":{}}}],["besid",{"_index":448,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["beta.17",{"_index":2314,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":2092,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["block",{"_index":270,"title":{},"body":{"components/AckComponent.html":{},"guards/AuthLoginGuard.html":{},"interfaces/TimeoutOption.html":{}}}],["blue",{"_index":1050,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["bootstrap",{"_index":387,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["both",{"_index":1055,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"license.html":{}}}],["bound",{"_index":2443,"title":{},"body":{"license.html":{}}}],["branch",{"_index":2363,"title":{},"body":{"index.html":{}}}],["bred",{"_index":1822,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["breed",{"_index":1808,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["broadcast",{"_index":1493,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastr",{"_index":1495,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastthreshold",{"_index":944,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["broadcastthreshold).subscribe(x",{"_index":952,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["brows",{"_index":2512,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1247,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":1595,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browseranimationsmodul",{"_index":1594,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["browsermodul",{"_index":1299,"title":{},"body":{"modules/AppModule.html":{}}}],["bti",{"_index":1889,"title":{},"body":{"modules/SharedModule.html":{}}}],["build",{"_index":48,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":666,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["built",{"_index":1117,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["button",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":121,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":405,"title":{},"body":{"modules/ActionsModule.html":{}}}],["button.component.css",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":29,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":2248,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:19",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":2249,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:28",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.ts:29",{"_index":1904,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:36",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:37",{"_index":1902,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:43",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:44",{"_index":1901,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:52",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:53",{"_index":1897,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:64",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:68",{"_index":1900,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:72",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:76",{"_index":1903,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":406,"title":{},"body":{"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":407,"title":{},"body":{"modules/ActionsModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["buttonref",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["buttons'},{'nam",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons.component.css",{"_index":1479,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":1480,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons/buttons.compon",{"_index":419,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buttonscompon",{"_index":143,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":2403,"title":{},"body":{"license.html":{}}}],["calcul",{"_index":1762,"title":{},"body":{"injectables/MapService.html":{}}}],["call",{"_index":933,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["canacknowledg",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["canactiv",{"_index":1338,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{}}}],["canactivate(next",{"_index":1353,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["cancel",{"_index":382,"title":{},"body":{"components/AckComponent.html":{}}}],["canclos",{"_index":1909,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cansend",{"_index":2002,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["cansound",{"_index":788,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["card",{"_index":1791,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card'},{'nam",{"_index":157,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":1854,"title":{},"body":{"modules/OverviewModule.html":{}}}],["card.component.html",{"_index":1836,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.scss",{"_index":1835,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":1833,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:12",{"_index":1837,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:18",{"_index":1838,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card/overview",{"_index":1832,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["case",{"_index":504,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AppComponent.html":{}}}],["catch",{"_index":1516,"title":{},"body":{"injectables/CdbService.html":{}}}],["catcherror",{"_index":1430,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror(error",{"_index":1450,"title":{},"body":{"injectables/AuthService.html":{}}}],["cdb.servic",{"_index":1526,"title":{},"body":{"modules/DataModule.html":{}}}],["cdbservic",{"_index":758,"title":{"injectables/CdbService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"coverage.html":{},"overview.html":{}}}],["cdbservice.html#getbroadcastr",{"_index":946,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cento",{"_index":2356,"title":{},"body":{"index.html":{}}}],["central",{"_index":1856,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":2502,"title":{},"body":{"license.html":{}}}],["chang",{"_index":625,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"index.html":{},"license.html":{}}}],["changealarms(ani",{"_index":804,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["changeloginstatu",{"_index":1382,"title":{},"body":{"injectables/AuthService.html":{}}}],["changeloginstatus(statu",{"_index":1395,"title":{},"body":{"injectables/AuthService.html":{}}}],["changeselectedst",{"_index":2061,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changeselectedstation(selectedst",{"_index":2063,"title":{},"body":{"components/WeatherComponent.html":{}}}],["channel",{"_index":752,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["charact",{"_index":502,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["check",{"_index":289,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["checkbox",{"_index":575,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":603,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":604,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklogin",{"_index":1349,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["checklogin(url",{"_index":1360,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["chevron_left",{"_index":1146,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["child",{"_index":276,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm",{"_index":657,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm.ack",{"_index":659,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childid",{"_index":655,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":244,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["chip",{"_index":1795,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["choic",{"_index":2458,"title":{},"body":{"license.html":{}}}],["choos",{"_index":2503,"title":{},"body":{"license.html":{}}}],["class",{"_index":101,"title":{"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"classes/Iasio.html":{},"classes/WeatherStationConfig.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["class=\"sect",{"_index":381,"title":{},"body":{"components/AckComponent.html":{}}}],["classnam",{"_index":1209,"title":{},"body":{"components/AppComponent.html":{}}}],["clean",{"_index":265,"title":{},"body":{"components/AckComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["cleanactionoutlet",{"_index":1858,"title":{},"body":{"injectables/RoutingService.html":{}}}],["clear",{"_index":474,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["clear.svg",{"_index":1010,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["clear_invalid",{"_index":1668,"title":{},"body":{"components/LegendComponent.html":{}}}],["clear_valid",{"_index":1669,"title":{},"body":{"components/LegendComponent.html":{}}}],["clearsoundsifack(alarm",{"_index":935,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cli",{"_index":2351,"title":{},"body":{"index.html":{}}}],["click",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["client",{"_index":1556,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":762,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["client.service.t",{"_index":1555,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:107",{"_index":1578,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:14",{"_index":1563,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:31",{"_index":1568,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:47",{"_index":1570,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:57",{"_index":1567,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:70",{"_index":1574,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:83",{"_index":1576,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:95",{"_index":1565,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["clipboard",{"_index":2082,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["clipboardmodul",{"_index":2081,"title":{},"body":{"modules/WeatherModule.html":{}}}],["clipboardservic",{"_index":2190,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["close",{"_index":256,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["closeandclean",{"_index":1912,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cluster_actionsmodul",{"_index":388,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declar",{"_index":389,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_export",{"_index":391,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_import",{"_index":390,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_provid",{"_index":392,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_antennasmodul",{"_index":1069,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_declar",{"_index":1070,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_export",{"_index":1072,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_import",{"_index":1071,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_provid",{"_index":1073,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":1286,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":1287,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":1288,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodul",{"_index":1312,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_declar",{"_index":1313,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_import",{"_index":1314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cluster_approutingmodule_provid",{"_index":1315,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":1373,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":1374,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":1375,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_datamodul",{"_index":1520,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1521,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodul",{"_index":1527,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declar",{"_index":1528,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_export",{"_index":1530,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_import",{"_index":1529,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_mapmodul",{"_index":1742,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declar",{"_index":1743,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_export",{"_index":1744,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_provid",{"_index":1745,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_overviewmodul",{"_index":1846,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declar",{"_index":1847,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_export",{"_index":1849,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_import",{"_index":1848,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodul",{"_index":1883,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1884,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1886,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1885,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodul",{"_index":1966,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declar",{"_index":1967,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_export",{"_index":1969,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_import",{"_index":1968,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodul",{"_index":2075,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":2076,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":2078,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":2077,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_provid",{"_index":2079,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":1119,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"index.html":{},"license.html":{}}}],["colorclass",{"_index":1048,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["combin",{"_index":2423,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":401,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["commun",{"_index":1712,"title":{},"body":{"components/LoginComponent.html":{}}}],["compat",{"_index":2335,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["complement",{"_index":1190,"title":{},"body":{"components/AppComponent.html":{}}}],["complementari",{"_index":797,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["complet",{"_index":877,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["compodoc",{"_index":2393,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["componet",{"_index":469,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["comput",{"_index":2483,"title":{},"body":{"license.html":{}}}],["concern",{"_index":2500,"title":{},"body":{"license.html":{}}}],["condit",{"_index":2414,"title":{},"body":{"license.html":{}}}],["config",{"_index":2048,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["configur",{"_index":966,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["connect",{"_index":768,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{}}}],["connectionpath",{"_index":831,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatusstream",{"_index":777,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatustim",{"_index":796,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connector",{"_index":2091,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector'},{'nam",{"_index":179,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["connector.compon",{"_index":2088,"title":{},"body":{"modules/WeatherModule.html":{}}}],["connector.component.html",{"_index":2094,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.scss",{"_index":2093,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.t",{"_index":2089,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:16",{"_index":2098,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":2099,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":2097,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":2102,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":2100,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector/weath",{"_index":2087,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["consid",{"_index":1197,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"license.html":{}}}],["console.error('an",{"_index":1582,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.error('error",{"_index":1729,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["console.log('cal",{"_index":919,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('connect",{"_index":835,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('count",{"_index":829,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('error",{"_index":2025,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["console.log('notifi",{"_index":821,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('request",{"_index":826,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["const",{"_index":104,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(alarmservic",{"_index":1156,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["constructor(antennasservic",{"_index":1108,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["constructor(attribut",{"_index":484,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["constructor(authservic",{"_index":1350,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["constructor(formbuild",{"_index":214,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(http",{"_index":1393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["constructor(httpcli",{"_index":1086,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["constructor(httpclientservic",{"_index":1490,"title":{},"body":{"injectables/CdbService.html":{},"injectables/UserService.html":{}}}],["constructor(priv",{"_index":607,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":1865,"title":{},"body":{"injectables/RoutingService.html":{}}}],["constructor(routingservic",{"_index":1914,"title":{},"body":{"injectables/SidenavService.html":{}}}],["constructor(servic",{"_index":1027,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["constructor(sidenavservic",{"_index":43,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["constructor(weatherservic",{"_index":2047,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["contact",{"_index":366,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["contain",{"_index":343,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["content",{"_index":644,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["continu",{"_index":660,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["contract",{"_index":1220,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":594,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["convert",{"_index":599,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":2441,"title":{},"body":{"license.html":{}}}],["coord",{"_index":2096,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[0",{"_index":2106,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[1",{"_index":2107,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coordin",{"_index":977,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["cope",{"_index":1817,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["copi",{"_index":1652,"title":{},"body":{"classes/Iasio.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["copyantenna",{"_index":2187,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyantennas(stationconfig",{"_index":2193,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyright",{"_index":2402,"title":{},"body":{"license.html":{}}}],["core",{"_index":876,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":505,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{}}}],["correspond",{"_index":722,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["count",{"_index":354,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["countbyview",{"_index":794,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["countbyview[navitemcount",{"_index":1274,"title":{},"body":{"components/AppComponent.html":{}}}],["counter",{"_index":1232,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["counterbyview",{"_index":1213,"title":{},"body":{"components/AppComponent.html":{}}}],["cover",{"_index":2420,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":2255,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":483,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["credenti",{"_index":1711,"title":{},"body":{"components/LoginComponent.html":{}}}],["critic",{"_index":928,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LegendComponent.html":{}}}],["critical.svg",{"_index":1012,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["crud",{"_index":1557,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["css",{"_index":459,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["currenlti",{"_index":790,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["current",{"_index":457,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["custom",{"_index":1193,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpClientService.html":{}}}],["cx",{"_index":1023,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["cy",{"_index":1024,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["d",{"_index":2475,"title":{},"body":{"license.html":{}}}],["dash",{"_index":1949,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":175,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["data).pip",{"_index":852,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data.push(nod",{"_index":675,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data/alarm",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.servic",{"_index":308,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/cdb.servic",{"_index":759,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data/data.modul",{"_index":417,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["data/http",{"_index":964,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["data/iasio",{"_index":1509,"title":{},"body":{"injectables/CdbService.html":{}}}],["data/user.servic",{"_index":309,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["databas",{"_index":878,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datamodul",{"_index":393,"title":{"modules/DataModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourc",{"_index":602,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["date).gettim",{"_index":775,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["datepip",{"_index":1298,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["debug",{"_index":2474,"title":{},"body":{"license.html":{}}}],["decid",{"_index":2505,"title":{},"body":{"license.html":{}}}],["declar",{"_index":386,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1222,"title":{},"body":{"components/AppComponent.html":{}}}],["deem",{"_index":2427,"title":{},"body":{"license.html":{}}}],["default",{"_index":278,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["defaulttimeout",{"_index":1993,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["defin",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["definealarmsandicon",{"_index":1537,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["definealarmsandimag",{"_index":1946,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["definit",{"_index":1976,"title":{},"body":{"interfaces/TimeoutOption.html":{},"license.html":{}}}],["degrad",{"_index":2345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delay",{"_index":1432,"title":{},"body":{"injectables/AuthService.html":{}}}],["delet",{"_index":880,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["delete(url",{"_index":1564,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":1584,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["deped",{"_index":2008,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["depend",{"_index":385,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descend",{"_index":689,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":692,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":702,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":690,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":695,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["describ",{"_index":1036,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["destroy",{"_index":260,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["detail",{"_index":2498,"title":{},"body":{"license.html":{}}}],["dev",{"_index":2376,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2355,"title":{},"body":{"index.html":{}}}],["devic",{"_index":974,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{}}}],["devicesconfig",{"_index":975,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["dialog",{"_index":1792,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dictionari",{"_index":482,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["differ",{"_index":720,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"license.html":{}}}],["direct",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":2380,"title":{},"body":{"index.html":{}}}],["directori",{"_index":2383,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["disableacknowledg",{"_index":204,"title":{},"body":{"components/AckComponent.html":{}}}],["disconnect",{"_index":841,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["display",{"_index":247,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":2361,"title":{},"body":{"index.html":{}}}],["dist",{"_index":2382,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":1812,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["distinguish",{"_index":2501,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":2410,"title":{},"body":{"license.html":{}}}],["divid",{"_index":1797,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["django",{"_index":751,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["doc_url",{"_index":1638,"title":{},"body":{"classes/Iasio.html":{}}}],["document",{"_index":577,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dog",{"_index":1807,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["domsanit",{"_index":1188,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":2001,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["doubl",{"_index":1646,"title":{},"body":{"classes/Iasio.html":{}}}],["draw",{"_index":978,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/MapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["durat",{"_index":2023,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["dure",{"_index":2205,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["dy",{"_index":1766,"title":{},"body":{"injectables/MapService.html":{}}}],["dynam",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1517,"title":{},"body":{"injectables/CdbService.html":{},"license.html":{}}}],["e.g",{"_index":744,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["e2",{"_index":2391,"title":{},"body":{"index.html":{}}}],["each",{"_index":972,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"modules/OverviewModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["effect",{"_index":2470,"title":{},"body":{"license.html":{}}}],["effort",{"_index":2451,"title":{},"body":{"license.html":{}}}],["element",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["elementref",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["email",{"_index":2036,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emit",{"_index":784,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["emitsound(sound",{"_index":918,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["enabletrac",{"_index":1344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":2390,"title":{},"body":{"index.html":{}}}],["engin",{"_index":2473,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":2452,"title":{},"body":{"license.html":{}}}],["entrycompon",{"_index":1891,"title":{},"body":{"modules/SharedModule.html":{}}}],["enumer",{"_index":2339,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":753,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["environment.httpurl",{"_index":1591,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["environment.httpurl}${backendurls.token",{"_index":1452,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.httpurl}${backendurls.validate_token",{"_index":1439,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.websocketpath",{"_index":836,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["environments/environ",{"_index":754,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["equal",{"_index":943,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["error",{"_index":336,"title":{},"body":{"components/AckComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{}}}],["error.statu",{"_index":337,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["error['error",{"_index":2031,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["errormessag",{"_index":1702,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["etc",{"_index":745,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{}}}],["event",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":559,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["everyon",{"_index":2409,"title":{},"body":{"license.html":{}}}],["everytim",{"_index":624,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["exampl",{"_index":1890,"title":{},"body":{"modules/SharedModule.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["except",{"_index":2439,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":2433,"title":{},"body":{"license.html":{}}}],["execut",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{},"license.html":{}}}],["exit_to_applog",{"_index":1280,"title":{},"body":{"components/AppComponent.html":{}}}],["expand",{"_index":554,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["expand/collaps",{"_index":595,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expect",{"_index":1204,"title":{},"body":{"components/AppComponent.html":{}}}],["expectedfilteredtablerow",{"_index":2294,"title":{},"body":{"coverage.html":{}}}],["expectedtablerow",{"_index":2295,"title":{},"body":{"coverage.html":{}}}],["expectedtreedata",{"_index":2263,"title":{},"body":{"coverage.html":{}}}],["explain",{"_index":2493,"title":{},"body":{"license.html":{}}}],["export",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extent",{"_index":2485,"title":{},"body":{"license.html":{}}}],["extra",{"_index":1371,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["fab",{"_index":1803,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["facil",{"_index":2445,"title":{},"body":{"license.html":{}}}],["fail",{"_index":301,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["faith",{"_index":2450,"title":{},"body":{"license.html":{}}}],["fals",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["favorit",{"_index":1802,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["fewer",{"_index":2464,"title":{},"body":{"license.html":{}}}],["field",{"_index":290,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filepath",{"_index":746,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["filter",{"_index":1162,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{}}}],["filter.replac",{"_index":1878,"title":{},"body":{"injectables/RoutingService.html":{}}}],["find",{"_index":587,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["fix",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{}}}],["flag",{"_index":985,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["flat",{"_index":551,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MaterialSandboxComponent.html":{}}}],["flatnod",{"_index":679,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":685,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":683,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":684,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":589,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":590,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":565,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":618,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flexlayoutmodul",{"_index":1633,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["fo",{"_index":344,"title":{},"body":{"components/AckComponent.html":{}}}],["focu",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["focus",{"_index":1794,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["focusmonitor",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["folder",{"_index":2365,"title":{},"body":{"index.html":{}}}],["follow",{"_index":358,"title":{},"body":{"components/AckComponent.html":{},"components/ButtonsComponent.html":{},"index.html":{},"license.html":{}}}],["foreground",{"_index":1796,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["forkjoin",{"_index":1505,"title":{},"body":{"injectables/CdbService.html":{}}}],["form",{"_index":198,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["format",{"_index":648,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["formbuild",{"_index":215,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol",{"_index":291,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol(this.defaulttimeout",{"_index":1998,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["formgroup",{"_index":287,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formsmodul",{"_index":411,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundat",{"_index":2406,"title":{},"body":{"license.html":{}}}],["free",{"_index":2404,"title":{},"body":{"license.html":{}}}],["full",{"_index":1337,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":232,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["further",{"_index":2394,"title":{},"body":{"index.html":{}}}],["futur",{"_index":2506,"title":{},"body":{"license.html":{}}}],["g",{"_index":2370,"title":{},"body":{"index.html":{}}}],["gener",{"_index":882,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"modules/OverviewModule.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":262,"title":{"index.html":{},"license.html":{}},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["get(core_id",{"_index":847,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["get(url",{"_index":1566,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":2007,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getactionslink",{"_index":1182,"title":{},"body":{"components/AppComponent.html":{}}}],["getactionslink(item",{"_index":1194,"title":{},"body":{"components/AppComponent.html":{}}}],["getalarm",{"_index":1101,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["getalarm(alarm_id",{"_index":1113,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getalarm(keyword",{"_index":2240,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["getalarmlist",{"_index":879,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getalarmnam",{"_index":495,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["getallowedact",{"_index":1383,"title":{},"body":{"injectables/AuthService.html":{}}}],["getantenna",{"_index":1103,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["getantennanam",{"_index":1102,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(antennaconfig",{"_index":1115,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennaname(this.selectedantenna",{"_index":1147,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getantennas(stationconfig",{"_index":2196,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["getbroadcastr",{"_index":1487,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbroadcastthreshold",{"_index":1488,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbuttontooltiptext",{"_index":1896,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":638,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getclass",{"_index":427,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getconfigurationdata",{"_index":1489,"title":{},"body":{"injectables/CdbService.html":{}}}],["getconnectionpath",{"_index":838,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getdevic",{"_index":1104,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gethttphead",{"_index":1384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["getimag",{"_index":428,"title":{},"body":{"components/AlarmComponent.html":{}}}],["getlevel",{"_index":634,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmapdata",{"_index":1003,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["getmissingacks(alarm_id",{"_index":858,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getmissingacksinfo",{"_index":205,"title":{},"body":{"components/AckComponent.html":{}}}],["getnavitemcountclass",{"_index":1183,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcountclass(navitem",{"_index":1198,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext",{"_index":1184,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(item",{"_index":1281,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(navitem",{"_index":1211,"title":{},"body":{"components/AppComponent.html":{}}}],["getngclass",{"_index":1022,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["getpadsstatu",{"_index":2123,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getpadsstatus(group",{"_index":2128,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["getpath",{"_index":2095,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["getresponsemessagetext",{"_index":206,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getresponsemessagetitl",{"_index":207,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["getshelveregistries(alarm_id",{"_index":863,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsoundsourc",{"_index":730,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsoundsource(sound",{"_index":740,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsvgpath",{"_index":1751,"title":{},"body":{"injectables/MapService.html":{}}}],["getsvgpaths(pathsgroup",{"_index":1754,"title":{},"body":{"injectables/MapService.html":{}}}],["gettextclass",{"_index":429,"title":{},"body":{"components/AlarmComponent.html":{}}}],["gettitletext",{"_index":2009,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["gettoken",{"_index":1385,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettreedata",{"_index":649,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getus",{"_index":1185,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["give",{"_index":2465,"title":{},"body":{"license.html":{}}}],["given",{"_index":633,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["global",{"_index":1123,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gnu",{"_index":2397,"title":{},"body":{"license.html":{}}}],["go",{"_index":1358,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["good",{"_index":2449,"title":{},"body":{"license.html":{}}}],["gotoacknowledg",{"_index":1859,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoacknowledge(alarm_id",{"_index":1868,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoantenna",{"_index":1860,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotologin",{"_index":1861,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotoshelv",{"_index":1862,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoshelve(alarm_id",{"_index":1872,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gototablefilteredbi",{"_index":1154,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1159,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gotoweath",{"_index":1863,"title":{},"body":{"injectables/RoutingService.html":{}}}],["govern",{"_index":2422,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":2419,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2513,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1049,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["grey",{"_index":1051,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["group",{"_index":1756,"title":{},"body":{"injectables/MapService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["group.github.io/ia",{"_index":2360,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1345,"title":{"guards/AuthLoginGuard.html":{}},"body":{"guards/AuthLoginGuard.html":{},"overview.html":{}}}],["hammerj",{"_index":2323,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["handleerror",{"_index":1559,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1569,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["happen",{"_index":1277,"title":{},"body":{"components/AppComponent.html":{}}}],["haschild",{"_index":640,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":645,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasvalidtoken",{"_index":1386,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":491,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["header'},{'nam",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["header.compon",{"_index":1894,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":494,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.scss",{"_index":493,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.t",{"_index":490,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:105",{"_index":507,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":499,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":506,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":503,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":498,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:43",{"_index":513,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:50",{"_index":511,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:86",{"_index":514,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:94",{"_index":515,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header/alarm",{"_index":489,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["header/fixtures.t",{"_index":2284,"title":{},"body":{"coverage.html":{}}}],["health",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.modul",{"_index":1306,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodul",{"_index":1292,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycompon",{"_index":145,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":586,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"index.html":{}}}],["herein",{"_index":2418,"title":{},"body":{"license.html":{}}}],["hide",{"_index":253,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["hidespinn",{"_index":208,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["high",{"_index":1694,"title":{},"body":{"components/LegendComponent.html":{}}}],["highlight",{"_index":1201,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["hint",{"_index":1798,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["hour",{"_index":1987,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["hover",{"_index":1790,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["html",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":761,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["http://localhost:4200",{"_index":2377,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":987,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["httpclientmodul",{"_index":1523,"title":{},"body":{"modules/DataModule.html":{}}}],["httpclientservic",{"_index":760,"title":{"injectables/HttpClientService.html":{}},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["httpmodul",{"_index":1300,"title":{},"body":{"modules/AppModule.html":{}}}],["httpoption",{"_index":1586,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":1571,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":2408,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":2359,"title":{},"body":{"index.html":{}}}],["hum",{"_index":2173,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humid",{"_index":2138,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["humidityimageset",{"_index":2110,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["humidityimageunreliableset",{"_index":2111,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["hunt",{"_index":1823,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["ia",{"_index":414,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{}}}],["ias_antenna",{"_index":1234,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_health",{"_index":1549,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_overview",{"_index":1230,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_tabl",{"_index":1235,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_typ",{"_index":1639,"title":{},"body":{"classes/Iasio.html":{}}}],["ias_weath",{"_index":1233,"title":{},"body":{"components/AppComponent.html":{}}}],["iasconfigur",{"_index":1484,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":1485,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdisplay",{"_index":2349,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":1508,"title":{"classes/Iasio.html":{}},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"coverage.html":{}}}],["iasmaterialmodul",{"_index":394,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":1486,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":422,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["iconset",{"_index":1535,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1536,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["id",{"_index":284,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["identifi",{"_index":2256,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":433,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagesunreli",{"_index":434,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["implement",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":2407,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1404,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["incorpor",{"_index":2412,"title":{},"body":{"license.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indic",{"_index":268,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inform",{"_index":375,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["init",{"_index":1955,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["initi",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":1501,"title":{},"body":{"injectables/CdbService.html":{}}}],["inject",{"_index":562,"title":{"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":2462,"title":{},"body":{"license.html":{}}}],["inner",{"_index":277,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["input",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instal",{"_index":2364,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":2373,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":224,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instead",{"_index":611,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["instruct",{"_index":2354,"title":{},"body":{"index.html":{}}}],["int",{"_index":862,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["integr",{"_index":1240,"title":{},"body":{"components/AppComponent.html":{}}}],["intend",{"_index":927,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["interact",{"_index":2185,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["interfac",{"_index":1973,"title":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{}},"body":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["intern",{"_index":1066,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["intervalobserv",{"_index":748,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["intervalobservable.create(1000",{"_index":951,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["inu",{"_index":1806,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["invalid",{"_index":239,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["invalid.svg",{"_index":1679,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["invok",{"_index":2448,"title":{},"body":{"license.html":{}}}],["io_id",{"_index":1640,"title":{},"body":{"classes/Iasio.html":{}}}],["ionicon",{"_index":2325,"title":{},"body":{"dependencies.html":{}}}],["isallow",{"_index":348,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["isdis",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["isexpand",{"_index":636,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isiniti",{"_index":792,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["isnavigationcompact",{"_index":1180,"title":{},"body":{"components/AppComponent.html":{}}}],["isol",{"_index":2435,"title":{},"body":{"license.html":{}}}],["isselect",{"_index":1105,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["isselected(alarmconfig",{"_index":1124,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["isselected(stationconfig",{"_index":2198,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["issu",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["istextalarm",{"_index":430,"title":{},"body":{"components/AlarmComponent.html":{}}}],["isubscript",{"_index":963,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["isvalidiasio",{"_index":1643,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":1653,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":552,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["item.icon",{"_index":1283,"title":{},"body":{"components/AppComponent.html":{}}}],["item.link",{"_index":1266,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":1284,"title":{},"body":{"components/AppComponent.html":{}}}],["japan",{"_index":1814,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["jqueri",{"_index":2327,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":647,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["json.hasownproperty('doc_url",{"_index":1658,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":1657,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":1655,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('short_desc",{"_index":1656,"title":{},"body":{"classes/Iasio.html":{}}}],["json.parse(allowed_act",{"_index":1465,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(token",{"_index":1461,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(us",{"_index":1463,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(allowed_act",{"_index":1475,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(token",{"_index":1470,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(us",{"_index":1472,"title":{},"body":{"injectables/AuthService.html":{}}}],["json['doc_url",{"_index":1664,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":1663,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":1661,"title":{},"body":{"classes/Iasio.html":{}}}],["json['short_desc",{"_index":1662,"title":{},"body":{"classes/Iasio.html":{}}}],["june",{"_index":2400,"title":{},"body":{"license.html":{}}}],["k",{"_index":667,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["karma",{"_index":2389,"title":{},"body":{"index.html":{}}}],["keep",{"_index":591,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["keepclos",{"_index":846,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["key",{"_index":352,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["keyword",{"_index":2242,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["know",{"_index":2130,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["l",{"_index":2105,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["last",{"_index":773,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/SidenavService.html":{}}}],["lastalarmid",{"_index":1910,"title":{},"body":{"injectables/SidenavService.html":{}}}],["lastreceivedmessagetimestamp",{"_index":774,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["later",{"_index":678,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1635,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{},"license.html":{}}}],["left",{"_index":1238,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":148,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":1666,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1667,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":1971,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcompon",{"_index":147,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":510,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"license.html":{}}}],["lesser",{"_index":2398,"title":{},"body":{"license.html":{}}}],["level",{"_index":555,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":467,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["librari",{"_index":2372,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":2396,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":2459,"title":{},"body":{"license.html":{}}}],["line",{"_index":2090,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"license.html":{}}}],["link",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["linkflat",{"_index":1828,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkicon",{"_index":1829,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkmini",{"_index":1830,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linkrais",{"_index":1827,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["linux",{"_index":2357,"title":{},"body":{"index.html":{}}}],["list",{"_index":274,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":991,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["load",{"_index":230,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadalarmsconfig",{"_index":992,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["loadimag",{"_index":1007,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadpadsstatu",{"_index":2124,"title":{},"body":{"injectables/WeatherService.html":{}}}],["loadpadsstatus(group",{"_index":2134,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["loadweatherstationsconfig",{"_index":2125,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["local",{"_index":1400,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"index.html":{}}}],["localstorage.getitem('allowed_act",{"_index":1464,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":1460,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('us",{"_index":1462,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('allowed_act",{"_index":1468,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":1466,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('us",{"_index":1467,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('allowed_act",{"_index":1474,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":1469,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('us",{"_index":1471,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":956,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["log",{"_index":235,"title":{},"body":{"components/AckComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{}}}],["login",{"_index":1263,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["login'},{'nam",{"_index":150,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["login(usernam",{"_index":1408,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":1701,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1700,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.guard",{"_index":1332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login.guard.t",{"_index":1347,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:13",{"_index":1351,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:31",{"_index":1356,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:42",{"_index":1361,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login/login.compon",{"_index":1377,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincompon",{"_index":149,"title":{"components/LoginComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginstatu",{"_index":1379,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginstatusstream",{"_index":1380,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":845,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["long",{"_index":1995,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["look",{"_index":1771,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["low",{"_index":1689,"title":{},"body":{"components/LegendComponent.html":{}}}],["low.svg",{"_index":1550,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["m",{"_index":2108,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["macro",{"_index":2461,"title":{},"body":{"license.html":{}}}],["made",{"_index":2430,"title":{},"body":{"license.html":{}}}],["main",{"_index":959,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/OverviewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["maint.svg",{"_index":1552,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mainten",{"_index":480,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["maintenance.svg",{"_index":1014,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["make",{"_index":2424,"title":{},"body":{"license.html":{}}}],["malfunct",{"_index":2347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manag",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["manner",{"_index":2479,"title":{},"body":{"license.html":{}}}],["map",{"_index":584,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["map'},{'nam",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["map((respons",{"_index":1443,"title":{},"body":{"injectables/AuthService.html":{}}}],["map.compon",{"_index":1078,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["map.component.html",{"_index":1736,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":1735,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.t",{"_index":2271,"title":{},"body":{"coverage.html":{}}}],["map.servic",{"_index":1749,"title":{},"body":{"modules/MapModule.html":{}}}],["map/antenna",{"_index":1077,"title":{},"body":{"modules/AntennasModule.html":{},"coverage.html":{}}}],["map/map.compon",{"_index":1748,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.modul",{"_index":1082,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["map/weath",{"_index":2084,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{}}}],["mapantennaconfig",{"_index":1139,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["mapcompon",{"_index":151,"title":{"components/MapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapconfig",{"_index":1737,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataavail",{"_index":1738,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataprocess",{"_index":1752,"title":{},"body":{"injectables/MapService.html":{}}}],["mapdataprocessing(placemarksgroup",{"_index":1759,"title":{},"body":{"injectables/MapService.html":{}}}],["mapmodul",{"_index":1074,"title":{"modules/MapModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/MapModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["mapservic",{"_index":1746,"title":{"injectables/MapService.html":{}},"body":{"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["mark",{"_index":1210,"title":{},"body":{"components/AppComponent.html":{}}}],["marker",{"_index":421,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["marker'},{'nam",{"_index":132,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["marker.compon",{"_index":1083,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["marker.component.html",{"_index":1021,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.scss",{"_index":1020,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.t",{"_index":1019,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["marker.component.ts:17",{"_index":1029,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:19",{"_index":2070,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:20",{"_index":1039,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:23",{"_index":1042,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:24",{"_index":2069,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:26",{"_index":1033,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:28",{"_index":2068,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:29",{"_index":1035,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:31",{"_index":2052,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:32",{"_index":1028,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:36",{"_index":2074,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:37",{"_index":2073,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:38",{"_index":2051,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:40",{"_index":1046,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:41",{"_index":1045,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:43",{"_index":2072,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:45",{"_index":2050,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:47",{"_index":1044,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:50",{"_index":2071,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:53",{"_index":1043,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker/antenna",{"_index":1018,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["marker/weath",{"_index":2044,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["markerimageset",{"_index":2112,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markerimageunreliableset",{"_index":2113,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["markers/antenna",{"_index":1017,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["markers/weath",{"_index":2043,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["master",{"_index":2362,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":1610,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":1613,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":189,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["matcheckboxmodul",{"_index":1620,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":153,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["material.modul",{"_index":416,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["material.module.t",{"_index":1593,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":415,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["materialsandboxcompon",{"_index":152,"title":{"components/MaterialSandboxComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":1628,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matformfieldmodul",{"_index":1622,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonmodul",{"_index":1612,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonregistri",{"_index":1187,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodul",{"_index":1596,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":1617,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matmenumodul",{"_index":1608,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1598,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1600,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matselectmodul",{"_index":1624,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenav",{"_index":1221,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["matsidenavmodul",{"_index":1615,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1602,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsnackbar",{"_index":2191,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["matsnackbarmodul",{"_index":1630,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsortmodul",{"_index":1604,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattablemodul",{"_index":1606,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1626,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":568,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":620,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":567,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":613,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":1619,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max",{"_index":500,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/MapService.html":{}}}],["maxci",{"_index":1768,"title":{},"body":{"injectables/MapService.html":{}}}],["maximum",{"_index":509,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["md",{"_index":450,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["mean",{"_index":2432,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":2455,"title":{},"body":{"license.html":{}}}],["meant",{"_index":1888,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechan",{"_index":2480,"title":{},"body":{"license.html":{}}}],["medium",{"_index":455,"title":{},"body":{"components/AlarmComponent.html":{},"components/LegendComponent.html":{}}}],["medium.svg",{"_index":2183,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["mention",{"_index":294,"title":{},"body":{"components/AckComponent.html":{}}}],["menu",{"_index":1237,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":199,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["min",{"_index":1763,"title":{},"body":{"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{}}}],["mini",{"_index":1804,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["minim",{"_index":2431,"title":{},"body":{"license.html":{}}}],["minut",{"_index":1983,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["miscellan",{"_index":2338,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["miss",{"_index":243,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{}}}],["missedack",{"_index":200,"title":{},"body":{"components/AckComponent.html":{}}}],["mockalarm",{"_index":2285,"title":{},"body":{"coverage.html":{}}}],["mockalarmdata",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["mockiasio",{"_index":2296,"title":{},"body":{"coverage.html":{}}}],["mockimageset",{"_index":2289,"title":{},"body":{"coverage.html":{}}}],["mockimagesset",{"_index":2299,"title":{},"body":{"coverage.html":{}}}],["mockimageunreliableset",{"_index":2290,"title":{},"body":{"coverage.html":{}}}],["mockweatherstationsconfig",{"_index":2300,"title":{},"body":{"coverage.html":{}}}],["mockweathersummaryconfig",{"_index":2301,"title":{},"body":{"coverage.html":{}}}],["modal",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":2342,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["model",{"_index":471,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"modules/DataModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["modif",{"_index":2444,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":588,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"license.html":{}}}],["modul",{"_index":383,"title":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["monitor",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{}}}],["more",{"_index":1840,"title":{},"body":{"components/OverviewComponent.html":{},"index.html":{}}}],["mountain",{"_index":1820,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["mouseev",{"_index":87,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["multipl",{"_index":606,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["name",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["nav",{"_index":1200,"title":{},"body":{"components/AppComponent.html":{}}}],["navig",{"_index":257,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["navigationsidenavitem",{"_index":1181,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem",{"_index":1206,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem.count",{"_index":1270,"title":{},"body":{"components/AppComponent.html":{}}}],["navitemcount",{"_index":1269,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":2227,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["nearbi",{"_index":2197,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["necessari",{"_index":2486,"title":{},"body":{"license.html":{}}}],["need",{"_index":967,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["nest",{"_index":585,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":593,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["new",{"_index":312,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["newlength",{"_index":903,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["next",{"_index":1357,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["nexturl",{"_index":1365,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["ng",{"_index":2316,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngmodul",{"_index":400,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchang",{"_index":610,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ngondestroy",{"_index":209,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ngoninit",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":307,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":413,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservic",{"_index":220,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["noalarmstoack",{"_index":345,"title":{},"body":{"components/AckComponent.html":{}}}],["node",{"_index":553,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":673,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":637,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":670,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":635,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":2366,"title":{},"body":{"index.html":{}}}],["non",{"_index":931,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["none",{"_index":725,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["nonzero",{"_index":1207,"title":{},"body":{"components/AppComponent.html":{}}}],["normal",{"_index":600,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["noselecteddescendants(nod",{"_index":701,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":1852,"title":{},"body":{"modules/OverviewModule.html":{},"index.html":{}}}],["noth",{"_index":1110,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["notic",{"_index":2467,"title":{},"body":{"license.html":{}}}],["notif",{"_index":776,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["notifi",{"_index":1112,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["npm",{"_index":2367,"title":{},"body":{"index.html":{}}}],["null",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["number",{"_index":242,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"license.html":{}}}],["number(this.iasconfiguration['broadcastr",{"_index":1515,"title":{},"body":{"injectables/CdbService.html":{}}}],["number(this.iasconfiguration['broadcastthreshold",{"_index":1518,"title":{},"body":{"injectables/CdbService.html":{}}}],["numer",{"_index":2460,"title":{},"body":{"license.html":{}}}],["obj",{"_index":881,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["object",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["object.assign(thi",{"_index":485,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["object.entries(respons",{"_index":353,"title":{},"body":{"components/AckComponent.html":{}}}],["object.keys(countbyview",{"_index":1272,"title":{},"body":{"components/AppComponent.html":{}}}],["observ",{"_index":571,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["observableforkjoin",{"_index":1506,"title":{},"body":{"injectables/CdbService.html":{}}}],["obtain",{"_index":945,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["occur",{"_index":1583,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["of(fals",{"_index":1438,"title":{},"body":{"injectables/AuthService.html":{}}}],["ofobserv",{"_index":570,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":639,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ogin",{"_index":1714,"title":{},"body":{"components/LoginComponent.html":{}}}],["old",{"_index":855,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm",{"_index":899,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.ack",{"_index":902,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.valu",{"_index":901,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_ack",{"_index":896,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_valu",{"_index":895,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["on",{"_index":2131,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["onc",{"_index":929,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["onchang",{"_index":561,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["onclick",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(alarmconfig",{"_index":1129,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["onclick(ev",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(stationconfig",{"_index":2201,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["onclos",{"_index":210,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["ondestroy",{"_index":192,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["onhov",{"_index":2067,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["open",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["open/clos",{"_index":1924,"title":{},"body":{"injectables/SidenavService.html":{}}}],["opensnackbar",{"_index":2188,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["opensnackbar(messag",{"_index":2203,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["oper",{"_index":1558,"title":{},"body":{"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":470,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.unknown",{"_index":521,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["opt_ci",{"_index":1038,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["opt_cx",{"_index":1037,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["option",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["optionalalarmnam",{"_index":497,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["order",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"guards/AuthLoginGuard.html":{},"components/ShelveButtonComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["origin",{"_index":1811,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["otherwis",{"_index":2425,"title":{},"body":{"license.html":{}}}],["out",{"_index":398,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1196,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["output",{"_index":560,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MapComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["over",{"_index":1399,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonsComponent.html":{}}}],["overview",{"_index":156,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":159,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.html",{"_index":1843,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":1842,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.svg",{"_index":1255,"title":{},"body":{"components/AppComponent.html":{}}}],["overview/overview.compon",{"_index":1853,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.modul",{"_index":1307,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.compon",{"_index":1324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["overviewcardcompon",{"_index":155,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":158,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodul",{"_index":1293,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["packag",{"_index":2307,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1120,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["pad_nam",{"_index":2217,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["pads[pad_nam",{"_index":2218,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["padsstatu",{"_index":2114,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["padsstatusavail",{"_index":2115,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["page",{"_index":786,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"components/WikiButtonComponent.html":{}}}],["panel",{"_index":1908,"title":{},"body":{"injectables/SidenavService.html":{}}}],["panelclass",{"_index":2226,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panelclick",{"_index":2189,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["param",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["paramet",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["parammap",{"_index":318,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parammap.get('alarmid",{"_index":320,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["parent",{"_index":580,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["part",{"_index":694,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":2429,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1218,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"license.html":{}}}],["password",{"_index":1409,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["path",{"_index":837,"title":{},"body":{"classes/AlarmSounds.html":{},"modules/AppRoutingModule.html":{},"injectables/MapService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pathmatch",{"_index":1336,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathsgroup",{"_index":1758,"title":{},"body":{"injectables/MapService.html":{}}}],["pathstr",{"_index":2103,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["payload",{"_index":819,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["payload.data",{"_index":824,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pend",{"_index":446,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["perform",{"_index":191,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"license.html":{}}}],["period",{"_index":937,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["perman",{"_index":2510,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":369,"title":{},"body":{"components/AckComponent.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["permit",{"_index":1359,"title":{},"body":{"guards/AuthLoginGuard.html":{},"license.html":{}}}],["persist",{"_index":365,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["pipe",{"_index":1442,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(map((respons",{"_index":1454,"title":{},"body":{"injectables/AuthService.html":{}}}],["pk",{"_index":1659,"title":{},"body":{"classes/Iasio.html":{}}}],["place",{"_index":2489,"title":{},"body":{"license.html":{}}}],["placemark",{"_index":957,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"injectables/MapService.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["placemarksgroup",{"_index":1764,"title":{},"body":{"injectables/MapService.html":{}}}],["play",{"_index":789,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["playalarmsound(alarm",{"_index":912,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pleas",{"_index":361,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["point",{"_index":1637,"title":{},"body":{"classes/Iasio.html":{}}}],["popper.j",{"_index":2332,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":2434,"title":{},"body":{"license.html":{}}}],["posit",{"_index":1030,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["possibl",{"_index":2341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":1560,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":1573,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["presenc",{"_index":1202,"title":{},"body":{"components/AppComponent.html":{}}}],["present",{"_index":2481,"title":{},"body":{"license.html":{}}}],["previou",{"_index":1421,"title":{},"body":{"injectables/AuthService.html":{}}}],["primari",{"_index":178,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["prioriti",{"_index":1684,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["priority_0",{"_index":1670,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_1",{"_index":1671,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_2",{"_index":1672,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_3",{"_index":1673,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_4",{"_index":1674,"title":{},"body":{"components/LegendComponent.html":{}}}],["privat",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":364,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["process",{"_index":1581,"title":{},"body":{"injectables/HttpClientService.html":{},"components/StatusViewComponent.html":{}}}],["prod",{"_index":2384,"title":{},"body":{"index.html":{}}}],["produc",{"_index":2428,"title":{},"body":{"license.html":{}}}],["product",{"_index":2385,"title":{},"body":{"index.html":{}}}],["proess",{"_index":1579,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["program",{"_index":2438,"title":{},"body":{"license.html":{}}}],["project",{"_index":2350,"title":{},"body":{"index.html":{}}}],["promin",{"_index":2466,"title":{},"body":{"license.html":{}}}],["promis",{"_index":1572,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":1585,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["properli",{"_index":2484,"title":{},"body":{"license.html":{}}}],["properti",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["protractor",{"_index":2392,"title":{},"body":{"index.html":{}}}],["provid",{"_index":229,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/LoginComponent.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":969,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["proxi",{"_index":2504,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":2508,"title":{},"body":{"license.html":{}}}],["public",{"_index":32,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":2495,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":423,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":1956,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1561,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["put(url",{"_index":1575,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["r",{"_index":1025,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["radiu",{"_index":1040,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["rais",{"_index":1793,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["rate",{"_index":1494,"title":{},"body":{"injectables/CdbService.html":{}}}],["re",{"_index":1512,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":412,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":626,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{}}}],["read_url",{"_index":1562,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["read_url(url",{"_index":1577,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["readalarmmessage(act",{"_index":883,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readalarmmessageslist(alarmslist",{"_index":889,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readcountbyviewmessage(countbyview",{"_index":891,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readm",{"_index":2395,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":769,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"license.html":{}}}],["recombin",{"_index":2477,"title":{},"body":{"license.html":{}}}],["record",{"_index":677,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":597,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":1053,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["redirect",{"_index":1136,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirectto",{"_index":1335,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":1381,"title":{},"body":{"injectables/AuthService.html":{}}}],["refer",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["refresh",{"_index":787,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["registri",{"_index":1192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["registry['shelved_at",{"_index":2022,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["registry['timeout']).viewvalu",{"_index":2024,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["relat",{"_index":472,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["releas",{"_index":2358,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":1962,"title":{},"body":{"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":2478,"title":{},"body":{"license.html":{}}}],["reload",{"_index":211,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["remain",{"_index":374,"title":{},"body":{"components/AckComponent.html":{},"license.html":{}}}],["removeallowedact",{"_index":1387,"title":{},"body":{"injectables/AuthService.html":{}}}],["removetoken",{"_index":1388,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeus",{"_index":1389,"title":{},"body":{"injectables/AuthService.html":{}}}],["repeat",{"_index":913,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["repeatedli",{"_index":932,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["replac",{"_index":1420,"title":{},"body":{"injectables/AuthService.html":{}}}],["repres",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["reproduc",{"_index":911,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["request",{"_index":227,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["requestshelveinfo",{"_index":2018,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatu",{"_index":201,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requeststatusli",{"_index":297,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["requestuserslist",{"_index":2038,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["requir",{"_index":376,"title":{},"body":{"components/AckComponent.html":{},"modules/IasMaterialModule.html":{},"index.html":{},"license.html":{}}}],["reset",{"_index":397,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resetcountbyview",{"_index":893,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["resettim",{"_index":947,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["respect",{"_index":1953,"title":{},"body":{"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["respons",{"_index":237,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["response.push(pads[pad_nam",{"_index":2219,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response.sort",{"_index":2220,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response['allowed_act",{"_index":1446,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['antenna",{"_index":996,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["response['devic",{"_index":998,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["response['statu",{"_index":868,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["response['token",{"_index":1455,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['user_data",{"_index":1445,"title":{},"body":{"injectables/AuthService.html":{}}}],["response[0",{"_index":2021,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["restrict",{"_index":2471,"title":{},"body":{"license.html":{}}}],["result",{"_index":188,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["result.push('blu",{"_index":516,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('gray",{"_index":523,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('green",{"_index":519,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('r",{"_index":530,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('unreli",{"_index":517,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('yellow",{"_index":527,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["retriev",{"_index":976,"title":{},"body":{"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["retrun",{"_index":742,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["retun",{"_index":632,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":1734,"title":{},"body":{"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":2472,"title":{},"body":{"license.html":{}}}],["revis",{"_index":2494,"title":{},"body":{"license.html":{}}}],["right",{"_index":1225,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":970,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":142,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":217,"title":{"routes.html":{}},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["routermodul",{"_index":1318,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":1343,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1355,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["routing.modul",{"_index":1304,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":1317,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.servic",{"_index":1319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":1303,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing/routing.servic",{"_index":1170,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{}}}],["routing/routing.service.t",{"_index":1855,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["routing/routing.service.ts:20",{"_index":1877,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:28",{"_index":1870,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:35",{"_index":1875,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:43",{"_index":1869,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:51",{"_index":1873,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:58",{"_index":1867,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:65",{"_index":1871,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:8",{"_index":1866,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routingservic",{"_index":1135,"title":{"injectables/RoutingService.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppRoutingModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":2374,"title":{},"body":{"index.html":{},"license.html":{}}}],["rxj",{"_index":573,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"dependencies.html":{}}}],["rxjs/observable/intervalobserv",{"_index":749,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["rxjs/oper",{"_index":747,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{}}}],["rxjs/rx",{"_index":1507,"title":{},"body":{"injectables/CdbService.html":{}}}],["s",{"_index":356,"title":{},"body":{"components/AckComponent.html":{}}}],["s_low.svg",{"_index":1011,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["same",{"_index":592,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["sandbox",{"_index":1342,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MaterialSandboxComponent.html":{}}}],["sandbox'},{'nam",{"_index":154,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox.compon",{"_index":1323,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sandbox.component.html",{"_index":1774,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.scss",{"_index":1773,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.t",{"_index":1770,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sandbox.component.ts:12",{"_index":1775,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox.component.ts:22",{"_index":1776,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sandbox/materi",{"_index":1322,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["sanit",{"_index":1250,"title":{},"body":{"components/AppComponent.html":{}}}],["save",{"_index":1362,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["scaffold",{"_index":2379,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1761,"title":{},"body":{"injectables/MapService.html":{}}}],["second",{"_index":1496,"title":{},"body":{"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["secondari",{"_index":1799,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["section",{"_index":2440,"title":{},"body":{"license.html":{}}}],["select",{"_index":275,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialSandboxComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["select/deselect",{"_index":704,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":713,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":581,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selectedantenna",{"_index":1060,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["selecteddescend",{"_index":696,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedst",{"_index":2060,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["selectionmodel",{"_index":563,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":605,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["send",{"_index":226,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{}}}],["sent",{"_index":298,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["separ",{"_index":1164,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serv",{"_index":2375,"title":{},"body":{"index.html":{}}}],["server",{"_index":1411,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{},"index.html":{}}}],["servic",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set",{"_index":439,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set_crit",{"_index":478,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_high",{"_index":477,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_invalid",{"_index":1675,"title":{},"body":{"components/LegendComponent.html":{}}}],["set_low",{"_index":475,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_medium",{"_index":476,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["set_valid",{"_index":1676,"title":{},"body":{"components/LegendComponent.html":{}}}],["seterrormessag",{"_index":1703,"title":{},"body":{"components/LoginComponent.html":{}}}],["seterrormessage(error",{"_index":1708,"title":{},"body":{"components/LoginComponent.html":{}}}],["setsidenav",{"_index":1913,"title":{},"body":{"injectables/SidenavService.html":{}}}],["setsidenav(sidenav",{"_index":1921,"title":{},"body":{"injectables/SidenavService.html":{}}}],["shall",{"_index":2507,"title":{},"body":{"license.html":{}}}],["share",{"_index":1824,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.compon",{"_index":410,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppRoutingModule.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.modul",{"_index":418,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["shared/statu",{"_index":1972,"title":{},"body":{"modules/TabularModule.html":{}}}],["sharedmodul",{"_index":395,"title":{"modules/SharedModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":447,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["shelv",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve'},{'nam",{"_index":162,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve.component.html",{"_index":1979,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve.component.scss",{"_index":1980,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve/:alarmid",{"_index":1341,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shelve/shelve.compon",{"_index":404,"title":{},"body":{"modules/ActionsModule.html":{}}}],["shelve/unshelv",{"_index":1898,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvealarm(alarm_id",{"_index":866,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shelvebuttoncompon",{"_index":160,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelvecompon",{"_index":161,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":254,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvedatmessag",{"_index":1996,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelveregistri",{"_index":861,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shiba",{"_index":1805,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["shleve/unshelv",{"_index":1874,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["short",{"_index":1649,"title":{},"body":{"classes/Iasio.html":{}}}],["short_desc",{"_index":1641,"title":{},"body":{"classes/Iasio.html":{}}}],["shorten",{"_index":508,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["shouldreload",{"_index":1911,"title":{},"body":{"injectables/SidenavService.html":{}}}],["show",{"_index":267,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["showactionbadg",{"_index":435,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["showaspendingack",{"_index":431,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showasshelv",{"_index":432,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showspinn",{"_index":212,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shuttedown",{"_index":2343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["side",{"_index":2490,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":258,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":138,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sidebar.compon",{"_index":1080,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["sidebar.component.html",{"_index":1100,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1099,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.t",{"_index":1098,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:107",{"_index":2202,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:121",{"_index":2204,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:18",{"_index":1111,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":2235,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:21",{"_index":1109,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":2234,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":2192,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:30",{"_index":1134,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1133,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:34",{"_index":2208,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":2206,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:37",{"_index":2207,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":1127,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:44",{"_index":2200,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:47",{"_index":1114,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:52",{"_index":2236,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:53",{"_index":2194,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:56",{"_index":1116,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:64",{"_index":1121,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:72",{"_index":1122,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:79",{"_index":1131,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:89",{"_index":1125,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:90",{"_index":2195,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:97",{"_index":1130,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:99",{"_index":2199,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar/antenna",{"_index":1079,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/weath",{"_index":2086,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidenav",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenav.servic",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenavservic",{"_index":33,"title":{"injectables/SidenavService.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"overview.html":{}}}],["sidenv",{"_index":1907,"title":{},"body":{"injectables/SidenavService.html":{}}}],["similar",{"_index":2496,"title":{},"body":{"license.html":{}}}],["singl",{"_index":2491,"title":{},"body":{"license.html":{}}}],["six",{"_index":1810,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["size",{"_index":436,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/MapService.html":{}}}],["sizeopt",{"_index":426,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["slider",{"_index":1800,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["sm",{"_index":466,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["small",{"_index":1815,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["smallest",{"_index":1809,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["snackbar",{"_index":2186,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sned",{"_index":1397,"title":{},"body":{"injectables/AuthService.html":{}}}],["softwar",{"_index":2405,"title":{},"body":{"license.html":{}}}],["sound",{"_index":721,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["soundingalarm",{"_index":791,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1163,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["special",{"_index":1158,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specif",{"_index":1841,"title":{},"body":{"components/OverviewComponent.html":{}}}],["specifi",{"_index":378,"title":{},"body":{"components/AckComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["speed",{"_index":2154,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["spinner",{"_index":231,"title":{},"body":{"components/AckComponent.html":{},"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":219,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["spirit",{"_index":2497,"title":{},"body":{"license.html":{}}}],["spitz",{"_index":1813,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["src/.../alarm.t",{"_index":2340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/actions/ack",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.t",{"_index":190,"title":{},"body":{"components/AckComponent.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.ts:115",{"_index":259,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:122",{"_index":264,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:131",{"_index":263,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:139",{"_index":236,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:166",{"_index":266,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:175",{"_index":252,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:184",{"_index":272,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:192",{"_index":238,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:202",{"_index":241,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:226",{"_index":245,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:24",{"_index":283,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:248",{"_index":250,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:29",{"_index":281,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:34",{"_index":288,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:39",{"_index":292,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:44",{"_index":303,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:49",{"_index":304,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:54",{"_index":285,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:59",{"_index":280,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:64",{"_index":293,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:72",{"_index":223,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:88",{"_index":302,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/ack/ack.component.ts:97",{"_index":261,"title":{},"body":{"components/AckComponent.html":{}}}],["src/app/actions/actions.module.t",{"_index":399,"title":{},"body":{"modules/ActionsModule.html":{}}}],["src/app/actions/buttons/buttons.component.t",{"_index":1476,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/actions/buttons/buttons.component.ts:18",{"_index":1481,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/buttons/buttons.component.ts:28",{"_index":1482,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/shelv",{"_index":1895,"title":{},"body":{"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.t",{"_index":1975,"title":{},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.t",{"_index":1906,"title":{},"body":{"injectables/SidenavService.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts:18",{"_index":1926,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:23",{"_index":1915,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:33",{"_index":1927,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:36",{"_index":1925,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:42",{"_index":1922,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:49",{"_index":1920,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:56",{"_index":1916,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:63",{"_index":1917,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:71",{"_index":1923,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:79",{"_index":1918,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:87",{"_index":1919,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/wiki",{"_index":2247,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antenna",{"_index":1016,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.module.t",{"_index":1075,"title":{},"body":{"modules/AntennasModule.html":{}}}],["src/app/antennas/antennas.service.t",{"_index":955,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.service.ts:107",{"_index":1091,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:15",{"_index":960,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:18",{"_index":961,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:21",{"_index":958,"title":{},"body":{"classes/AntennaConfig.html":{}}}],["src/app/antennas/antennas.service.ts:34",{"_index":1094,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:37",{"_index":1097,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:40",{"_index":1095,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:43",{"_index":1096,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:46",{"_index":1092,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:49",{"_index":1093,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:52",{"_index":1087,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:66",{"_index":1089,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:77",{"_index":1090,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:99",{"_index":1088,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas/antennas.component.t",{"_index":1054,"title":{},"body":{"components/AntennasComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:16",{"_index":1062,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:26",{"_index":1063,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:32",{"_index":1065,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/app",{"_index":1316,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/app.component.t",{"_index":1174,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:117",{"_index":1217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:138",{"_index":1195,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:150",{"_index":1219,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:160",{"_index":1214,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:168",{"_index":1216,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:181",{"_index":1199,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:210",{"_index":1212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":1224,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":1241,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":1229,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":1236,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":1189,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":1227,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":1228,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:84",{"_index":1242,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:85",{"_index":1226,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":1239,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":1296,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":1346,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["src/app/auth/auth.module.t",{"_index":1376,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.t",{"_index":1378,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:102",{"_index":1410,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:124",{"_index":1413,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:134",{"_index":1405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:147",{"_index":1406,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:160",{"_index":1398,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:172",{"_index":1416,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:179",{"_index":1417,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:186",{"_index":1414,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:194",{"_index":1423,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:203",{"_index":1425,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:21",{"_index":1428,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:212",{"_index":1419,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:27",{"_index":1426,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:32",{"_index":1394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:46",{"_index":1396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:55",{"_index":1402,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:72",{"_index":1407,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.t",{"_index":1699,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:102",{"_index":1706,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:112",{"_index":1709,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:20",{"_index":1716,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:25",{"_index":1715,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:30",{"_index":1719,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:35",{"_index":1717,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:41",{"_index":1704,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:53",{"_index":1713,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:54",{"_index":1718,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":1707,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:75",{"_index":1705,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/data/alarm.service.t",{"_index":719,"title":{},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.ts:20",{"_index":731,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:23",{"_index":733,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:26",{"_index":735,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:29",{"_index":737,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:32",{"_index":739,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:39",{"_index":741,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.t",{"_index":2278,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/cdb.service.t",{"_index":1483,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:18",{"_index":1504,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:23",{"_index":1502,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:28",{"_index":1491,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:42",{"_index":1500,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:53",{"_index":1499,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:61",{"_index":1492,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:75",{"_index":1497,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.t",{"_index":1522,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/http",{"_index":1554,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.t",{"_index":1636,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":1648,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":1645,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":1644,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":1654,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":1651,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":1647,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/user.service.t",{"_index":2035,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/data/user.service.ts:26",{"_index":2040,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/data/user.service.ts:40",{"_index":2041,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/health/health",{"_index":1533,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.t",{"_index":1531,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ia",{"_index":1592,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/map/fixtures.t",{"_index":2280,"title":{},"body":{"coverage.html":{}}}],["src/app/map/map.module.t",{"_index":1747,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/map/map.service.t",{"_index":1750,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/map/map.service.ts:19",{"_index":1755,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:44",{"_index":1760,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:7",{"_index":1753,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map/map.component.t",{"_index":1733,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map/map.component.ts:16",{"_index":1740,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:21",{"_index":1739,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:31",{"_index":1741,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/materi",{"_index":1769,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview",{"_index":1831,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.t",{"_index":1850,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.t",{"_index":1839,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":1844,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":1845,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.t",{"_index":2281,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/alarm",{"_index":488,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.t",{"_index":420,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:108",{"_index":453,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:116",{"_index":456,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:12",{"_index":546,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:149",{"_index":458,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:15",{"_index":547,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:18",{"_index":545,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:188",{"_index":460,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:196",{"_index":462,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:204",{"_index":464,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:21",{"_index":544,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:24",{"_index":548,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:27",{"_index":543,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:30",{"_index":541,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:56",{"_index":438,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:61",{"_index":452,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:66",{"_index":441,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:71",{"_index":444,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:77",{"_index":449,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:82",{"_index":451,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:87",{"_index":437,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:9",{"_index":542,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:97",{"_index":461,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/fixtures.t",{"_index":2288,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/shared.module.t",{"_index":1887,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/statu",{"_index":1938,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.t",{"_index":1665,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:15",{"_index":1682,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:18",{"_index":1680,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:21",{"_index":1698,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:24",{"_index":1683,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:27",{"_index":1697,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:30",{"_index":1696,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:33",{"_index":1686,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:36",{"_index":1688,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:39",{"_index":1691,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:42",{"_index":1693,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:45",{"_index":1677,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:51",{"_index":1678,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/tabular",{"_index":2291,"title":{},"body":{"coverage.html":{}}}],["src/app/tabular/tabular.module.t",{"_index":1970,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/test_fixtures.t",{"_index":2297,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weath",{"_index":2042,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":2080,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/weather/weather.service.t",{"_index":2109,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["src/app/weather/weather.service.ts:102",{"_index":2132,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:115",{"_index":2127,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:125",{"_index":2129,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:134",{"_index":2135,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:146",{"_index":2136,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:158",{"_index":2133,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:16",{"_index":2230,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:19",{"_index":2229,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:22",{"_index":2231,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:25",{"_index":2232,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:28",{"_index":2233,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:31",{"_index":2228,"title":{},"body":{"classes/WeatherStationConfig.html":{}}}],["src/app/weather/weather.service.ts:50",{"_index":2137,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:53",{"_index":2145,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:56",{"_index":2152,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:59",{"_index":2140,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:62",{"_index":2139,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:65",{"_index":2147,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:68",{"_index":2155,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:71",{"_index":2141,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:74",{"_index":2151,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:77",{"_index":2150,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:80",{"_index":2149,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:83",{"_index":2142,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:86",{"_index":2144,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:89",{"_index":2126,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather/weather.component.t",{"_index":2055,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather/weather.component.ts:16",{"_index":2062,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:27",{"_index":2065,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:33",{"_index":2064,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.docker.t",{"_index":2303,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":2304,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.t",{"_index":2305,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":806,"title":{"index.html":{},"license.html":{}},"body":{"classes/AlarmSounds.html":{}}}],["startup",{"_index":608,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":443,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["state.url",{"_index":1367,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["statement",{"_index":2257,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":724,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{}}}],["station",{"_index":183,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["stationconfig",{"_index":2046,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["stationconfig.group",{"_index":2215,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["stationconfig.placemark",{"_index":2222,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["statu",{"_index":164,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":473,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/StatusViewComponent.html":{}}}],["statusviewcompon",{"_index":163,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":2453,"title":{},"body":{"license.html":{}}}],["stop",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{}}}],["storag",{"_index":1401,"title":{},"body":{"injectables/AuthService.html":{}}}],["storageitem",{"_index":2282,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":296,"title":{},"body":{"components/AckComponent.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"index.html":{}}}],["storeallowedact",{"_index":1390,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeallowedactions(allowed_act",{"_index":1418,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken",{"_index":1391,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken(token",{"_index":1422,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeus",{"_index":1392,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeuser(us",{"_index":1424,"title":{},"body":{"injectables/AuthService.html":{}}}],["stream",{"_index":756,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{},"coverage.html":{}}}],["streamnam",{"_index":820,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["string",{"_index":249,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["string(count",{"_index":1276,"title":{},"body":{"components/AppComponent.html":{}}}],["structur",{"_index":664,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["style",{"_index":454,"title":{},"body":{"components/AlarmComponent.html":{}}}],["styleurl",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":665,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subclass",{"_index":2426,"title":{},"body":{"license.html":{}}}],["subcompon",{"_index":1477,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["subscrib",{"_index":1541,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["subscriptionlik",{"_index":962,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["subsubtre",{"_index":661,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subsystem",{"_index":1834,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subtre",{"_index":596,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtree[childid",{"_index":663,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["succesful",{"_index":1364,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["succesfulli",{"_index":359,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["success",{"_index":1412,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["successfulli",{"_index":300,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["such",{"_index":2457,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":2368,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":2476,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1151,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summari",{"_index":981,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'nam",{"_index":140,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.compon",{"_index":1085,"title":{},"body":{"modules/AntennasModule.html":{},"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.html",{"_index":1153,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.scss",{"_index":1152,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.t",{"_index":1150,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:106",{"_index":1539,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:17",{"_index":1157,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:21",{"_index":1542,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:24",{"_index":1543,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:27",{"_index":1168,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:34",{"_index":2243,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:35",{"_index":1166,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":2241,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:43",{"_index":1169,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:44",{"_index":1540,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:52",{"_index":1160,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:59",{"_index":1167,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:74",{"_index":1538,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary/antenna",{"_index":1084,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["summary/health",{"_index":1532,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weath",{"_index":2083,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary_url",{"_index":999,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["supplement",{"_index":2415,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":2446,"title":{},"body":{"license.html":{}}}],["support",{"_index":2511,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2101,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"modules.html":{}}}],["svgicon",{"_index":1231,"title":{},"body":{"components/AppComponent.html":{}}}],["svgpath",{"_index":1757,"title":{},"body":{"injectables/MapService.html":{}}}],["system",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["t.valu",{"_index":2011,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["tabl",{"_index":492,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"modules/TabularModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["table.svg",{"_index":1258,"title":{},"body":{"components/AppComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":2306,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":1864,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":1876,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":167,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":1339,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular",{"_index":1326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular.modul",{"_index":1308,"title":{},"body":{"modules/AppModule.html":{}}}],["tabularmodul",{"_index":1294,"title":{"modules/TabularModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcompon",{"_index":166,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":1950,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["taken",{"_index":379,"title":{},"body":{"components/AckComponent.html":{},"license.html":{}}}],["tap",{"_index":1431,"title":{},"body":{"injectables/AuthService.html":{}}}],["target",{"_index":857,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["temp",{"_index":2175,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["temperatur",{"_index":2146,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["tempimageset",{"_index":2116,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["tempimageunreliableset",{"_index":2117,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":2463,"title":{},"body":{"license.html":{}}}],["term",{"_index":2413,"title":{},"body":{"license.html":{}}}],["terrain",{"_index":1821,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["test",{"_index":2387,"title":{},"body":{"index.html":{}}}],["text",{"_index":246,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AppComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["this._getsubtree(childalarm",{"_index":662,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._getsubtree(this.selectedalarm",{"_index":651,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._initi",{"_index":988,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.acklist",{"_index":711,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":714,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acknowledgedalarm",{"_index":334,"title":{},"body":{"components/AckComponent.html":{}}}],["this.actionssidenavservice.canclos",{"_index":1265,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.clos",{"_index":1261,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.setsidenav(this.actionssidenav",{"_index":1260,"title":{},"body":{"components/AppComponent.html":{}}}],["this.add_or_update_alarm(alarm",{"_index":885,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarm",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.ack",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.core_id",{"_index":360,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmHeaderComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.mod",{"_index":520,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.shelv",{"_index":518,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.showasmainten",{"_index":522,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valid",{"_index":532,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.valu",{"_index":524,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm_id",{"_index":319,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmchangestream.next(ani",{"_index":805,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmiconspriorityset",{"_index":1965,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsset",{"_index":1963,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsunreliableset",{"_index":1964,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmid",{"_index":1547,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmnamemaxs",{"_index":537,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.alarmsarray",{"_index":936,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray.push(alarm",{"_index":904,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[alarm.core_id",{"_index":900,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[core_id",{"_index":848,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmservice.acknowledgealarm",{"_index":330,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.get(alarm_id",{"_index":1138,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["this.alarmservice.get(childid",{"_index":658,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":325,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(this.alarmid",{"_index":1545,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.antennasservice.antennassummaryconfig",{"_index":1171,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.alarmservice.get(this.stationconfig.st",{"_index":2054,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.alarmservice.get(this.weatherservice.weathersummaryconfig[keyword",{"_index":2245,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.getmissingacks(this.alarm.core_id).subscrib",{"_index":351,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmservice.getshelveregistries(this.alarm_id",{"_index":2019,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.initi",{"_index":1259,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.shelvealarm",{"_index":2029,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":2033,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmsindex",{"_index":898,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsindexes[alarm.core_id",{"_index":905,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmstoack",{"_index":331,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoack.length",{"_index":346,"title":{},"body":{"components/AckComponent.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":715,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.antennaclicked.emit(this.selectedantenna",{"_index":1143,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennaimageset",{"_index":1008,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennaimageunreliableset",{"_index":1015,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasconfig",{"_index":995,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasmapnam",{"_index":1005,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.antennasservice.antennasconfig",{"_index":1141,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.devicesconfig",{"_index":1142,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.initi",{"_index":1137,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["this.antennassummaryconfig",{"_index":1002,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.audio",{"_index":812,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.addeventlistener('end",{"_index":922,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.load",{"_index":925,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.paus",{"_index":916,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.play",{"_index":926,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.src",{"_index":920,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.getallowedactions()['can_ack",{"_index":349,"title":{},"body":{"components/AckComponent.html":{}}}],["this.authservice.getallowedactions()['can_shelv",{"_index":2004,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.getallowedactions()['can_unshelv",{"_index":2006,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.gettoken",{"_index":840,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["this.authservice.getus",{"_index":368,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.authservice.hasvalidtoken().pipe(map((respons",{"_index":1369,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.authservice.login",{"_index":1723,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginstatu",{"_index":809,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.loginstatusstream.subscrib",{"_index":801,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["this.authservice.logout",{"_index":1268,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.redirecturl",{"_index":1370,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["this.buildfiletree(tree_data",{"_index":631,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":674,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledg",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":2028,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.cansound",{"_index":811,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.getbroadcastthreshold",{"_index":950,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.initi",{"_index":810,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms('al",{"_index":890,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms(alarm.core_id",{"_index":886,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changeloginstatus(fals",{"_index":1437,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.changeloginstatus(tru",{"_index":1449,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":709,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":700,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":693,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(descend",{"_index":698,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":707,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscribe(data",{"_index":621,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":712,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":708,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":699,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":706,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklogin(url",{"_index":1368,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.clearsoundsifack(alarm",{"_index":910,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.clipboardservice.copyfromcontent(result",{"_index":2212,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.clos",{"_index":1932,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.connect",{"_index":813,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(fals",{"_index":953,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(tru",{"_index":815,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.subscrib",{"_index":799,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustim",{"_index":948,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustimer.unsubscrib",{"_index":949,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.coord",{"_index":2104,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["this.countbyview",{"_index":892,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.currenttim",{"_index":923,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.datasourc",{"_index":619,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.datasource.data",{"_index":630,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.definealarmsandicon",{"_index":1544,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimag",{"_index":1961,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.destroy",{"_index":803,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.devicesconfig",{"_index":997,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":1253,"title":{},"body":{"components/AppComponent.html":{}}}],["this.elementref.nativeelement.children[0",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.emitsound(alarm.sound",{"_index":917,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.errormessag",{"_index":1720,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":686,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.focusmonitor.stopmonitoring(buttonref",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.form",{"_index":315,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.form.get('message').valu",{"_index":332,"title":{},"body":{"components/AckComponent.html":{}}}],["this.form.get('message').value).subscrib",{"_index":2034,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.form.valid",{"_index":329,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formbuilder.group",{"_index":316,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formgroup",{"_index":1722,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.password.valu",{"_index":1725,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.user.valu",{"_index":1724,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.get(alarm_id",{"_index":870,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.get(id",{"_index":853,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmlist",{"_index":816,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmnam",{"_index":540,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.getantennas(stationconfig",{"_index":2210,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.getchildren",{"_index":616,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().subscribe((r",{"_index":1510,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getconnectionpath",{"_index":832,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.gethttphead",{"_index":1441,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["this.getlevel",{"_index":614,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmissingacksinfo",{"_index":323,"title":{},"body":{"components/AckComponent.html":{}}}],["this.getpadsstatus(group).subscrib",{"_index":2164,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.gettoken",{"_index":1435,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettreedata",{"_index":629,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getus",{"_index":1279,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hidespinn",{"_index":335,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.http.delete(this.read_url(url",{"_index":1590,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(this.read_url(url",{"_index":1587,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(url",{"_index":1440,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.read_url(url",{"_index":1588,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(url",{"_index":1453,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(this.read_url(url",{"_index":1589,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclient.get(backendurls.weather_summary).subscribe((respons",{"_index":2170,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(backendurls.weather_view).subscribe((respons",{"_index":2168,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(summary_url).subscribe((respons",{"_index":1001,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["this.httpclient.get(url",{"_index":1006,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.httpclient.get(url).subscribe((respons",{"_index":994,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{}}}],["this.httpclientservice.get(backendurls.users_list",{"_index":2039,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":1514,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(url).pip",{"_index":860,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.post(backendurls.shelve_api",{"_index":867,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.tickets_multiple_ack",{"_index":851,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.unshelve_api",{"_index":873,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.humidityimageset",{"_index":2172,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.humidityimageunreliableset",{"_index":2178,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.iasconfigur",{"_index":1511,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(tru",{"_index":1513,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1548,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1553,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.initi",{"_index":802,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isexpand",{"_index":615,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isiniti",{"_index":808,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isnavigationcompact",{"_index":1267,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isvalidiasio(json",{"_index":1660,"title":{},"body":{"classes/Iasio.html":{}}}],["this.lastalarmid",{"_index":1935,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.loadalarmsconfig",{"_index":989,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["this.loadimag",{"_index":990,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loadpadsstatu",{"_index":2161,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loadweatherstationsconfig",{"_index":2160,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.loginstatu",{"_index":1433,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginstatusstream.next(statu",{"_index":1434,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logout",{"_index":1451,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.markerimageset",{"_index":2181,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.markerimageunreliableset",{"_index":2184,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.maticonregistri",{"_index":1251,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messag",{"_index":314,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.reset",{"_index":327,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.message.valu",{"_index":2026,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.missedack",{"_index":350,"title":{},"body":{"components/AckComponent.html":{}}}],["this.missedacks.push(text",{"_index":357,"title":{},"body":{"components/AckComponent.html":{}}}],["this.nestednodemap.get(nod",{"_index":681,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":682,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":680,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":687,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.ngonchang",{"_index":623,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.opensnackbar(messag",{"_index":2213,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.optionalalarmnam",{"_index":535,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.padsstatu",{"_index":2166,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.padsstatusavailable.next(fals",{"_index":2165,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.padsstatusavailable.next(tru",{"_index":2167,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.panelclicked.emit(this.selectedst",{"_index":2223,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.password",{"_index":1721,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.password.seterrors({'incorrect",{"_index":1731,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.play",{"_index":924,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.playalarmsound(alarm",{"_index":908,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessage(payload.act",{"_index":823,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessageslist(payload.data",{"_index":827,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readcountbyviewmessage(payload.data",{"_index":830,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.reload",{"_index":321,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.removeallowedact",{"_index":1473,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removetoken",{"_index":1458,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removeus",{"_index":1459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.requestshelveinfo",{"_index":2013,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.requeststatu",{"_index":326,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.resetcountbyview",{"_index":817,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.resettim",{"_index":822,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.route.parammap.subscrib",{"_index":317,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.router.navigate(['/login",{"_index":1372,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.router.navigate(['/tabular",{"_index":1880,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['antenna",{"_index":1881,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['weath",{"_index":1882,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate([redirect",{"_index":1727,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([{outlet",{"_index":1262,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{}}}],["this.routing.gotoantenna",{"_index":1173,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.routing.gotoweath",{"_index":2246,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1172,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.routingservice.cleanactionoutlet",{"_index":1931,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoacknowledge(alarm_id",{"_index":1934,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoshelve(alarm_id",{"_index":1937,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.selectedalarm",{"_index":2237,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedalarm.st",{"_index":2238,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedantenna",{"_index":1068,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.alarm",{"_index":1148,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.antenna",{"_index":1149,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.placemark",{"_index":1144,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedst",{"_index":2066,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["this.selectedstation.placemark",{"_index":2221,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.seterrormessage(error",{"_index":1728,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.shelv",{"_index":2017,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shelvedatmessag",{"_index":1999,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shouldreload.next(tru",{"_index":1936,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.showactionbadg",{"_index":533,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["this.showspinn",{"_index":328,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenav",{"_index":1928,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.clos",{"_index":1930,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.open",{"_index":1929,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.toggl",{"_index":1933,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenavservice.canclos",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.closeandclean",{"_index":324,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.gotoacknowledge(this.alarm.core_id",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.sidenavservice.gotoshelve(this.alarm.core_id",{"_index":1905,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.sidenavservice.open",{"_index":322,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.shouldreload.subscrib",{"_index":2000,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sizeoptions.indexof(this.s",{"_index":486,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.snackbar.open(messag",{"_index":2224,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.soundingalarm",{"_index":915,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.spinnerservice.hid",{"_index":341,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.spinnerservice.show",{"_index":340,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.stationconfig.st",{"_index":2239,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.storeallowedactions(allowed_act",{"_index":1448,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storetoken(token",{"_index":1456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(user_data['usernam",{"_index":1447,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(usernam",{"_index":1457,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tempimageset",{"_index":2174,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.tempimageunreliableset",{"_index":2179,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.text",{"_index":487,"title":{},"body":{"components/AlarmComponent.html":{}}}],["this.timeout",{"_index":1997,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.reset(this.defaulttimeout",{"_index":2014,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.valu",{"_index":2027,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.value).viewvalu",{"_index":2012,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts.find(t",{"_index":2010,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts[0].valu",{"_index":1994,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.treecontrol",{"_index":617,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":691,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":612,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.triggeralarmsnonvalidconnectionst",{"_index":800,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.unshelv",{"_index":2016,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.updateacklist",{"_index":622,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.url",{"_index":2252,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.url.startswith('http",{"_index":2251,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.us",{"_index":311,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.user.seterrors({'incorrect",{"_index":1730,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user_select",{"_index":2030,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.user_selected).subscrib",{"_index":333,"title":{},"body":{"components/AckComponent.html":{}}}],["this.userservice.requestuserslist",{"_index":1264,"title":{},"body":{"components/AppComponent.html":{}}}],["this.weathermapnam",{"_index":2162,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weatherservice.initi",{"_index":2209,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.weatherservice.padsstatu",{"_index":2214,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.padsstatus[stationconfig.group",{"_index":2216,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.weathersummaryconfig",{"_index":2244,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.weatherstationsconfig",{"_index":2169,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.weathersummaryconfig",{"_index":2171,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.websocketbridge.connect(connectionpath",{"_index":833,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.alarm",{"_index":818,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.count",{"_index":828,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.upd",{"_index":825,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.listen(connectionpath",{"_index":834,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.addeventlisten",{"_index":814,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.clos",{"_index":843,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.stream(streams.updates).send",{"_index":842,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.windsimageset",{"_index":2176,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["this.windsimageunreliableset",{"_index":2180,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["thorugh",{"_index":1857,"title":{},"body":{"injectables/RoutingService.html":{}}}],["those",{"_index":1772,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["threshold",{"_index":1498,"title":{},"body":{"injectables/CdbService.html":{}}}],["through",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["ticket",{"_index":856,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["time",{"_index":371,"title":{},"body":{"components/AckComponent.html":{},"license.html":{}}}],["timeout",{"_index":865,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["timeoutopt",{"_index":1974,"title":{"interfaces/TimeoutOption.html":{}},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["timer",{"_index":795,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timer'",{"_index":942,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timestamp",{"_index":772,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["titl",{"_index":251,"title":{},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["todo",{"_index":1249,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["togeth",{"_index":2469,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":703,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/MaterialSandboxComponent.html":{},"injectables/SidenavService.html":{}}}],["toggledefault",{"_index":1825,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["toggleshelveunshelv",{"_index":2015,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["togglesidenav",{"_index":1186,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":839,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["tooltip",{"_index":1899,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["transform",{"_index":676,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":125,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":409,"title":{},"body":{"modules/ActionsModule.html":{}}}],["tree.component.html",{"_index":578,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":579,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":550,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":716,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":717,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":557,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":558,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":556,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":408,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree/fixtures.t",{"_index":2262,"title":{},"body":{"coverage.html":{}}}],["tree_data",{"_index":628,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[this.selectedalarm.core_id",{"_index":650,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":598,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":601,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":362,"title":{},"body":{"components/AckComponent.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{}}}],["trigger",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["triggeralarmsnonvalidconnectionst",{"_index":939,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["true",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{}}}],["type",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["type1",{"_index":726,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type2",{"_index":727,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type3",{"_index":728,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type4",{"_index":729,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["typeof",{"_index":672,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unack",{"_index":1203,"title":{},"body":{"components/AppComponent.html":{}}}],["unblock",{"_index":255,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["uncombin",{"_index":2492,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":671,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["under",{"_index":938,"title":{},"body":{"classes/AlarmSounds.html":{},"index.html":{},"license.html":{}}}],["uniqu",{"_index":2037,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["unit",{"_index":2386,"title":{},"body":{"index.html":{}}}],["unkn.svg",{"_index":1551,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unknown",{"_index":479,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unknown.svg",{"_index":1013,"title":{},"body":{"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["unreli",{"_index":442,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["unselect",{"_index":1132,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialSandboxComponent.html":{}}}],["unselectantenna",{"_index":1106,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["unselecteddescend",{"_index":697,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unshelv",{"_index":248,"title":{},"body":{"components/AckComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["unshelvealarms(alarms_id",{"_index":872,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["unus",{"_index":609,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updat",{"_index":273,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AuthService.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["updateacklist",{"_index":710,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updatealarmstoack",{"_index":213,"title":{},"body":{"components/AckComponent.html":{}}}],["updatealarmstoack(ev",{"_index":271,"title":{},"body":{"components/AckComponent.html":{}}}],["updateselectedantenna",{"_index":1061,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updateselectedantenna(selectedantenna",{"_index":1064,"title":{},"body":{"components/AntennasComponent.html":{}}}],["url",{"_index":228,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WikiButtonComponent.html":{}}}],["us",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialSandboxComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":202,"title":{"interfaces/User.html":{}},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{},"coverage.html":{},"license.html":{}}}],["user'",{"_index":2482,"title":{},"body":{"license.html":{}}}],["user.servic",{"_index":1525,"title":{},"body":{"modules/DataModule.html":{}}}],["user.usernam",{"_index":377,"title":{},"body":{"components/AckComponent.html":{}}}],["user_data",{"_index":1444,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_select",{"_index":203,"title":{},"body":{"components/AckComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["usernam",{"_index":1215,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userservic",{"_index":221,"title":{"injectables/UserService.html":{}},"body":{"components/AckComponent.html":{},"components/AppComponent.html":{},"modules/DataModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalu",{"_index":1311,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":2437,"title":{},"body":{"license.html":{}}}],["v",{"_index":668,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":225,"title":{},"body":{"components/AckComponent.html":{},"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"miscellaneous/enumerations.html":{}}}],["valid.svg",{"_index":1681,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["validators.requir",{"_index":313,"title":{},"body":{"components/AckComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validform",{"_index":347,"title":{},"body":{"components/AckComponent.html":{}}}],["validity.unreli",{"_index":941,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["valu",{"_index":279,"title":{},"body":{"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.clear",{"_index":525,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.length",{"_index":355,"title":{},"body":{"components/AckComponent.html":{}}}],["value.set_crit",{"_index":531,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_high",{"_index":529,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_low",{"_index":526,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_medium",{"_index":528,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value[k",{"_index":669,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["var",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":1205,"title":{},"body":{"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["verbatim",{"_index":2411,"title":{},"body":{"license.html":{}}}],["veri",{"_index":1818,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["verifi",{"_index":1348,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["version",{"_index":2352,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":2388,"title":{},"body":{"index.html":{}}}],["view",{"_index":793,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'nam",{"_index":165,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":1328,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":1940,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.html",{"_index":1941,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.t",{"_index":1939,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:19",{"_index":1948,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:22",{"_index":1951,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:25",{"_index":1960,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:28",{"_index":1958,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:31",{"_index":1959,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:34",{"_index":1957,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:40",{"_index":1947,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:50",{"_index":1954,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:57",{"_index":1952,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view/fixtures.t",{"_index":2292,"title":{},"body":{"coverage.html":{}}}],["view/statu",{"_index":1893,"title":{},"body":{"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["view/tabular",{"_index":1327,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["viewbox",{"_index":1026,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{}}}],["viewchild",{"_index":1223,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('actionssidenav",{"_index":1248,"title":{},"body":{"components/AppComponent.html":{}}}],["viewvalu",{"_index":1977,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["visual",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["void",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["warn",{"_index":1788,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["warnbas",{"_index":1826,"title":{},"body":{"components/MaterialSandboxComponent.html":{}}}],["weather",{"_index":169,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AntennaConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather'},{'nam",{"_index":173,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather.component.html",{"_index":2059,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":2058,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.servic",{"_index":2053,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["weather.svg",{"_index":1256,"title":{},"body":{"components/AppComponent.html":{}}}],["weather/weather.compon",{"_index":2085,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.modul",{"_index":1309,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weather/weather/weather.compon",{"_index":1329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["weather_",{"_index":2182,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherbackupwsmarkercompon",{"_index":168,"title":{"components/WeatherBackupWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercompon",{"_index":172,"title":{"components/WeatherComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdatamarkercompon",{"_index":174,"title":{"components/WeatherDataMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermap",{"_index":2057,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermapcompon",{"_index":176,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermapnam",{"_index":2118,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathermodul",{"_index":1295,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"modules.html":{},"overview.html":{}}}],["weatherprimarywsconnectorcompon",{"_index":177,"title":{"components/WeatherPrimaryWsConnectorComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherprimarywsmarkercompon",{"_index":180,"title":{"components/WeatherPrimaryWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservic",{"_index":2045,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherset",{"_index":2156,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"coverage.html":{}}}],["weathersettings.mapkey",{"_index":2148,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weathersidebar",{"_index":2056,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathersidebarcompon",{"_index":181,"title":{"components/WeatherSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherst",{"_index":2157,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationconfig",{"_index":2049,"title":{"classes/WeatherStationConfig.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["weatherstationsconfig",{"_index":2119,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["weatherstationsidebarcompon",{"_index":182,"title":{"components/WeatherStationSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummarycompon",{"_index":184,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummaryconfig",{"_index":2120,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["webserv",{"_index":770,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/AntennaConfig.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["websocket",{"_index":771,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websocketbridg",{"_index":750,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websver",{"_index":2143,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["well",{"_index":1819,"title":{},"body":{"components/MaterialSandboxComponent.html":{},"license.html":{}}}],["wether",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["whatev",{"_index":2454,"title":{},"body":{"license.html":{}}}],["whether",{"_index":688,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["whevenv",{"_index":627,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["wikbuttoncompon",{"_index":1478,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["wiki",{"_index":186,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikibuttoncompon",{"_index":185,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wind",{"_index":2153,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{},"components/WeatherSummaryComponent.html":{}}}],["wind_",{"_index":2177,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["window",{"_index":2250,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["window.open(this.url",{"_index":2253,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["windsimageset",{"_index":2121,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windsimageunreliableset",{"_index":2122,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["windspe",{"_index":2159,"title":{},"body":{"injectables/WeatherService.html":{},"classes/WeatherStationConfig.html":{}}}],["without",{"_index":2442,"title":{},"body":{"license.html":{}}}],["word",{"_index":1165,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":2421,"title":{},"body":{"license.html":{}}}],["worth",{"_index":1851,"title":{},"body":{"modules/OverviewModule.html":{}}}],["write",{"_index":380,"title":{},"body":{"components/AckComponent.html":{}}}],["wrong",{"_index":1879,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":171,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["x",{"_index":1031,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["xs",{"_index":465,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["y",{"_index":1034,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["yellow",{"_index":1052,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["yum",{"_index":2369,"title":{},"body":{"index.html":{}}}],["zero",{"_index":1208,"title":{},"body":{"components/AppComponent.html":{},"components/LegendComponent.html":{}}}],["zone.j",{"_index":2336,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":396,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAcknowledge\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAcknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initializes the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Handle click on ack button, it triggers ack sidenav through the Router service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:28\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initializes the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   * @return {boolean} true if the {@link Alarm} can be acknowledged, false if not.\n   */\n  canAcknowledge() {\n    if (this.alarm != null) {\n      return !this.alarm.ack;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose || !this.canAcknowledge();\n  }\n\n  /**\n  * Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.sidenavService.goToAcknowledge(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AckComponent.html":{"url":"components/AckComponent.html","title":"component - AckComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack/ack.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to perform acknowledgement of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack\n            \n\n            \n                styleUrls\n                ack.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ack.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledgedAlarms\n                            \n                            \n                                alarm\n                            \n                            \n                                alarm_id\n                            \n                            \n                                alarmsToAck\n                            \n                            \n                                form\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                missedAcks\n                            \n                            \n                                requestStatus\n                            \n                            \n                                    Public\n                                sidenavService\n                            \n                            \n                                user\n                            \n                            \n                                user_selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledge\n                            \n                            \n                                disableAcknowledgment\n                            \n                            \n                                getMissingAcksInfo\n                            \n                            \n                                getResponseMessageText\n                            \n                            \n                                getResponseMessageTitle\n                            \n                            \n                                    Private\n                                hideSpinner\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                            \n                                reload\n                            \n                            \n                                    Private\n                                showSpinner\n                            \n                            \n                                updateAlarmsToAck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, alarmService: AlarmService, route: ActivatedRoute, sidenavService: SidenavService, spinnerService: NgxSpinnerService, userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack/ack.component.ts:72\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization of this component\n\n                                                        \n                                                \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle the sidenav where the component is opened\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle request to the users api\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to ask for the logged in user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Send the acknowledge request through the method provided by the\nAlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableAcknowledgment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableAcknowledgment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:192\n                            \n                        \n\n\n                \n                    \n                            Method to invalidate ack action\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if ack action can be performed and false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMissingAcksInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMissingAcksInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:202\n                            \n                        \n\n\n                \n                    \n                            Get the number of missed acknowledgements of the alarm and its children\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:226\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display when the shelve or unshelve action is performed\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResponseMessageTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResponseMessageTitle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:248\n                            \n                        \n\n\n                \n                    \n                            Returns the title to display when the shelve or unshelve action is performed\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the title to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hideSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:175\n                            \n                        \n\n\n                \n                    \n                            Hides the spinner after the Alarm has been shelved/unshelved\nIt also unblocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, by getting the alarm_id from the url.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reload\n                            \n                            \n                        \n                    \n                \n                \n                    \nreload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Cleans the component and reloads the Alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showSpinner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showSpinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:166\n                            \n                        \n\n\n                \n                    \n                            Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\nIt also blocks closing and navigation of the the Sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAlarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAlarmsToAck(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:184\n                            \n                        \n\n\n                \n                    \n                            Update the list of alarms to ack from the selection on the child component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                event triggered by the inner {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledgedAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        acknowledgedAlarms:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:59\n                            \n                        \n\n                \n                    \n                        List of alarms that were acknowledged by the request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:29\n                            \n                        \n\n                \n                    \n                        Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarm_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:24\n                            \n                        \n\n                \n                    \n                        Id of the Alarm object to be acknowledge/unacknowledge\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsToAck:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:54\n                            \n                        \n\n                \n                    \n                        List of alarms to ack according to selection from child component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:34\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:39\n                            \n                        \n\n                \n                    \n                        FormControl for the shelve message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            missedAcks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        missedAcks:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:64\n                            \n                        \n\n                \n                    \n                        List of messages to mention the alarms with missed acknowledgments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestStatus:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:72\n                            \n                        \n\n                \n                    \n                        Stores wether or not the action has been executed requestStatusly\nIf requestStatus = 0, the request has not been sent yet\nIf requestStatus = 1, the request was successfully\nIf requestStatus = -1, the request has failed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:88\n                            \n                        \n\n                \n                    \n                        Service to handle the sidenav where the component is opened\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:44\n                            \n                        \n\n                \n                    \n                        FormControl for the user who performs the action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user_selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user_selected:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack/ack.component.ts:49\n                            \n                        \n\n                \n                    \n                        Selected user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { UserService } from '../../data/user.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Component used to perform acknowledgement of an Alarm\n*/\n@Component({\n  selector: 'app-ack',\n  templateUrl: './ack.component.html',\n  styleUrls: ['./ack.component.scss']\n})\nexport class AckComponent implements OnInit, OnDestroy {\n\n  /**\n   * Id of the Alarm object to be acknowledge/unacknowledge\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be acknowledge/unacknowledge\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the user who performs the action\n  */\n  user: FormControl;\n\n  /**\n   * Selected user\n   */\n  user_selected: string;\n\n  /**\n  * List of alarms to ack according to selection from child component\n  */\n  alarmsToAck: string[] = [];\n\n  /**\n  * List of alarms that were acknowledged by the request\n  */\n  acknowledgedAlarms: string[] = [];\n\n  /**\n  * List of messages to mention the alarms with missed acknowledgments\n  */\n  public missedAcks: string[] = [];\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {NgxSpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {UserService} userService Service to handle request to the users api\n   * @param {AuthService} authService Service to ask for the logged in user\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private userService: UserService,\n    private authService: AuthService\n  ) { }\n\n  /**\n  * Initiates the component, by getting the alarm_id from the url.\n  */\n  ngOnInit() {\n    this.user = new FormControl('', [Validators.required]);\n    this.message = new FormControl('', [Validators.required]);\n    this.form = this.formBuilder.group({\n      user: this.user,\n      message: this.message,\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.open();\n    this.getMissingAcksInfo();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.requestStatus = 0;\n    this.message.reset();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n   * Send the acknowledge request through the method provided by the\n   * {@link AlarmService} and handle the response.\n   */\n  acknowledge(): void {\n    this.showSpinner();\n    if (this.form.valid) {\n      this.alarmService.acknowledgeAlarms(\n        this.alarmsToAck, this.form.get('message').value, this.user_selected).subscribe(\n          (response) => {\n            this.acknowledgedAlarms =  response;\n            this.requestStatus = 1;\n            this.hideSpinner();\n          },\n          (error) => {\n            if (error.status === 403) {\n              this.requestStatus = -2;\n            } else {\n              this.requestStatus = -1;\n            }\n            this.hideSpinner();\n            return error;\n          }\n        );\n    }\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n   * Update the list of alarms to ack from the selection on the child component\n   * @param {Event} event event triggered by the inner {@link AckTree}, containing the IDs fo the alarms to acknowledge\n   */\n  updateAlarmsToAck(event): void {\n    this.alarmsToAck = event;\n  }\n\n  /**\n  * Method to invalidate ack action\n  * @returns {boolean} True if ack action can be performed and false if not\n  */\n  disableAcknowledgment() {\n    const noAlarmsToAck = (this.alarmsToAck.length === 0);\n    const validForm = this.form.valid;\n    const isAllowed = this.authService.getAllowedActions()['can_ack'];\n    return (noAlarmsToAck || !validForm || !isAllowed);\n  }\n\n  /**\n  * Get the number of missed acknowledgements of the alarm and its children\n  */\n  getMissingAcksInfo(): void {\n    if (this.alarm) {\n      this.missedAcks = [];\n      this.alarmService.getMissingAcks(this.alarm.core_id).subscribe(\n        (response) => {\n          for (const [key, value] of Object.entries(response)) {\n            const count = value.length;\n            if (count > 0) {\n              let text = key + ' has ' + count + ' missed acknowledgement';\n              if (count > 1) {\n                text += 's';\n              }\n              this.missedAcks.push(text);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      response = 'The following alarms have been acknowledged succesfully:';\n\n    } else if (this.requestStatus === -1) {\n      response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been acknowledged.';\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    } else if (this.requestStatus === -2) {\n      response = 'The logged in user (' + this.authService.getUser();\n      response += ') does not have permissions to perform the acknowledgement. ';\n    }\n    return response;\n  }\n\n  /**\n   * Returns the title to display when the shelve or unshelve action is performed\n   * @returns {string} the title to display\n   */\n  getResponseMessageTitle(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      response = 'Acknowledgement results';\n\n    } else if (this.requestStatus === -1) {\n      response = 'Error acknowledging';\n    } else if (this.requestStatus === -2) {\n      response = 'Action not allowed';\n    }\n    return response;\n  }\n}\n\n    \n\n    \n        \n  \n     ALARM ACKNOWLEDGEMENT \n    \n      &times;\n    \n  \n\n  \n    \n\n      \n        \n          \n            Alarm ID\n            {{alarm?.core_id}}\n          \n          \n            Description\n            {{ alarm?.description }}\n          \n        \n      \n\n       \n      \n        \n         Not Allowed Action \n         The logged in user is not allowed to perform this action. The action button will remain disabled. \n        \n      \n\n       \n      \n        \n\n          Information required to acknowledge the Alarm\n          \n            \n              \n                {{user.username}}\n              \n            \n             You must specify an user in order to Acknowledge \n          \n          \n             Action to be taken \n            \n             You must write a message in order to Acknowledge \n          \n        \n\n        \n           Select alarms for acknowledgment \n          \n        \n\n         0\" class=\"section missed-acks\">\n           Missed acknowledgements \n          \n            \n              {{text}}\n            \n          \n        \n      \n\n      \n        \n           {{ getResponseMessageTitle() }} \n           {{ getResponseMessageText() }} \n\n           \n            \n              \n                \n                  {{ alarm }}\n                \n              \n            \n          \n      \n\n    \n  \n\n  \n     \n    \n      Close\n    \n\n    \n      Cancel\n      Acknowledge\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       ALARM ACKNOWLEDGEMENT           ×                                                Alarm ID            {{alarm?.core_id}}                                Description            {{ alarm?.description }}                                                      Not Allowed Action          The logged in user is not allowed to perform this action. The action button will remain disabled.                                              Information required to acknowledge the Alarm                                                    {{user.username}}                                       You must specify an user in order to Acknowledge                                  Action to be taken                          You must write a message in order to Acknowledge                                      Select alarms for acknowledgment                            0\" class=\"section missed-acks\">           Missed acknowledgements                                     {{text}}                                                             {{ getResponseMessageTitle() }}            {{ getResponseMessageText() }}                                                                        {{ alarm }}                                                                                 Close              Cancel      Acknowledge      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n  Modules\n  ActionsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/actions/actions.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AckButtonComponent\n                            \n                            \n                                AckComponent\n                            \n                            \n                                AckTreeComponent\n                            \n                            \n                                ButtonsComponent\n                            \n                            \n                                ShelveButtonComponent\n                            \n                            \n                                ShelveComponent\n                            \n                            \n                                WikiButtonComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     SidenavService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AckButtonComponent\n                            \n                            \n                                    AckComponent\n                            \n                            \n                                    ButtonsComponent\n                            \n                            \n                                    ShelveButtonComponent\n                            \n                            \n                                    ShelveComponent\n                            \n                            \n                                    WikiButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AckComponent } from './ack/ack.component';\nimport { ShelveComponent } from './shelve/shelve.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { AlarmComponent } from '../shared/alarm/alarm.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidenavService } from './sidenav.service';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AckComponent,\n    AckTreeComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ],\n  providers: [\n    SidenavService,\n  ],\n  exports: [\n    AckButtonComponent,\n    AckComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ]\n})\nexport class ActionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                alarm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getImage\n                            \n                            \n                                getTextClass\n                            \n                            \n                                isTextAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:87\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type :    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        Defines the size of the component, can be either of the options defined by sizeOptions\n\n                        \n                            Default value : 'md'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:82\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                    \n                        Alarm object associated to the component\n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:61\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:108\n                            \n                        \n\n\n                \n                    \n                            Returns the style class name based on the optional input size. By default\nthe class is medium size.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    style class name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    url of the image\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Returns the class to be used to display the text\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    list of css classes\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTextAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nisTextAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed as a text alarm or as an icon alarm\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:196\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the pending ack badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the pending ack must be activated, false if it must not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:204\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the shelve badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the alarm is shelved, false if it is not\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sizeOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sizeOptions:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:87\n                            \n                        \n\n                \n                    \n                        Available sizes for the alarm componet\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n    \n        \n   \n\n  \n    \n      {{this.text}}\n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               {{this.text}}                                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmHeaderComponent.html":{"url":"components/AlarmHeaderComponent.html","title":"component - AlarmHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-header/alarm-header.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as headers in a table or list\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-header\n            \n\n            \n                styleUrls\n                alarm-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                        \n                            Default value : 20\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm has pending acknowledgement, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm is shelved\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is shelved, false if not\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as headers in a table or list\n */\n@Component({\n  selector: 'app-alarm-header',\n  templateUrl: './alarm-header.component.html',\n  styleUrls: ['./alarm-header.component.scss']\n})\nexport class AlarmHeaderComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('blue');\n      result.push('unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('red');\n    } else {\n      result.push('blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('unreliable');\n    }\n    return result;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n  * @returns {boolean} true if the alarm has pending acknowledgement, false if not\n  */\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm is shelved\n  * @returns {boolean} true if the alarm is shelved, false if not\n  */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n}\n\n    \n\n    \n        \n\n    {{this.getAlarmName()}}\n\n\n  \n\n    \n    \n      \n    \n    \n      \n    \n\n    \n    \n      \n    \n    \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{this.getAlarmName()}}                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:9\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:27\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:21\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:18\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:15\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:24\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size) \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, OnChanges, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   * It is currently unused and {@link ngOnChanges} is being used instead\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n    this.ngOnChanges();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whevenver the alarm changes)\n   */\n  ngOnChanges() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeData() {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm) {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmSounds.html":{"url":"classes/AlarmSounds.html","title":"class - AlarmSounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmSounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.service.ts\n        \n\n            \n                Description\n            \n            \n                Class used to model the different sound options and their corresponding audio files\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                none\n                            \n                            \n                                    Static\n                                type1\n                            \n                            \n                                    Static\n                                type2\n                            \n                            \n                                    Static\n                                type3\n                            \n                            \n                                    Static\n                                type4\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSoundsource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            none\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        none:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:20\n                            \n                        \n\n                \n                    \n                        This is the type for alarms with no sound \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_1.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:23\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE1 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_2.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:26\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE2 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type3:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_3.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:29\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE3 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type4:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_4.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:32\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE4 \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getSoundsource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSoundsource(sound: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Given a sound type, retruns the associated audiofile\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sound\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The sound type, e.g. TYPE1, TYPE2, etc.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the filepath of the corresponding audio file\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable ,  BehaviorSubject } from 'rxjs';\nimport { IntervalObservable } from 'rxjs/observable/IntervalObservable';\nimport { WebSocketBridge } from 'django-channels';\nimport { environment } from '../../environments/environment';\nimport { Alarm, OperationalMode, Validity, Value } from '../data/alarm';\nimport { BackendUrls, Streams, Assets } from '../settings';\nimport { CdbService } from '../data/cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { AuthService } from '../auth/auth.service';\n\n\n/**\n* Class used to model the different sound options and their corresponding audio files\n*/\nexport class AlarmSounds {\n\n  /** This is the type for alarms with no sound */\n  static none = '';\n\n  /** The name of the audio file associated to the sound TYPE1 */\n  static type1 = 'Alarm_Sound_1.mp3';\n\n  /** The name of the audio file associated to the sound TYPE2 */\n  static type2 = 'Alarm_Sound_2.mp3';\n\n  /** The name of the audio file associated to the sound TYPE3 */\n  static type3 = 'Alarm_Sound_3.mp3';\n\n  /** The name of the audio file associated to the sound TYPE4 */\n  static type4 = 'Alarm_Sound_4.mp3';\n\n  /**\n  * Given a sound type, retruns the associated audiofile\n  * @param {string} sound The sound type, e.g. TYPE1, TYPE2, etc.\n  * @returns {string} the filepath of the corresponding audio file\n  */\n  static getSoundsource(sound: string): string {\n    if (sound === 'TYPE1') {\n      return Assets.SOUNDS + AlarmSounds.type1;\n    } else if (sound === 'TYPE2') {\n      return Assets.SOUNDS + AlarmSounds.type2;\n    } else if (sound === 'TYPE3') {\n      return Assets.SOUNDS + AlarmSounds.type3;\n    } else if (sound === 'TYPE4') {\n      return Assets.SOUNDS + AlarmSounds.type4;\n    }\n  }\n}\n\n/**\n* Service that connects and receives {@link Alarm} messages from the\n* IAS Webserver through Websockets\n*/\n@Injectable()\nexport class AlarmService {\n\n  /**\n  * Timestamp related with the last received message\n  */\n  public lastReceivedMessageTimestamp: number = (new Date).getTime();\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public connectionStatusStream = new BehaviorSubject(false);\n\n  /**\n  * Array of {@link Alarm} objects\n  */\n  public alarmsArray: Alarm[] = [];\n\n  /**\n  * Index for the alarmsArray { core_id: arrayIndex }\n  */\n  public alarmsIndexes: {[core_id: string]: number} = {};\n\n  /**\n  * Stream of notifications of changes in\n  * the dictionary of {@link Alarm} objects\n  */\n  public alarmChangeStream = new BehaviorSubject(true);\n\n  /**\n  * Django Channels WebsocketBridge,\n  * used to connect to Django Channels through Websockets\n  */\n  public webSocketBridge: WebSocketBridge = new WebSocketBridge();\n\n  /**\n  * Defines wether or not the display should emit sounds when alarms are triggered.\n  * It is used to avoid sounds when the page is refreshed, and only allow them after that\n  */\n  public canSound: boolean;\n\n  /**\n  * Reference to the audio object used to play the sounds\n  */\n  public audio = new Audio();\n\n  /**\n  * Id of the currenlty sounding Alarm\n  */\n  public soundingAlarm: string;\n\n  /**\n  * Defines wether or not the service is initialized\n  */\n  public isInitialized = false;\n\n  /**\n  * Information about the count of alarms by view\n  */\n  public countByView = {};\n\n  /**\n  * Connection status timer\n  */\n  public connectionStatusTimer;\n\n  /**\n   * Builds an instance of the service\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   * @param {AuthService} authService Service used for authentication\n   */\n  constructor(\n    private cdbService: CdbService,\n    private httpClientService: HttpClientService,\n    private authService: AuthService,\n  ) {\n    this.connectionStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.triggerAlarmsNonValidConnectionState();\n        }\n      }\n    );\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === true) {\n          this.initialize();\n        } else {\n          this.destroy();\n        }\n      }\n    );\n  }\n\n  /**\n  * Sends an {@link Alarm} change event\n  *\n  * @param {Any} any the core_id of the updated alarm,\n  * or 'all' if all were updated\n  */\n  changeAlarms(any) {\n    this.alarmChangeStream.next(any);\n  }\n\n  /******* SERVICE INITIALIZATION *******/\n\n  /**\n  * Start connection to the backend through websockets\n  */\n  initialize() {\n    if (this.isInitialized || !this.authService.loginStatus) {\n      return;\n    }\n    this.cdbService.initialize();\n    this.isInitialized = true;\n    this.canSound = false;\n    this.audio = new Audio();\n    this.connect();\n    this.webSocketBridge.socket.addEventListener(\n      'open', () => {\n        this.connectionStatusStream.next(true);\n        this.getAlarmList();\n      }\n    );\n    this.webSocketBridge.socket.addEventListener(\n      'close', () => {\n        this.resetCountByView();\n      }\n    );\n    this.webSocketBridge.demultiplex(Streams.ALARMS, (payload, streamName) => {\n      // console.log('notify ', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessage(payload.action, payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.UPDATES, (payload, streamName) => {\n      // console.log('request', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessagesList(payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.COUNTER, (payload, streamName) => {\n      // console.log('counter ', payload);\n      if (this.authService.loginStatus) {\n        this.readCountByViewMessage(payload.data);\n      }\n    });\n  }\n\n  /**\n  *  Start connection to the backend through websockets\n  */\n  connect() {\n    const connectionPath = this.getConnectionPath();\n    this.webSocketBridge.connect(connectionPath);\n    this.webSocketBridge.listen(connectionPath);\n    console.log('Connected to webserver at: ' + environment.websocketPath);\n  }\n\n  /**\n  *  Connection path using authentication data\n  */\n  getConnectionPath() {\n    return environment.websocketPath + '?token=' + this.authService.getToken();\n  }\n\n  /**\n  *  Disconnect from the backend\n  */\n  destroy() {\n    // Close connection\n    if (this.isInitialized) {\n      this.webSocketBridge.stream(Streams.UPDATES).send({\n        'action': 'close'\n      });\n      this.webSocketBridge.socket.close(\n        1000, 'User logout', {keepClosed: true});\n      this.resetCountByView();\n    }\n    this.isInitialized = false;\n    console.log('Connection to webserver closed');\n  }\n\n  /******* ALARM HANDLING *******/\n\n  /**\n   * Returns an Alarm object\n   * @param core_id core_id of the Alarm to return\n   * @returns {Alarm} Alarm object corresponding to the given core_id\n   */\n  get(core_id: string): Alarm {\n    return this.alarmsArray[this.alarmsIndexes[core_id]] as Alarm;\n  }\n\n  /**\n   * Acknowledges a list of Alarms with a message\n   * @param alarms list of ids of the alarms to acknowledge\n   * @param message message of the acknowledgement\n   * @param user user that performs the acknowledgement\n   * @returns {json} response of the HTTP request of the acknowledge\n   */\n  acknowledgeAlarms(alarms_ids, message, user) {\n    const data = {\n      'alarms_ids': alarms_ids,\n      'message': message,\n      'user': user\n    };\n    return this.httpClientService.put(BackendUrls.TICKETS_MULTIPLE_ACK, data).pipe(\n    map(\n      (response) => {\n        for (const id of alarms_ids) {\n          const alarm = this.get(id);\n          alarm.acknowledge();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Get information about old tickets related to a target alarm\n   * @param alarm_id id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getMissingAcks(alarm_id) {\n    const url = BackendUrls.TICKETS_INFO + '?alarm_id=' + alarm_id;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Gets the open {@link ShelveRegistry} for an {@link Alarm}\n   * @param {string} alarm_id id of the target alarm\n   * @param {int} status id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getShelveRegistries(alarm_id, status) {\n    const url = BackendUrls.SHELVE_REGS_FILTER + '?alarm_id=' + alarm_id + '&status=' + status;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string} alarm_id id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @param {string} timeout the timeout for the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  shelveAlarm(alarm_id, message, timeout, user) {\n    const data = {\n      'alarm_id': alarm_id,\n      'message': message,\n      'timeout': timeout,\n      'user': user\n    };\n    return this.httpClientService.post(BackendUrls.SHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 201) {\n          const alarm = this.get(alarm_id);\n          alarm.shelve();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string} alarms_ids id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  unshelveAlarms(alarms_ids, message) {\n    const data = {\n      'alarms_ids': alarms_ids,\n    };\n    return this.httpClientService.put(BackendUrls.UNSHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 200) {\n          for (const id of alarms_ids) {\n            const alarm = this.get(id);\n            alarm.unshelve();\n          }\n        }\n        return response;\n      }\n    ));\n  }\n\n  /******* HANDLING OF ALARM MESSAGES FROM THE CORE *******/\n\n  /**\n  * Get the complete list of alarms from the webserver database\n   * through the websocket\n   */\n  getAlarmList() {\n    this.webSocketBridge.stream(Streams.UPDATES).send({\n      'action': 'list'\n    });\n  }\n\n  /**\n   * Reads an alarm message from the Core and modify the service alarms list\n   * depending on the action value.\n   * @param {string} action create, update or delete\n   * @param {Object} obj dictionary with values for alarm fields (as generic object)\n   */\n  readAlarmMessage(action, obj) {\n    if ( action === 'create' || action === 'update' ) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n      this.changeAlarms(alarm.core_id);\n    }\n  }\n\n  /**\n   * Reads a list of alarm messages form the Core and add them to the\n   * service alarms list\n   * @param {Object[]} alarmsList list of dictionaries with values for alarm fields (as generic objects)\n   */\n  readAlarmMessagesList(alarmsList) {\n    for (const obj of alarmsList) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n    }\n    this.changeAlarms('all');\n    this.canSound = true;\n  }\n\n  /**\n   * Reads the count by view object received from the webserver\n   * @param {Object} countByView\n   */\n  readCountByViewMessage(countByView) {\n    this.countByView = countByView;\n  }\n\n  /**\n   * Method to clear the count by view if there is the ws connection is closed\n   */\n  resetCountByView() {\n    this.countByView = {};\n  }\n\n  /**\n   * Adds or updates an {@link Alarm} to the AlarmService\n   * @param {Alarm} alarm the {@link Alarm} to add or update\n   */\n  add_or_update_alarm(alarm) {\n    let old_alarm_value = Value.cleared;\n    let old_alarm_ack = true;\n    if (alarm.core_id in this.alarmsIndexes) {\n      const old_alarm = this.alarmsArray[this.alarmsIndexes[alarm.core_id]];\n      old_alarm_value = old_alarm.value;\n      old_alarm_ack = old_alarm.ack;\n      this.alarmsArray[this.alarmsIndexes[alarm.core_id]] = alarm;\n    } else {\n      const newLength = this.alarmsArray.push(alarm);\n      this.alarmsIndexes[alarm.core_id] = newLength - 1;\n    }\n    if (old_alarm_value === Value.cleared && alarm.value !== Value.cleared) {\n      if (alarm.sound !== 'NONE') {\n        this.playAlarmSound(alarm);\n      }\n    }\n    if (!old_alarm_ack && alarm.ack) {\n      if (alarm.sound !== 'NONE') {\n        this.clearSoundsIfAck(alarm);\n      }\n    }\n  }\n\n  /**\n   * Reproduces the sound of a given {@link Alarm}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  playAlarmSound(alarm: Alarm) {\n    if (!this.canSound) {\n      return;\n    }\n    const repeat = alarm.shouldRepeat();\n    if (repeat) {\n      this.soundingAlarm = alarm.core_id;\n      this.audio.pause();\n      this.emitSound(alarm.sound, repeat);\n    } else if (this.audio.paused) {\n      this.emitSound(alarm.sound, repeat);\n    }\n  }\n\n  /**\n   * Reproduces a sound\n   * @param {string} sound the type of sound to reproduce\n   * @param {boolean} repeat true if the sound should be repeated, false if not\n   */\n  emitSound(sound: string, repeat: boolean) {\n    console.log('calling emit with: ', sound);\n    this.audio = new Audio();\n    this.audio.src = AlarmSounds.getSoundsource(sound);\n    if (repeat) {\n      this.audio.addEventListener('ended', function() {\n        this.currentTime = 0;\n        this.play();\n      }, false);\n    }\n    this.audio.load();\n    this.audio.play();\n  }\n\n  /**\n   * Stops the sound of a given {@link Alarm}, only if the sound is being repeated\n   * It is intended to be used when critical alarms (repeated) are acknowledged.\n   * Once the sound stops, it check there is another non-acknowledged alarm and plays its sound repeatedly,\n   * by calling {@link AlarmService.html#playAlarmSound}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  clearSoundsIfAck(alarm: Alarm) {\n    if (!alarm.shouldRepeat()) {\n      return;\n    }\n    if (this.soundingAlarm === alarm.core_id) {\n      this.audio.pause();\n      this.soundingAlarm = null;\n      for (alarm of this.alarmsArray) {\n        if (!alarm.ack && alarm.sound !== 'NONE' && alarm.shouldRepeat()) {\n          this.soundingAlarm = alarm.core_id;\n          this.playAlarmSound(alarm);\n          return;\n        }\n      }\n    }\n  }\n\n  /******* PERIODIC CHECK OF VALIDITY OF ALARMS *******/\n\n  /**\n   * Set selected state to alarms under an non-valid connection\n   */\n  triggerAlarmsNonValidConnectionState() {\n    for (const alarm of this.alarmsArray) {\n      alarm.validity = Validity.unreliable;\n    }\n    this.changeAlarms('all');\n  }\n\n  /**\n   * Resets the status connection check timer\n   * The timer's period is equal to the broadcastThreshold obtained by {@link CdbService.html#getBroadcastRate}\n   */\n  resetTimer() {\n    if (this.connectionStatusTimer) {\n      this.connectionStatusTimer.unsubscribe();\n      this.connectionStatusStream.next(true);\n    }\n    const broadcastThreshold = this.cdbService.getBroadcastThreshold();\n    this.connectionStatusTimer = IntervalObservable.create(1000 * broadcastThreshold).subscribe(x => {\n      this.connectionStatusStream.next(false);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AntennaConfig.html":{"url":"classes/AntennaConfig.html","title":"class - AntennaConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AntennaConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the antennas and location related to an Alarm\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                            \n                                    Public\n                                antenna\n                            \n                            \n                                    Public\n                                placemark\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antenna:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:15\n                            \n                        \n\n                \n                    \n                        ID of the Antenna associated with the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:18\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** List of Alarm configuration for each antenna **/\n  public antennasConfig: AntennaConfig [] = [];\n\n  /** List of Alarm configuration for other devices related with the array **/\n  public devicesConfig: AntennaConfig [] = [];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      this.antennasConfig = response['antennas'] as AntennaConfig[];\n      this.devicesConfig = response['devices'] as AntennaConfig[];\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennaMarkerComponent.html":{"url":"components/AntennaMarkerComponent.html","title":"component - AntennaMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennaMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display an Antenna in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antenna-marker\n            \n\n            \n                styleUrls\n                antenna-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antenna-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNgClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                cx\n                            \n                            \n                                cy\n                            \n                            \n                                placemark\n                            \n                            \n                                r\n                            \n                            \n                                viewbox\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        The Alarm to associate to the antenna \n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cx\n                    \n                    \n                        The position of the antenna in the X axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cy\n                    \n                    \n                        The position of the antenna in the Y axis \n\n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placemark\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : {'name': '', 'opt_cx': 0, 'opt_cy': 0}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        r\n                    \n                    \n                        Radius of the antenna \n\n                        \n                            Default value : 1\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewbox\n                    \n                    \n                        The placemark that describes how to draw the antenna \n\n                        \n                            Default value : '0 0 10 10'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNgClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNgClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class that should be used to draw the marker\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:41\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        service:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:40\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle antennas configuration\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the CSS class that should be used to draw the marker\n   */\n  getNgClass() {\n    let colorClass = 'green';\n    if (this.alarm.shelved === true) {\n      colorClass = 'green';\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      colorClass = 'blue';\n    } else if (this.alarm.showAsMaintenance()) {\n      colorClass = 'grey';\n    } else if (this.alarm.value === Value.cleared) {\n      colorClass = 'green';\n    } else if (this.alarm.value === Value.set_low) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_medium) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_high) {\n      colorClass = 'red';\n    } else if (this.alarm.value === Value.set_critical) {\n      colorClass = 'red';\n    } else {\n      colorClass = 'green';\n    }\n\n    if (this.alarm.validity === 0) {\n      return [colorClass, 'unreliable'];\n    } else {\n      return [colorClass];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennaMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasComponent.html":{"url":"components/AntennasComponent.html","title":"component - AntennasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas/antennas.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Antennas Alarms both in a sidebar (instantiated in a AntennasSidebar),\nand a map (instantiated by a AntennasMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas\n            \n\n            \n                styleUrls\n                antennas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSelectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSelectedAntenna(selectedAntenna: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedAntenna\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAntenna:     AntennaConfig\n\n                    \n                \n                    \n                        \n                            Type :     AntennaConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AntennaConfig } from '../antennas.service';\n\n/**\n* Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\n* and a map (instantiated by a {@link AntennasMap})\n*/\n@Component({\n  selector: 'app-antennas',\n  templateUrl: './antennas.component.html',\n  styleUrls: ['./antennas.component.scss']\n})\nexport class AntennasComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedAntenna: AntennaConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AntennaConfig}\n   */\n  updateSelectedAntenna(selectedAntenna: AntennaConfig): void {\n    this.selectedAntenna = selectedAntenna;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AntennasModule.html":{"url":"modules/AntennasModule.html","title":"module - AntennasModule","body":"\n                   \n\n\n\n\n  Modules\n  AntennasModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/antennas/antennas.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AntennaMarkerComponent\n                            \n                            \n                                AntennasComponent\n                            \n                            \n                                AntennasMapComponent\n                            \n                            \n                                AntennasSidebarComponent\n                            \n                            \n                                AntennasSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AntennasService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AntennasSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AntennasComponent } from './antennas/antennas.component';\nimport { AntennasMapComponent } from './antennas-map/antennas-map.component';\nimport { AntennasSidebarComponent } from './antennas-sidebar/antennas-sidebar.component';\nimport { DataModule } from '../data/data.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AntennasService } from './antennas.service';\nimport { AntennaMarkerComponent } from './antennas-map-markers/antenna-marker/antenna-marker.component';\nimport { AntennasSummaryComponent } from './antennas-summary/antennas-summary.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    ActionsModule,\n    IasMaterialModule,\n    MapModule,\n    SharedModule,\n  ],\n  providers: [\n    AntennasService\n  ],\n  declarations: [\n    AntennasComponent,\n    AntennasMapComponent,\n    AntennasSidebarComponent,\n    AntennaMarkerComponent,\n    AntennasSummaryComponent\n  ],\n  exports: [\n    AntennasSummaryComponent\n  ]\n})\nexport class AntennasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AntennasService.html":{"url":"injectables/AntennasService.html","title":"injectable - AntennasService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AntennasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the AntennasModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                antennaImageSet\n                            \n                            \n                                    Public\n                                antennaImageUnreliableSet\n                            \n                            \n                                    Public\n                                antennasConfig\n                            \n                            \n                                    Public\n                                antennasMapName\n                            \n                            \n                                    Public\n                                antennasSummaryConfig\n                            \n                            \n                                    Public\n                                devicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                loadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas.service.ts:52\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the initialize method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:66\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Define the icons used by this module components\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:52\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:46\n                            \n                        \n\n                \n                    \n                        Set of antenna icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennaImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:49\n                            \n                        \n\n                \n                    \n                        Set of antenna Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasConfig:     AntennaConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AntennaConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:34\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for each antenna *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : AntennasSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:40\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasSummaryConfig:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:43\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the antennas summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devicesConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        devicesConfig:     AntennaConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     AntennaConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:37\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for other devices related with the array *\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n* Stores the IDs of the antennas and location related to an {@link Alarm}\n*/\nexport class AntennaConfig {\n\n  /** ID of the Antenna associated with the {@link Alarm} */\n  public antenna: string;\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public alarm: string;\n\n}\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** List of Alarm configuration for each antenna **/\n  public antennasConfig: AntennaConfig [] = [];\n\n  /** List of Alarm configuration for other devices related with the array **/\n  public devicesConfig: AntennaConfig [] = [];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: string;\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      this.antennasConfig = response['antennas'] as AntennaConfig[];\n      this.devicesConfig = response['devices'] as AntennaConfig[];\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-s_low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSidebarComponent.html":{"url":"components/AntennasSidebarComponent.html","title":"component - AntennasSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Display used to show the list of antennas' alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-sidebar\n            \n\n            \n                styleUrls\n                antennas-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getAntennaName\n                            \n                            \n                                getAntennas\n                            \n                            \n                                getDevices\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                unselectAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                antennaClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(antennasService: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                    \n                        Selected antenna object, null if it is nothing selected \n\n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        antennaClicked\n                    \n                    \n                        Event emitted to notify when an antenna is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennaName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennaName(antennaConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennaConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the Antenna configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the antenna name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Return the list of antennas Alarm configuration\n\n\n                            \n                            \n                            \n                                Returns :     AntennaConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Return the list of Alarm configuration for global devices\n\n\n                            \n                            \n                            \n                                Returns :     AntennaConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:89\n                            \n                        \n\n\n                \n                    \n                            Indicates if the antenna is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(alarmConfig: AntennaConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Action performed when the antenna is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AntennaConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked antenna\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unselectAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nunselectAntenna()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            If there is a selected antenna it will be unselected\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService, AntennaConfig } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Display used to show the list of antennas' alarms\n */\n@Component({\n  selector: 'app-antennas-sidebar',\n  templateUrl: './antennas-sidebar.component.html',\n  styleUrls: ['./antennas-sidebar.component.scss']\n})\nexport class AntennasSidebarComponent implements OnInit {\n\n  /** Selected antenna object, null if it is nothing selected */\n  @Input() selectedAntenna = null;\n\n  /** Event emitted to notify when an antenna is selected */\n  @Output() antennaClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {AntennasService} antennasService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {RoutingService} routing Service used to redirect to other views\n   */\n  constructor(\n    public antennasService: AntennasService,\n    public alarmService: AlarmService\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n   * Build the antenna name to display. It is built with the Antenna's code and the current associated pad.\n   * @param {MapAntennaConfig} antennaConfig the Antenna configuration\n   * @returns {string} the antenna name to display\n   */\n  getAntennaName(antennaConfig: AntennaConfig ): string {\n    return antennaConfig.antenna;\n  }\n\n  /**\n  * Return the list of antennas Alarm configuration\n  * @returns {list} list of {@link AntennaConfig}\n  */\n  getAntennas(): AntennaConfig [] {\n    return this.antennasService.antennasConfig;\n  }\n\n  /**\n  * Return the list of Alarm configuration for global devices\n  * @returns {list} list of {@link AntennaConfig}\n  */\n  getDevices(): AntennaConfig [] {\n    return this.antennasService.devicesConfig;\n  }\n\n  /**\n  * If there is a selected antenna it will be unselected\n  */\n  unselectAntenna() {\n    this.selectedAntenna = null;\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n  * Indicates if the antenna is selected or not\n  * @param {AntennaConfig} alarmConfig configuration of the alarm\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(alarmConfig: AntennaConfig): boolean {\n    return this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark);\n  }\n\n  /**\n  * Action performed when the antenna is clicked\n  * @param {AntennaConfig} alarmConfig configuration of the clicked antenna\n  */\n  onClick(alarmConfig: AntennaConfig) {\n    if ( this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark) ) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = alarmConfig;\n    }\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n     \n  \n\n\n\n\n   ANTENNAS \n\n\n\n\n     chevron_left  {{getAntennaName(this.selectedAntenna)}}  \n\n\n\n\n  \n    \n      \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        Alarm ID\n        {{this.selectedAntenna.alarm}}\n      \n      \n        Antenna\n        {{this.selectedAntenna.antenna}}\n      \n      \n        Location (PAD)\n        {{this.selectedAntenna.placemark}}\n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n      \n        \n          \n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ANTENNAS      chevron_left  {{getAntennaName(this.selectedAntenna)}}                                                                                                                                                                                                                                                    Alarm ID        {{this.selectedAntenna.alarm}}                    Antenna        {{this.selectedAntenna.antenna}}                    Location (PAD)        {{this.selectedAntenna.placemark}}n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSummaryComponent.html":{"url":"components/AntennasSummaryComponent.html","title":"component - AntennasSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-summary/antennas-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the Antennas Arrays\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-summary\n            \n\n            \n                styleUrls\n                antennas-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, antennasService: AntennasService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get Antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        antennasService:     AntennasService\n\n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to get Antennas configuration\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:43\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the Antennas Arrays\n */\n@Component({\n  selector: 'app-antennas-summary',\n  templateUrl: './antennas-summary.component.html',\n  styleUrls: ['./antennas-summary.component.scss']\n})\nexport class AntennasSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {AntennasService} antennasService Service used to get Antennas configuration\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public antennasService: AntennasService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.antennasService.antennasSummaryConfig);\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Antennas View\n   */\n  redirect() {\n    this.routing.goToAntennas();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              STATUS\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    STATUS                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSidenav\n                            \n                            \n                                    Public\n                                actionsSidenavService\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isNavigationCompacted\n                            \n                            \n                                navigationSidenavItems\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionsLink\n                            \n                            \n                                getNavItemCountClass\n                            \n                            \n                                getNavItemCountText\n                            \n                            \n                                getUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, authService: AuthService, userService: UserService, actionsSidenavService: SidenavService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:68\n                            \n                        \n\n                \n                    \n                            Builds an instance of the application, with its related services and complements\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used for authentication\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage information about user accounts\n\n                                                        \n                                                \n                                                \n                                                        actionsSidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for the navigation\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular material registry for custom icons\n\n                                                        \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionsLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionsLink(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Returns the links for the router outlets to navigate the different views,\nconsidering of the actionsSidenav can be closed or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an item of the navigation sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { outlets: { primary: any; actions: any; }; } | { outlets: { primary: any; actions?: undefined; }...\n\n                            \n                                \n                                    The links in a dictionary\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountClass(navItem: , countByView: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:181\n                            \n                        \n\n\n                \n                    \n                            Method to get the class related to the count of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the countByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"hide-count\" | \"nonzero-count\" | \"zero-count\" | \"unknown-count\"\n\n                            \n                                \n                                    the classname for the nav item mark\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountText(navItem: , countByView: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:210\n                            \n                        \n\n\n                \n                    \n                            Method to get the text related to the mark of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the counterByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the text related to the count for the nav item\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            Method to get the username\n\" Uses the getUser method defined on the AuthService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the username\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Method to logout an authenticated user\n\" Uses the logout method defined on the AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Method executed when the application is initiated\nInitializes the AlarmService and passes its actionsSidenav to the ActionsSidenavService for it to control it\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isNavigationCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Reference to the Actions sidenav (right sidenav)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionsSidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:85\n                            \n                        \n\n                \n                    \n                        Service for the navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:82\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms of this component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:83\n                            \n                        \n\n                \n                    \n                        Service used for authentication\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavigationCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isNavigationCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationSidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navigationSidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                        Navigation Sidenav Menu of the application (left sidenav) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:88\n                            \n                        \n\n                \n                    \n                        instance of an Angular {\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userService:     UserService\n\n                    \n                \n                    \n                        \n                            Type :     UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:84\n                            \n                        \n\n                \n                    \n                        Service used to manage information about user accounts\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AlarmService } from './data/alarm.service';\nimport { SidenavService } from './actions/sidenav.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthService } from './auth/auth.service';\nimport { UserService } from './data/user.service';\nimport { Router } from '@angular/router';\n\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n  * Reference to the Actions sidenav (right sidenav)\n  */\n  @ViewChild('actionsSidenav') public actionsSidenav: MatSidenav;\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isNavigationCompacted = true;\n\n  // TODO: Use only custom svgIcons\n  /** Navigation Sidenav Menu of the application (left sidenav) */\n  navigationSidenavItems = [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ];\n\n\n  /**\n   * Builds an instance of the application, with its related services and complements\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   * @param {AuthService} authService Service used for authentication\n   * @param {UserService} userService Service used to manage information about user accounts\n   * @param {SidenavService} actionsSidenavService Service for the navigation\n   * @param {MatIconRegistry} matIconRegistry Angular material registry for custom icons\n   * @param {DomSanitizer} matIconRegistry Angular material DOM sanitizer for custom icons\n   * @param {Router} router instance of an Angular {@link Router} to handle routing\n   */\n  constructor(\n    public alarmService: AlarmService,\n    public authService: AuthService,\n    public userService: UserService,\n    public actionsSidenavService: SidenavService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    public router: Router,\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ias_overview',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-overview.svg')\n      )\n      .addSvgIcon(\n        'ias_weather',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-weather.svg')\n      )\n      .addSvgIcon(\n        'ias_antenna',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-antenna.svg')\n      )\n      .addSvgIcon(\n        'ias_table',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-table.svg')\n      );\n  }\n\n  /**\n   * Method executed when the application is initiated\n   * Initializes the {@link AlarmService} and passes its {@link actionsSidenav} to the {@link ActionsSidenavService} for it to control it\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n    this.actionsSidenavService.setSidenav(this.actionsSidenav);\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.actionsSidenavService.close();\n          this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n        } else if (value === true) {\n          this.userService.requestUsersList();\n        }\n      }\n    );\n  }\n\n  /**\n  * Returns the links for the router outlets to navigate the different views,\n  * considering of the actionsSidenav can be closed or not\n  * @param {any} item an item of the navigation sidenav\n  * @returns {Object} The links in a dictionary\n  */\n  getActionsLink(item: any) {\n    if (this.actionsSidenavService.canClose) {\n      return {outlets: { primary: item.link, actions: null }};\n    } else {\n      return {outlets: { primary: item.link }};\n    }\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isNavigationCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isNavigationCompacted = !this.isNavigationCompacted;\n    return this.isNavigationCompacted;\n  }\n\n  /**\n   * Method to get the username\n   \" Uses the getUser method defined on the {@link AuthService}\n   * @returns {string} the username\n   */\n  getUser() {\n    return this.authService.getUser();\n  }\n\n  /**\n   * Method to logout an authenticated user\n   \" Uses the logout method defined on the {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Method to get the class related to the count of the nav items\n   * to highlight or not the presence of unack alarms by view\n   \" It is expected to use the countByView\n   * defined on the {@link AlarmService}\n   * and the configuration defined in the navigationSidenavItems\n   * variable\n   * @returns {string} the classname for the nav item mark\n   */\n   getNavItemCountClass(navItem, countByView) {\n     const navItemCounter = navItem.counter;\n     const availableCounters = Object.keys(countByView);\n     if (navItemCounter === '') {\n       return 'hide-count';\n     } else {\n       if (availableCounters.indexOf(navItemCounter) > -1) {\n         if (countByView[navItemCounter] > 0) {\n           return 'nonzero-count';\n         }\n         if (countByView[navItemCounter] === 0) {\n           return 'zero-count';\n         }\n       } else {\n         return 'unknown-count';\n       }\n\n     }\n   }\n\n   /**\n    * Method to get the text related to the mark of the nav items\n    * to highlight or not the presence of unack alarms by view\n    \" It is expected to use the counterByView\n    * defined on the {@link AlarmService}\n    * and the configuration defined in the navigationSidenavItems\n    * variable\n    * @returns {string} the text related to the count for the nav item\n    */\n    getNavItemCountText(navItem, countByView) {\n      const navItemCounter = navItem.counter;\n      const availableCounters = Object.keys(countByView);\n      if (navItemCounter === '') {\n        return '';\n      } else {\n        if (availableCounters.indexOf(navItemCounter) > -1) {\n          const count = countByView[navItemCounter];\n          if (count >= 0) {\n            if (count 100');\n            }\n          } else {\n            return String(count);  // this case should not happen\n          }\n        } else {\n          return '?';\n        }\n\n      }\n    }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n      \n       Integrated Alarm System \n    \n    \n      \n        account_circle {{ this.getUser() }}\n      \n      \n        \n          exit_to_appLog out\n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                {{ getNavItemCountText(item, alarmService.countByView) }}\n              \n              \n                \n                  {{ item.icon }}\n                \n                \n                  {{ item.icon }}\n                \n              \n            \n            {{ item.title }} \n          \n        \n      \n    \n\n    \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                           Integrated Alarm System                       account_circle {{ this.getUser() }}                              exit_to_appLog out                                                                                            {{ getNavItemCountText(item, alarmService.countByView) }}                                                              {{ item.icon }}                                                  {{ item.icon }}                                                      {{ item.title }}                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Application module\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    AntennasModule\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    OverviewModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TabularModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { APP_BASE_HREF, DatePipe } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { DataModule } from './data/data.module';\nimport { ActionsModule } from './actions/actions.module';\nimport { AntennasModule } from './antennas/antennas.module';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { HealthModule } from './health/health.module';\nimport { MapModule } from './map/map.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { AppComponent } from './app.component';\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    ActionsModule,\n    AntennasModule,\n    AppRoutingModule,\n    AuthModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n    HttpModule,\n    MapModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MaterialSandboxComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     RoutingService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutingService } from './routing.service';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { AckComponent } from '../actions/ack/ack.component';\nimport { AlarmComponent } from '../shared/alarm/alarm.component';\nimport { AntennasComponent } from '../antennas/antennas/antennas.component';\nimport { MaterialSandboxComponent } from '../material-sandbox/material-sandbox.component';\nimport { OverviewComponent } from '../overview/overview/overview.component';\nimport { ShelveComponent } from '../actions/shelve/shelve.component';\nimport { TabularViewComponent } from '../tabular/tabular-view/tabular-view.component';\nimport { WeatherComponent } from '../weather/weather/weather.component';\nimport { AuthLoginGuard } from '../auth/auth-login.guard';\nimport { LoginComponent } from '../auth/login/login.component';\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent},\n  { path: 'overview', component: OverviewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular/:filter', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'acknowledge/:alarmID', component: AckComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'shelve/:alarmID', component: ShelveComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'weather', component: WeatherComponent, canActivate: [AuthLoginGuard]},\n  { path: 'sandbox', component: MaterialSandboxComponent, canActivate: [AuthLoginGuard]},\n  { path: 'antennas', component: AntennasComponent, canActivate: [AuthLoginGuard]},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthLoginGuard.html":{"url":"guards/AuthLoginGuard.html","title":"guard - AuthLoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthLoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth-login.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-login.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Builds an instance of the guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:31\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next activated route\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next state of router navigation, used to retrieve the url that is going to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckLogin(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:42\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged in.\nIf false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the nexturl to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n/**\n* Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthLoginGuard implements CanActivate {\n\n  /**\n  * Builds an instance of the guard\n  * @param {AuthService} authService service used to check and handle authorization\n  * @param {Router} router Angular router used to navigate the application\n  */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n  * Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n  * @param {ActivatedRouteSnapshot} next the next activated route\n  * @param {RouterStateSnapshot} state the next state of router navigation, used to retrieve the url that is going to be navigated\n  * @returns {Observable} true if navigation is permitted, false if not\n  */\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n\n  /**\n  * Checks wether or not the user is logged in.\n  * If false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n  * @param {string} url the nexturl to be navigated\n  * @returns {boolean} true if navigation is permitted, false if not\n  */\n  checkLogin(url: string): Observable {\n    return this.authService.hasValidToken().pipe(map((response: any) => {\n      if (response === true) {\n        return true;\n      } else {\n        // Store the attempted URL for redirecting\n        this.authService.redirectUrl = url;\n\n        // Navigate to the login page with extras\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }));\n\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoginComponent } from './login/login.component';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    IasMaterialModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to request and handle tokens and authorization\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginStatus\n                            \n                            \n                                    Public\n                                loginStatusStream\n                            \n                            \n                                redirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLoginStatus\n                            \n                            \n                                getAllowedActions\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                hasValidToken\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                removeAllowedActions\n                            \n                            \n                                removeToken\n                            \n                            \n                                removeUser\n                            \n                            \n                                storeAllowedActions\n                            \n                            \n                                storeToken\n                            \n                            \n                                storeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient used to request the token for authentication\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLoginStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeLoginStatus(status: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Changes the loginStatus and sneds the corresponding update in the loginStatusStream\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the new login status\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:160\n                            \n                        \n\n\n                \n                    \n                            Returns the user permission over the specified action stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    the permission as a boolean\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Returns the token stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the token as a string, or undefined if there is no token\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            Returns the user stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the user name as a string, or undefined if there is no user\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValidToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasValidToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged-in, which is true if there is a valid token\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if there is a valid token, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Requests a token from the server, sending user and password information.\nSaves the token in the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the user\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the password of the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of true if the login is successful, observable of false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            Logs out of the server by deleting the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:186\n                            \n                        \n\n\n                \n                    \n                            Deletes the allowed_actions from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:172\n                            \n                        \n\n\n                \n                    \n                            Deletes the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:179\n                            \n                        \n\n\n                \n                    \n                            Deletes the user from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreAllowedActions(allowed_actions: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:212\n                            \n                        \n\n\n                \n                    \n                            Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allowed_actions\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:194\n                            \n                        \n\n\n                \n                    \n                            Stores a given the token in the local storage, replacing the previous token, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the token to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreUser(user: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            Stores a given the user in the local storage, replacing the previous user, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginStatus:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                        Store if the user is logged in or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginStatusStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginStatusStream:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:32\n                            \n                        \n\n                \n                    \n                        Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        Store the URL so we can redirect after logging in\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { tap, delay } from 'rxjs/operators';\nimport { BackendUrls } from '../settings';\nimport { environment } from '../../environments/environment';\n\n\n/**\n* Service used to request and handle tokens and authorization\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n  * Store the URL so we can redirect after logging in\n  */\n  redirectUrl: string;\n\n\n  /**\n  * Store if the user is logged in or not\n  */\n  loginStatus = false;\n\n  /**\n  * Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n  */\n  public loginStatusStream = new BehaviorSubject(null);\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClient} http Angular HttpClient used to request the token for authentication\n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Changes the {@link loginStatus} and sneds the corresponding update in the {@link loginStatusStream}\n   * @param {boolean} status the new login status\n   */\n  changeLoginStatus(status: boolean) {\n    this.loginStatus = status;\n    this.loginStatusStream.next(status);\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n   * Checks wether or not the user is logged-in, which is true if there is a valid token\n   * @returns { Observable} true if there is a valid token, false if not\n   */\n  hasValidToken(): Observable {\n    if (!this.getToken()) {\n      this.changeLoginStatus(false);\n      return of(false);\n    } else {\n      const url = `${environment.httpUrl}${BackendUrls.VALIDATE_TOKEN}`;\n      return this.http.get(url, {headers: this.getHttpHeaders()} ).pipe(\n        map((response: any) => {\n          const user_data = response['user_data'];\n          const allowed_actions = response['allowed_actions'];\n          this.storeUser(user_data['username']);\n          this.storeAllowedActions(allowed_actions);\n          this.changeLoginStatus(true);\n          return true;\n        }),\n        catchError(error => {\n          this.logout();\n          return of(false);\n        }\n      ));\n    }\n  }\n\n  /**\n   * Requests a token from the server, sending user and password information.\n   * Saves the token in the local storage\n   * @param {string} username the name of the user\n   * @param {string} password the password of the user\n   * @returns {Observable} observable of true if the login is successful, observable of false if not\n   */\n  login(username: string, password: string): Observable {\n    const url = `${environment.httpUrl}${BackendUrls.TOKEN}`;\n    return this.http.post(url, {\n      username: username,\n      password: password\n    }).pipe(map((response: any) => {\n      const token = response['token'];\n      if (token) {\n        this.storeToken(token);\n        this.storeUser(username);\n        this.changeLoginStatus(true);\n        return true;\n      } else {\n        this.changeLoginStatus(false);\n        return false;\n      }\n    }));\n  }\n\n  /**\n   * Logs out of the server by deleting the token from the local storage\n   */\n  logout(): void {\n    this.changeLoginStatus(false);\n    this.removeToken();\n    this.removeUser();\n  }\n\n  /**\n  * Returns the token stored in the local storage\n  * @returns {string | undefined} the token as a string, or undefined if there is no token\n  */\n  getToken(): string | undefined {\n    const token = localStorage.getItem('token');\n    if (token === null) {\n      return undefined;\n    } else {\n      return JSON.parse(token);\n    }\n  }\n\n  /**\n  * Returns the user stored in the local storage\n  * @returns {string | undefined} the user name as a string, or undefined if there is no user\n  */\n  getUser(): string | undefined {\n    const user = localStorage.getItem('user');\n    if (user === null) {\n      return undefined;\n    } else {\n      return JSON.parse(user);\n    }\n  }\n\n  /**\n  * Returns the user permission over the specified action stored in the local storage\n  * @returns {boolean | undefined} the permission as a boolean\n  */\n  getAllowedActions(): boolean {\n    const allowed_actions = localStorage.getItem('allowed_actions');\n    if (allowed_actions === null) {\n      return undefined;\n    } else {\n      return JSON.parse(allowed_actions);\n    }\n  }\n\n  /**\n  * Deletes the token from the local storage\n  */\n  removeToken() {\n    localStorage.removeItem('token');\n  }\n\n  /**\n  * Deletes the user from the local storage\n  */\n  removeUser() {\n    localStorage.removeItem('user');\n  }\n\n  /**\n  * Deletes the allowed_actions from the local storage\n  */\n  removeAllowedActions() {\n    localStorage.removeItem('allowed_actions');\n  }\n\n  /**\n  * Stores a given the token in the local storage, replacing the previous token, if any\n  * @param {string} token the token to be stored\n  */\n  storeToken(token: string) {\n    localStorage.removeItem('token');\n    localStorage.setItem('token', JSON.stringify(token));\n  }\n\n  /**\n  * Stores a given the user in the local storage, replacing the previous user, if any\n  * @param {string} user the user to be stored\n  */\n  storeUser(user: string) {\n    localStorage.removeItem('user');\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  /**\n  * Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n  * @param {string} permission the user allowed_actions to be stored\n  */\n  storeAllowedActions(allowed_actions: Object) {\n    this.removeAllowedActions();\n    localStorage.setItem('allowed_actions', JSON.stringify(allowed_actions));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Set of buttons used to trigger actions over AlarmService\nContains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons\n            \n\n            \n                styleUrls\n                buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the buttons\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Set of buttons used to trigger actions over AlarmService\n * Contains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n */\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the buttons\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBroadcastRate\n                            \n                            \n                                getBroadcastThreshold\n                            \n                            \n                                getConfigurationData\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastRate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastRate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast rate from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastRate' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastThreshold\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastThreshold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast threshold from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastThreshold' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:23\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:28\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : BackendUrls.CDB_IAS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:18\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {forkJoin as observableForkJoin,  BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Rx';\nimport { BackendUrls } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { Iasio } from '../data/iasio';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = BackendUrls.CDB_IAS;\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return this.getConfigurationData().subscribe((res) => {\n      this.iasConfiguration = res;\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {json} IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get refresh broadcast rate from IAS configuration data\n  * @returns {number} contains the 'broadcastRate' in seconds\n  */\n  getBroadcastRate(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastRate']);\n    } catch (e) {\n      value = 10;\n    }\n    return value;\n  }\n\n  /**\n  * Get refresh broadcast threshold from IAS configuration data\n  * @returns {number} contains the 'broadcastThreshold' in seconds\n  */\n  getBroadcastThreshold(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastThreshold']);\n    } catch (e) {\n      value = 11;\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the services and data models\n\n            \n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AlarmService\n                            \n                            \n                                     CdbService\n                            \n                            \n                                     HttpClientService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AlarmService } from './alarm.service';\nimport { UserService } from './user.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\n\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClient,\n    HttpClientService,\n    UserService\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n  Modules\n  HealthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the components associated to the health of the IAS\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HealthSummaryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    HealthSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                health-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService, httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:21\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:24\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:52\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { HttpClientService } from '../../data/http-client.service';\nimport { BackendUrls } from '../../settings';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.scss']\n})\nexport class HealthSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n    private httpClient: HttpClientService\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.loadAlarmsConfig();\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this.alarmService.get(this.alarmId);\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const summary_url = BackendUrls.HEALTH_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.alarmId = response as string;\n        }\n      }\n    });\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-valid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-valid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-valid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-valid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-invalid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_medium: Assets.ICONS + 'ias_health-invalid-low.svg',\n      set_high: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-invalid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              IAS HEALTH\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    IAS HEALTH                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                read_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:14\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HTTP Service used to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nread_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Proesses the url for the request by adding the base url for http requests\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the processed target url\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from '../auth/auth.service';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /**\n  * Builds an instance of the service\n  * @param {HttpClient} http Angular HTTP Service used to perform HTTP requests\n  * @param {AuthService} authService service used to check and handle authorization\n  */\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.authService.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.authService.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param {string} url target url\n  * @returns {Response} the response of the request\n  */\n  get(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.get(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.post(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.put(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param {string} url target url with the selected object id\n  * @returns {Response} the response of the request\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.delete(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Proesses the url for the request by adding the base url for http requests\n  * @param {string} url target url\n  * @returns {string} the processed target url\n  */\n  read_url(url: string): string {\n    return environment.httpUrl + url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  IasMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for the required Angular Material components\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clear_invalid\n                            \n                            \n                                clear_valid\n                            \n                            \n                                maintenance\n                            \n                            \n                                priority_0\n                            \n                            \n                                priority_1\n                            \n                            \n                                priority_2\n                            \n                            \n                                priority_3\n                            \n                            \n                                priority_4\n                            \n                            \n                                set_invalid\n                            \n                            \n                                set_valid\n                            \n                            \n                                unknown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:15\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'maintenance-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in maintenance state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_0:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-0.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority zero (clear) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_1:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-1.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority low \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_2:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-2.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority medium \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_3\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_3:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-3.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority high \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_4\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority_4:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-4.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority critical \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_invalid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_invalid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_valid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_valid:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     \n\n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'unknown-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in unknown state \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Assets } from '../../settings';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Reference to the icon used to display Alarms in clear and valid states */\n  clear_valid = Assets.ICONS + 'clear-valid.svg';\n\n  /** Reference to the icon used to display Alarms in clear and invalid states */\n  clear_invalid = Assets.ICONS + 'clear-invalid.svg';\n\n  /** Reference to the icon used to display Alarms in unknown state */\n  unknown = Assets.ICONS + 'unknown-valid.svg';\n\n  /** Reference to the icon used to display Alarms in maintenance state */\n  maintenance = Assets.ICONS + 'maintenance-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and valid states */\n  set_valid = Assets.ICONS + 'set-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and invalid states */\n  set_invalid = Assets.ICONS + 'set-invalid.svg';\n\n  /** Reference to the icon used to display Alarms with priority zero (clear) */\n  priority_0 = Assets.ICONS + 'priority-0.svg';\n\n  /** Reference to the icon used to display Alarms with priority low */\n  priority_1 = Assets.ICONS + 'priority-1.svg';\n\n  /** Reference to the icon used to display Alarms with priority medium */\n  priority_2 = Assets.ICONS + 'priority-2.svg';\n\n  /** Reference to the icon used to display Alarms with priority high */\n  priority_3 = Assets.ICONS + 'priority-3.svg';\n\n  /** Reference to the icon used to display Alarms with priority critical */\n  priority_4 = Assets.ICONS + 'priority-4.svg';\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    LEGEND\n\n    \n      \n\n        \n\n          \n            \n               Clear Valid\n            \n            \n               Clear Invalid\n            \n          \n\n          \n            \n               Set Valid\n            \n            \n               Set Invalid\n            \n          \n\n        \n\n        \n          \n             Maintenance\n          \n          \n             Unknown\n          \n        \n\n        \n\n          \n            \n               Low\n            \n            \n               Medium\n            \n          \n\n          \n            \n               High\n            \n            \n               Critical\n            \n          \n\n        \n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    LEGEND                                                       Clear Valid                                       Clear Invalid                                                           Set Valid                                       Set Invalid                                                             Maintenance                                 Unknown                                                               Low                                       Medium                                                           High                                       Critical                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component that defines the login form\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                message\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder used to build forms\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Performs the login, by calling the login() function of AuthService passing the user and password retrieved from the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Performs the logout, by calling the logout() function of AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the component and defines its form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetErrorMessage(error: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Sets the errorMessage to display, based on the status code of the error returned by the request.\nIf the status code is 400, it shows that the credentials are not valid\nIf the status code is not 400, it shows that there was a problem communicating with the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the error returned by the request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:53\n                            \n                        \n\n                \n                    \n                        service used to check and handle authorization\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                        Error message to be displayed if the ogin is not successful\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        Message with the current login status, to be displayed in the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the password from the form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:54\n                            \n                        \n\n                \n                    \n                        Angular router used to navigate the application\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the username from the form\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from '../auth.service';\n\n/**\n * Component that defines the login form\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Message with the current login status, to be displayed in the component\n   */\n  message: string;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Form control used to retrieve the username from the form\n   */\n  user: FormControl;\n\n  /**\n   * Form control used to retrieve the password from the form\n   */\n  password: FormControl;\n\n\n  /**\n   * Error message to be displayed if the ogin is not successful\n   */\n  errorMessage = undefined;\n\n\n  /**\n   * Builds an instance of the component\n   * @param {FormBuilder} formBuilder Angular FormBuilder used to build forms\n   * @param {AuthService} authService service used to check and handle authorization\n   * @param {Router} router Angular router used to navigate the application\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    public authService: AuthService,\n    public router: Router,\n    private spinnerService: NgxSpinnerService\n  ) {\n  }\n\n  /**\n   * Initializes the component and defines its form\n   */\n  ngOnInit() {\n    this.errorMessage = undefined;\n    this.user = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [Validators.required]);\n    this.formGroup = this.formBuilder.group({\n      user: this.user,\n      password: this.password,\n    });\n  }\n\n  /**\n   * Performs the login, by calling the login() function of {@link AuthService} passing the user and password retrieved from the form\n   */\n  login() {\n    this.errorMessage = undefined;\n    this.spinnerService.show();\n    this.authService.login(\n      this.formGroup.controls.user.value,\n      this.formGroup.controls.password.value,\n    ).subscribe(\n      (response) => {\n        if (response === true) {\n          // Get the redirect URL from our auth service\n          // If no redirect has been set, use the default\n          const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '';\n          // Redirect the user\n          this.router.navigate([redirect]);\n        }\n        this.spinnerService.hide();\n      },\n      (error) => {\n        this.spinnerService.hide();\n        this.setErrorMessage(error);\n      }\n    );\n  }\n\n  /**\n   * Performs the logout, by calling the logout() function of {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Sets the {@link errorMessage} to display, based on the status code of the error returned by the request.\n   * If the status code is 400, it shows that the credentials are not valid\n   * If the status code is not 400, it shows that there was a problem communicating with the server.\n   * @param {Error} error the error returned by the request\n   */\n  setErrorMessage(error) {\n    if (error.status === 400) {\n      this.errorMessage = 'The credentials provided are not valid';\n    } else {\n      this.errorMessage = 'There was an error communicating with the Server';\n      console.error('Error communicating with Server: ', error);\n    }\n    this.user.setErrors({'incorrect': true});\n    this.password.setErrors({'incorrect': true});\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n       IAS ALMA \n    \n  \n  \n    \n        \n            \n                User\n                \n            \n            \n                Password\n                \n                 {{errorMessage}} \n            \n            \n                \n                  Login\n                \n            \n        \n    \n\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             IAS ALMA                                                 User                                                        Password                                 {{errorMessage}}                                                           Login                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component used to display a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapConfig\n                            \n                            \n                                mapdataAvailable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                    \n                        contains the configuration to draw the map\n\n                        \n                            Default value : {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapdataAvailable\n                    \n                    \n                        Defines wether or no there is data available to draw the map\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Initiates the component when it is displayed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output } from '@angular/core';\n\n/**\n* Reusable component used to display a map\n*/\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  /**\n  * Defines wether or no there is data available to draw the map\n  */\n  @Input() mapdataAvailable = false;\n\n  /**\n  * contains the configuration to draw the map\n  */\n  @Input() mapConfig = {};\n\n  /**\n  * Builds an instance of the component\n  */\n  constructor() { }\n\n  /**\n  * Initiates the component when it is displayed\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n  \n\n\n\n\n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n  Modules\n  MapModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MapComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MapService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MapComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map/map.component';\nimport { MapService } from './map.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    MapComponent,\n  ],\n  providers: [\n    MapService\n  ],\n  exports: [\n    MapComponent,\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the maps\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSVGPaths\n                            \n                            \n                                mapdataProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.service.ts:7\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSVGPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSVGPaths(pathsGroup: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Transforms a group of paths into svgPaths\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathsGroup\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    svgPaths\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapdataProcessing\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapdataProcessing(placemarksGroups: , pathsGroups: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Scaling and calculation of max and min values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemarksGroups\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of groups of placemarks\n\n                                                        \n                                                \n                                                \n                                                        pathsGroups\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    The viewbox: list of 4 numbers used to define the size of the map\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n* Service used to handle the maps\n*/\n@Injectable()\nexport class MapService {\n\n  /**\n  * Builds an instance of the service\n  */\n  constructor() { }\n\n  /**\n  * Transforms a group of paths into svgPaths\n  * @param {any} pathsGroup group of paths\n  * @returns {any} svgPaths\n  */\n  getSVGPaths(pathsGroup) {\n    const svgPaths = [];\n    for (let i = 0; i  0) {\n      dy = -1.0 * maxCY;\n    }\n    for (let k = 0; k \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialSandboxComponent.html":{"url":"components/MaterialSandboxComponent.html","title":"component - MaterialSandboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialSandboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.component.ts\n\n\n    \n        Description\n    \n    \n        Component that displays some Angular Material Elements.\nUseful to check how the application would look if it includes those elements\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sandbox\n            \n\n            \n                styleUrls\n                material-sandbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-sandbox.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/material-sandbox/material-sandbox.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Executed when initiating the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component that displays some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.component.html',\n  styleUrls: ['./material-sandbox.component.scss']\n})\nexport class MaterialSandboxComponent implements OnInit {\n\n  /**\n  * Constructor of the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when initiating the component\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        Primary\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nAccent\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nWarn\n\n   900 \n   800 \n   700 \n   600 \n   500 \n   400 \n   300 \n   200 \n   100 \n   50 \n\n\n   A700 \n   A400 \n   A100 \n\n\nBackground\n\n   status-bar \n   app-bar \n   background \n   hover \n   card \n   dialog \n   disabled-button \n   warning \n\n\n   raised-button \n   focused-button \n   selected-button \n   selected-disabled-button \n   disabled-button-toggle \n   unselected-chip \n   disabled-list-option \n\n\nForeground\n\n   base \n   divider \n   dividers \n   disabled \n   disabled-button \n   disabled-text \n\n\n   hint-text \n   secondary-text \n   icon \n   icons \n   text \n   slider-min \n   slider-off \n   slider-off-active \n\n\n\n\n\n\nMaterial Toggle\nDefault \nPrimary \nAccent \nWarn\n\nBasic Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nRaised Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFlat Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nIcon Buttons\n\n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n\n\nFab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nMini Fab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\n\n  \n    \n    Shiba Inu\n    Dog Breed\n  \n  \n  \n    \n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    \n  \n  \n    LIKE\n    SHARE\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Primary   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Accent   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Warn   900    800    700    600    500    400    300    200    100    50    A700    A400    A100 Background   status-bar    app-bar    background    hover    card    dialog    disabled-button    warning    raised-button    focused-button    selected-button    selected-disabled-button    disabled-button-toggle    unselected-chip    disabled-list-option Foreground   base    divider    dividers    disabled    disabled-button    disabled-text    hint-text    secondary-text    icon    icons    text    slider-min    slider-off    slider-off-active Material ToggleDefault Primary Accent WarnBasic Buttons  Basic  Primary  Accent  Warn  Disabled  LinkRaised Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFlat Buttons  Basic  Primary  Accent  Warn  Disabled  LinkIcon Buttons      favorite        favorite        favorite        favorite        favorite  Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkMini Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    Link          Shiba Inu    Dog Breed                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally      bred for hunting.            LIKE    SHARE  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialSandboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                overview-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.scss']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n      \n         ANTENNAS \n          \n        \n          \n        \n      \n      \n         WEATHER \n          \n        \n          \n        \n      \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 IAS HEALTH                                                          ANTENNAS                                                          WEATHER                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n  Modules\n  OverviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                OverviewCardComponent\n                            \n                            \n                                OverviewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AntennasModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    OverviewCardComponent\n                            \n                            \n                                    OverviewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { AntennasModule } from '../antennas/antennas.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    AntennasModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanActionOutlet\n                            \n                            \n                                goToAcknowledge\n                            \n                            \n                                goToAntennas\n                            \n                            \n                                goToLogin\n                            \n                            \n                                goToShelve\n                            \n                            \n                                goToWeather\n                            \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-routing/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cleanActionOutlet\n                            \n                            \n                        \n                    \n                \n                \n                    \ncleanActionOutlet()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Go to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Go to login and clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToWeather()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Go to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TabularViewComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TabularViewComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TabularViewComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TabularViewComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n  /**\n  * Go to the Antennas View\n  */\n  goToAntennas() {\n    this.router.navigate(['antennas']);\n  }\n\n  /**\n  * Go to the Weather View\n  */\n  goToWeather() {\n    this.router.navigate(['weather']);\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  goToAcknowledge(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['acknowledge', alarm_id]}}]);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  goToShelve(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['shelve', alarm_id]}}]);\n  }\n\n  /**\n  * Clean action outlet\n  */\n  cleanActionOutlet() {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n  * Go to login and clean action outlet\n  */\n  goToLogin() {\n    this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AlarmComponent\n                            \n                            \n                                AlarmHeaderComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AlarmComponent\n                            \n                            \n                                    AlarmHeaderComponent\n                            \n                            \n                                    StatusViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { ActionsModule } from '../actions/actions.module';\nimport { AlarmHeaderComponent } from './alarm-header/alarm-header.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  exports: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ],\n  entryComponents: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the button\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Handle click on shelve button, it triggers the shelve sidebar\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Object that represent the click DOM event\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavService:     SidenavService\n\n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:29\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n\n  /**\n   * Instantiates the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Defines wether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled() {\n    return !this.sidenavService.canClose;\n  }\n\n  /**\n  * Handle click on shelve button, it triggers the shelve sidebar\n  * @param {MouseEvent} event Object that represent the click DOM event\n  */\n  onClick(event: MouseEvent) {\n    this.sidenavService.goToShelve(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidenavService.html":{"url":"injectables/SidenavService.html","title":"injectable - SidenavService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SidenavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sidenav.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canClose\n                            \n                            \n                                lastAlarmId\n                            \n                            \n                                    Public\n                                shouldReload\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAndClean\n                            \n                            \n                                    Public\n                                goToAcknowledge\n                            \n                            \n                                    Public\n                                goToShelve\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setSidenav\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routingService: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routingService\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeAndClean\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAndClean()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav and cleans the actions outlet\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Opens the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSidenav(sidenav: MatSidenav)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Sets the reference to the sidenav\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenav\n                                                        \n                                                                    MatSidenav\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Reference to the sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Toggles the sidenav (open/close)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canClose:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:36\n                            \n                        \n\n                \n                    \n                        Defines wether or not the sidenav can be closed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                        Id of the last Alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shouldReload:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:18\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe status of the service connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenav:     MatSidenav\n\n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the sidenav \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs';\nimport { RoutingService } from '../app-routing/routing.service';\n\n/**\n* Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public shouldReload = new BehaviorSubject(false);\n\n  /**\n  * Id of the last {@link Alarm}\n  */\n  lastAlarmId = '';\n\n  /**\n   * Builds an instance of the service\n   */\n  constructor(\n    private routingService: RoutingService\n  ) { }\n\n  /** Reference to the sidenav */\n  private sidenav: MatSidenav;\n\n  /** Defines wether or not the sidenav can be closed */\n  public canClose = true;\n\n  /**\n  * Sets the reference to the sidenav\n  * @param {MatSidenav} sidenav Reference to the sidenav\n  */\n  public setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n  }\n\n  /**\n  * Opens the sidenav\n  */\n  public open() {\n    return this.sidenav.open();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  public close() {\n    return this.sidenav.close();\n  }\n\n  /**\n  * Closes the sidenav and cleans the actions outlet\n  */\n  public closeAndClean() {\n    this.routingService.cleanActionOutlet();\n    return this.close();\n  }\n\n  /**\n  * Toggles the sidenav (open/close)\n  */\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  public goToAcknowledge(alarm_id: string) {\n    this.routingService.goToAcknowledge(alarm_id);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  public goToShelve(alarm_id: string) {\n    if (alarm_id === this.lastAlarmId) {\n      this.shouldReload.next(true);\n    } else {\n      this.lastAlarmId = alarm_id;\n    }\n    this.routingService.goToShelve(alarm_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsPrioritySet\n                            \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type :    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                        \n                            Default value : true\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm \n\n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the alarmTags\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsPrioritySet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsPrioritySet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Set of alarm priority icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmIconsUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, OperationalMode } from '../../data/alarm';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { Assets } from '../../settings';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /** Dash-separated string with the tags that define the state of an alarm */\n  @Input() value = '';\n\n  /** List of tags that define the state of an alarm */\n  private alarmTags = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Set of alarm priority icons */\n  public alarmIconsPrioritySet: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid.svg',\n      set_critical: Assets.ICONS + 'set-valid.svg',\n      unknown: Assets.ICONS + 'unknown-valid.svg',\n      maintenance: Assets.ICONS + 'maintenance-valid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid.svg',\n      set_critical: Assets.ICONS + 'set-invalid.svg',\n      unknown: Assets.ICONS + 'unknown-invalid.svg',\n      maintenance: Assets.ICONS + 'maintenance-invalid.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for priorities */\n    this.alarmIconsPrioritySet = new AlarmImageSet({\n      clear: Assets.ICONS + 'priority-0.svg',\n      set_low: Assets.ICONS + 'priority-1.svg',\n      set_medium: Assets.ICONS + 'priority-2.svg',\n      set_high: Assets.ICONS + 'priority-3.svg',\n      set_critical: Assets.ICONS + 'priority-4.svg',\n      unknown: Assets.ICONS + 'priority-0.svg',\n      maintenance: Assets.ICONS + 'priority-0.svg',\n      shelved: Assets.ICONS + 'priority-0.svg',\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n  Modules\n  TabularModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Table view\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LegendComponent\n                            \n                            \n                                TabularViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TabularViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { StatusViewComponent } from '../shared/status-view/status-view.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ActionsModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TabularViewComponent,\n  ],\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutOption.html":{"url":"interfaces/TimeoutOption.html","title":"interface - TimeoutOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeoutOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/shelve/shelve.component.ts\n        \n\n            \n                Description\n            \n            \n                Definition of a timeout option for shelving an alarm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual value to be sent to the server \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to be displayed to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { UserService } from '../../data/user.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '00:15:00', viewValue: '15 minutes'},\n    {value: '00:30:00', viewValue: '30 minutes'},\n    {value: '01:00:00', viewValue: '1 hour'},\n    {value: '02:00:00', viewValue: '2 hours'},\n    {value: '06:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * FormControl for the user who performs the action\n  */\n  user: FormControl;\n\n  /**\n   * Selected user\n   */\n  user_selected: string;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n  * Stores the error message returned by the Webserver if a shelve or unshelve request fails\n  */\n  errorMessage = '';\n\n  /**\n  * Stores the message with the information of when the alarm has been shelved and for how long\n  */\n  shelvedAtMessage = '';\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {NgxSpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {UserService} userService Service to handle request to the users api\n   * @param {AuthService} authService Service to ask for the logged in user\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.user = new FormControl('', [Validators.required]);\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.shelvedAtMessage = '';\n    this.form = this.formBuilder.group({\n      user: this.user,\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.route.paramMap.subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.reload();\n    });\n    this.sidenavService.shouldReload.subscribe(\n      value => {\n        if (value === true) {\n          this.reload();\n        }\n      }\n    );\n    this.sidenavService.open();\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    const allowedShelve = this.authService.getAllowedActions()['can_shelve'];\n    const allowedUnshelve = this.authService.getAllowedActions()['can_unshelve'];\n    const isAllowed = allowedShelve && allowedUnshelve;\n    return (this.alarm.shelved || this.form.valid) && isAllowed;\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    let action;\n    if (!this.alarm.shelved) {\n      action = 'Shelving';\n    } else {\n      action = 'Unshelving';\n    }\n    if (this.requestStatus === 1) {\n      return action + ' results';\n    } else if (this.requestStatus === -1 ) {\n      return 'Error ' + action;\n    } else if (this.requestStatus === -2) {\n      return 'Action not allowed';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        response = 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        response = 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    } else if (this.requestStatus === -2 ) {\n      response = 'The logged in user (' + this.authService.getUser();\n      if (!this.alarm.shelved) {\n        response += ') does not have permissions to perform the shelve.';\n      } else {\n        response += ') does not have permissions to perform the unshelve.';\n      }\n    }\n    return response;\n  }\n\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.shelvedAtMessage = '';\n    this.alarm = this.alarmService.get(this.alarm_id);\n    if (this.alarm.shelved) {\n      this.requestShelveInfo();\n    }\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Requests the alarm shelving info to the Webserver\n   */\n  requestShelveInfo(): void {\n    this.alarmService.getShelveRegistries(this.alarm_id, 1).subscribe(\n        (response) => {\n          const registry = response[0];\n          this.shelvedAtMessage = 'This Alarm was shelved at ' + registry['shelved_at'] +\n          ' with a duration of ' + this.timeouts.find(t => t.value === registry['timeout']).viewValue;\n        },\n        (error) => {\n          console.log('Error: ', error);\n          return error;\n        }\n      );\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(\n        this.alarm.core_id, message, timeout, this.user_selected\n      ).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error) => {\n            if (error.status === 403) {\n              this.requestStatus = -2;\n            } else {\n              this.requestStatus = -1;\n            }\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Class that models a User\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Optional email \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique username \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {User[]} the list of users\n  */\n  requestUsersList() {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to manage information about user accounts\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestUsersList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestUsersList\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequestUsersList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/user.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Get the list of users in the operators group\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the list of users\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                        List of authorized users\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {User[]} the list of users\n  */\n  requestUsersList() {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherBackupWsMarkerComponent.html":{"url":"components/WeatherBackupWsMarkerComponent.html","title":"component - WeatherBackupWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherBackupWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display backups weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-backup-ws-marker\n            \n\n            \n                styleUrls\n                weather-backup-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-backup-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm corresponding to the weather station\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display backups weather station in a map\n */\n@Component({\n  selector: 'app-weather-backup-ws-marker',\n  templateUrl: './weather-backup-ws-marker.component.html',\n  styleUrls: ['./weather-backup-ws-marker.component.scss']\n})\nexport class WeatherBackupWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the {@link Alarm} corresponding to the weather station\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherBackupWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather/weather.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms both in a sidebar (instantiated in a WeatherSidebar),\nand a map (instantiated by a WeatherMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelectedStation(selectedStation: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedStation\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStation:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { WeatherStationConfig } from '../weather.service';\n\n/**\n* Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\n* and a map (instantiated by a {@link WeatherMap})\n*/\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedStation: WeatherStationConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor(\n  ) { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {WeatherStationConfig}\n   */\n  changeSelectedStation(selectedStation: WeatherStationConfig): void {\n    this.selectedStation = selectedStation;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherDataMarkerComponent.html":{"url":"components/WeatherDataMarkerComponent.html","title":"component - WeatherDataMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherDataMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display the weather station summary information in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-data-marker\n            \n\n            \n                styleUrls\n                weather-data-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-data-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Variable to manage if the marker should be highlighted from hover\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Variable to manage if the marker should be highlighted\nfor example after the selection from a parent component\n\n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:36\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\n\n\n/**\n * Marker to display the weather station summary information in a map\n */\n@Component({\n  selector: 'app-weather-data-marker',\n  templateUrl: './weather-data-marker.component.html',\n  styleUrls: ['./weather-data-marker.component.scss']\n})\nexport class WeatherDataMarkerComponent implements OnInit {\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Variable to manage if the marker should be highlighted\n  * for example after the selection from a parent component\n  */\n  @Input() selected = false;\n\n  /** Variable to manage if the marker should be highlighted from hover\n  */\n  @Input() onHover = false;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() { }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherDataMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Weather system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeatherBackupWsMarkerComponent\n                            \n                            \n                                WeatherComponent\n                            \n                            \n                                WeatherDataMarkerComponent\n                            \n                            \n                                WeatherMapComponent\n                            \n                            \n                                WeatherPrimaryWsConnectorComponent\n                            \n                            \n                                WeatherPrimaryWsMarkerComponent\n                            \n                            \n                                WeatherSidebarComponent\n                            \n                            \n                                WeatherStationSidebarComponent\n                            \n                            \n                                WeatherSummaryComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     WeatherService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ActionsModule\n                            \n                            \n                                    DataModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    MapModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WeatherSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\nimport { WeatherMapComponent } from './weather-map/weather-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherSidebarComponent } from './weather-sidebar/weather-sidebar.component';\nimport { WeatherService } from './weather.service';\nimport { WeatherStationSidebarComponent } from './weather-station-sidebar/weather-station-sidebar.component';\n\nimport {\n  WeatherBackupWsMarkerComponent\n} from './weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component';\nimport {\n  WeatherPrimaryWsMarkerComponent\n} from './weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component';\nimport {\n  WeatherPrimaryWsConnectorComponent\n} from './weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component';\nimport {\n  WeatherDataMarkerComponent\n} from './weather-map-markers/weather-data-marker/weather-data-marker.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    ActionsModule,\n    DataModule,\n    SharedModule,\n    MapModule,\n    IasMaterialModule,\n  ],\n  providers: [\n    WeatherService\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n    WeatherMapComponent,\n    WeatherComponent,\n    WeatherSidebarComponent,\n    WeatherStationSidebarComponent,\n    WeatherBackupWsMarkerComponent,\n    WeatherDataMarkerComponent,\n    WeatherPrimaryWsMarkerComponent,\n    WeatherPrimaryWsConnectorComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsConnectorComponent.html":{"url":"components/WeatherPrimaryWsConnectorComponent.html","title":"component - WeatherPrimaryWsConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n\n\n    \n        Description\n    \n    \n        Line connector between the weather station marker and the summarized weather\ninformation marker in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-connector\n            \n\n            \n                styleUrls\n                weather-primary-ws-connector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-connector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPath\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                coords\n                            \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        coords\n                    \n                    \n                        Array of coordinates for the connector path \n\n                            \n                            Type :    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                    \n                        Value to highlight the connector for hover related events \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Value to highlight the connector \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns the svg path used to draw the line in the map\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    svg path that represent the line\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n\n/**\n * Line connector between the weather station marker and the summarized weather\n * information marker in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-connector',\n  templateUrl: './weather-primary-ws-connector.component.html',\n  styleUrls: ['./weather-primary-ws-connector.component.scss']\n})\nexport class WeatherPrimaryWsConnectorComponent implements OnInit {\n\n  /** Array of coordinates for the connector path */\n  @Input() coords: [[0, 0]];\n\n  /** Value to highlight the connector */\n  @Input() selected: false;\n\n  /** Value to highlight the connector for hover related events */\n  @Input() onHover: false;\n\n  /**\n  * Builds an instance of the component */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the svg path used to draw the line in the map\n   * @returns {string} svg path that represent the line\n   */\n  getPath(): string {\n    let pathString = '';\n    let counter = 0;\n    for (const coord of this.coords) {\n      if (counter > 0) {\n        pathString += 'L ' + coord[0] + ' ' + coord[1] + ' ';\n      } else {\n        pathString += 'M ' + coord[0] + ' ' + coord[1] + ' ';\n      }\n      counter += 1;\n    }\n    return pathString;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsMarkerComponent.html":{"url":"components/WeatherPrimaryWsMarkerComponent.html","title":"component - WeatherPrimaryWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display primary weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-marker\n            \n\n            \n                styleUrls\n                weather-primary-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-marker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Station config related to the component \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:20\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { WeatherService, WeatherStationConfig } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display primary weather station in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-marker',\n  templateUrl: './weather-primary-ws-marker.component.html',\n  styleUrls: ['./weather-primary-ws-marker.component.scss']\n})\nexport class WeatherPrimaryWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.station);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the WeatherModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                markerImageSet\n                            \n                            \n                                    Public\n                                markerImageUnreliableSet\n                            \n                            \n                                    Public\n                                padsStatus\n                            \n                            \n                                    Public\n                                padsStatusAvailable\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                weatherMapName\n                            \n                            \n                                    Public\n                                weatherStationsConfig\n                            \n                            \n                                    Public\n                                weatherSummaryConfig\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                getPadsStatus\n                            \n                            \n                                initialize\n                            \n                            \n                                loadImages\n                            \n                            \n                                loadPadsStatus\n                            \n                            \n                                loadWeatherStationsConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:89\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:115\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:125\n                            \n                        \n\n\n                \n                    \n                            Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the group\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:158\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:134\n                            \n                        \n\n\n                \n                    \n                            Loads the pads status in the related variable of this service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the group\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWeatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWeatherStationsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:146\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _initialized:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:89\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:50\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:62\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:59\n                            \n                        \n\n                \n                    \n                        Set of Marker icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markerImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:71\n                            \n                        \n\n                \n                    \n                        Set of Marker Unreliable icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        padsStatus:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:83\n                            \n                        \n\n                \n                    \n                        Stores the response of the pads status request to the websver \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatusAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        padsStatusAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:86\n                            \n                        \n\n                \n                    \n                        Variable to check if pads status is available \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:53\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:65\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherMapName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherMapName:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:80\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherStationsConfig:     WeatherStationConfig[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:77\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm Ids of the Weather Stations, indexed by placemark *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherSummaryConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherSummaryConfig:     WeatherStationConfig\n\n                    \n                \n                    \n                        \n                            Type :     WeatherStationConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:74\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the weather summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:56\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:68\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** Group of placemarks who the alarm belongs */\n  public group: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Stores the response of the pads status request to the websver */\n  public padsStatus = null;\n\n  /** Variable to check if pads status is available */\n  public padsStatusAvailable = new BehaviorSubject(false);\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this.loadPadsStatus('');\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n  * @param {string} group the group\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getPadsStatus(group: string): Observable {\n    const url = BackendUrls.PADS_STATUS + group;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Loads the pads status in the related variable of this service\n  * @param {string} group the group\n  */\n  loadPadsStatus(group: string) {\n    this.getPadsStatus(group).subscribe(\n      (response) => {\n        this.padsStatusAvailable.next(false);\n        this.padsStatus = response;\n        this.padsStatusAvailable.next(true);\n    });\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSidebarComponent.html":{"url":"components/WeatherSidebarComponent.html","title":"component - WeatherSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms in an interactive sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-sidebar\n            \n\n            \n                styleUrls\n                weather-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyAntennas\n                            \n                            \n                                getAlarm\n                            \n                            \n                                getAntennas\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                panelClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, clipboardService: ClipboardService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        clipboardService\n                                                  \n                                                        \n                                                                    ClipboardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to copy text to clipboard\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to notify user actions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        panelClicked\n                    \n                    \n                        Event emitted to notify when an weather station is selected \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyAntennas(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Copy list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the data was copied to the clipboard, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Indicates if the weather station is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(stationConfig: WeatherStationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Action performed when the weather station is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    WeatherStationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string, action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            Triggers the snackBar during 20 seconds and show the information specified\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the snackbar\n\n                                                        \n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the button of the snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to notify user actions\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:34\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n* Component used to display Weather Alarms in an interactive sidebar\n*/\n@Component({\n  selector: 'app-weather-sidebar',\n  templateUrl: './weather-sidebar.component.html',\n  styleUrls: ['./weather-sidebar.component.scss']\n})\nexport class WeatherSidebarComponent implements OnInit {\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedStation: WeatherStationConfig = null;\n\n  /** Event emitted to notify when an weather station is selected */\n  @Output() panelClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {ClipboardService} clipboardService Service used to copy text to clipboard\n  * @param {MatSnackBar} snackBar Service used to notify user actions\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private clipboardService: ClipboardService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  * Initializes the {@link WeatherService} if not already initialized\n  */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n  * Copy list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {boolean} true if the data was copied to the clipboard, false if not\n  */\n  copyAntennas(stationConfig: WeatherStationConfig): boolean {\n    const antennas = this.getAntennas(stationConfig);\n    const result = antennas.join(',');\n    const status = this.clipboardService.copyFromContent(result);\n    let message = '';\n    if (status) {\n      message = 'Antennas copied to clipboard';\n    } else {\n      message = 'ERROR: Antennas were not copied!';\n    }\n    this.openSnackBar(message, 'Done');\n    return status;\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(stationConfig: WeatherStationConfig): string[] {\n    const response = [];\n    if ( this.weatherService.padsStatus && stationConfig.group !== '' ) {\n        const pads = this.weatherService.padsStatus[stationConfig.group];\n        for (const pad_name in pads) {\n            if (pads[pad_name]) {\n                response.push(pads[pad_name]);\n            }\n        }\n    }\n    return response.sort();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Indicates if the weather station is selected or not\n  * @param {WeatherStationConfig} stationConfig configuration of the weather station\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(stationConfig: WeatherStationConfig) {\n    return this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark);\n  }\n\n  /**\n  * Action performed when the weather station is clicked\n  * @param {WeatherStationConfig} stationConfig configuration of the clicked weather station\n  */\n  onClick(stationConfig: WeatherStationConfig) {\n    if ( this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark) ) {\n      this.selectedStation = null;\n    } else {\n      this.selectedStation = stationConfig;\n    }\n    this.panelClicked.emit(this.selectedStation);\n  }\n\n  /**\n   * Triggers the snackBar during 20 seconds and show the information specified\n   * @param {string} message Message to show in the snackbar\n   * @param {string} action Message to show in the button of the snackbar\n   */\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 20000,\n      panelClass: ['snackbar']\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    WEATHER STATIONS\n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n              Station -->\n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                \n              \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n          \n          \n          \n             Nearby Antennas \n            \n               &nbsp;  Copy antennas \n            \n          \n          \n            \n               {{antenna}} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      WEATHER STATIONS                                                                                          Stationearby Antennas                               Copy antennas                                                            {{antenna}}                                           '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherStationConfig.html":{"url":"classes/WeatherStationConfig.html","title":"class - WeatherStationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherStationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Stores the IDs of the Alarm objects associated to a WeatherStation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                humidity\n                            \n                            \n                                    Public\n                                placemark\n                            \n                            \n                                    Public\n                                station\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:31\n                            \n                        \n\n                \n                    \n                            Builds a new WeatherStationConfig instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:19\n                            \n                        \n\n                \n                    \n                        Group of placemarks who the alarm belongs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidity:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:31\n                            \n                        \n\n                \n                    \n                        ID of the humidity Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placemark:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:16\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to the location on the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            station\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        station:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:22\n                            \n                        \n\n                \n                    \n                        ID of the main Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        temperature:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:25\n                            \n                        \n\n                \n                    \n                        ID of the temperature Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windspeed:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:28\n                            \n                        \n\n                \n                    \n                        ID of the windspeed Alarm of the Weather Station \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Alarm } from '../data/alarm';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n\n/**\n* Stores the IDs of the {@link Alarm} objects associated to a WeatherStation\n*/\nexport class WeatherStationConfig {\n\n  /** ID to map the {@link Alarm} to the location on the map */\n  public placemark: string;\n\n  /** Group of placemarks who the alarm belongs */\n  public group: string;\n\n  /** ID of the main {@link Alarm} of the Weather Station */\n  public station: string;\n\n  /** ID of the temperature {@link Alarm} of the Weather Station */\n  public temperature: string;\n\n  /** ID of the windspeed {@link Alarm} of the Weather Station */\n  public windspeed: string;\n\n  /** ID of the humidity {@link Alarm} of the Weather Station */\n  public humidity: string;\n\n  /**\n  * Builds a new WeatherStationConfig instance\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: WeatherStationConfig;\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: WeatherStationConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Stores the response of the pads status request to the websver */\n  public padsStatus = null;\n\n  /** Variable to check if pads status is available */\n  public padsStatusAvailable = new BehaviorSubject(false);\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this.loadPadsStatus('');\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n  * @param {string} group the group\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getPadsStatus(group: string): Observable {\n    const url = BackendUrls.PADS_STATUS + group;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Loads the pads status in the related variable of this service\n  * @param {string} group the group\n  */\n  loadPadsStatus(group: string) {\n    this.getPadsStatus(group).subscribe(\n      (response) => {\n        this.padsStatusAvailable.next(false);\n        this.padsStatus = response;\n        this.padsStatusAvailable.next(true);\n    });\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as WeatherStationConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as WeatherStationConfig;\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-low.svg',\n      set_medium: Assets.ICONS + 'hum-valid-low.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-low.svg',\n      set_medium: Assets.ICONS + 'temp-valid-low.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-low.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-low.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-low.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-valid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_medium: Assets.ICONS + 'weather_s-invalid-medium.svg',\n      set_high: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_s-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_s-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_s-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherStationSidebarComponent.html":{"url":"components/WeatherStationSidebarComponent.html","title":"component - WeatherStationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherStationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display an item containing a weather station summary in the interactive Sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-station-sidebar\n            \n\n            \n                styleUrls\n                weather-station-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-station-sidebar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAlarm\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAlarm\n                    \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                    \n                        Weather station config object \n\n                            \n                            Type :    WeatherStationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Returns the corresponding highlighted class when the component is selected\n\n\n                            \n                            \n                            \n                                Returns :     \"\" | \"highlighted\"\n\n                            \n                                \n                                    the highlighted class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmService:     AlarmService\n\n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService, WeatherStationConfig } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Component to display an item containing a weather station summary in the interactive Sidebar\n */\n@Component({\n  selector: 'app-weather-station-sidebar',\n  templateUrl: './weather-station-sidebar.component.html',\n  styleUrls: ['./weather-station-sidebar.component.scss']\n})\nexport class WeatherStationSidebarComponent implements OnInit {\n\n  /** Weather station config object */\n  @Input() stationConfig: WeatherStationConfig;\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedAlarm: WeatherStationConfig = null;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  */\n  ngOnInit() { }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Returns the corresponding highlighted class when the component is selected\n  * @returns {string} the highlighted class\n  */\n  getClass() {\n    if (this.selectedAlarm && (this.selectedAlarm.station === this.stationConfig.station)) {\n      return 'highlighted';\n    }\n    return '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherStationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                weather-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, weatherService: WeatherService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:17\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle weather configuration data\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(keyword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the instance of the Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, initializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherService:     WeatherService\n\n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle weather configuration data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService } from '../weather.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.scss']\n})\nexport class WeatherSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {WeatherService} weatherService Service used to retrieve and handle weather configuration data\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public weatherService: WeatherService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Initiates the component, initializes the {@link WeatherService} if not already initialized\n   */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(keyword: string): Alarm {\n    if (this.weatherService.weatherSummaryConfig) {\n      return this.alarmService.get(this.weatherService.weatherSummaryConfig[keyword]);\n    }\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Weather View\n   */\n  redirect() {\n    this.routing.goToWeather();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              WIND SPEED\n              \n                \n              \n          \n      \n      \n          \n              HUMIDITY\n              \n                \n              \n          \n      \n      \n          \n              TEMPERATURE\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    WIND SPEED                                                                                          HUMIDITY                                                                                          TEMPERATURE                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Handle click on wiki button, it opens the url in another window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  /**\n  * Handle click on wiki button, it opens the url in another window\n  */\n  onClick(event) {\n    if (!this.url.startsWith('http://')) {\n      this.url = 'http://' + this.url;\n    }\n    window.open(this.url, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/actions/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                expectedTreeData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarmData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack/ack.component.ts\n            \n            \n                component\n            \n            \n                AckComponent\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/actions/buttons/buttons.component.ts\n            \n            \n                component\n            \n            \n                ButtonsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                component\n            \n            \n                ShelveComponent\n            \n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            \n                interface\n            \n            \n                TimeoutOption\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/sidenav.service.ts\n            \n            \n                injectable\n            \n            \n                SidenavService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/actions/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            \n                component\n            \n            \n                AntennaMarkerComponent\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map/antennas-map.component.ts\n            \n            \n                component\n            \n            \n                AntennasMapComponent\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n            \n            \n                component\n            \n            \n                AntennasSidebarComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-summary/antennas-summary.component.ts\n            \n            \n                component\n            \n            \n                AntennasSummaryComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas.service.ts\n            \n            \n                class\n            \n            \n                AntennaConfig\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas.service.ts\n            \n            \n                injectable\n            \n            \n                AntennasService\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas/antennas.component.ts\n            \n            \n                component\n            \n            \n                AntennasComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/app-routing/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                class\n            \n            \n                AlarmSounds\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                src/app/data/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/data/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/health/health-summary/health-summary.component.ts\n            \n            \n                component\n            \n            \n                HealthSummaryComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/map/fixtures.ts\n            \n            \n                variable\n            \n            \n                Map\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/map/map.service.ts\n            \n            \n                injectable\n            \n            \n                MapService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/map/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.component.ts\n            \n            \n                component\n            \n            \n                MaterialSandboxComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/overview/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/overview/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                AntennasSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            \n                variable\n            \n            \n                WeatherSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/alarm-header.component.ts\n            \n            \n                component\n            \n            \n                AlarmHeaderComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/tabular/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                alarms_date\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                datepipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                alarm_types\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockImagesSets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherStationsConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            \n                variable\n            \n            \n                mockWeatherSummaryConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherBackupWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherDataMarkerComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsConnectorComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n            \n            \n                component\n            \n            \n                WeatherPrimaryWsMarkerComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map/weather-map.component.ts\n            \n            \n                component\n            \n            \n                WeatherMapComponent\n            \n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                src/app/weather/weather-sidebar/weather-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherSidebarComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n            \n            \n                component\n            \n            \n                WeatherStationSidebarComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/weather/weather-summary/weather-summary.component.ts\n            \n            \n                component\n            \n            \n                WeatherSummaryComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather.service.ts\n            \n            \n                class\n            \n            \n                WeatherStationConfig\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/weather/weather/weather.component.ts\n            \n            \n                component\n            \n            \n                WeatherComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.docker.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.2\n        \n            @angular/cdk : ^6.4.3\n        \n            @angular/common : 6.1.2\n        \n            @angular/compiler : 6.1.2\n        \n            @angular/core : 6.1.2\n        \n            @angular/flex-layout : ^6.0.0-beta.17\n        \n            @angular/forms : 6.1.2\n        \n            @angular/http : 6.1.2\n        \n            @angular/material : ^6.4.3\n        \n            @angular/platform-browser : 6.1.2\n        \n            @angular/platform-browser-dynamic : 6.1.2\n        \n            @angular/platform-server : 6.1.2\n        \n            @angular/router : 6.1.2\n        \n            @ng-bootstrap/ng-bootstrap : ^2.1.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.7\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.22.2\n        \n            ngx-clipboard : ^11.1.3\n        \n            ngx-spinner : ^6.1.2\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.2.2\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 malfunctioning\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AntennasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    33 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
