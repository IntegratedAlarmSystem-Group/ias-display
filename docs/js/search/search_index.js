var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.101,1,0.605]],["body/components/AckButtonComponent.html",[0,0.198,1,1.012,2,0.832,3,0.11,4,0.083,5,0.69,6,0.69,7,1.087,8,0.642,9,0.083,10,5.605,11,6.093,12,2.878,13,0.27,14,1.379,15,1.056,16,3.962,17,3.262,18,3.458,19,3.797,20,4.768,21,0.791,22,0.939,23,5.453,24,0.69,25,1.285,26,1.145,27,1.266,28,0.821,29,4.926,30,0.821,31,4.307,32,0.359,33,0.917,34,1.166,35,4.248,36,0.732,37,6.738,38,5.307,39,5.875,40,1.012,41,4.543,42,1.696,43,0.82,44,0.703,45,3.463,46,6.745,47,6.745,48,0.757,49,4.768,50,0.884,51,0.884,52,0.69,53,0.013,54,0.537,55,0.741,56,0.741,57,1.895,58,3.36,59,0.902,60,4.215,61,3.262,62,4.768,63,5.875,64,3.091,65,1.17,66,1.952,67,3.972,68,2.267,69,6.161,70,3.091,71,5.468,72,0.692,73,2.046,74,1.491,75,3.972,76,2.181,77,3.458,78,3.297,79,1.491,80,3.972,81,2.358,82,1.131,83,2.938,84,4.307,85,4.307,86,4.307,87,3.262,88,4.307,89,4.768,90,4.768,91,0.975,92,3.972,93,2.801,94,3.972,95,2.267,96,4.307,97,3.962,98,3.687,99,3.687,100,3.972,101,0.235,102,1.131,103,0.124,104,3.463,105,2.878,106,0.741,107,0.11,108,0.019,109,0.975,110,1.639,111,0.909,112,3.463,113,3.463,114,3.463,115,1.13,116,0.95,117,2.245,118,1.232,119,3.128,120,0.821,121,3.128,122,3.128,123,3.972,124,3.972,125,1.584,126,2.267,127,3.297,128,1.385,129,1.784,130,2.512,131,1.584,132,1.191,133,1.646,134,2.512,135,1.47,136,1.432,137,1.526,138,4.307,139,2.024,140,1.232,141,3.972,142,2.034,143,2.134,144,1.784,145,1.784,146,2.678,147,0.395,148,0.95,149,0.95,150,0.69,151,1.171,152,0.69,153,0.95,154,0.596,155,0.69,156,0.574,157,0.69,158,0.596,159,1.087,160,0.553,161,0.95,162,0.596,163,0.69,164,0.596,165,0.69,166,0.596,167,0.95,168,0.596,169,0.95,170,0.574,171,0.69,172,0.596,173,0.642,174,1.171,175,0.574,176,0.69,177,0.619,178,0.939,179,1.087,180,0.596,181,1.087,182,0.596,183,1.087,184,0.596,185,0.69,186,0.596,187,0.69,188,0.596,189,0.666,190,0.596,191,0.69,192,0.574,193,0.69,194,0.596,195,0.596,196,0.983,197,0.666,198,1.087,199,0.596,200,0.69,201,0.596,202,0.596,203,0.69,204,0.596,205,0.596,206,0.596,207,0.596,208,0.574,209,0.69,210,0.596,211,1.049,212,0.596,213,0.596,214,0.596,215,0.574,216,0.69,217,0.596,218,0.531,219,0.95,220,0.596,221,0.69,222,0.574,223,0.642,224,0.596,225,1.102,226,0.642,227,0.975,228,0.574,229,0.69,230,0.596,231,0.451,232,0.619,233,0.596,234,0.821,235,0.69,236,0.596,237,0.596,238,0.596,239,0.596,240,0.596,241,0.596,242,0.666,243,0.69,244,0.69,245,0.006,246,0.008,247,0.006]],["title/modules/ActionsModule.html",[248,0.987,249,2.277]],["body/modules/ActionsModule.html",[1,1.25,3,0.148,4,0.112,9,0.112,11,4.193,27,1.033,35,4.255,53,0.013,59,0.712,101,0.293,103,0.166,105,3.858,107,0.148,108,0.025,147,0.529,154,1.25,156,1.145,186,1.25,214,1.25,215,1.204,241,1.25,242,0.893,245,0.008,246,0.01,247,0.008,248,1.304,249,4.861,250,2.045,251,1.491,252,2.991,253,2.207,254,3.112,255,2.991,256,4.642,257,4.642,258,4.642,259,4.642,260,4.642,261,3.876,262,3.283,263,3.71,264,2.858,265,2.296,266,2.045,267,5.324,268,2.858,269,2.858,270,3.105,271,2.296,272,5.324,273,5.324,274,7.216,275,4.193,276,4.193,277,3.858,278,5.324,279,5.22,280,4.802,281,3.176,282,4.802,283,2.86,284,3.009,285,1.348,286,2.494,287,2.605,288,3.176,289,3.009,290,5.324]],["title/components/AlarmCardComponent.html",[0,0.101,158,0.605]],["body/components/AlarmCardComponent.html",[0,0.202,1,0.494,2,0.591,3,0.091,4,0.069,5,0.572,6,0.572,7,0.572,8,0.532,9,0.069,13,0.163,14,0.552,15,0.692,21,0.692,22,0.847,24,0.572,25,1.273,26,1.135,27,0.879,28,0.719,30,0.719,32,0.297,36,0.64,40,0.93,42,1.485,43,0.849,44,0.725,48,0.789,50,0.774,51,0.774,53,0.014,54,0.693,55,0.39,56,0.892,59,0.64,65,1.024,66,1.708,72,0.749,73,1.924,74,1.665,76,3.128,79,1.371,81,2.064,82,0.99,91,0.513,101,0.167,102,1.502,103,0.103,106,0.613,107,0.091,108,0.015,111,1.291,115,1.151,116,0.832,117,3.5,118,2.13,119,2.591,120,0.99,121,2.591,125,0.833,127,2.76,128,1.212,129,1.478,130,2.081,131,1.212,132,1.691,133,1.364,135,1.218,136,1.096,139,1.772,140,2.042,145,1.478,147,0.327,148,0.832,149,0.832,150,0.572,151,1.076,152,0.572,153,0.832,154,0.494,155,0.572,156,0.476,157,0.572,158,0.93,159,0.98,160,0.458,161,0.832,162,0.494,163,0.572,164,0.494,165,0.572,166,0.494,167,0.832,168,0.494,169,0.832,170,0.476,171,0.572,172,0.494,173,0.532,174,1.076,175,0.476,176,0.572,177,0.513,178,0.847,179,0.98,180,0.494,181,0.98,182,0.494,183,0.98,184,0.494,185,0.572,186,0.494,187,0.572,188,0.494,189,0.552,190,0.494,191,0.572,192,0.476,193,0.572,194,0.494,195,0.494,196,0.916,197,0.552,198,0.98,199,0.494,200,0.572,201,0.494,202,0.494,203,0.572,204,0.494,205,0.494,206,0.494,207,0.494,208,0.476,209,0.572,210,0.494,211,0.946,212,0.494,213,0.494,214,0.494,215,0.476,216,0.572,217,0.494,218,0.755,219,0.832,220,0.494,221,0.572,222,0.476,223,0.532,224,0.494,225,1.05,226,0.532,227,0.879,228,0.476,229,0.572,230,0.494,231,0.374,232,0.513,233,0.494,234,0.719,235,0.572,236,0.494,237,0.494,238,0.494,239,0.494,240,0.494,241,0.494,242,0.552,243,0.572,244,0.572,245,0.01,246,0.007,247,0.005,291,4.64,292,6.126,293,2.591,294,1.402,295,0.99,296,4.786,297,1.75,298,4.173,299,4.162,300,3.392,301,4.918,302,4.173,303,4.878,304,3.917,305,5.401,306,4.878,307,4.488,308,5.183,309,5.183,310,3.567,311,3.365,312,4.786,313,2.869,314,1.452,315,1.287,316,4.176,317,3.29,318,2.25,319,1.485,320,2.593,321,3.769,322,3.29,323,4.488,324,2.847,325,2.242,326,3.29,327,2.962,328,1.909,329,3.917,330,4.343,331,4.097,332,3.027,333,3.027,334,2.451,335,2.705,336,3.29,337,2.705,338,1.909,339,3.769,340,3.769,341,3.468,342,1.168,343,3.29,344,3.027,345,2.902,346,2.855,347,1.984,348,3.027,349,3.29,350,1.34,351,4.173,352,3.29,353,3.227,354,3.29,355,4.878,356,3.29,357,2.379,358,1.859,359,6.718,360,4.488,361,1.943,362,3.188,363,4.087,364,2.384,365,2.384,366,2.384,367,2.342,368,4.769,369,2.218,370,2.384,371,4.087,372,2.384,373,2.384,374,3.567,375,2.384,376,2.384,377,3.468,378,5.183,379,4.442,380,2.384,381,2.591,382,3.769,383,2.591,384,1.478,385,4.786,386,3.29,387,3.29,388,3.29,389,3.29,390,3.29,391,4.173,392,2.869,393,1.768,394,1.264,395,2.53,396,2.739,397,3.365,398,3.29,399,2.384,400,3.29,401,3.29,402,3.29,403,1.133,404,4.786,405,3.29,406,3.29,407,2.218,408,2.218,409,1.61,410,3.29,411,3.29,412,2.571,413,2.081,414,3.468,415,2.081,416,1.094,417,3.29,418,2.869,419,2.218,420,2.591,421,2.568]],["title/components/AlarmComponent.html",[0,0.101,160,0.561]],["body/components/AlarmComponent.html",[0,0.207,1,0.451,2,0.553,3,0.084,4,0.063,5,0.522,6,0.522,7,0.522,8,0.486,9,0.063,13,0.149,14,0.504,15,0.435,21,0.647,22,0.803,24,0.522,25,1.267,26,1.129,27,1.073,28,0.672,30,0.672,32,0.271,33,0.751,34,1.32,36,0.599,40,0.89,42,1.389,43,0.847,44,0.688,48,0.802,50,0.486,51,0.486,53,0.013,54,0.509,55,0.751,56,0.56,59,0.89,65,1.474,66,2.117,70,3.024,72,0.708,73,1.982,74,1.654,76,2.937,79,1.524,82,0.926,91,0.468,101,0.186,102,1.545,103,0.094,106,0.56,107,0.124,108,0.032,109,0.468,110,1.993,115,1.115,116,0.522,117,1.698,118,0.932,120,1.226,125,1.683,126,1.856,128,1.744,129,3.249,131,1.683,136,1.522,137,1.154,139,2.88,140,2.431,142,1.539,145,3.093,147,0.299,148,0.778,149,0.778,150,0.522,151,1.03,152,0.522,153,0.778,154,0.451,155,0.522,156,0.435,157,0.522,158,0.451,159,0.93,160,0.825,161,0.778,162,0.451,163,0.522,164,0.451,165,0.522,166,0.451,167,0.778,168,0.451,169,0.778,170,0.647,171,0.522,172,0.451,173,0.486,174,1.03,175,0.435,176,0.522,177,0.468,178,0.803,179,0.93,180,0.451,181,0.93,182,0.451,183,0.93,184,0.451,185,0.522,186,0.451,187,0.522,188,0.451,189,0.504,190,0.451,191,0.522,192,0.435,193,0.522,194,0.451,195,0.451,196,0.882,197,0.504,198,0.93,199,0.451,200,0.522,201,0.451,202,0.451,203,0.522,204,0.451,205,0.451,206,0.451,207,0.451,208,0.435,209,0.522,210,0.451,211,0.897,212,0.451,213,0.451,214,0.451,215,0.435,216,0.522,217,0.451,218,0.89,219,0.778,220,0.451,221,0.522,222,0.435,223,0.486,224,0.451,225,1.023,226,0.486,227,0.834,228,0.435,229,0.522,230,0.451,231,0.341,232,0.468,233,0.451,234,0.672,235,0.522,236,0.451,237,0.451,238,0.451,239,0.451,240,0.451,241,0.451,242,0.504,243,0.522,244,0.522,245,0.005,246,0.007,247,0.005,294,1.349,297,2.413,299,3.75,304,3.384,306,4.214,307,4.296,310,3.384,311,3.192,314,1.442,315,1.385,319,2.136,320,2.117,324,3.17,327,2.557,328,1.786,329,4.836,330,3.75,331,2.671,332,2.831,333,2.831,334,3.037,335,2.53,342,1.122,344,1.901,345,1.408,346,1.793,348,3.75,350,1.254,357,2.278,358,1.698,361,1.542,362,1.698,377,2.178,393,2.406,414,4.99,416,2.211,419,2.026,420,2.367,422,2.367,423,3.904,424,1.657,425,3.877,426,4.214,427,4.666,428,3.904,429,4.666,430,4.594,431,5.351,432,5.351,433,5.351,434,5.17,435,5.424,436,4.214,437,2.741,438,2.741,439,4.477,440,1.786,441,3.005,442,2.373,443,3.005,444,1.972,445,3.005,446,3.244,447,3.005,448,3.435,449,3.005,450,3.005,451,3.115,452,3.005,453,2.831,454,3.005,455,3.005,456,3.005,457,2.62,458,3.005,459,2.364,460,2.367,461,3.656,462,3.005,463,0.932,464,3.005,465,2.461,466,3.005,467,3.019,468,3.005,469,4.67,470,3.005,471,3.005,472,2.191,473,3.351,474,3.904,475,4.296,476,4.296,477,4.296,478,3.005,479,3.904,480,3.904,481,2.026,482,2.367,483,2.026,484,2.62,485,2.367,486,1.471,487,1.72,488,1.856,489,1.856,490,1.856,491,1.856,492,1.72,493,1.786,494,0.688,495,3.877,496,1.793,497,2.026,498,1.901,499,2.178,500,2.178,501,2.367,502,3.904,503,5.929,504,7.011,505,4.477,506,3.005,507,3.005,508,3.005,509,2.108,510,2.367,511,3.005,512,1.856,513,3.019,514,3.384,515,2.507,516,3.877,517,1.837,518,2.507,519,3.526,520,2.62,521,6.667,522,4.477,523,3.005,524,4.666,525,4.477,526,3.005,527,4.477,528,3.005,529,4.477,530,3.005,531,1.035,532,3.005,533,4.477,534,3.005]],["title/classes/AlarmConfig.html",[108,0.019,535,1.607]],["body/classes/AlarmConfig.html",[3,0.148,4,0.111,9,0.111,13,0.327,15,0.956,32,0.479,33,1.109,34,1.589,43,0.843,44,0.682,48,0.813,50,1.069,51,1.069,52,0.922,53,0.013,54,0.68,55,0.99,56,0.99,65,1.693,66,2.693,87,3.946,107,0.148,108,0.025,109,0.827,115,1.109,116,1.395,245,0.008,246,0.01,247,0.008,294,1.407,295,1.098,314,1.025,315,0.922,320,2.361,338,3.009,342,1.255,345,2.487,425,3.846,463,2.052,494,1.514,495,5.624,496,3.946,497,4.46,498,4.183,499,4.793,500,3.846,535,3.009,536,7.183,537,4.628,538,3.579,539,2.117,540,4.557,541,5.624,542,6.283,543,4.908,544,4.859,545,3.636,546,4.793,547,6.615,548,5.308,549,5.308,550,5.308,551,5.21,552,6.615,553,3.946,554,6.615,555,6.615,556,6.615,557,5.308,558,2.508,559,3.554,560,5.308,561,5.768,562,5.308,563,5.308,564,5.308,565,5.308,566,6.615,567,4.628]],["title/components/AlarmHeaderComponent.html",[0,0.101,162,0.605]],["body/components/AlarmHeaderComponent.html",[0,0.203,1,0.517,2,0.611,3,0.096,4,0.072,5,0.598,6,0.598,7,0.598,8,0.557,9,0.072,13,0.17,14,0.577,15,0.715,21,0.715,22,0.869,24,0.598,25,1.277,26,1.137,27,0.902,28,0.743,30,0.743,32,0.311,36,0.662,40,0.95,42,1.534,43,0.845,44,0.744,48,0.79,50,0.8,51,0.8,53,0.013,54,0.683,55,0.408,56,0.922,59,0.662,65,1.058,66,1.765,72,0.729,73,1.954,74,1.682,76,3.152,79,1.4,81,2.133,82,1.023,91,0.537,101,0.172,102,1.52,103,0.108,106,0.642,107,0.096,108,0.016,111,0.788,115,1.123,116,0.859,117,3.575,118,2.164,119,2.711,120,1.197,121,2.711,125,1.252,126,1.427,127,2.832,128,1.602,129,1.546,131,1.252,132,2.306,133,1.427,136,1.597,137,2.574,139,2.142,140,2.078,147,0.342,148,0.859,149,0.859,150,0.598,151,1.099,152,0.598,153,0.859,154,0.517,155,0.598,156,0.498,157,0.598,158,0.517,159,1.006,160,0.479,161,0.859,162,0.95,163,0.598,164,0.517,165,0.598,166,0.517,167,0.859,168,0.517,169,0.859,170,0.498,171,0.598,172,0.517,173,0.557,174,1.099,175,0.498,176,0.598,177,0.537,178,0.869,179,1.006,180,0.517,181,1.006,182,0.517,183,1.006,184,0.517,185,0.598,186,0.517,187,0.598,188,0.517,189,0.577,190,0.517,191,0.598,192,0.498,193,0.598,194,0.517,195,0.517,196,0.932,197,0.577,198,1.006,199,0.517,200,0.598,201,0.517,202,0.517,203,0.598,204,0.517,205,0.517,206,0.517,207,0.517,208,0.498,209,0.598,210,0.517,211,0.97,212,0.517,213,0.517,214,0.517,215,0.498,216,0.598,217,0.517,218,0.774,219,0.859,220,0.517,221,0.598,222,0.498,223,0.557,224,0.517,225,1.063,226,0.557,227,0.902,228,0.498,229,0.598,230,0.517,231,0.391,232,0.537,233,0.517,234,0.743,235,0.598,236,0.517,237,0.517,238,0.517,239,0.517,240,0.517,241,0.517,242,0.577,243,0.598,244,0.598,245,0.01,246,0.008,247,0.005,291,4.636,294,1.396,295,1.023,303,4.982,304,4,306,4.982,307,4.584,308,5.277,309,5.277,310,3.66,311,3.452,314,1.467,315,1.301,316,4.265,318,1.972,319,1.534,320,2.625,321,3.895,323,4.584,324,2.891,325,2.317,327,3.008,328,1.972,329,4,330,4.411,331,4.161,332,3.127,333,3.127,334,2.533,335,2.795,337,4.155,338,1.972,339,3.895,340,3.895,341,3.583,342,1.047,344,3.127,345,2.963,346,2.95,347,2.05,348,3.127,353,3.334,355,4.982,357,2.43,358,1.946,360,2.494,361,1.186,362,3.271,363,2.494,364,2.494,365,2.494,366,2.494,367,1.685,368,4.855,369,2.321,370,2.494,371,2.494,372,2.494,373,2.494,374,2.177,375,2.494,376,2.494,377,3.583,378,5.277,379,4.558,380,2.494,381,2.711,382,3.895,383,2.711,384,1.546,391,4.312,393,3.6,394,2.574,409,2.832,412,2.657,413,2.177,414,3.583,415,2.177,416,1.644,419,2.321,420,2.711,463,1.534,509,1.145,517,1.433,531,1.703,568,6.121,569,3.002,570,3.895,571,2.317,572,5.787,573,4.945,574,4.945,575,3.442,576,3.442,577,3.442,578,3.442,579,3.442,580,3.442,581,3.442,582,3.442,583,3.442,584,5.787,585,4.945,586,4.945,587,3.442,588,4.945,589,4.945,590,1.685,591,1.485,592,1.427,593,2.95,594,3.442,595,3.442,596,2.221,597,1.485,598,2.494]],["title/classes/AlarmImageSet.html",[108,0.019,442,1.438]],["body/classes/AlarmImageSet.html",[0,0.201,3,0.121,4,0.091,9,0.091,13,0.288,21,0.63,22,0.874,25,0.654,26,0.583,28,0.654,30,0.654,32,0.393,33,0.976,34,1.57,40,0.654,43,0.845,44,0.748,48,0.791,50,0.941,51,0.941,52,0.757,53,0.014,54,0.374,55,0.934,56,0.812,59,0.583,65,1.666,66,2.078,70,2.461,73,1.96,74,1.614,76,2.909,79,1.549,82,0.9,101,0.228,102,1.648,103,0.136,106,0.812,107,0.162,108,0.033,109,0.679,110,1.745,115,1.258,116,0.757,117,2.461,118,1.351,120,0.9,128,1.66,129,1.956,140,1.806,145,1.956,160,0.606,170,0.63,218,0.583,245,0.007,246,0.009,247,0.007,294,1.223,297,2.328,299,3.681,307,3.155,310,2.754,311,2.597,314,0.841,315,1.443,319,1.806,320,1.554,324,3.444,327,2.51,328,1.737,329,2.754,330,2.754,331,2.597,332,2.754,333,2.754,334,2.981,335,2.461,342,1.239,345,2.04,348,3.681,350,1.22,357,2.883,358,2.461,361,1.5,362,2.461,377,3.155,414,3.155,422,3.429,423,3.797,424,1.612,425,4.751,426,5.164,427,3.797,428,3.797,429,3.797,430,4.217,434,3.797,435,5.164,436,3.429,437,2.23,438,2.23,440,1.737,442,2.679,444,1.935,446,3.155,448,3.144,451,2.727,453,2.754,459,2.65,461,4.065,465,2.155,467,2.936,469,3.429,472,2.131,473,3.289,474,3.797,475,3.155,476,3.155,477,3.155,479,3.797,480,3.797,481,2.936,482,3.429,483,3.925,484,5.075,485,4.584,486,2.848,487,2.802,488,3.024,489,3.024,490,3.024,491,3.024,492,2.802,493,2.909,494,1.333,495,5.285,496,3.472,497,3.925,498,3.681,499,4.217,500,3.155,501,3.429,502,5.075,599,5.82,600,4.354,601,4.354,602,4.354,603,4.354,604,4.354,605,4.354,606,4.354]],["title/components/AlarmInfoComponent.html",[0,0.101,164,0.605]],["body/components/AlarmInfoComponent.html",[0,0.201,1,0.658,2,0.722,3,0.195,4,0.092,5,0.761,6,0.761,7,0.761,8,0.708,9,0.092,13,0.325,14,0.735,15,0.845,21,0.845,22,0.988,24,0.761,25,1.291,26,1.15,27,0.911,28,0.878,30,0.878,32,0.396,33,1.176,34,1.402,36,0.782,40,1.054,42,1.813,43,0.842,44,0.846,48,0.726,50,0.945,51,0.945,53,0.013,54,0.502,55,0.779,59,0.586,65,1.251,66,2.086,72,0.415,81,2.521,82,1.209,91,0.683,101,0.229,102,1.209,103,0.137,106,0.817,107,0.122,108,0.021,125,1.665,128,1.109,131,1.109,134,2.771,136,1.506,139,1.622,142,2.993,147,0.435,148,1.016,149,1.016,150,0.761,151,1.219,152,0.761,153,1.016,154,0.658,155,0.761,156,0.633,157,0.761,158,0.658,159,1.143,160,0.61,161,1.016,162,0.658,163,0.761,164,1.054,165,0.761,166,0.658,167,1.016,168,0.658,169,1.016,170,0.633,171,0.761,172,0.658,173,0.708,174,1.219,175,0.633,176,0.761,177,0.683,178,0.988,179,1.143,180,0.658,181,1.143,182,0.658,183,1.143,184,0.658,185,0.761,186,0.658,187,0.761,188,0.658,189,0.735,190,0.658,191,0.761,192,0.633,193,0.761,194,0.658,195,0.658,196,1.017,197,0.735,198,1.143,199,0.658,200,0.761,201,0.658,202,0.658,203,0.761,204,0.658,205,0.658,206,0.658,207,0.658,208,0.633,209,0.761,210,0.658,211,1.103,212,0.658,213,0.658,214,0.658,215,0.633,216,0.761,217,0.658,218,0.586,219,1.016,220,0.658,221,0.761,222,0.633,223,0.708,224,0.658,225,1.127,226,0.708,227,1.025,228,0.633,229,0.761,230,0.658,231,0.497,232,0.683,233,0.658,234,0.878,235,0.761,236,0.658,237,0.658,238,0.658,239,0.658,240,0.658,241,0.658,242,0.735,243,0.761,244,0.761,245,0.007,246,0.009,247,0.007,291,4.485,294,1.308,318,2.331,319,1.359,338,2.331,342,1.171,353,3.941,395,2.086,396,1.748,397,2.614,409,3.219,416,2.187,514,3.696,515,2.738,531,1.509,571,2.052,607,5.922,608,3.82,609,4.235,610,2.521,611,6.577,612,5.845,613,5.757,614,6.045,615,5.845,616,4.381,617,4.381,618,4.381,619,4.437,620,4.603,621,5.526,622,5.526,623,3.696,624,2.191,625,3.175,626,3.451,627,3.451,628,3.451,629,3.451,630,5.096,631,5.096,632,4.731,633,3.941,634,5.096,635,5.096,636,5.096,637,3.82,638,4.381,639,3.451,640,2.614,641,3.82,642,3.82,643,4.381,644,4.381,645,4.603,646,3.175,647,3.82,648,4.381,649,2.354]],["title/classes/AlarmItemFlatNode.html",[108,0.019,650,2.92]],["body/classes/AlarmItemFlatNode.html",[0,0.178,3,0.093,4,0.101,8,1.288,9,0.101,10,4.519,13,0.165,15,0.822,19,1.793,21,0.483,22,0.726,25,0.501,26,0.447,27,1.032,28,0.501,30,0.501,32,0.301,33,0.811,40,0.501,43,0.786,48,0.619,50,0.54,53,0.014,54,0.489,55,0.739,57,0.845,65,1.477,70,1.887,72,0.732,73,2.141,74,1.67,77,3.059,79,1.645,82,1,91,0.754,101,0.254,102,1,103,0.151,106,0.622,107,0.158,108,0.027,109,1.234,110,1.001,111,1.886,115,1.265,116,0.58,118,1.935,120,1.508,144,3.1,156,0.483,196,0.868,205,0.501,231,0.844,245,0.009,246,0.008,247,0.005,251,0.935,277,4.519,295,1,314,0.644,315,1.084,324,1.384,327,2.689,328,1.332,342,0.936,345,1.564,397,1.991,403,1.666,440,1.332,463,2.053,494,1.701,541,5.001,558,2.295,610,2.453,650,5.901,651,2.629,652,4.611,653,7.462,654,6.479,655,7.017,656,3.338,657,3.338,658,3.205,659,3.338,660,4.121,661,3.261,662,3.809,663,4.217,664,3.809,665,2.911,666,2.911,667,4.217,668,2.911,669,4.217,670,4.217,671,2.629,672,2.911,673,3.944,674,1.499,675,2.28,676,1.384,677,5.384,678,4.217,679,2.911,680,2.309,681,2.111,682,2.911,683,2.911,684,3.505,685,2.629,686,3.809,687,2.56,688,2.911,689,2.885,690,2.911,691,5.438,692,4.217,693,2.911,694,2.629,695,2.911,696,4.217,697,2.911,698,2.629,699,4.479,700,2.911,701,2.251,702,2.911,703,4.959,704,2.911,705,2.911,706,2.911,707,3.809,708,2.911,709,4.217,710,2.911,711,2.911,712,2.911,713,2.911,714,1.793,715,2.629,716,3.835,717,3.809,718,4.217,719,2.911,720,2.911,721,4.217,722,2.911,723,2.911,724,2.911,725,4.217,726,2.911,727,2.911,728,2.911,729,4.959,730,2.911,731,1.499,732,2.885,733,2.911,734,2.911,735,2.911,736,2.629,737,2.629,738,2.911,739,2.911,740,4.217,741,2.911,742,4.217,743,2.911,744,4.217,745,2.911,746,4.217,747,2.911,748,4.217,749,4.217,750,3.059,751,2.911,752,4.959,753,2.911,754,2.911,755,2.911,756,4.217,757,2.005,758,2.911,759,2.911,760,4.654,761,2.911,762,2.911,763,2.911,764,2.911,765,2.911,766,2.911,767,3.809,768,4.217,769,2.911,770,2.911,771,2.911,772,3.901,773,4.217,774,2.911,775,2.911,776,2.911,777,2.629,778,2.911,779,2.911,780,2.911,781,2.629,782,2.911,783,2.911,784,2.911,785,2.911,786,4.217,787,2.911,788,2.911,789,4.217,790,2.911,791,2.419,792,2.629,793,4.217,794,2.911,795,4.479,796,5.772,797,2.911,798,5.438,799,2.419,800,2.911,801,4.217,802,2.911,803,1.072,804,2.911,805,4.217,806,2.911,807,2.629,808,2.629,809,2.911,810,6.207,811,2.911,812,4.217,813,2.911,814,2.911,815,2.911,816,4.217,817,2.911,818,2.911,819,6.479,820,2.911,821,5.438,822,2.911,823,4.217,824,2.629,825,4.217,826,2.911,827,4.959,828,5.438,829,2.911,830,2.911,831,2.911,832,2.911,833,2.911,834,2.911,835,2.911,836,2.911,837,2.911,838,2.911,839,2.911,840,2.911,841,2.911,842,2.911,843,2.911,844,2.911,845,2.911,846,2.911]],["title/classes/AlarmItemNode.html",[108,0.019,677,2.92]],["body/classes/AlarmItemNode.html",[0,0.179,3,0.093,4,0.102,8,1.289,9,0.102,10,4.138,13,0.166,15,0.826,19,1.806,21,0.486,22,0.73,25,0.505,26,0.45,27,1.035,28,0.505,30,0.505,32,0.304,33,0.815,40,0.505,43,0.792,48,0.567,50,0.544,53,0.014,54,0.491,55,0.676,57,0.851,65,1.48,70,1.9,72,0.733,73,2.117,74,1.648,77,3.074,79,1.617,82,1.005,91,0.758,101,0.254,102,1.005,103,0.152,106,0.627,107,0.159,108,0.027,109,1.235,110,1.008,111,1.887,115,1.267,116,0.584,118,1.941,120,1.511,144,2.982,156,0.486,196,0.871,205,0.505,231,0.845,245,0.009,246,0.008,247,0.005,251,0.942,277,4.138,295,1.005,314,0.649,315,1.087,324,1.394,327,2.698,328,1.341,342,0.94,345,1.575,397,2.006,403,1.675,440,1.341,463,2.146,494,1.704,541,5.394,558,2.301,610,2.097,650,5.885,651,2.648,652,4.62,653,7.458,654,5.788,655,6.863,658,3.151,660,4.138,661,3.278,662,3.829,663,4.239,664,3.829,665,2.932,666,2.932,667,4.239,668,2.932,669,4.239,670,4.239,671,2.648,672,2.932,673,3.957,674,1.51,675,2.286,676,1.394,677,5.547,678,4.979,679,2.932,680,2.316,681,2.126,682,2.932,683,2.932,684,3.523,685,2.648,686,3.829,687,2.564,688,2.932,689,2.9,690,2.932,691,5.456,692,4.239,693,2.932,694,2.648,695,2.932,696,4.239,697,2.932,698,2.648,699,4.498,700,2.932,701,2.267,702,2.932,703,4.979,704,2.932,705,2.932,706,2.932,707,3.829,708,2.932,709,4.239,710,2.932,711,2.932,712,2.932,713,2.932,714,1.806,715,2.648,716,3.851,717,3.829,718,4.239,719,2.932,720,2.932,721,4.239,722,2.932,723,2.932,724,2.932,725,4.239,726,2.932,727,2.932,728,2.932,729,4.979,730,2.932,731,1.51,732,2.9,733,2.932,734,2.932,735,2.932,736,2.648,737,2.648,738,2.932,739,2.932,740,4.239,741,2.932,742,4.239,743,2.932,744,4.239,745,2.932,746,4.239,747,2.932,748,4.239,749,4.239,750,3.074,751,2.932,752,4.979,753,2.932,754,2.932,755,2.932,756,4.239,757,2.015,758,2.932,759,2.932,760,4.665,761,2.932,762,2.932,763,2.932,764,2.932,765,2.932,766,2.932,767,3.829,768,4.239,769,2.932,770,2.932,771,2.932,772,3.91,773,4.239,774,2.932,775,2.932,776,2.932,777,2.648,778,2.932,779,2.932,780,2.932,781,2.648,782,2.932,783,2.932,784,2.932,785,2.932,786,4.239,787,2.932,788,2.932,789,4.239,790,2.932,791,2.436,792,2.648,793,4.239,794,2.932,795,4.498,796,5.788,797,2.932,798,5.456,799,2.436,800,2.932,801,4.239,802,2.932,803,1.08,804,2.932,805,4.239,806,2.932,807,2.648,808,2.648,809,2.932,810,6.221,811,2.932,812,4.239,813,2.932,814,2.932,815,2.932,816,4.239,817,2.932,818,2.932,819,6.491,820,2.932,821,5.456,822,2.932,823,4.239,824,2.648,825,4.239,826,2.932,827,4.979,828,5.456,829,2.932,830,2.932,831,2.932,832,2.932,833,2.932,834,2.932,835,2.932,836,2.932,837,2.932,838,2.932,839,2.932,840,2.932,841,2.932,842,2.932,843,2.932,844,2.932,845,2.932,846,2.932,847,3.362,848,3.362]],["title/components/AlarmLabelComponent.html",[0,0.101,166,0.605]],["body/components/AlarmLabelComponent.html",[0,0.191,1,0.562,2,0.648,3,0.104,4,0.078,5,0.65,6,0.65,7,0.65,8,0.605,9,0.078,13,0.185,14,0.627,15,0.758,21,0.758,22,0.91,24,0.65,25,1.282,26,1.142,27,0.817,28,0.788,30,0.788,32,0.338,33,0.879,36,0.702,40,0.986,42,1.627,43,0.845,44,0.779,48,0.79,50,0.848,51,0.848,53,0.013,54,0.564,55,0.778,59,0.5,65,1.122,66,1.872,72,0.679,74,1.586,76,2.936,79,1.586,82,1.085,91,0.583,101,0.183,102,1.43,103,0.117,106,0.697,107,0.104,108,0.018,120,0.773,125,1.815,130,4.372,131,0.947,132,1.572,133,1.55,135,2.431,136,1.72,137,1.437,139,2.242,142,1.916,145,2.721,147,0.372,148,0.911,149,0.911,150,0.65,151,1.141,152,0.65,153,0.911,154,0.562,155,0.65,156,0.541,157,0.65,158,0.562,159,1.053,160,0.52,161,0.911,162,0.562,163,0.65,164,0.562,165,0.65,166,0.986,167,0.911,168,0.562,169,0.911,170,0.541,171,0.65,172,0.562,173,0.605,174,1.141,175,0.541,176,0.65,177,0.583,178,0.91,179,1.053,180,0.562,181,1.053,182,0.562,183,1.053,184,0.562,185,0.65,186,0.562,187,0.65,188,0.562,189,0.627,190,0.562,191,0.65,192,0.541,193,0.65,194,0.562,195,0.562,196,0.962,197,0.627,198,1.053,199,0.562,200,0.65,201,0.562,202,0.562,203,0.65,204,0.562,205,0.562,206,0.562,207,0.562,208,0.541,209,0.65,210,0.562,211,1.015,212,0.562,213,0.562,214,0.562,215,0.541,216,0.65,217,0.562,218,0.878,219,0.911,220,0.562,221,0.65,222,0.541,223,0.605,224,0.562,225,1.086,226,0.605,227,0.944,228,0.541,229,0.65,230,0.562,231,0.425,232,0.583,233,0.562,234,0.788,235,0.65,236,0.562,237,0.562,238,0.562,239,0.562,240,0.562,241,0.562,242,0.627,243,0.65,244,0.65,245,0.006,246,0.008,247,0.006,291,4.776,294,1.224,297,2.523,299,4.891,304,3.831,305,5.282,314,1.384,315,1.279,319,2.425,320,1.872,324,2.971,334,2.686,342,1.038,344,3.831,345,3.358,346,3.613,347,2.511,348,3.831,350,1.697,351,3.261,361,1.288,374,2.365,394,1.437,395,2.468,396,1.492,403,1.288,407,2.522,408,2.522,421,1.55,430,4.389,444,1.744,448,3.653,451,3.448,453,4.75,467,3.536,475,5.01,476,5.01,477,5.01,494,1.201,504,6.656,512,1.55,515,1.752,519,4.131,520,4.573,521,5.725,524,4.573,531,1.288,591,1.613,592,1.55,640,2.231,731,2.356,849,6.305,850,3.261,851,6.057,852,5.245,853,6.057,854,6.057,855,6.057,856,6.057,857,6.057,858,6.057,859,5.245,860,3.74,861,3.74,862,3.74,863,3.74,864,3.74,865,3.74,866,3.74,867,3.74,868,3.74,869,3.74,870,3.74,871,2.174,872,3.74,873,5.245,874,3.74,875,3.74,876,5.245,877,6.029,878,3.77,879,3.261,880,2.231,881,3.536,882,4.573,883,3.74,884,1.752]],["title/classes/AlarmSounds.html",[108,0.019,885,3.173]],["body/classes/AlarmSounds.html",[3,0.07,4,0.053,9,0.15,13,0.193,15,0.993,17,1.496,18,2.467,19,2.096,32,0.352,33,0.654,34,1.354,36,0.522,43,0.839,44,0.322,48,0.615,50,0.405,51,0.631,52,0.436,53,0.014,54,0.603,55,0.872,56,0.468,57,1.778,59,0.723,64,1.417,65,1.53,66,2.628,69,3.401,72,0.719,73,1.735,74,1.431,76,1.556,79,1.371,81,1.081,83,1.347,98,3.945,101,0.253,103,0.078,106,0.727,107,0.108,108,0.025,109,1.263,110,1.435,111,1.786,115,1.347,116,1.386,118,1.485,120,0.519,218,0.865,227,0.391,231,0.613,245,0.004,246,0.006,247,0.004,285,0.635,294,0.468,295,1.502,314,1.13,315,1.243,325,3.217,327,1.682,328,2.471,331,2.327,338,2.667,342,1.245,345,1.175,346,1.496,347,1.039,350,1.092,369,3.228,444,0.834,453,2.467,459,1.252,463,2.074,465,1.999,473,1.417,487,0.963,494,1.48,496,3.222,498,2.467,535,2.852,540,4.44,542,3.401,545,2.242,558,2.06,610,2.789,623,1.586,624,0.752,632,1.691,633,1.691,658,2.329,674,1.752,675,1.344,687,0.864,689,1.496,714,3.143,716,1.691,731,1.126,732,2.327,750,3.027,757,2.847,772,3.052,803,0.805,885,3.072,886,2.186,887,3.9,888,1.998,889,4.373,890,4.228,891,7.651,892,3.072,893,6.719,894,4.177,895,6.686,896,6.686,897,6.195,898,6.195,899,3.9,900,2.507,901,3.9,902,2.507,903,3.9,904,2.507,905,3.9,906,2.507,907,3.9,908,2.507,909,3.9,910,2.507,911,3.9,912,3.9,913,3.9,914,3.072,915,3.9,916,1.252,917,1.975,918,1.691,919,2.507,920,5.851,921,4.174,922,4.174,923,1.691,924,1.975,925,1.827,926,2.628,927,1.347,928,2.186,929,0.928,930,3.7,931,2.507,932,2.741,933,3.312,934,1.417,935,3.143,936,1.817,937,5.401,938,2.507,939,2.507,940,2.507,941,2.507,942,2.507,943,2.186,944,4.787,945,3.945,946,5.401,947,2.507,948,3.401,949,5.583,950,2.507,951,2.507,952,3.072,953,3.072,954,5.989,955,2.507,956,1.817,957,4.174,958,3.9,959,2.507,960,2.507,961,2.507,962,2.507,963,3.9,964,2.507,965,4.787,966,2.186,967,2.507,968,1.975,969,2.507,970,2.507,971,2.507,972,2.507,973,2.507,974,2.507,975,2.507,976,2.507,977,3.77,978,4.174,979,3.9,980,2.507,981,2.507,982,1.417,983,1.347,984,3.072,985,2.507,986,2.507,987,2.186,988,2.507,989,2.507,990,2.186,991,3.9,992,2.507,993,2.507,994,1.975,995,3.401,996,4.787,997,1.691,998,5.401,999,5.401,1000,2.507,1001,4.787,1002,3.9,1003,2.507,1004,3.9,1005,3.9,1006,2.507,1007,4.174,1008,3.9,1009,2.507,1010,6.195,1011,4.787,1012,2.507,1013,3.9,1014,2.507,1015,2.507,1016,2.507,1017,2.507,1018,2.507,1019,2.507,1020,2.507,1021,2.507,1022,2.507,1023,2.507,1024,2.507,1025,2.507,1026,2.507,1027,3.9,1028,1.975,1029,1.691,1030,2.507,1031,1.975,1032,2.186,1033,2.507,1034,2.507,1035,3.9,1036,2.507,1037,2.507,1038,3.35,1039,1.817,1040,2.507,1041,2.507,1042,3.072,1043,3.9,1044,2.507,1045,2.507,1046,2.507,1047,3.9,1048,2.507,1049,2.507,1050,2.507,1051,3.9,1052,2.507,1053,2.507,1054,2.507,1055,1.817,1056,3.524,1057,2.507,1058,6.466,1059,2.507,1060,4.787,1061,3.9,1062,2.507,1063,2.507,1064,2.507,1065,4.709,1066,3.9,1067,3.9,1068,2.507,1069,2.507,1070,3.9,1071,2.507,1072,2.507,1073,2.507,1074,2.507,1075,3.9,1076,4.709,1077,5.101,1078,1.817,1079,2.507,1080,2.507,1081,3.9,1082,2.507,1083,2.507,1084,2.507,1085,2.507,1086,2.507,1087,1.347,1088,2.507,1089,3.77,1090,2.507,1091,1.975,1092,2.507,1093,2.507,1094,4.787,1095,2.186,1096,2.186,1097,4.787,1098,1.752,1099,3.072,1100,3.9,1101,2.507,1102,3.9,1103,3.9,1104,2.507,1105,3.401,1106,3.9,1107,2.507,1108,2.507,1109,3.9,1110,2.507,1111,3.9,1112,2.507,1113,2.507,1114,2.507,1115,2.507,1116,4.787,1117,4.787,1118,5.401,1119,2.507,1120,3.9,1121,2.507,1122,2.507,1123,3.9,1124,2.507,1125,2.507,1126,2.507,1127,4.787,1128,3.9,1129,3.9,1130,2.507,1131,3.9,1132,2.507,1133,6.466,1134,4.787,1135,5.401,1136,3.9,1137,3.9,1138,2.507,1139,2.507,1140,4.787,1141,2.507,1142,2.507,1143,2.507,1144,5.401,1145,2.507,1146,2.507,1147,2.507,1148,2.507,1149,2.507,1150,2.507,1151,2.507,1152,3.9,1153,1.975,1154,2.507,1155,1.817,1156,2.507,1157,2.186,1158,3.9,1159,2.507,1160,2.507,1161,1.975,1162,2.507,1163,2.507,1164,3.9,1165,2.507,1166,1.975,1167,1,1168,2.507,1169,2.507,1170,2.507,1171,2.507,1172,2.507,1173,2.507,1174,2.507,1175,3.401,1176,2.507,1177,2.507,1178,2.507,1179,3.9,1180,2.507,1181,2.507,1182,2.507,1183,2.507,1184,2.507]],["title/components/AlarmTileComponent.html",[0,0.101,168,0.605]],["body/components/AlarmTileComponent.html",[0,0.194,1,0.449,2,0.55,3,0.083,4,0.063,5,0.519,6,0.519,7,0.519,8,0.483,9,0.063,13,0.148,14,0.501,15,0.644,21,0.644,22,0.801,24,0.519,25,1.267,26,1.13,27,0.695,28,0.669,30,0.669,32,0.481,33,0.747,34,1.237,36,0.596,40,0.888,42,1.383,43,0.838,44,0.686,48,0.811,50,0.721,51,0.721,52,0.519,53,0.014,54,0.668,55,0.837,56,0.994,59,0.4,65,0.954,66,1.591,72,0.697,74,1.564,76,3.014,79,1.468,81,2.728,82,0.922,85,3.511,91,1.034,95,1.238,101,0.186,102,1.563,103,0.093,106,0.557,107,0.083,108,0.014,111,0.684,115,0.894,116,0.927,117,2.519,118,1.834,120,1.52,125,1.497,126,2.21,127,1.462,128,1.497,129,2.002,131,0.756,132,1.336,136,1.221,139,1.106,140,1.383,142,1.53,147,0.297,148,0.775,149,0.775,150,0.519,151,1.027,152,0.519,153,0.775,154,0.449,155,0.519,156,0.432,157,0.519,158,0.449,159,0.927,160,0.416,161,0.775,162,0.449,163,0.519,164,0.449,165,0.519,166,0.449,167,0.775,168,0.888,169,0.775,170,0.432,171,0.519,172,0.449,173,0.483,174,1.027,175,0.432,176,0.519,177,0.466,178,0.801,179,0.927,180,0.449,181,0.927,182,0.449,183,0.927,184,0.449,185,0.519,186,0.449,187,0.519,188,0.449,189,0.501,190,0.449,191,0.519,192,0.432,193,0.519,194,0.449,195,0.449,196,0.88,197,0.501,198,0.927,199,0.449,200,0.519,201,0.449,202,0.449,203,0.519,204,0.449,205,0.449,206,0.449,207,0.801,208,0.432,209,0.519,210,0.449,211,0.894,212,0.449,213,0.449,214,0.449,215,0.432,216,0.519,217,0.449,218,0.846,219,0.775,220,0.449,221,0.519,222,0.432,223,0.483,224,0.449,225,1.021,226,0.483,227,0.831,228,0.432,229,0.519,230,0.449,231,0.339,232,0.466,233,0.449,234,0.669,235,0.519,236,0.449,237,0.449,238,0.449,239,0.449,240,0.449,241,0.449,242,0.501,243,0.519,244,0.519,245,0.009,246,0.007,247,0.005,291,4.793,294,1.346,295,0.922,297,1.383,303,5.225,304,3.739,308,4.981,309,4.981,310,3.372,311,3.181,314,1.5,315,1.34,316,3.986,318,1.778,319,2.24,320,2.522,321,3.511,323,4.284,324,2.75,325,2.088,327,1.922,328,1.778,329,3.739,330,2.819,331,2.659,332,2.819,333,2.819,334,3.028,335,3.341,337,2.519,338,1.778,339,3.511,340,3.511,341,3.23,342,1.061,344,2.819,345,2.77,346,2.659,347,1.848,348,2.819,350,1.656,358,1.688,359,6.588,360,3.864,361,1.535,362,2.519,363,3.23,364,2.165,365,2.165,366,2.165,367,1.462,368,4.583,369,2.014,370,2.165,371,3.23,372,2.165,373,2.165,374,2.819,375,2.165,376,2.165,378,4.981,379,4.2,380,2.165,381,2.353,382,3.511,383,2.353,384,1.342,392,2.605,393,1.605,394,1.148,397,3.773,403,1.029,407,2.014,408,2.014,412,2.865,413,2.819,415,1.889,416,1.482,419,5.095,430,4.583,435,4.2,436,4.2,442,2.258,444,2.103,446,3.23,451,2.77,453,4.468,461,2.893,467,3.006,475,3.23,476,3.23,477,3.23,487,1.148,494,1.02,501,2.353,509,0.993,512,1.238,515,1.4,517,1.833,531,1.029,591,1.288,597,1.288,662,4.2,664,4.2,731,2.002,732,2.659,736,2.353,777,3.511,803,0.959,871,1.848,880,1.782,977,2.353,995,3.887,1098,1.342,1185,6.328,1186,2.605,1187,4.458,1188,4.257,1189,5.332,1190,4.458,1191,5.332,1192,5.332,1193,5.332,1194,4.458,1195,5.912,1196,5.912,1197,5.332,1198,4.458,1199,2.987,1200,2.987,1201,2.987,1202,3.739,1203,4.458,1204,6.659,1205,2.987,1206,2.987,1207,4.458,1208,2.987,1209,2.987,1210,2.987,1211,2.987,1212,2.987,1213,2.987,1214,2.987,1215,2.987,1216,2.987,1217,4.458,1218,2.987,1219,3.23,1220,2.987,1221,2.987,1222,2.987,1223,4.458,1224,2.605,1225,5.912,1226,4.458,1227,2.987,1228,2.987,1229,2.987,1230,2.987,1231,2.987,1232,4.2,1233,2.987,1234,2.987,1235,3.887,1236,2.165,1237,2.987,1238,2.987,1239,2.987,1240,1.288,1241,7.351,1242,4.458,1243,7.065,1244,5.912,1245,4.458,1246,4.458,1247,2.987,1248,1.462,1249,5.155,1250,3.176,1251,5.912,1252,4.458]],["title/components/AlarmTooltipComponent.html",[0,0.101,170,0.583]],["body/components/AlarmTooltipComponent.html",[0,0.202,1,0.608,2,0.839,3,0.113,4,0.085,5,1.236,6,0.704,7,0.704,8,0.655,9,0.085,13,0.312,14,0.679,21,0.801,22,0.949,24,0.704,25,1.286,26,1.146,27,0.864,28,0.832,30,0.832,32,0.366,33,1.139,36,0.741,40,1.02,42,1.719,43,0.836,44,0.812,48,0.73,53,0.013,54,0.543,55,0.748,59,0.542,65,1.186,66,1.978,72,0.384,76,2.71,82,1.146,87,3.306,91,0.631,93,2.838,101,0.22,102,1.306,103,0.127,106,0.755,107,0.113,108,0.019,116,0.704,120,1.471,126,1.679,128,1.403,131,1.025,135,1.499,136,1.555,147,0.402,148,0.963,149,0.963,150,0.704,151,1.18,152,0.704,153,0.963,154,0.608,155,0.704,156,0.585,157,0.704,158,0.608,159,1.098,160,0.563,161,0.963,162,0.608,163,0.704,164,0.608,165,0.704,166,0.608,167,0.963,168,0.608,169,0.963,170,1.062,171,0.704,172,0.608,173,0.655,174,1.18,175,0.585,176,0.704,177,0.631,178,0.949,179,1.098,180,0.608,181,1.098,182,0.608,183,1.098,184,0.608,185,0.704,186,0.608,187,0.704,188,0.608,189,0.679,190,0.608,191,0.704,192,0.585,193,0.704,194,0.608,195,0.608,196,0.99,197,0.679,198,1.098,199,0.608,200,0.704,201,0.608,202,0.608,203,0.704,204,0.608,205,0.608,206,0.608,207,0.608,208,0.585,209,0.704,210,0.608,211,1.059,212,0.608,213,0.608,214,0.608,215,0.585,216,0.704,217,0.608,218,0.542,219,0.963,220,0.608,221,0.704,222,0.585,223,0.655,224,0.608,225,1.107,226,0.655,227,0.985,228,0.585,229,0.704,230,0.608,231,0.717,232,0.631,233,0.608,234,0.832,235,0.704,236,0.608,237,0.608,238,0.608,239,0.608,240,0.608,241,0.608,242,0.679,243,0.704,244,0.704,245,0.006,246,0.009,247,0.006,291,4.487,294,1.033,297,1.256,311,3.769,314,0.782,315,0.704,318,2.21,319,1.719,324,2.297,334,2.838,335,4.328,338,2.21,342,1.15,395,2.255,403,1.909,409,1.982,416,2.259,419,4.26,440,2.21,444,1.346,467,3.737,481,5.072,509,2.101,514,4.296,515,3.333,517,1.606,571,1.897,590,1.982,597,1.746,613,5.924,614,6.118,619,4.296,620,4.364,621,5.35,622,5.35,623,3.504,624,2.133,625,2.934,626,3.189,627,3.189,628,3.189,629,3.189,630,4.832,631,4.832,632,4.581,633,3.737,634,4.832,635,4.832,636,4.832,639,3.189,641,3.531,642,3.531,684,4.015,701,2.73,803,1.3,1204,5.509,1249,3.531,1253,3.531,1254,4.364,1255,4.364,1256,4.832,1257,5.542,1258,4.954,1259,5.542,1260,2.712,1261,4.832,1262,5.542,1263,4.832,1264,5.542,1265,2.712,1266,6.318,1267,5.542,1268,5.542,1269,4.049,1270,4.049,1271,4.049,1272,4.049,1273,4.832,1274,5.542,1275,3.189,1276,4.049,1277,3.531,1278,3.189,1279,3.531,1280,4.049,1281,3.189,1282,3.531,1283,4.049,1284,4.049,1285,4.049,1286,4.049,1287,5.542,1288,2.934,1289,5.542,1290,4.049,1291,4.049,1292,4.049,1293,3.531,1294,4.049,1295,4.049]],["title/components/AntennaMarkerComponent.html",[0,0.101,172,0.605]],["body/components/AntennaMarkerComponent.html",[0,0.186,1,0.586,2,0.667,3,0.109,4,0.082,5,0.679,6,0.679,7,0.679,8,0.631,9,0.082,13,0.267,14,0.655,15,1.098,21,0.782,22,0.931,24,0.679,25,1.284,26,1.144,27,0.842,28,0.812,30,0.812,32,0.353,33,0.906,34,1.355,36,0.723,40,1.005,42,1.677,43,0.809,44,0.695,48,0.783,50,0.874,51,0.874,52,0.679,53,0.013,54,0.603,55,0.792,56,0.728,57,1.996,59,0.523,72,0.634,74,0.864,82,1.118,91,0.609,95,2.57,101,0.233,102,1.54,103,0.122,106,0.728,107,0.109,108,0.029,109,0.842,115,0.906,116,0.679,120,1.656,133,2.241,147,0.388,148,0.939,149,0.939,150,0.679,151,1.163,152,0.679,153,0.939,154,0.586,155,0.679,156,0.565,157,0.679,158,0.586,159,1.077,160,0.543,161,0.939,162,0.586,163,0.679,164,0.586,165,0.679,166,0.586,167,0.939,168,0.586,169,0.939,170,0.565,171,0.679,172,1.005,173,1.346,174,1.163,175,0.565,176,0.679,177,0.609,178,1.091,179,1.077,180,0.586,181,1.077,182,0.586,183,1.077,184,0.586,185,0.679,186,0.586,187,0.679,188,0.586,189,0.655,190,0.586,191,0.679,192,0.565,193,0.679,194,0.586,195,0.586,196,0.977,197,0.655,198,1.077,199,0.586,200,0.679,201,0.586,202,0.586,203,0.679,204,0.586,205,0.586,206,0.586,207,0.586,208,0.565,209,0.679,210,0.586,211,1.039,212,0.586,213,0.586,214,0.586,215,0.565,216,0.679,217,0.586,218,0.523,219,0.939,220,0.586,221,0.679,222,0.565,223,0.631,224,0.586,225,1.098,226,0.631,227,0.966,228,0.565,229,0.679,230,0.586,231,0.443,232,0.609,233,0.586,234,0.812,235,0.679,236,0.586,237,0.586,238,0.586,239,0.586,240,0.586,241,0.586,242,0.655,243,0.679,244,0.679,245,0.006,246,0.008,247,0.006,294,1.008,295,1.282,314,1.356,315,1.263,344,3.419,358,2.207,360,2.83,361,1.345,362,2.207,363,4.848,364,2.83,365,2.83,366,2.83,368,5.09,369,2.634,370,2.83,371,3.917,372,2.83,373,2.83,374,3.419,375,2.83,376,2.83,412,3.594,424,2.757,539,2.473,544,5.023,558,2.679,646,3.917,647,4.713,675,2.738,676,1.619,803,1.736,1236,4.848,1296,5.76,1297,6.261,1298,6.261,1299,2.634,1300,4.492,1301,3.917,1302,6.69,1303,6.199,1304,6.199,1305,6.199,1306,5.405,1307,3.906,1308,4.106,1309,4.257,1310,3.92,1311,3.906,1312,5.406,1313,3.906,1314,6.69,1315,3.406,1316,5.406,1317,5.406,1318,3.406,1319,6.69,1320,4.899,1321,3.906,1322,3.906,1323,3.906,1324,1.93,1325,3.906,1326,3.906,1327,3.906,1328,7.95,1329,3.906,1330,2.634,1331,2.634]],["title/components/AntennasComponent.html",[0,0.101,175,0.583]],["body/components/AntennasComponent.html",[0,0.2,1,0.694,2,0.942,3,0.128,4,0.097,5,0.803,6,0.803,7,0.803,8,0.747,9,0.097,13,0.228,14,0.774,15,0.875,21,0.875,22,1.014,24,0.803,25,1.293,26,1.153,27,0.943,28,0.909,30,0.909,32,0.417,33,1.015,36,0.81,40,1.076,43,0.784,44,0.868,48,0.712,50,0.979,51,0.979,52,0.803,53,0.013,54,0.668,55,0.717,56,0.861,59,0.618,60,3.611,72,0.574,82,1.252,91,1.052,101,0.211,103,0.144,106,0.861,107,0.128,108,0.022,109,0.72,116,1.052,118,1.878,136,1.058,139,1.71,143,2.482,147,0.459,148,1.052,149,1.052,150,0.803,151,1.245,152,0.803,153,1.052,154,0.694,155,0.803,156,0.668,157,0.803,158,0.694,159,1.173,160,0.643,161,1.052,162,0.694,163,0.803,164,0.694,165,0.803,166,0.694,167,1.052,168,0.694,169,1.052,170,0.668,171,0.803,172,0.694,173,0.747,174,1.245,175,1.036,176,0.803,177,0.72,178,1.198,179,1.173,180,0.694,181,1.173,182,0.694,183,1.173,184,0.694,185,0.803,186,0.694,187,0.803,188,0.694,189,0.774,190,0.694,191,0.803,192,0.668,193,0.803,194,0.694,195,0.694,196,1.035,197,0.774,198,1.173,199,0.694,200,0.803,201,0.694,202,0.694,203,0.803,204,0.694,205,0.694,206,0.694,207,0.694,208,0.668,209,0.803,210,0.694,211,1.132,212,0.694,213,0.694,214,0.694,215,0.668,216,0.803,217,0.694,218,0.618,219,1.052,220,0.694,221,0.803,222,0.668,223,0.747,224,0.694,225,1.141,226,0.747,227,1.052,228,0.668,229,0.803,230,0.694,231,0.524,232,0.72,233,0.694,234,0.909,235,0.803,236,0.694,237,0.694,238,0.694,239,0.694,240,0.694,241,0.694,242,0.774,243,0.803,244,0.803,245,0.007,246,0.009,247,0.007,294,1.129,295,1.252,314,0.892,315,0.803,509,1.536,517,1.338,535,3.102,544,4.831,558,2.473,597,2.61,598,4.386,687,2.468,750,3.828,926,2.075,1029,4.081,1278,5.642,1324,2.724,1332,4.028,1333,4.767,1334,3.421,1335,6.053,1336,6.053,1337,6.751,1338,6.053,1339,6.485,1340,6.053,1341,6.053,1342,4.619,1343,6.053,1344,4.619,1345,4.767,1346,4.386,1347,5.278,1348,4.028,1349,4.619]],["title/modules/AntennasModule.html",[248,0.987,1350,2.404]],["body/modules/AntennasModule.html",[3,0.153,4,0.115,9,0.115,53,0.013,101,0.293,103,0.172,107,0.153,108,0.026,147,0.545,172,1.198,175,1.154,177,1.244,178,1.146,180,1.198,182,1.255,245,0.009,246,0.01,247,0.009,248,1.344,249,4.51,250,2.109,251,1.538,252,3.033,253,2.276,254,3.155,255,3.033,261,3.905,262,3.308,263,3.738,264,2.913,265,2.367,266,2.109,268,2.913,269,2.913,270,3.164,271,2.367,285,1.39,286,2.572,287,2.686,288,3.275,289,3.102,558,1.825,1297,4.324,1298,4.324,1308,4.51,1350,5.129,1351,4.787,1352,4.787,1353,4.787,1354,4.787,1355,4.787,1356,4.76,1357,5.046,1358,5.49,1359,5.49,1360,4.787,1361,4.787,1362,4.324,1363,4.787,1364,3.978,1365,4.324,1366,4.787,1367,4.324,1368,4.787,1369,4.324,1370,4.324]],["title/injectables/AntennasService.html",[916,1.294,1308,2.277]],["body/injectables/AntennasService.html",[0,0.144,2,0.858,3,0.119,4,0.09,9,0.09,13,0.284,15,1.004,32,0.386,33,0.964,34,1.546,36,0.769,43,0.69,44,0.739,48,0.801,50,0.93,51,0.93,52,0.743,53,0.014,54,0.367,55,0.884,56,0.797,57,1.964,68,2.88,72,0.687,74,0.946,79,1.438,81,2.479,83,3.089,91,1.164,93,3.558,101,0.266,103,0.134,106,0.797,107,0.119,108,0.02,109,0.666,110,2.083,111,1.59,115,0.717,116,0.999,173,1.354,178,0.863,225,1.004,231,0.789,239,0.863,245,0.007,246,0.009,247,0.007,248,1.408,295,1.437,314,1.4,315,1.26,347,2.383,350,1.61,357,2.208,361,2.238,442,2.723,444,2.482,459,1.846,463,2.155,487,2.208,488,2.383,489,2.383,490,2.383,491,2.383,492,2.208,493,2.293,494,1.316,535,3.167,538,3.877,539,3.167,558,2.31,624,1.723,673,4.721,674,1.92,689,4.144,772,3.926,916,1.846,926,1.92,927,2.297,929,1.583,932,3.396,933,2.945,934,2.416,945,3.877,982,3.249,983,3.733,997,5.034,1056,2.693,1161,4.528,1167,3.134,1308,3.249,1310,3.636,1320,3.877,1350,3.43,1371,2.19,1372,3.728,1373,5.013,1374,3.089,1375,5.664,1376,6.496,1377,6.496,1378,6.496,1379,6.496,1380,6.496,1381,6.496,1382,6.058,1383,6.058,1384,6.058,1385,4.275,1386,5.749,1387,4.108,1388,4.275,1389,4.275,1390,4.166,1391,4.275,1392,2.693,1393,4.275,1394,3.215,1395,4.528,1396,4.166,1397,4.275,1398,4.275,1399,4.275,1400,4.166,1401,5.749,1402,4.275,1403,5.034,1404,4.528,1405,4.275,1406,3.249,1407,4.275,1408,5.013,1409,1.705,1410,3.098,1411,3.728,1412,3.098,1413,2.704,1414,5.013,1415,3.728,1416,3.728,1417,4.275,1418,4.275,1419,4.275,1420,4.275,1421,4.275,1422,4.275,1423,3.728,1424,4.275,1425,3.728,1426,4.275,1427,3.728,1428,4.275,1429,3.728,1430,4.275,1431,3.699,1432,3.558,1433,3.4,1434,3.4,1435,2.693,1436,2.693,1437,4.275,1438,3.427]],["title/components/AntennasSidebarComponent.html",[0,0.101,180,0.605]],["body/components/AntennasSidebarComponent.html",[0,0.185,1,0.457,2,0.558,3,0.126,4,0.064,5,0.937,6,0.529,7,0.529,8,0.492,9,0.064,13,0.315,14,0.758,15,1.049,17,2.697,21,0.654,22,0.81,24,0.529,25,1.268,26,1.13,27,0.705,28,0.679,30,0.679,32,0.275,33,0.758,34,1.246,36,0.605,40,0.896,41,3.048,42,1.402,43,0.826,44,0.581,48,0.761,50,0.731,51,0.731,52,1.037,53,0.013,54,0.574,55,0.841,56,1.113,57,1.751,59,0.407,65,0.967,72,0.733,73,1.51,74,1.001,79,1.001,82,0.935,83,2.429,91,0.84,93,2.315,101,0.222,102,0.935,103,0.095,106,0.843,107,0.085,108,0.014,109,1.041,111,0.697,115,1.297,116,1.234,118,2.072,120,1.318,125,2.001,126,2.867,127,2.212,128,1.614,129,3,131,1.751,132,2.073,133,1.874,136,1.691,137,1.736,139,2.687,140,0.944,142,4.047,145,2.03,146,3.048,147,0.302,148,0.785,149,0.785,150,0.529,151,1.037,152,0.529,153,0.785,154,0.457,155,0.529,156,0.44,157,0.529,158,0.457,159,0.937,160,0.424,161,0.785,162,0.457,163,0.529,164,0.457,165,0.529,166,0.457,167,0.785,168,0.457,169,0.785,170,0.44,171,0.529,172,0.457,173,1.285,174,1.037,175,0.44,176,0.529,177,0.474,178,1.209,179,0.937,180,0.896,181,0.937,182,0.457,183,0.937,184,0.457,185,0.529,186,0.457,187,0.529,188,0.457,189,0.51,190,0.457,191,0.529,192,0.44,193,0.529,194,0.457,195,0.457,196,0.887,197,0.904,198,0.937,199,0.457,200,0.529,201,0.457,202,0.457,203,0.529,204,0.457,205,0.457,206,0.457,207,0.457,208,0.44,209,0.529,210,0.457,211,0.904,212,0.457,213,0.457,214,0.457,215,0.44,216,0.529,217,0.457,218,0.605,219,0.785,220,0.457,221,0.529,222,0.44,223,0.492,224,0.457,225,1.027,226,0.492,227,0.84,228,0.44,229,0.529,230,0.457,231,0.346,232,0.474,233,0.457,234,0.679,235,0.529,236,0.457,237,0.457,238,0.457,239,0.457,240,0.457,241,0.457,242,0.51,243,0.529,244,0.529,245,0.005,246,0.007,247,0.005,294,1.29,295,1.469,297,1.402,300,1.262,314,0.588,315,0.529,319,1.402,328,1.803,334,1.559,337,2.555,338,2.664,342,1.038,393,2.429,394,1.736,395,2.469,396,2.543,397,1.816,399,3.275,403,1.557,409,3.614,412,2.429,413,2.859,416,1.984,421,2.474,463,2.436,494,0.697,509,1.984,510,3.56,514,3.41,515,3.24,516,3.275,517,1.847,531,2.382,535,3.224,539,2.989,540,2.859,541,3.275,553,1.816,571,2.526,590,1.49,591,2.749,592,2.945,593,3.56,639,2.398,640,1.816,645,2.398,646,2.206,652,2.859,660,3.907,661,3.048,675,2.665,676,1.262,687,2.613,689,3.56,781,2.398,803,1.452,871,1.874,880,2.697,881,2.053,884,2.118,926,1.367,1078,3.275,1240,1.313,1293,2.654,1296,5.605,1308,4.332,1324,1.614,1330,3.636,1331,3.636,1334,3.603,1339,5.559,1346,3.275,1348,5.559,1362,6.092,1367,2.398,1374,2.897,1396,3.275,1408,5.824,1439,2.206,1440,4.247,1441,3.56,1442,3.048,1443,5.203,1444,5.967,1445,5.967,1446,3.942,1447,5.967,1448,3.942,1449,5.392,1450,3.044,1451,4.52,1452,3.044,1453,3.56,1454,3.56,1455,4.52,1456,3.044,1457,3.942,1458,3.044,1459,3.044,1460,3.044,1461,5.392,1462,4.52,1463,3.044,1464,3.044,1465,3.048,1466,4.52,1467,3.044,1468,5.203,1469,3.044,1470,2.429,1471,3.044,1472,3.044,1473,1.559,1474,1.925,1475,1.816,1476,2.654,1477,3.044,1478,3.044,1479,3.044,1480,3.044,1481,4.52,1482,5.967,1483,4.52,1484,4.52,1485,4.52,1486,4.52,1487,4.52,1488,4.52,1489,4.701,1490,3.044,1491,1.636,1492,6.614,1493,4.52,1494,5.967,1495,5.392,1496,4.52,1497,2.654,1498,3.044,1499,4.52,1500,3.044,1501,3.044,1502,3.044,1503,4.52,1504,2.654,1505,2.398,1506,3.044,1507,3.044,1508,3.044,1509,2.206,1510,2.654,1511,3.044,1512,2.398,1513,2.398]],["title/components/AntennasSummaryComponent.html",[0,0.101,182,0.605]],["body/components/AntennasSummaryComponent.html",[0,0.19,1,0.632,2,0.703,3,0.117,4,0.088,5,0.732,6,0.732,7,0.732,8,0.681,9,0.088,13,0.319,14,0.706,15,1.132,21,0.823,22,0.968,24,0.732,25,1.289,26,1.149,27,0.887,28,0.855,30,0.855,32,0.38,33,0.954,34,1.202,36,0.761,40,1.037,43,0.822,44,0.732,48,0.738,50,0.92,51,1.116,52,0.989,53,0.013,54,0.593,55,0.764,56,1.061,57,1.924,59,0.563,72,0.72,82,1.177,83,3.058,91,1.005,93,2.915,101,0.251,103,0.132,106,0.785,107,0.117,108,0.02,109,1.076,110,1.706,111,0.964,115,0.954,116,1.12,118,1.306,120,1.177,125,1.066,131,1.066,147,0.418,148,0.989,149,0.989,150,0.732,151,1.2,152,0.732,153,0.989,154,0.632,155,0.732,156,0.609,157,0.732,158,0.632,159,1.12,160,0.586,161,0.989,162,0.632,163,0.732,164,0.632,165,0.732,166,0.632,167,0.989,168,0.632,169,0.989,170,0.609,171,0.732,172,0.632,173,0.681,174,1.2,175,0.609,176,0.732,177,0.656,178,1.239,179,1.12,180,0.632,181,1.12,182,1.037,183,1.12,184,0.632,185,0.732,186,0.632,187,0.732,188,0.632,189,0.706,190,0.632,191,0.732,192,0.609,193,0.732,194,0.632,195,0.632,196,1.003,197,0.706,198,1.12,199,0.632,200,0.732,201,0.632,202,0.632,203,0.732,204,0.632,205,0.632,206,0.632,207,0.632,208,0.609,209,0.732,210,0.632,211,1.081,212,0.632,213,0.632,214,0.632,215,0.609,216,0.732,217,0.632,218,0.563,219,0.989,220,0.632,221,0.732,222,0.609,223,0.681,224,0.632,225,1.145,226,0.681,227,1.005,228,0.609,229,0.732,230,0.632,231,0.478,232,0.656,233,0.632,234,0.855,235,0.732,236,0.632,237,0.632,238,0.632,239,0.632,240,0.632,241,0.632,242,0.706,243,0.732,244,0.732,245,0.007,246,0.009,247,0.007,285,1.066,295,1.428,342,1.083,403,1.451,509,1.4,539,2.571,545,3.482,546,4.124,553,3.395,571,3.235,675,2.662,676,1.746,731,2.556,1288,4.124,1296,5.506,1308,4.603,1324,2.032,1330,2.84,1331,2.84,1367,3.317,1369,5.985,1406,3.216,1442,2.84,1465,3.838,1473,3.694,1474,4.367,1475,4.723,1476,3.672,1514,3.051,1515,3.838,1516,5.691,1517,5.077,1518,4.482,1519,4.482,1520,3.051,1521,4.211,1522,4.482,1523,4.482,1524,4.211,1525,4.482,1526,3.599,1527,5.386,1528,4.124,1529,2.556,1530,4.482,1531,4.211,1532,4.211,1533,3.672,1534,4.211,1535,3.051,1536,5.691,1537,4.211,1538,4.211,1539,4.211,1540,3.317,1541,4.211]],["title/components/AppComponent.html",[0,0.101,184,0.605]],["body/components/AppComponent.html",[0,0.17,1,0.397,2,0.502,3,0.074,4,0.055,5,0.46,6,0.46,7,0.706,8,0.428,9,0.055,13,0.245,14,0.681,15,1.009,21,0.588,22,0.743,24,0.46,25,1.257,26,1.121,27,0.633,28,0.61,30,0.61,32,0.239,33,0.681,34,1.45,35,3.401,36,0.544,40,0.834,43,0.731,44,0.523,48,0.807,50,0.657,51,0.969,52,0.965,53,0.014,54,0.544,55,0.871,56,1.036,57,1.862,58,2.66,59,0.354,60,4.572,61,3.314,64,2.297,65,1.059,72,0.714,73,1.387,74,1.604,79,0.585,81,3.247,82,0.841,91,0.633,93,2.082,95,1.096,99,5.125,101,0.243,103,0.083,107,0.074,108,0.023,109,1.06,110,1.218,111,1.373,115,1.215,116,1.342,118,1.261,120,1.473,125,1.835,126,2.486,128,1.518,130,2.57,131,1.029,132,1.976,133,1.685,134,1.673,135,1.505,136,1.659,139,2.22,140,2.336,143,3.401,145,1.188,147,0.263,148,0.86,149,0.706,150,0.46,151,0.965,152,0.46,153,0.706,154,0.397,155,0.46,156,0.382,157,0.46,158,0.397,159,0.86,160,0.368,161,0.706,162,0.397,163,0.46,164,0.397,165,0.46,166,0.397,167,0.706,168,0.397,169,0.706,170,0.382,171,0.46,172,0.397,173,0.428,174,0.965,175,0.382,176,0.46,177,0.412,178,1.048,179,0.86,180,0.397,181,0.86,182,0.397,183,0.86,184,0.834,185,0.46,186,0.397,187,0.46,188,0.397,189,0.443,190,0.397,191,0.46,192,0.382,193,0.46,194,0.397,195,0.397,196,0.947,197,0.443,198,0.86,199,0.397,200,0.46,201,0.397,202,0.397,203,0.46,204,0.397,205,0.397,206,0.397,207,0.9,208,0.382,209,0.46,210,0.397,211,0.83,212,0.397,213,0.397,214,0.397,215,0.382,216,0.46,217,0.397,218,0.354,219,0.706,220,0.397,221,0.46,222,0.382,223,0.8,224,0.397,225,1.089,226,0.428,227,0.772,228,0.382,229,0.46,230,0.397,231,0.3,232,0.412,233,0.397,234,0.9,235,0.46,236,0.397,237,0.397,238,0.397,239,0.397,240,0.397,241,0.397,242,0.443,243,0.46,244,0.46,245,0.004,246,0.006,247,0.004,266,1.561,285,1.253,294,0.923,295,1.363,297,1.964,314,0.956,315,1.182,316,1.783,319,1.261,323,1.916,324,2.486,342,1.07,350,1.906,353,2.741,393,2.184,394,1.016,395,1.983,396,1.621,403,1.705,409,2.719,412,1.421,415,1.673,416,0.879,421,1.096,448,1.188,463,1.964,492,1.561,496,2.425,509,1.352,512,1.096,513,1.783,515,1.239,517,1.61,519,2.083,531,1.4,539,2.216,545,2.603,551,4.376,553,2.425,571,1.904,593,1.578,610,2.135,640,2.425,652,4.584,675,2.66,676,1.096,680,2.343,701,2.741,731,1.826,803,1.305,877,2.306,878,2.082,880,1.578,882,2.306,884,1.239,888,2.082,894,2.741,935,4.118,936,1.916,977,6.037,978,5.933,984,3.899,987,2.306,1038,2.965,1039,4.93,1042,3.201,1202,4.003,1232,4.376,1240,3.212,1260,3.226,1273,4.316,1279,2.306,1281,2.083,1334,2.297,1394,2.052,1406,2.297,1413,2.57,1474,1.673,1505,2.083,1510,2.306,1513,2.083,1520,1.916,1542,2.306,1543,3.072,1544,4.95,1545,4.065,1546,6.592,1547,6.804,1548,5.996,1549,6.592,1550,4.157,1551,4.065,1552,4.065,1553,4.065,1554,5.519,1555,5.556,1556,7.124,1557,6.804,1558,2.645,1559,3.544,1560,4.065,1561,3.899,1562,4.93,1563,3.544,1564,4.065,1565,2.645,1566,5.556,1567,5.556,1568,2.945,1569,4.065,1570,4.065,1571,2.645,1572,7.248,1573,5.556,1574,5.556,1575,5.556,1576,5.556,1577,4.065,1578,4.065,1579,5.556,1580,4.065,1581,2.645,1582,4.065,1583,2.645,1584,3.746,1585,4.844,1586,2.645,1587,4.065,1588,2.645,1589,4.065,1590,2.645,1591,3.544,1592,4.065,1593,4.065,1594,4.316,1595,2.645,1596,4.065,1597,2.645,1598,3.389,1599,2.645,1600,2.645,1601,2.645,1602,2.645,1603,4.95,1604,6.804,1605,5.933,1606,4.95,1607,4.95,1608,4.95,1609,2.645,1610,5.556,1611,2.645,1612,5.556,1613,2.645,1614,2.645,1615,2.645,1616,1.916,1617,2.645,1618,2.306,1619,1.916,1620,1.783,1621,2.306,1622,1.578,1623,1.916,1624,2.645,1625,2.645,1626,2.645,1627,5.556,1628,5.556,1629,5.556,1630,2.645,1631,2.645,1632,2.645,1633,2.645,1634,2.645,1635,2.645,1636,2.645,1637,2.306,1638,1.673,1639,2.645,1640,2.645,1641,4.065,1642,4.95,1643,2.306,1644,2.306,1645,5.556,1646,4.065,1647,4.065,1648,4.065,1649,4.065,1650,4.95,1651,4.065,1652,3.544,1653,2.645,1654,2.645,1655,4.065,1656,4.065,1657,4.065,1658,4.065,1659,4.065,1660,5.556,1661,4.065,1662,2.645,1663,3.544,1664,2.645,1665,2.645,1666,2.306,1667,4.316,1668,2.645,1669,4.95,1670,2.645,1671,2.306,1672,2.645,1673,2.306,1674,2.645,1675,2.645,1676,4.065,1677,2.645,1678,4.065,1679,1.421,1680,2.645,1681,2.645,1682,2.645,1683,2.645,1684,2.645,1685,2.645,1686,1.421,1687,4.065,1688,2.645]],["title/modules/AppModule.html",[248,0.987,1689,2.92]],["body/modules/AppModule.html",[3,0.147,4,0.111,9,0.111,13,0.261,26,0.706,53,0.013,101,0.296,103,0.165,107,0.147,108,0.025,147,0.524,184,1.249,245,0.008,246,0.01,247,0.008,248,1.76,249,4.467,250,2.028,251,1.479,252,2.98,253,2.98,254,2.843,255,2.189,261,3.868,262,3.276,263,3.703,264,2.843,265,2.277,266,2.028,268,2.843,269,2.843,271,2.277,279,5.193,280,4.777,281,3.15,282,4.777,283,2.837,284,2.984,285,1.337,286,2.474,287,2.584,288,3.15,289,2.984,1350,4.715,1356,4.715,1357,4.998,1364,3.826,1365,4.158,1366,4.604,1543,2.843,1619,4.777,1620,3.56,1689,6.226,1690,4.604,1691,4.604,1692,4.604,1693,4.604,1694,5.329,1695,5.329,1696,4.998,1697,5.329,1698,4.715,1699,5.28,1700,6.593,1701,6.593,1702,6.593,1703,5.749,1704,4.604,1705,5.749,1706,3.826,1707,4.604,1708,4.604,1709,5.28,1710,5.28,1711,4.604,1712,5.28,1713,4.604,1714,5.28,1715,3.826,1716,5.28]],["title/modules/AppRoutingModule.html",[248,0.987,1694,2.717]],["body/modules/AppRoutingModule.html",[0,0.206,3,0.152,4,0.114,9,0.114,53,0.013,79,1.208,101,0.294,103,0.171,107,0.152,111,1.249,147,0.542,154,1.01,175,0.973,178,0.819,192,0.973,196,0.936,202,1.196,207,1.01,208,0.973,211,0.915,215,0.973,222,1.055,223,0.882,225,0.789,228,0.973,245,0.008,246,0.01,247,0.008,248,1.336,250,2.096,251,1.528,252,2.789,253,2.262,254,2.902,255,2.262,262,3.303,264,2.902,265,2.353,266,2.096,268,2.902,269,2.902,270,3.152,271,2.353,285,1.381,286,2.556,287,2.67,1028,6.515,1473,4.007,1543,2.353,1598,3.803,1622,3.254,1638,3.45,1694,5.607,1708,4.757,1717,4.757,1718,4.757,1719,4.757,1720,4.757,1721,5.372,1722,4.297,1723,5.456,1724,5.456,1725,5.286,1726,5.456,1727,5.456,1728,5.456,1729,3.293,1730,4.757,1731,5.456,1732,5.456,1733,5.456,1734,5.456,1735,3.953,1736,4.297,1737,5.456,1738,5.956,1739,5.456,1740,5.456,1741,5.456,1742,6.728,1743,5.456,1744,5.456,1745,4.757,1746,7.111,1747,5.456,1748,5.456,1749,5.299,1750,5.456,1751,5.456,1752,5.456]],["title/guards/AuthLoginGuard.html",[1738,2.92,1753,2.92]],["body/guards/AuthLoginGuard.html",[3,0.141,4,0.106,9,0.106,13,0.367,15,1.182,21,0.732,32,0.457,36,0.859,44,0.826,48,0.701,50,1.038,51,1.038,52,1.225,53,0.013,54,0.606,55,0.835,56,1.315,57,1.626,72,0.703,73,1.418,74,1.731,79,1.758,87,3.831,95,2.662,99,5.601,101,0.266,103,0.158,107,0.141,108,0.024,109,1.193,110,1.925,111,1.159,115,1.243,245,0.008,246,0.01,247,0.008,327,3.199,342,1.149,346,4.424,459,2.606,465,2.377,469,5.058,558,1.684,619,3.202,632,4.33,673,4.946,674,2.275,680,2.377,731,3.513,760,5.001,916,2.062,917,3.988,935,4.319,968,3.988,1038,3.766,1056,2.372,1310,4.061,1412,3.669,1413,3.202,1543,3.199,1562,5.925,1568,5.546,1622,3.021,1638,4.84,1738,4.653,1746,6.467,1753,5.374,1754,5.064,1755,6.467,1756,4.415,1757,6.422,1758,4.653,1759,6.159,1760,6.422,1761,5.064,1762,5.064,1763,4.33,1764,6.422,1765,7.654,1766,7.654,1767,5.064,1768,6.422,1769,7.82,1770,5.6,1771,6.422,1772,7.417,1773,6.467,1774,6.422,1775,5.064,1776,6.422,1777,5.6,1778,7.053,1779,6.422,1780,6.422,1781,4.415,1782,5.064,1783,5.064,1784,5.064,1785,5.064,1786,4.415,1787,5.064,1788,5.064]],["title/modules/AuthModule.html",[248,0.987,1695,2.717]],["body/modules/AuthModule.html",[3,0.172,4,0.13,9,0.13,53,0.013,101,0.286,103,0.194,107,0.172,108,0.029,147,0.616,192,1.187,245,0.01,246,0.011,247,0.01,248,1.518,250,2.381,251,1.736,252,3.195,253,2.57,254,2.673,255,2.57,262,3.402,264,3.133,265,2.673,266,2.381,268,3.133,269,3.133,270,3.404,271,2.673,280,5.265,281,3.698,282,5.265,283,3.33,284,3.503,285,1.57,286,2.904,287,3.034,1695,5.625,1789,5.405,1790,5.405,1791,6.199,1792,6.199,1793,6.199]],["title/injectables/AuthService.html",[916,1.294,935,2.165]],["body/injectables/AuthService.html",[3,0.094,4,0.071,9,0.071,13,0.343,15,0.906,32,0.305,33,0.817,34,1.067,36,0.652,44,0.627,48,0.81,50,1.013,51,0.788,52,1.204,53,0.014,54,0.685,55,0.917,56,1.292,57,1.587,65,1.224,72,0.787,73,2.087,74,1.674,79,1.649,87,4.132,91,1.161,95,2.02,101,0.241,103,0.105,107,0.094,108,0.016,109,1.113,110,1.011,111,1.674,115,1.329,116,0.847,118,1.775,218,0.889,245,0.005,246,0.008,247,0.005,266,1.872,285,1.754,314,1.283,315,1.155,324,2.871,327,2.102,328,1.944,342,1.255,403,1.679,459,2.012,494,1.586,538,4.671,558,1.122,570,4.506,610,2.102,619,3.963,624,1.011,673,4.844,674,1.515,680,1.804,714,3.367,732,2.907,750,3.082,757,2.598,760,3.286,799,5.706,890,3.082,916,1.565,917,2.657,918,2.275,923,2.275,924,2.657,927,1.812,933,3.404,935,2.618,952,3.838,953,3.838,983,3.722,984,3.838,990,4.249,1031,6.639,1038,3.957,1039,4.541,1056,1.58,1167,2.5,1255,3.838,1371,1.728,1387,4.516,1412,2.444,1413,2.133,1475,2.907,1526,3.082,1554,5.464,1584,4.226,1598,3.542,1620,4.671,1638,4.381,1706,2.444,1758,3.531,1759,5.456,1763,3.858,1777,4.249,1794,2.941,1795,4.873,1796,5.721,1797,6.647,1798,6.647,1799,5.721,1800,5.721,1801,5.721,1802,4.873,1803,6.267,1804,5.464,1805,6.267,1806,6.267,1807,6.267,1808,6.267,1809,6.267,1810,4.873,1811,4.873,1812,4.873,1813,2.941,1814,4.873,1815,4.873,1816,3.373,1817,4.873,1818,3.373,1819,6.647,1820,6.679,1821,7.238,1822,8.301,1823,3.373,1824,6.376,1825,3.838,1826,3.373,1827,3.373,1828,3.373,1829,4.873,1830,6.596,1831,3.373,1832,4.226,1833,4.873,1834,4.249,1835,3.373,1836,6.267,1837,4.873,1838,3.373,1839,6.927,1840,7.66,1841,3.373,1842,3.373,1843,4.873,1844,3.373,1845,6.927,1846,6.927,1847,4.873,1848,3.373,1849,4.873,1850,3.373,1851,3.373,1852,6.927,1853,3.373,1854,4.873,1855,3.373,1856,4.873,1857,3.373,1858,3.373,1859,4.873,1860,3.373,1861,3.373,1862,5.721,1863,4.249,1864,5.721,1865,4.873,1866,3.373,1867,3.373,1868,2.941,1869,3.373,1870,3.373,1871,3.373,1872,3.373,1873,3.373,1874,3.373,1875,3.373,1876,4.873,1877,2.012,1878,3.373,1879,3.373,1880,3.373,1881,3.373,1882,3.373,1883,3.373,1884,3.373,1885,3.373,1886,3.373,1887,3.373,1888,3.373,1889,3.373,1890,3.373,1891,3.373,1892,3.373,1893,3.373,1894,3.373,1895,3.373,1896,4.873,1897,4.873,1898,3.373,1899,3.373,1900,3.373,1901,3.373,1902,3.373,1903,3.373,1904,3.373,1905,3.373]],["title/components/ButtonsComponent.html",[0,0.101,186,0.605]],["body/components/ButtonsComponent.html",[0,0.197,1,1.039,2,0.772,3,0.135,4,0.102,5,0.845,6,0.845,7,0.845,8,0.786,9,0.102,13,0.24,14,0.815,15,0.905,16,4.534,21,0.905,22,1.039,24,0.845,25,1.296,26,1.155,27,0.975,28,0.939,30,0.939,32,0.439,36,0.837,40,1.097,42,1.941,43,0.83,44,0.89,48,0.687,50,1.012,51,1.012,53,0.013,54,0.537,55,0.576,59,0.65,65,1.339,66,2.234,72,0.461,81,2.698,82,1.294,91,0.758,101,0.218,102,1.294,103,0.152,106,0.906,107,0.135,108,0.023,147,0.483,148,1.087,149,1.087,150,0.845,151,1.269,152,0.845,153,1.087,154,0.73,155,0.845,156,0.703,157,0.845,158,0.73,159,1.202,160,0.676,161,1.087,162,0.73,163,0.845,164,0.73,165,0.845,166,0.73,167,1.087,168,0.73,169,1.087,170,0.703,171,0.845,172,0.73,173,0.786,174,1.269,175,0.703,176,0.845,177,0.758,178,1.039,179,1.202,180,0.73,181,1.202,182,0.73,183,1.202,184,0.73,185,0.845,186,1.097,187,0.845,188,0.73,189,0.815,190,0.73,191,0.845,192,0.703,193,0.845,194,0.73,195,0.73,196,1.052,197,1.319,198,1.202,199,0.73,200,0.845,201,0.73,202,0.73,203,0.845,204,0.73,205,0.73,206,0.73,207,0.73,208,0.703,209,0.845,210,0.73,211,1.16,212,0.73,213,0.73,214,1.039,215,0.703,216,0.845,217,0.73,218,0.65,219,1.087,220,0.73,221,0.845,222,0.703,223,0.786,224,0.73,225,1.153,226,0.786,227,1.078,228,0.703,229,0.845,230,0.73,231,0.552,232,0.758,233,0.73,234,0.939,235,0.845,236,0.73,237,0.73,238,0.73,239,0.73,240,0.73,241,0.73,242,0.815,243,0.845,244,0.845,245,0.008,246,0.01,247,0.008,353,4.219,444,2.08,675,2.155,1255,4.928,1529,2.81,1598,3.536,1906,4.239,1907,4.928,1908,6.257,1909,6.257,1910,6.919,1911,6.257,1912,6.257,1913,4.861]],["title/injectables/CdbService.html",[916,1.294,930,2.548]],["body/injectables/CdbService.html",[0,0.16,3,0.14,4,0.106,9,0.106,13,0.317,15,0.926,32,0.455,33,1.074,34,1.312,36,0.857,44,0.823,48,0.798,52,0.876,53,0.013,54,0.433,55,0.597,56,0.94,57,2.034,72,0.752,97,4.641,98,4.318,101,0.258,103,0.158,107,0.14,108,0.024,109,0.786,110,1.511,115,1.241,231,0.938,245,0.008,246,0.01,247,0.008,285,2.143,314,1.236,315,1.42,440,2.555,459,2.057,494,1.466,539,3.325,609,4.641,610,2.762,619,4.05,624,1.511,658,3.369,674,2.265,714,3.441,732,3.82,772,2.85,916,2.057,918,3.4,927,2.709,930,4.05,932,3.763,933,3.793,934,2.85,945,5.416,956,4.641,982,3.62,983,4.316,997,4.993,1091,5.044,1175,5.584,1202,4.05,1236,3.653,1371,2.582,1410,3.653,1454,5.044,1529,3.326,1914,4.396,1915,7.038,1916,7.038,1917,7.038,1918,7.405,1919,7.405,1920,7.405,1921,4.396,1922,6.405,1923,5.042,1924,7.405,1925,7.405,1926,6.405,1927,6.405,1928,6.457,1929,5.042,1930,6.405,1931,5.042,1932,5.042,1933,5.584,1934,5.042,1935,6.405,1936,5.042,1937,5.042,1938,5.042,1939,5.042,1940,5.042,1941,5.042,1942,5.584,1943,5.042,1944,6.405,1945,5.584,1946,5.042,1947,5.042]],["title/modules/DataModule.html",[248,0.987,261,1.972]],["body/modules/DataModule.html",[3,0.166,4,0.126,9,0.126,13,0.296,53,0.013,101,0.286,103,0.187,107,0.166,108,0.028,147,0.595,231,0.808,245,0.009,246,0.011,247,0.009,248,1.86,250,2.3,251,1.677,252,2.951,253,2.482,254,3.276,255,2.951,261,4.134,264,3.07,265,2.583,266,2.3,268,2.583,269,3.07,270,3.335,271,2.583,483,4.8,675,2.805,930,5.15,932,3.815,933,3.067,934,3.384,1387,4.502,1529,3.198,1550,4.603,1559,6.207,1705,6.624,1706,4.339,1948,5.221,1949,5.221,1950,5.988,1951,5.988,1952,5.988,1953,5.988]],["title/modules/HealthModule.html",[248,0.987,1696,2.548]],["body/modules/HealthModule.html",[2,0.876,3,0.166,4,0.125,9,0.125,13,0.295,53,0.013,66,2.534,101,0.283,103,0.186,107,0.166,108,0.028,147,0.592,188,1.268,189,1.271,245,0.009,246,0.011,247,0.009,248,1.856,250,2.289,251,1.669,252,3.143,253,2.47,254,2.569,255,3.143,261,3.981,262,3.372,263,3.811,264,3.061,265,2.569,266,2.289,268,3.061,269,3.061,270,3.325,271,2.569,285,1.92,286,2.791,287,2.916,288,3.554,289,3.367,1370,4.692,1529,3.188,1696,5.355,1954,5.195,1955,5.195,1956,5.958,1957,5.195,1958,5.958,1959,4.692]],["title/components/HealthSummaryComponent.html",[0,0.101,188,0.605]],["body/components/HealthSummaryComponent.html",[0,0.195,1,0.558,2,0.645,3,0.103,4,0.078,5,0.646,6,0.646,7,0.646,8,0.601,9,0.078,13,0.298,14,0.623,15,1.034,21,0.755,22,0.906,24,0.646,25,1.281,26,1.142,27,0.814,28,0.784,30,0.784,32,0.336,33,0.875,34,1.421,36,0.699,40,0.983,43,0.821,44,0.671,48,0.757,50,0.844,51,1.059,52,0.907,53,0.013,54,0.562,55,0.817,56,0.974,57,1.658,59,0.497,68,2.714,72,0.711,91,1.075,101,0.265,103,0.116,106,0.974,107,0.103,108,0.017,109,0.941,110,1.81,111,1.195,115,0.875,116,1.138,118,1.153,120,1.08,125,0.941,131,0.941,147,0.369,148,0.907,149,0.907,150,0.646,151,1.138,152,0.646,153,0.907,154,0.558,155,0.646,156,0.537,157,0.646,158,0.558,159,1.049,160,0.517,161,0.907,162,0.558,163,0.646,164,0.558,165,0.646,166,0.558,167,0.907,168,0.558,169,0.907,170,0.537,171,0.646,172,0.558,173,0.601,174,1.138,175,0.537,176,0.646,177,0.579,178,0.906,179,1.049,180,0.558,181,1.049,182,0.558,183,1.049,184,0.558,185,0.646,186,0.558,187,0.646,188,0.983,189,1.295,190,0.558,191,0.646,192,0.537,193,0.646,194,0.558,195,0.558,196,0.96,197,0.623,198,1.049,199,0.558,200,0.646,201,0.558,202,0.558,203,0.646,204,0.558,205,0.558,206,0.558,207,0.558,208,0.537,209,0.646,210,0.558,211,1.012,212,0.558,213,0.558,214,0.558,215,0.537,216,0.646,217,0.558,218,0.497,219,0.907,220,0.558,221,0.646,222,0.537,223,0.601,224,0.558,225,1.117,226,0.601,227,0.941,228,0.537,229,0.646,230,0.558,231,0.422,232,0.579,233,0.558,234,0.784,235,0.646,236,0.558,237,0.558,238,0.558,239,0.558,240,0.558,241,0.558,242,0.623,243,0.646,244,0.646,245,0.006,246,0.008,247,0.006,285,1.529,295,1.551,342,1.036,357,2.006,361,2.079,403,1.28,425,3.783,442,2.623,444,2.378,487,2.967,488,2.165,489,2.165,490,2.165,491,2.165,492,2.006,493,2.083,494,1.499,509,1.236,535,2.93,539,2.083,545,3.067,546,3.783,553,3.115,571,3.067,624,1.565,675,2.661,676,1.541,689,3.115,731,2.345,926,1.669,927,1.997,929,1.376,932,3.067,934,2.1,1056,2.446,1155,4.744,1167,2.083,1288,3.783,1330,2.506,1331,2.506,1383,5.709,1387,3.817,1392,3.067,1394,3.109,1403,3.783,1406,2.951,1409,1.482,1410,2.693,1415,3.24,1423,3.24,1425,3.24,1431,3.633,1435,2.446,1436,2.446,1438,2.345,1442,2.506,1473,3.533,1474,4.141,1475,3.906,1514,2.693,1515,3.521,1517,4.754,1518,4.112,1519,4.112,1520,2.693,1522,4.112,1523,4.112,1525,4.112,1526,3.302,1527,5.183,1528,3.783,1529,2.345,1530,4.112,1533,3.24,1535,2.693,1540,2.927,1959,6.084,1960,6.735,1961,6.036,1962,6.036,1963,6.547,1964,4.553,1965,3.716,1966,3.716,1967,3.716,1968,3.716,1969,5.222,1970,5.222,1971,3.716,1972,3.716,1973,3.716,1974,5.222,1975,3.716,1976,3.716,1977,3.716,1978,3.716,1979,8.088,1980,3.442,1981,5.709,1982,3.716,1983,3.231]],["title/injectables/HttpClientService.html",[916,1.294,932,1.888]],["body/injectables/HttpClientService.html",[3,0.124,4,0.094,9,0.094,13,0.381,15,1.023,32,0.404,36,0.793,44,0.762,48,0.778,50,1.144,51,0.958,52,1.34,53,0.014,54,0.663,55,0.872,56,1.438,57,1.983,58,3.182,65,1.267,72,0.782,81,3.452,95,2.455,101,0.256,103,0.14,107,0.124,108,0.021,109,1.235,110,2.206,111,1.619,115,1.313,231,0.932,245,0.007,246,0.009,247,0.007,338,2.363,342,1.212,350,1.659,403,2.04,426,3.521,459,2.721,465,2.193,494,1.356,551,6.304,570,5.956,680,2.193,687,2.04,714,4.301,772,3.997,916,1.902,923,3.014,924,3.521,932,2.775,933,4.185,935,4.259,936,3.239,982,3.347,983,4.208,1031,5.232,1032,5.165,1056,3.806,1065,7.083,1096,6.167,1256,6.167,1371,2.289,1387,4.653,1598,3.347,1706,4.292,1763,4.479,1804,6.167,1813,3.898,1824,6.83,1825,4.665,1863,5.165,1868,6.167,1877,4.219,1984,6.912,1985,3.898,1986,5.923,1987,5.923,1988,5.923,1989,5.923,1990,7.073,1991,5.923,1992,4.47,1993,5.923,1994,4.47,1995,5.923,1996,4.47,1997,4.47,1998,5.923,1999,4.47,2000,5.923,2001,5.923,2002,5.923,2003,5.923,2004,4.47,2005,5.923,2006,4.47,2007,5.923,2008,4.47,2009,5.923,2010,5.923,2011,3.182,2012,5.923,2013,4.47,2014,4.47,2015,4.47,2016,4.47,2017,7.833,2018,4.47,2019,4.47,2020,4.47,2021,4.47,2022,4.47]],["title/modules/IasMaterialModule.html",[248,0.987,262,1.67]],["body/modules/IasMaterialModule.html",[2,0.85,3,0.157,4,0.119,9,0.119,13,0.28,53,0.013,101,0.298,103,0.177,107,0.157,108,0.027,196,0.958,205,0.85,245,0.009,246,0.011,247,0.009,248,1.685,250,2.175,252,2.347,255,2.347,262,2.853,268,2.442,269,2.968,284,3.2,286,2.652,671,4.459,680,2.548,1254,4.459,1618,4.936,1619,4.102,1703,6.466,1704,4.936,2023,5.661,2024,5.661,2025,5.421,2026,7.416,2027,5.661,2028,7.416,2029,5.661,2030,7.416,2031,5.661,2032,7.416,2033,5.661,2034,7.416,2035,5.661,2036,7.416,2037,5.661,2038,7.416,2039,5.661,2040,7.416,2041,5.661,2042,7.416,2043,7.416,2044,5.661,2045,7.416,2046,5.661,2047,7.416,2048,5.661,2049,7.416,2050,7.416,2051,5.661,2052,7.416,2053,5.661,2054,4.936,2055,7.416,2056,5.661,2057,7.416,2058,5.661,2059,7.416,2060,5.661,2061,7.416,2062,5.661,2063,3.042,2064,7.416,2065,4.936]],["title/classes/Iasio.html",[108,0.019,2066,3.173]],["body/classes/Iasio.html",[3,0.144,4,0.108,9,0.108,13,0.389,32,0.467,33,1.091,36,0.87,43,0.646,44,0.664,48,0.793,50,1.052,51,1.151,52,1.237,53,0.013,54,0.612,55,0.965,56,1.327,65,1.808,66,2.322,68,2.142,72,0.745,73,2.157,74,1.44,79,1.144,81,3.222,86,5.607,107,0.144,108,0.037,109,1.164,111,1.711,115,1.194,116,1.237,118,1.603,234,0.776,245,0.008,246,0.01,247,0.008,295,1.345,338,2.595,342,1.212,345,2.421,459,2.089,465,2.408,494,1.63,495,5.58,496,3.88,497,4.386,498,4.114,499,4.713,500,3.745,658,2.229,681,4.114,707,5.123,760,4.386,772,4.223,893,6.854,914,5.123,943,5.672,957,4.506,1089,5.123,1091,4.07,1403,3.745,2066,6.716,2067,4.506,2068,4.506,2069,5.168,2070,7.701,2071,7.701,2072,7.701,2073,7.701,2074,6.505,2075,6.505,2076,6.505,2077,5.168,2078,6.505,2079,5.168,2080,5.168,2081,6.505,2082,6.505,2083,6.505,2084,5.168,2085,5.123,2086,6.505,2087,5.168,2088,5.672,2089,5.168,2090,5.168,2091,5.168,2092,5.168,2093,5.168,2094,5.168,2095,5.168,2096,5.168,2097,5.168,2098,5.168]],["title/components/LegendComponent.html",[0,0.101,190,0.605]],["body/components/LegendComponent.html",[0,0.192,1,0.57,2,0.654,3,0.105,4,0.08,5,0.659,6,0.659,7,0.659,8,0.613,9,0.08,13,0.188,14,0.636,15,1.197,21,0.766,22,0.917,24,0.659,25,1.283,26,1.143,27,0.826,28,0.796,30,0.796,32,0.343,33,0.888,36,0.709,40,0.992,43,0.771,44,0.785,48,0.792,50,0.857,51,0.857,53,0.013,54,0.455,59,0.508,64,4.68,72,0.36,91,0.591,101,0.184,103,0.119,107,0.105,108,0.018,126,1.573,128,1.342,131,1.342,134,2.4,136,1.397,140,2.575,147,0.771,148,0.921,149,0.921,150,0.659,151,1.148,152,0.659,153,0.921,154,0.57,155,0.659,156,0.549,157,0.659,158,0.57,159,1.061,160,0.528,161,0.921,162,0.57,163,0.659,164,0.57,165,0.659,166,0.57,167,0.921,168,0.57,169,0.921,170,0.549,171,0.659,172,0.57,173,0.613,174,1.148,175,0.549,176,0.659,177,0.591,178,0.917,179,1.061,180,0.57,181,1.061,182,0.57,183,1.061,184,0.57,185,0.659,186,0.57,187,0.659,188,0.57,189,0.636,190,0.992,191,0.659,192,0.549,193,0.659,194,0.57,195,0.57,196,0.967,197,0.636,198,1.061,199,0.57,200,0.659,201,0.57,202,0.57,203,0.659,204,0.57,205,0.57,206,0.57,207,0.57,208,0.549,209,0.659,210,0.57,211,1.023,212,0.57,213,0.57,214,0.57,215,0.549,216,0.659,217,0.57,218,0.508,219,0.921,220,0.57,221,0.659,222,0.549,223,0.613,224,0.57,225,1.09,226,0.613,227,0.951,228,0.549,229,0.659,230,0.57,231,0.431,232,0.591,233,0.57,234,0.796,235,0.659,236,0.57,237,0.57,238,0.57,239,0.57,240,0.57,241,0.57,242,0.636,243,0.659,244,0.659,245,0.006,246,0.008,247,0.006,294,1.558,295,1.713,297,1.894,299,5.223,314,1.514,315,1.362,319,1.177,395,2.359,396,2.435,397,2.263,421,2.196,440,2.113,444,2.63,446,5.462,457,5.761,487,3.082,492,2.942,493,3.055,510,4.173,512,2.196,513,3.572,515,2.86,517,1.099,571,2.482,593,2.263,624,1.137,731,2.968,880,3.16,929,1.405,1155,4.787,1167,3.007,1431,3.72,1438,3.386,1652,4.62,1980,3.532,1983,3.095,2099,3.308,2100,6.104,2101,5.298,2102,6.104,2103,6.104,2104,6.104,2105,6.104,2106,6.104,2107,6.104,2108,6.104,2109,6.104,2110,6.104,2111,5.298,2112,3.794,2113,3.794,2114,3.794,2115,3.794,2116,4.62,2117,3.794,2118,4.62,2119,3.794,2120,6.607,2121,4.62,2122,3.794,2123,4.62,2124,3.794,2125,6.607,2126,4.62,2127,3.794,2128,3.794,2129,3.794,2130,2.988]],["title/components/LoginComponent.html",[0,0.101,192,0.583]],["body/components/LoginComponent.html",[0,0.193,1,0.521,2,0.614,3,0.097,4,0.073,5,0.603,6,0.603,7,0.603,8,0.562,9,0.073,13,0.288,14,0.582,15,1.144,21,0.72,22,0.873,24,0.603,25,1.277,26,1.138,27,0.776,28,0.747,30,0.747,32,0.314,33,0.834,34,1.304,36,0.666,40,0.954,43,0.732,44,0.64,48,0.773,50,0.805,51,0.805,52,0.865,53,0.013,54,0.546,55,0.853,56,0.928,57,1.771,58,2.674,59,0.465,65,1.065,70,2.812,72,0.602,74,1.287,76,2.533,91,0.99,93,2.549,95,2.411,99,5.371,101,0.234,102,1.029,103,0.109,107,0.097,108,0.016,109,1.048,110,1.492,111,0.795,116,1.011,120,0.718,125,1.26,126,2.063,128,1.473,129,2.235,131,1.26,132,1.904,133,2.633,136,1.454,142,1.779,143,3.125,147,0.345,148,0.865,149,0.865,150,0.603,151,1.104,152,0.603,153,0.865,154,0.521,155,0.603,156,0.502,157,0.603,158,0.521,159,1.011,160,0.483,161,0.865,162,0.521,163,0.603,164,0.521,165,0.603,166,0.521,167,0.865,168,0.521,169,0.865,170,0.502,171,0.603,172,0.521,173,0.562,174,1.104,175,0.502,176,0.603,177,0.541,178,0.873,179,1.011,180,0.521,181,1.011,182,0.521,183,1.011,184,0.521,185,0.603,186,0.521,187,0.603,188,0.521,189,0.582,190,0.521,191,0.603,192,0.918,193,0.603,194,0.521,195,0.521,196,0.935,197,0.582,198,1.011,199,0.521,200,0.603,201,0.521,202,0.521,203,0.603,204,0.521,205,0.521,206,0.521,207,0.521,208,0.502,209,0.603,210,0.521,211,0.975,212,0.521,213,0.521,214,0.521,215,0.502,216,0.603,217,0.521,218,1.004,219,0.865,220,0.521,221,0.603,222,0.502,223,0.562,224,0.521,225,1.065,226,0.562,227,0.906,228,0.502,229,0.603,230,0.521,231,0.394,232,0.541,233,0.521,234,0.747,235,0.603,236,0.521,237,0.521,238,0.521,239,0.521,240,0.521,241,0.521,242,0.582,243,0.603,244,0.603,245,0.005,246,0.008,247,0.005,281,2.072,283,1.866,284,3.287,285,1.26,294,1.254,297,1.804,300,2.411,314,0.961,315,0.603,318,1.385,319,1.544,320,2.267,324,1.44,337,2.812,342,0.747,395,2.076,396,1.385,403,1.196,407,2.342,408,2.342,416,1.655,421,1.44,444,1.155,459,1.115,460,3.919,465,2.489,494,1.139,509,1.655,512,1.44,513,3.921,515,2.331,517,1.685,531,1.196,543,2.196,593,2.072,623,5.174,640,2.072,680,2.489,701,4.283,714,3.412,716,4.283,791,3.606,799,4.602,880,2.969,881,2.342,925,2.331,935,4.304,949,5.34,1038,3.515,1039,5.34,1055,4.602,1056,2.331,1099,3.919,1161,5.002,1167,2.32,1240,1.498,1310,4.017,1475,3.789,1543,2.508,1568,4.214,1584,3.356,1622,2.072,1638,5.156,1644,3.028,1666,4.339,1715,3.606,1763,3.921,1781,3.028,1786,4.339,1830,6.638,1832,4.283,1834,4.339,1877,4.644,2054,3.028,2131,3.028,2132,5.816,2133,4.977,2134,6.282,2135,6.1,2136,4.977,2137,3.473,2138,6.638,2139,5.862,2140,5.538,2141,4.977,2142,4.977,2143,4.339,2144,4.339,2145,3.473,2146,4.977,2147,4.977,2148,3.473,2149,3.473,2150,4.977,2151,3.473,2152,2.549,2153,5.51,2154,5.538,2155,3.612,2156,5.538,2157,5.816,2158,4.339,2159,6.351,2160,3.473,2161,4.977,2162,3.473,2163,3.473,2164,6.282,2165,3.473,2166,3.473,2167,3.473,2168,3.028,2169,5.538,2170,4.339,2171,4.339,2172,4.977,2173,3.473,2174,3.028,2175,3.028,2176,3.473,2177,3.473,2178,3.473,2179,2.516,2180,3.473,2181,3.473,2182,4.339,2183,3.473,2184,3.028,2185,2.735,2186,2.735,2187,3.473,2188,3.473,2189,4.977,2190,3.473,2191,5.538,2192,3.473]],["title/components/MapComponent.html",[0,0.101,194,0.605]],["body/components/MapComponent.html",[0,0.201,1,0.721,2,0.766,3,0.133,4,0.101,5,0.834,6,0.834,7,0.834,8,0.776,9,0.101,13,0.237,14,0.805,15,0.897,21,0.897,22,1.033,24,0.834,25,1.295,26,1.154,27,0.967,28,0.932,30,0.932,32,0.434,36,0.831,40,1.092,42,1.926,43,0.79,44,0.884,48,0.722,50,1.004,51,1.004,53,0.013,54,0.533,59,0.642,72,0.455,76,2.476,79,1.374,91,0.748,101,0.167,102,1.422,103,0.15,107,0.133,108,0.023,136,1.099,139,2.298,147,0.477,148,1.079,149,1.079,150,0.834,151,1.264,152,0.834,153,1.079,154,0.721,155,0.834,156,0.694,157,0.834,158,0.721,159,1.195,160,0.668,161,1.079,162,0.721,163,0.834,164,0.721,165,0.834,166,0.721,167,1.079,168,0.721,169,1.079,170,0.694,171,0.834,172,0.721,173,0.776,174,1.264,175,0.694,176,0.834,177,0.748,178,1.033,179,1.195,180,0.721,181,1.195,182,0.721,183,1.195,184,0.721,185,0.834,186,0.721,187,0.834,188,0.721,189,0.805,190,0.721,191,0.834,192,0.694,193,0.834,194,1.092,195,0.721,196,1.048,197,0.805,198,1.195,199,0.721,200,0.834,201,0.721,202,0.721,203,0.834,204,0.721,205,0.721,206,0.721,207,0.721,208,0.694,209,0.834,210,0.721,211,1.153,212,0.721,213,0.721,214,0.721,215,0.694,216,0.834,217,0.721,218,0.642,219,1.079,220,0.721,221,0.834,222,0.694,223,0.776,224,0.721,225,1.15,226,0.776,227,1.133,228,0.694,229,0.834,230,0.721,231,0.781,232,0.748,233,0.721,234,0.932,235,0.834,236,0.721,237,0.721,238,0.721,239,0.721,240,0.721,241,0.721,242,0.805,243,0.834,244,0.834,245,0.007,246,0.01,247,0.007,294,1.157,314,1.198,315,1.079,320,2.216,327,2.677,473,3.508,517,1.391,539,2.476,558,2.672,1320,4.903,1529,2.788,1671,4.187,1745,4.187,2193,4.187,2194,4.889,2195,6.878,2196,6.207,2197,6.878,2198,6.878,2199,6.207,2200,4.802,2201,4.802,2202,5.412,2203,4.802]],["title/modules/MapModule.html",[248,0.987,1356,2.404]],["body/modules/MapModule.html",[3,0.172,4,0.13,9,0.13,53,0.013,101,0.276,103,0.193,107,0.172,108,0.029,147,0.614,194,1.273,245,0.01,246,0.011,247,0.01,248,1.514,250,2.375,251,1.732,252,3.192,253,2.563,254,3.32,255,3.192,264,3.129,265,2.666,266,2.375,268,2.666,269,3.129,270,3.398,271,2.666,1356,5.002,2204,5.391,2205,5.391,2206,5.391,2207,5.391,2208,5.531,2209,6.182,2210,6.182,2211,6.182]],["title/injectables/MapService.html",[916,1.294,2208,2.717]],["body/injectables/MapService.html",[3,0.165,4,0.124,9,0.124,13,0.374,15,1.094,32,0.536,36,0.947,44,0.973,48,0.752,50,1.145,51,1.145,52,1.23,53,0.013,54,0.608,55,0.839,56,1.32,57,1.984,68,2.459,72,0.717,95,2.935,101,0.206,103,0.186,107,0.165,108,0.028,109,0.925,111,1.358,120,1.565,135,2.196,245,0.009,246,0.011,247,0.009,318,2.366,319,1.84,463,2.347,543,5.064,558,1.973,795,5.576,807,5.576,916,2.273,1098,2.665,1306,5.173,1371,3.039,2208,4.774,2212,5.173,2213,7.08,2214,7.08,2215,5.933,2216,7.08,2217,5.933,2218,7.08,2219,8.008,2220,8.008,2221,7.08,2222,5.933,2223,7.08,2224,5.933,2225,5.933,2226,5.933,2227,5.933,2228,5.933,2229,5.933,2230,2.903,2231,5.933,2232,5.933,2233,5.933,2234,5.933]],["title/components/MaterialButtonsColorsComponent.html",[0,0.101,195,0.605]],["body/components/MaterialButtonsColorsComponent.html",[0,0.202,1,0.356,2,0.704,3,0.066,4,0.05,5,1.14,6,0.412,7,0.412,8,0.383,9,0.05,13,0.313,14,1.247,21,0.668,22,0.787,24,0.412,25,1.256,26,1.121,27,1.18,28,1.014,30,0.356,34,0.977,40,0.694,43,0.836,52,0.803,53,0.014,54,0.52,59,0.317,65,0.988,68,1.548,72,0.438,73,2.007,74,1.022,78,3.929,79,1.34,82,0.955,101,0.182,102,1.357,103,0.074,106,0.442,107,0.182,108,0.031,109,1.189,111,1.734,115,1.015,116,1.305,120,1.178,125,1.169,128,0.601,131,0.946,132,0.711,135,1.382,136,0.543,137,0.911,140,1.625,144,1.677,147,0.236,148,0.649,149,0.649,150,0.412,151,0.91,152,0.412,153,0.649,154,0.356,155,0.412,156,0.343,157,0.412,158,0.356,159,0.803,160,0.33,161,0.649,162,0.356,163,0.412,164,0.356,165,0.412,166,0.356,167,0.649,168,0.356,169,0.649,170,0.343,171,0.412,172,0.356,173,1.224,174,0.91,175,0.343,176,0.412,177,0.37,178,0.694,179,0.803,180,0.356,181,0.803,182,0.356,183,0.803,184,0.356,185,0.412,186,0.356,187,0.412,188,0.356,189,0.398,190,0.356,191,0.412,192,0.343,193,0.412,194,0.356,195,0.787,196,1.117,197,1.317,198,0.803,199,0.561,200,0.649,201,0.561,202,0.561,203,0.412,204,0.561,205,0.909,206,0.356,207,0.356,208,0.343,209,0.412,210,0.856,211,1.201,212,0.561,213,0.561,214,0.356,215,0.343,216,0.412,217,0.356,218,0.618,219,0.649,220,0.356,221,0.412,222,0.343,223,0.383,224,0.356,225,0.949,226,0.383,227,0.72,228,0.343,229,0.412,230,0.356,231,0.269,232,0.37,233,0.356,234,1.154,235,0.412,236,0.356,237,0.356,238,0.356,239,0.356,240,0.356,241,0.356,242,0.398,243,0.412,244,0.412,245,0.004,246,0.006,247,0.004,251,1.294,285,1.169,294,1.336,295,1.457,297,2.035,300,2.362,314,0.458,315,1.358,318,0.946,319,1.965,320,1.649,325,3.575,342,0.909,347,1.915,350,1.294,357,3.042,361,1.805,367,1.161,384,1.677,394,0.911,395,1.649,396,0.946,416,0.789,421,0.983,424,0.878,437,1.215,438,2.366,442,2.41,444,2.555,448,2.075,451,1.111,459,1.483,461,1.827,463,1.433,465,1.939,472,3.805,486,2.564,487,2.752,488,2.172,489,2.172,490,2.172,491,2.172,492,2.012,493,2.09,494,1.199,509,0.789,512,0.983,517,1.338,518,1.111,531,1.805,559,1.274,590,2.26,591,1.023,592,0.983,596,1.677,597,2.61,624,0.711,649,1.274,658,3.291,680,1.382,687,1.805,757,1.915,803,1.943,871,0.983,878,1.215,884,1.111,888,2.919,889,2.481,925,3.643,929,0.878,1087,2.481,1098,2.353,1167,2.966,1188,2.006,1240,1.61,1248,2.26,1250,2.481,1260,1.161,1265,2.26,1324,1.649,1392,1.749,1394,2.97,1409,0.946,1431,3.635,1432,2.683,1433,3.211,1434,3.211,1435,2.454,1436,2.454,1438,3.264,1470,2.006,1491,1.274,1543,1.023,1679,2.006,1686,2.481,1729,1.161,1980,2.164,1983,1.111,2011,2.006,2063,2.815,2152,1.913,2155,2.481,2230,2.26,2235,1.215,2236,1.274,2237,3.579,2238,3.905,2239,4.313,2240,4.28,2241,4.28,2242,2.961,2243,3.22,2244,4.395,2245,2.11,2246,2.61,2247,1.34,2248,1.34,2249,1.34,2250,1.34,2251,1.34,2252,1.274,2253,1.34,2254,2.61,2255,1.34,2256,1.34,2257,1.34,2258,1.34,2259,1.34,2260,1.34,2261,1.34,2262,2.61,2263,1.34,2264,2.61,2265,1.34,2266,1.34,2267,2.61,2268,1.34,2269,2.61,2270,1.34,2271,1.34,2272,2.61,2273,1.34,2274,1.34,2275,1.34,2276,1.34,2277,2.61,2278,1.34,2279,2.61,2280,1.34,2281,2.61,2282,1.34,2283,1.34,2284,1.34,2285,1.34,2286,1.34,2287,1.34,2288,1.34,2289,1.34,2290,1.34,2291,1.34,2292,1.34,2293,1.34,2294,1.34,2295,1.34,2296,1.34,2297,1.34,2298,1.34,2299,1.34,2300,1.34,2301,1.34,2302,1.34,2303,1.34,2304,1.34,2305,1.34,2306,1.34,2307,1.34,2308,1.827,2309,2.11,2310,2.11,2311,2.11,2312,2.11,2313,1.913,2314,1.34,2315,2.11,2316,2.11,2317,2.11,2318,2.11,2319,3.062,2320,3.42,2321,1.34,2322,2.61,2323,2.61,2324,2.61,2325,1.34,2326,1.34,2327,1.34,2328,1.34,2329,1.34,2330,1.34,2331,1.34,2332,1.34,2333,1.274,2334,1.34,2335,1.34,2336,1.34,2337,1.274,2338,1.34,2339,1.34,2340,1.34,2341,1.34,2342,1.34,2343,1.34,2344,2.61,2345,2.61,2346,3.42,2347,2.61,2348,2.61,2349,2.61,2350,2.61,2351,2.366,2352,1.34,2353,3.42,2354,2.61,2355,2.61,2356,2.61,2357,2.61,2358,3.42,2359,2.61,2360,2.61,2361,2.61,2362,2.61,2363,2.61,2364,2.61,2365,2.26,2366,2.481,2367,2.61,2368,2.61,2369,2.61,2370,2.006,2371,2.006,2372,1.34,2373,2.11,2374,1.34,2375,2.006,2376,1.913,2377,2.006,2378,1.827,2379,2.006,2380,2.006,2381,1.34,2382,1.34,2383,1.34,2384,1.34,2385,1.274,2386,1.34,2387,1.34,2388,2.372,2389,2.372,2390,2.372,2391,2.372,2392,2.372]],["title/components/MaterialCardSampleComponent.html",[0,0.101,199,0.605]],["body/components/MaterialCardSampleComponent.html",[0,0.202,1,0.361,2,0.708,3,0.067,4,0.05,5,1.145,6,0.418,7,0.418,8,0.389,9,0.05,13,0.315,14,1.25,21,0.674,22,0.793,24,0.418,25,1.257,26,1.122,27,1.183,28,1.018,30,0.361,34,0.984,40,0.7,43,0.837,52,0.81,53,0.014,54,0.523,59,0.322,65,0.997,68,1.565,72,0.442,73,2.013,74,1.031,78,3.769,79,1.347,82,0.964,101,0.184,102,1.363,103,0.075,106,0.448,107,0.183,108,0.031,109,1.192,111,1.738,115,1.02,116,1.229,120,1.186,125,1.18,128,0.609,131,0.956,132,0.721,135,1.397,136,0.55,137,0.923,140,1.445,144,1.08,147,0.239,148,0.656,149,0.656,150,0.418,151,0.917,152,0.418,153,0.656,154,0.361,155,0.418,156,0.348,157,0.418,158,0.361,159,0.81,160,0.334,161,0.656,162,0.361,163,0.418,164,0.361,165,0.418,166,0.361,167,0.656,168,0.361,169,0.656,170,0.348,171,0.418,172,0.361,173,1.227,174,0.917,175,0.348,176,0.418,177,0.375,178,0.7,179,0.81,180,0.361,181,0.81,182,0.361,183,0.81,184,0.361,185,0.418,186,0.361,187,0.418,188,0.361,189,0.403,190,0.361,191,0.418,192,0.348,193,0.418,194,0.361,195,0.567,196,1.119,197,1.137,198,0.81,199,0.793,200,0.81,201,0.567,202,0.567,203,0.418,204,0.567,205,0.914,206,0.361,207,0.361,208,0.348,209,0.418,210,0.861,211,1.205,212,0.567,213,0.567,214,0.361,215,0.348,216,0.418,217,0.361,218,0.623,219,0.656,220,0.361,221,0.418,222,0.348,223,0.389,224,0.361,225,0.953,226,0.389,227,0.726,228,0.348,229,0.418,230,0.361,231,0.273,232,0.375,233,0.361,234,1.018,235,0.418,236,0.361,237,0.361,238,0.361,239,0.361,240,0.361,241,0.361,242,0.403,243,0.418,244,0.418,245,0.004,246,0.006,247,0.004,251,1.305,285,1.18,294,1.34,295,1.462,297,2.045,300,2.639,314,0.464,315,1.361,318,0.959,319,1.975,320,1.663,325,3.584,342,0.914,347,1.931,350,1.305,357,3.048,361,1.818,367,1.176,384,1.695,394,0.923,395,1.663,396,0.959,416,0.799,421,0.997,424,0.89,437,1.231,438,2.386,442,2.42,444,2.561,448,2.093,451,1.126,459,1.496,461,1.847,463,1.445,465,1.954,472,3.813,486,2.583,487,2.761,488,2.188,489,2.188,490,2.188,491,2.188,492,2.027,493,2.105,494,1.208,509,0.799,512,0.997,517,1.35,518,1.126,531,1.818,559,1.292,590,2.28,591,1.037,592,0.997,596,1.695,597,2.625,624,0.721,649,1.292,658,3.299,680,1.397,687,1.818,757,1.931,803,1.955,871,0.997,878,1.231,884,1.126,888,2.703,889,2.503,925,3.65,929,0.89,1087,2.503,1098,2.371,1167,2.975,1188,2.028,1240,1.628,1248,2.28,1250,2.503,1260,1.176,1265,2.583,1324,1.663,1392,1.768,1394,2.98,1409,0.959,1431,3.64,1432,2.703,1433,3.226,1434,3.226,1435,2.473,1436,2.473,1438,3.274,1470,2.028,1491,1.292,1543,1.037,1679,2.028,1686,2.503,1729,1.176,1980,2.183,1983,1.126,2011,2.028,2063,2.836,2152,1.231,2155,2.503,2230,2.28,2235,1.231,2236,1.292,2237,3.241,2238,3.921,2239,3.44,2240,3.597,2241,3.597,2242,2.633,2243,2.133,2244,3.597,2245,1.359,2246,2.633,2247,1.359,2248,1.359,2249,1.359,2250,1.359,2251,1.359,2252,1.292,2253,1.359,2254,2.633,2255,1.359,2256,1.359,2257,1.359,2258,1.359,2259,1.359,2260,1.359,2261,1.359,2262,2.633,2263,1.359,2264,2.633,2265,1.359,2266,1.359,2267,2.633,2268,1.359,2269,2.633,2270,1.359,2271,1.359,2272,2.633,2273,1.359,2274,1.359,2275,1.359,2276,1.359,2277,2.633,2278,1.359,2279,2.633,2280,1.359,2281,2.633,2282,1.359,2283,1.359,2284,1.359,2285,1.359,2286,1.359,2287,1.359,2288,1.359,2289,1.359,2290,1.359,2291,1.359,2292,1.359,2293,1.359,2294,1.359,2295,1.359,2296,1.359,2297,1.359,2298,1.359,2299,1.359,2300,1.359,2301,1.359,2302,1.359,2303,1.359,2304,1.359,2305,1.359,2306,1.359,2307,1.359,2308,1.847,2309,2.133,2310,2.133,2311,2.133,2312,2.133,2313,1.933,2314,1.359,2315,2.133,2316,2.133,2317,2.133,2318,2.133,2319,3.081,2320,3.44,2321,1.359,2322,3.831,2323,3.831,2324,3.831,2325,2.633,2326,2.633,2327,2.633,2328,2.633,2329,2.633,2330,2.633,2331,2.633,2332,2.633,2333,2.503,2334,2.633,2335,2.633,2336,2.633,2337,2.503,2338,2.633,2339,2.633,2340,2.633,2341,2.633,2342,2.633,2343,2.633,2344,2.633,2345,2.633,2346,3.44,2347,2.633,2348,2.633,2349,2.633,2350,2.633,2351,2.386,2352,1.359,2353,3.44,2354,2.633,2355,2.633,2356,2.633,2357,2.633,2358,3.44,2359,2.633,2360,2.633,2361,2.633,2362,2.633,2363,2.633,2364,2.633,2365,2.28,2366,2.503,2367,2.633,2368,2.633,2369,2.633,2370,2.028,2371,2.028,2372,1.359,2373,2.133,2374,1.359,2375,2.028,2376,1.933,2377,2.028,2378,1.847,2379,2.028,2380,2.028,2381,1.359,2382,1.359,2383,1.359,2384,1.359,2385,1.292,2386,1.359,2387,1.359]],["title/components/MaterialColorsComponent.html",[0,0.101,201,0.605]],["body/components/MaterialColorsComponent.html",[0,0.201,1,0.341,2,0.689,3,0.063,4,0.048,5,1.123,6,0.394,7,0.394,8,0.367,9,0.048,13,0.308,14,1.339,21,0.649,22,0.768,24,0.394,25,1.252,26,1.12,27,1.17,28,0.999,30,0.341,32,0.205,33,0.605,34,0.953,40,0.674,42,1.119,43,0.834,48,0.358,52,0.78,53,0.014,54,0.535,55,0.269,59,0.304,65,1.094,68,1.495,72,0.425,73,1.984,74,0.993,78,3.951,79,1.314,82,0.928,101,0.178,102,1.336,103,0.071,106,0.423,107,0.18,108,0.03,109,1.18,111,1.719,115,0.996,116,1.21,120,1.153,125,1.136,128,0.575,131,0.913,132,0.68,135,1.892,136,0.52,137,0.872,140,1.73,144,1.019,147,0.225,148,0.627,149,0.627,150,0.394,151,0.888,152,0.394,153,0.627,154,0.341,155,0.394,156,0.328,157,0.394,158,0.341,159,0.78,160,0.316,161,0.627,162,0.341,163,0.394,164,0.341,165,0.394,166,0.341,167,0.627,168,0.341,169,0.627,170,0.328,171,0.394,172,0.341,173,1.214,174,0.888,175,0.328,176,0.394,177,0.354,178,0.674,179,0.78,180,0.341,181,0.78,182,0.341,183,0.78,184,0.341,185,0.394,186,0.341,187,0.394,188,0.341,189,0.38,190,0.341,191,0.394,192,0.328,193,0.394,194,0.341,195,0.541,196,1.111,197,1.116,198,0.78,199,0.541,200,0.627,201,0.768,202,0.541,203,0.394,204,0.541,205,0.97,206,0.341,207,0.341,208,0.328,209,0.394,210,0.837,211,1.188,212,0.541,213,0.541,214,0.341,215,0.328,216,0.394,217,0.341,218,0.746,219,0.627,220,0.341,221,0.394,222,0.328,223,0.367,224,0.341,225,0.934,226,0.367,227,0.699,228,0.328,229,0.394,230,0.341,231,0.258,232,0.354,233,0.341,234,1.024,235,0.394,236,0.341,237,0.341,238,0.341,239,0.341,240,0.341,241,0.341,242,0.38,243,0.394,244,0.394,245,0.004,246,0.006,247,0.004,251,1.257,285,1.136,294,1.298,295,1.44,297,2.26,300,2.581,314,0.866,315,1.362,318,0.905,319,1.931,320,1.602,325,3.546,342,0.892,347,1.86,350,1.257,357,3.024,361,1.761,367,1.111,384,1.62,394,0.872,395,1.602,396,0.905,416,0.755,421,0.941,424,0.84,437,1.162,438,2.298,442,2.376,444,2.535,448,2.016,451,1.063,459,1.441,461,1.765,463,1.842,465,1.892,472,3.779,486,2.502,487,2.721,488,2.119,489,2.119,490,2.119,491,2.119,492,1.964,493,2.039,494,1.17,509,0.755,512,0.941,517,1.721,518,1.063,531,1.761,559,1.219,590,2.73,591,0.979,592,0.941,596,1.62,597,2.87,624,0.68,649,1.219,658,3.265,680,1.661,687,2.225,757,1.86,803,1.907,871,0.941,878,1.162,884,1.063,888,2.618,889,2.411,925,3.617,929,0.84,1087,3.19,1098,2.296,1167,2.939,1188,1.938,1240,1.555,1248,2.196,1250,3.19,1260,1.111,1265,2.196,1324,1.602,1392,1.689,1394,3.02,1409,0.905,1431,3.618,1432,2.618,1433,3.162,1434,3.162,1435,2.395,1436,2.395,1438,3.23,1470,2.746,1491,1.219,1543,0.979,1679,2.746,1686,3.19,1729,2.196,1980,2.102,1983,1.063,2011,2.746,2063,3.471,2152,1.162,2155,3.19,2230,2.196,2235,2.298,2236,1.219,2237,3.356,2238,3.855,2239,3.356,2240,3.651,2241,3.651,2242,3.152,2243,2.038,2244,3.519,2245,1.283,2246,2.889,2247,1.283,2248,1.283,2249,1.283,2250,1.283,2251,1.283,2252,1.938,2253,2.038,2254,3.651,2255,2.536,2256,2.038,2257,2.038,2258,2.038,2259,2.038,2260,2.536,2261,2.038,2262,3.356,2263,2.038,2264,3.356,2265,2.038,2266,2.038,2267,3.356,2268,2.038,2269,3.356,2270,2.038,2271,2.038,2272,3.356,2273,2.038,2274,2.038,2275,2.038,2276,2.038,2277,3.356,2278,2.038,2279,3.356,2280,2.038,2281,3.356,2282,2.038,2283,2.038,2284,2.038,2285,2.038,2286,2.038,2287,2.038,2288,2.038,2289,2.038,2290,2.038,2291,2.038,2292,2.038,2293,2.038,2294,2.038,2295,2.038,2296,2.038,2297,2.038,2298,2.038,2299,2.038,2300,2.038,2301,2.038,2302,2.038,2303,2.038,2304,2.038,2305,2.038,2306,2.038,2307,2.038,2308,2.502,2309,2.889,2310,2.889,2311,2.889,2312,2.889,2313,2.618,2314,2.038,2315,2.889,2316,2.889,2317,2.889,2318,2.889,2319,3.345,2320,4.003,2321,2.038,2322,2.536,2323,2.536,2324,2.536,2325,1.283,2326,1.283,2327,1.283,2328,1.283,2329,1.283,2330,1.283,2331,1.283,2332,1.283,2333,1.219,2334,1.283,2335,1.283,2336,1.283,2337,1.219,2338,1.283,2339,1.283,2340,1.283,2341,1.283,2342,1.283,2343,1.283,2344,2.536,2345,2.536,2346,3.356,2347,2.536,2348,2.536,2349,2.536,2350,2.536,2351,2.298,2352,1.283,2353,3.356,2354,2.536,2355,2.536,2356,2.536,2357,2.536,2358,3.356,2359,2.536,2360,2.536,2361,2.536,2362,2.536,2363,2.536,2364,2.536,2365,2.196,2366,2.411,2367,2.536,2368,2.536,2369,2.536,2370,1.938,2371,1.938,2372,1.283,2373,2.038,2374,1.283,2375,1.938,2376,1.847,2377,1.938,2378,1.765,2379,1.938,2380,1.938,2381,1.283,2382,1.283,2383,1.283,2384,1.283,2385,1.219,2386,1.283,2387,1.283,2393,2.269,2394,2.269]],["title/components/MaterialSandboxComponent.html",[0,0.101,202,0.605]],["body/components/MaterialSandboxComponent.html",[0,0.203,1,0.367,2,0.713,3,0.068,4,0.051,5,1.152,6,0.424,7,0.424,8,0.395,9,0.051,13,0.317,14,1.254,21,0.681,22,0.799,24,0.424,25,1.258,26,1.123,27,1.187,28,1.023,30,0.574,34,0.993,40,0.707,43,0.837,52,0.818,53,0.014,54,0.526,59,0.327,65,1.007,68,1.584,72,0.446,73,2.021,74,1.042,78,3.779,79,1.356,82,0.973,101,0.185,102,1.371,103,0.076,106,0.455,107,0.184,108,0.031,109,1.195,111,1.743,115,1.027,116,1.234,120,1.195,125,1.192,128,0.618,131,0.968,132,0.732,135,1.415,136,0.559,137,0.938,140,1.46,144,1.097,147,0.243,148,0.664,149,0.664,150,0.424,151,0.925,152,0.424,153,0.664,154,0.367,155,0.424,156,0.353,157,0.424,158,0.367,159,0.818,160,0.34,161,0.664,162,0.367,163,0.424,164,0.367,165,0.424,166,0.367,167,0.664,168,0.367,169,0.664,170,0.353,171,0.424,172,0.367,173,1.231,174,0.925,175,0.353,176,0.424,177,0.381,178,0.707,179,0.818,180,0.367,181,0.818,182,0.367,183,0.818,184,0.367,185,0.424,186,0.367,187,0.424,188,0.367,189,0.409,190,0.367,191,0.424,192,0.353,193,0.424,194,0.367,195,0.574,196,1.124,197,1.142,198,0.818,199,0.574,200,0.664,201,0.574,202,0.799,203,0.424,204,0.574,205,0.92,206,0.367,207,0.367,208,0.353,209,0.424,210,0.868,211,1.227,212,0.574,213,0.574,214,0.367,215,0.353,216,0.424,217,0.367,218,0.63,219,0.664,220,0.367,221,0.424,222,0.353,223,0.395,224,0.367,225,0.958,226,0.395,227,0.734,228,0.353,229,0.424,230,0.367,231,0.277,232,0.381,233,0.367,234,1.023,235,0.424,236,0.367,237,0.367,238,0.367,239,0.367,240,0.367,241,0.367,242,0.409,243,0.424,244,0.424,245,0.004,246,0.006,247,0.004,251,1.318,285,1.192,294,1.346,295,1.469,297,2.056,300,2.396,314,0.472,315,1.364,318,0.974,319,1.986,320,1.68,325,3.593,342,0.92,347,1.951,350,1.318,357,3.054,361,1.834,367,1.195,384,1.716,394,0.938,395,1.68,396,0.974,416,0.812,421,1.012,424,0.904,437,1.251,438,2.411,442,2.432,444,2.568,448,2.114,451,1.144,459,1.511,461,1.87,463,1.46,465,2.139,472,3.823,486,2.605,487,2.772,488,2.207,489,2.207,490,2.207,491,2.207,492,2.045,493,2.124,494,1.219,509,0.812,512,1.012,517,1.364,518,1.144,531,1.834,559,1.312,590,2.303,591,1.053,592,1.012,596,1.716,597,2.643,624,0.732,649,1.312,658,3.308,680,1.742,687,1.834,757,1.951,803,1.968,871,1.012,878,1.251,884,1.144,888,2.727,889,2.529,925,3.659,929,0.904,1087,2.529,1098,2.391,1167,2.984,1188,2.053,1240,1.648,1248,2.303,1250,2.529,1260,1.87,1265,2.303,1324,1.68,1392,1.79,1394,2.991,1409,0.974,1431,3.646,1432,2.727,1433,3.243,1434,3.243,1435,2.494,1436,2.494,1438,3.286,1470,2.053,1491,1.312,1543,1.648,1679,2.053,1686,2.529,1729,1.195,1980,2.205,1983,1.144,2011,2.053,2063,2.86,2152,1.251,2155,2.529,2230,2.303,2235,1.251,2236,1.312,2237,3.266,2238,3.938,2239,3.463,2240,3.619,2241,3.619,2242,2.66,2243,2.16,2244,3.619,2245,1.38,2246,3.266,2247,2.16,2248,2.16,2249,2.16,2250,2.16,2251,2.16,2252,1.312,2253,1.38,2254,2.66,2255,1.38,2256,1.38,2257,1.38,2258,1.38,2259,1.38,2260,1.38,2261,1.38,2262,2.66,2263,1.38,2264,2.66,2265,1.38,2266,1.38,2267,2.66,2268,1.38,2269,2.66,2270,1.38,2271,1.38,2272,2.66,2273,1.38,2274,1.38,2275,1.38,2276,1.38,2277,2.66,2278,1.38,2279,2.66,2280,1.38,2281,2.66,2282,1.38,2283,1.38,2284,1.38,2285,1.38,2286,1.38,2287,1.38,2288,1.38,2289,1.38,2290,1.38,2291,1.38,2292,1.38,2293,1.38,2294,1.38,2295,1.38,2296,1.38,2297,1.38,2298,1.38,2299,1.38,2300,1.38,2301,1.38,2302,1.38,2303,1.38,2304,1.38,2305,1.38,2306,1.38,2307,1.38,2308,1.87,2309,2.16,2310,2.16,2311,2.16,2312,2.16,2313,1.957,2314,1.38,2315,2.16,2316,2.16,2317,2.16,2318,2.16,2319,3.105,2320,3.463,2321,1.38,2322,2.66,2323,2.66,2324,2.66,2325,1.38,2326,1.38,2327,1.38,2328,1.38,2329,1.38,2330,1.38,2331,1.38,2332,1.38,2333,1.312,2334,1.38,2335,1.38,2336,1.38,2337,1.312,2338,1.38,2339,1.38,2340,1.38,2341,1.38,2342,1.38,2343,1.38,2344,2.66,2345,2.66,2346,3.463,2347,2.66,2348,2.66,2349,2.66,2350,2.66,2351,2.411,2352,1.38,2353,3.463,2354,2.66,2355,2.66,2356,2.66,2357,2.66,2358,3.463,2359,2.66,2360,2.66,2361,2.66,2362,2.66,2363,2.66,2364,2.66,2365,2.303,2366,2.529,2367,2.66,2368,2.66,2369,2.66,2370,2.053,2371,2.053,2372,1.38,2373,2.16,2374,1.38,2375,2.053,2376,1.957,2377,2.053,2378,1.87,2379,2.053,2380,2.053,2381,1.38,2382,1.38,2383,1.38,2384,1.38,2385,1.312,2386,1.38,2387,1.38]],["title/modules/MaterialSandboxModule.html",[248,0.987,1721,2.717]],["body/modules/MaterialSandboxModule.html",[3,0.151,4,0.114,9,0.114,53,0.013,101,0.291,103,0.17,107,0.151,108,0.025,147,0.539,195,1.253,196,1.122,199,1.253,201,1.253,204,1.253,210,1.253,212,1.253,213,1.253,245,0.008,246,0.01,247,0.008,248,1.33,250,2.086,251,1.521,252,3.018,253,2.781,254,2.342,255,3.018,262,3.299,263,3.728,264,2.893,265,2.342,266,2.086,268,2.893,269,2.893,270,3.143,271,2.342,285,1.375,286,2.544,287,2.657,289,3.069,1258,3.662,1721,5.794,1729,2.657,1730,7.033,2235,2.781,2395,4.735,2396,4.735,2397,5.43,2398,4.735,2399,5.43,2400,5.85,2401,4.277,2402,4.735]],["title/components/MaterialToggleColorsComponent.html",[0,0.101,204,0.605]],["body/components/MaterialToggleColorsComponent.html",[0,0.203,1,0.367,2,0.714,3,0.068,4,0.051,5,1.152,6,0.425,7,0.425,8,0.395,9,0.051,13,0.317,14,1.254,21,0.681,22,0.8,24,0.425,25,1.258,26,1.123,27,1.187,28,1.023,30,0.367,34,0.993,40,0.707,43,0.837,52,0.818,53,0.014,54,0.526,59,0.327,65,1.007,68,1.584,72,0.446,73,2.021,74,1.042,78,3.779,79,1.356,82,0.974,101,0.185,102,1.371,103,0.076,106,0.456,107,0.184,108,0.031,109,1.196,111,1.743,115,1.027,116,1.234,120,1.195,125,1.192,128,0.619,131,0.968,132,0.732,135,1.415,136,0.559,137,0.938,140,1.461,144,1.097,147,0.243,148,0.664,149,0.664,150,0.425,151,0.925,152,0.425,153,0.664,154,0.367,155,0.425,156,0.353,157,0.425,158,0.367,159,0.818,160,0.34,161,0.664,162,0.367,163,0.425,164,0.367,165,0.425,166,0.367,167,0.664,168,0.367,169,0.664,170,0.353,171,0.425,172,0.367,173,1.231,174,0.925,175,0.353,176,0.425,177,0.381,178,0.707,179,0.818,180,0.367,181,0.818,182,0.367,183,0.818,184,0.367,185,0.425,186,0.367,187,0.425,188,0.367,189,0.41,190,0.367,191,0.425,192,0.353,193,0.425,194,0.367,195,0.574,196,1.127,197,1.142,198,0.818,199,0.574,200,0.664,201,0.574,202,0.574,203,0.425,204,0.8,205,1.023,206,0.367,207,0.367,208,0.353,209,0.425,210,0.868,211,1.21,212,0.574,213,0.574,214,0.367,215,0.353,216,0.425,217,0.367,218,0.63,219,0.664,220,0.367,221,0.425,222,0.353,223,0.395,224,0.367,225,0.958,226,0.395,227,0.734,228,0.353,229,0.425,230,0.367,231,0.277,232,0.381,233,0.367,234,1.066,235,0.425,236,0.367,237,0.367,238,0.367,239,0.367,240,0.367,241,0.367,242,0.41,243,0.425,244,0.425,245,0.004,246,0.006,247,0.004,251,1.319,285,1.192,294,1.346,295,1.469,297,2.056,300,2.396,314,0.738,315,1.364,318,0.974,319,1.987,320,1.681,325,3.594,342,0.92,347,1.952,350,1.319,357,3.054,361,1.834,367,1.196,384,1.717,394,0.938,395,1.681,396,0.974,416,0.812,421,1.013,424,0.904,437,1.251,438,2.411,442,2.432,444,2.568,448,2.115,451,1.145,459,1.512,461,1.87,463,1.461,465,1.971,472,3.823,486,2.606,487,2.772,488,2.207,489,2.207,490,2.207,491,2.207,492,2.045,493,2.124,494,1.219,509,0.812,512,1.013,517,1.364,518,1.145,531,1.834,559,1.313,590,2.304,591,1.054,592,1.013,596,1.717,597,2.643,624,0.732,649,1.313,658,3.308,680,1.415,687,1.834,757,1.952,803,1.968,871,1.013,878,1.251,884,1.145,888,2.727,889,2.529,925,3.659,929,0.904,1087,2.529,1098,2.392,1167,2.985,1188,2.054,1240,1.648,1248,2.304,1250,2.529,1260,1.196,1265,2.304,1324,1.681,1392,1.791,1394,2.992,1409,0.974,1431,3.647,1432,2.727,1433,3.244,1434,3.244,1435,2.495,1436,2.495,1438,3.287,1470,2.054,1491,1.313,1543,1.054,1679,2.054,1686,2.529,1729,1.196,1980,2.206,1983,1.145,2011,2.054,2063,2.861,2152,1.251,2155,2.529,2230,2.304,2235,1.251,2236,1.313,2237,3.619,2238,3.939,2239,3.463,2240,3.851,2241,3.851,2242,2.661,2243,2.16,2244,3.619,2245,1.381,2246,2.661,2247,1.381,2248,1.381,2249,1.381,2250,1.381,2251,1.381,2252,1.313,2253,1.381,2254,2.661,2255,1.381,2256,1.381,2257,1.381,2258,1.381,2259,1.381,2260,1.381,2261,1.381,2262,2.661,2263,1.381,2264,2.661,2265,1.381,2266,1.381,2267,2.661,2268,1.381,2269,2.661,2270,1.381,2271,1.381,2272,2.661,2273,1.381,2274,1.381,2275,1.381,2276,1.381,2277,2.661,2278,1.381,2279,2.661,2280,1.381,2281,2.661,2282,1.381,2283,1.381,2284,1.381,2285,1.381,2286,1.381,2287,1.381,2288,1.381,2289,1.381,2290,1.381,2291,1.381,2292,1.381,2293,1.381,2294,1.381,2295,1.381,2296,1.381,2297,1.381,2298,1.381,2299,1.381,2300,1.381,2301,1.381,2302,1.381,2303,1.381,2304,1.381,2305,1.381,2306,1.381,2307,1.381,2308,1.87,2309,2.16,2310,2.16,2311,2.16,2312,2.16,2313,1.958,2314,1.381,2315,2.16,2316,2.16,2317,2.16,2318,2.16,2319,3.105,2320,3.463,2321,1.381,2322,2.661,2323,2.661,2324,2.661,2325,1.381,2326,1.381,2327,1.381,2328,1.381,2329,1.381,2330,1.381,2331,1.381,2332,1.381,2333,1.313,2334,1.381,2335,1.381,2336,1.381,2337,1.313,2338,1.381,2339,1.381,2340,1.381,2341,1.381,2342,1.381,2343,1.381,2344,2.661,2345,2.661,2346,3.463,2347,2.661,2348,2.661,2349,2.661,2350,2.661,2351,2.411,2352,1.381,2353,3.463,2354,2.661,2355,2.661,2356,2.661,2357,2.661,2358,3.463,2359,2.661,2360,2.661,2361,2.661,2362,2.661,2363,2.661,2364,2.661,2365,2.304,2366,2.529,2367,2.661,2368,2.661,2369,2.661,2370,2.054,2371,2.054,2372,1.381,2373,2.16,2374,1.381,2375,2.054,2376,1.958,2377,2.054,2378,1.87,2379,2.054,2380,2.054,2381,1.381,2382,1.381,2383,1.381,2384,1.381,2385,1.313,2386,1.381,2387,1.381,2403,2.443]],["title/components/OverviewCardComponent.html",[0,0.101,206,0.605]],["body/components/OverviewCardComponent.html",[0,0.194,1,0.69,2,0.745,3,0.128,4,0.096,5,0.799,6,0.799,7,0.799,8,0.743,9,0.096,13,0.227,14,0.77,21,0.872,22,1.011,24,0.799,25,1.293,26,1.152,27,0.94,28,0.906,30,0.906,32,0.646,36,0.807,40,1.074,43,0.783,44,0.866,48,0.599,50,0.975,51,0.975,53,0.013,54,0.518,59,0.615,72,0.436,91,0.716,101,0.16,103,0.144,107,0.128,108,0.022,120,1.479,125,1.164,126,3.22,127,2.249,128,1.527,129,2.064,130,2.906,131,1.527,132,1.808,133,2.501,135,2.233,136,1.7,139,2.749,145,2.064,146,4.067,147,0.456,148,1.048,149,1.048,150,0.799,151,1.242,152,0.799,153,1.048,154,0.69,155,0.799,156,0.664,157,0.799,158,0.69,159,1.17,160,0.639,161,1.048,162,0.69,163,0.799,164,0.69,165,0.799,166,0.69,167,1.048,168,0.69,169,1.048,170,0.664,171,0.799,172,0.69,173,0.743,174,1.242,175,0.664,176,0.799,177,0.716,178,1.011,179,1.17,180,0.69,181,1.17,182,0.69,183,1.17,184,0.69,185,0.799,186,0.69,187,0.799,188,0.69,189,0.77,190,0.69,191,0.799,192,0.664,193,0.799,194,0.69,195,0.69,196,1.033,197,0.77,198,1.17,199,0.69,200,0.799,201,0.69,202,0.69,203,0.799,204,0.69,205,0.69,206,1.074,207,1.208,208,0.664,209,0.799,210,0.69,211,1.129,212,0.69,213,0.69,214,0.69,215,0.664,216,0.799,217,0.69,218,0.615,219,1.048,220,0.69,221,0.799,222,0.664,223,0.743,224,0.69,225,1.139,226,0.743,227,1.049,228,0.664,229,0.799,230,0.69,231,0.522,232,0.716,233,0.69,234,0.906,235,0.799,236,0.69,237,0.69,238,0.69,239,0.69,240,0.69,241,0.69,242,0.77,243,0.799,244,0.799,245,0.007,246,0.009,247,0.007,293,3.619,294,0.857,297,2.089,300,3.078,301,5.872,302,5.26,313,4.007,319,1.426,395,2.153,399,3.33,403,2.078,407,3.099,408,3.099,409,3.295,412,3.989,413,3.815,415,4.258,416,2.469,424,2.233,440,2.406,448,2.064,514,2.906,515,3.155,516,3.33,517,1.748,531,1.583,592,1.905,640,2.741,731,2.709,803,1.476,871,2.501,879,4.007,881,3.099,1235,5.872,1282,4.007,1492,4.007,1515,4.067,1667,5.26,1673,4.007,2194,4.751,2404,5.872,2405,5.304,2406,6.032,2407,4.595,2408,4.595,2409,6.032,2410,4.595,2411,6.032,2412,6.734,2413,4.595,2414,4.595,2415,4.595,2416,4.595,2417,4.595]],["title/components/OverviewComponent.html",[0,0.101,208,0.583]],["body/components/OverviewComponent.html",[0,0.197,1,0.728,2,0.901,3,0.135,4,0.102,5,0.842,6,0.842,7,0.842,8,0.784,9,0.102,13,0.24,14,0.813,21,0.903,22,1.038,24,0.842,25,1.296,26,1.155,27,0.973,28,0.938,30,0.938,32,0.438,36,0.836,40,1.096,43,0.792,44,0.888,48,0.62,50,1.01,51,1.01,53,0.013,54,0.537,59,0.649,72,0.459,91,0.756,101,0.169,103,0.152,107,0.135,108,0.023,120,1.003,125,1.75,126,2.01,128,1.228,131,1.581,136,1.11,147,0.482,148,1.085,149,1.085,150,0.842,151,1.268,152,0.842,153,1.085,154,0.728,155,0.842,156,0.701,157,0.842,158,0.728,159,1.201,160,0.675,161,1.085,162,0.728,163,0.842,164,0.728,165,0.842,166,0.728,167,1.085,168,0.728,169,1.085,170,0.701,171,0.842,172,0.728,173,0.784,174,1.268,175,0.701,176,0.842,177,0.756,178,1.134,179,1.201,180,0.728,181,1.201,182,0.728,183,1.201,184,0.728,185,0.842,186,0.728,187,0.842,188,0.728,189,1.266,190,0.728,191,0.842,192,0.701,193,0.842,194,0.728,195,0.728,196,1.051,197,0.813,198,1.201,199,0.728,200,0.842,201,0.728,202,0.728,203,0.842,204,0.728,205,0.728,206,0.728,207,1.096,208,1.055,209,0.842,210,0.728,211,1.158,212,0.728,213,0.728,214,0.728,215,0.701,216,0.842,217,0.728,218,0.649,219,1.085,220,0.728,221,0.842,222,0.701,223,0.784,224,0.728,225,1.174,226,0.784,227,1.077,228,0.701,229,0.842,230,0.728,231,0.55,232,0.756,233,0.728,234,0.938,235,0.842,236,0.728,237,0.728,238,0.728,239,0.728,240,0.728,241,0.728,242,0.813,243,0.842,244,0.842,245,0.008,246,0.01,247,0.008,285,1.848,294,0.904,300,2.01,350,1.358,403,1.67,416,1.612,424,2.312,440,2.491,473,2.74,517,1.405,545,2.926,553,3.726,591,2.091,593,2.892,1260,3.056,1475,3.726,1512,3.818,1529,2.805,1623,3.513,2418,4.227,2419,5.446,2420,6.246,2421,6.91,2422,6.246,2423,4.848,2424,4.848,2425,4.848,2426,4.848,2427,4.848,2428,4.848,2429,4.848]],["title/modules/OverviewModule.html",[248,0.987,1697,2.717]],["body/modules/OverviewModule.html",[2,0.844,3,0.155,4,0.117,9,0.117,13,0.277,48,0.679,53,0.013,61,4.583,66,2.439,101,0.289,103,0.175,107,0.155,108,0.026,147,0.556,206,1.258,207,1.183,208,1.211,245,0.009,246,0.011,247,0.009,248,1.929,250,2.149,251,1.567,252,3.058,253,2.319,254,2.413,255,3.058,261,3.923,262,3.323,263,3.755,264,2.947,265,2.413,266,2.149,268,2.947,269,2.947,270,3.201,271,2.413,285,1.416,286,2.621,287,2.738,288,3.337,289,3.161,609,4.951,1350,4.782,1400,4.951,1529,3.069,1696,5.069,1697,5.768,1698,4.782,1707,4.878,1711,4.878,1713,4.878,2405,4.406,2430,4.878,2431,4.878,2432,5.594,2433,4.878,2434,5.594,2435,6.833,2436,6.833,2437,5.594,2438,4.878]],["title/injectables/RoutingService.html",[916,1.294,1473,2.064]],["body/injectables/RoutingService.html",[3,0.141,4,0.106,9,0.106,13,0.379,15,0.929,19,4.114,32,0.458,36,0.86,43,0.737,44,0.652,48,0.799,51,1.039,52,1.289,53,0.013,54,0.637,55,0.879,56,1.384,57,1.879,59,0.944,72,0.753,88,3.994,91,1.238,95,2.102,98,4.334,99,5.473,101,0.224,103,0.159,107,0.141,108,0.024,109,1.157,116,0.881,118,1.994,178,0.965,220,1.114,225,0.929,234,0.761,245,0.008,246,0.01,247,0.008,315,1.117,328,3.207,338,2.96,342,1.242,440,2.564,459,2.383,485,5.063,540,4.947,545,3.767,680,2.38,715,3.994,767,3.994,916,2.064,1098,2.887,1219,5.994,1371,2.597,1473,3.292,1474,3.207,1527,5.758,1562,4.658,1598,4.194,1622,3.025,1623,3.674,1637,6.47,1638,4.463,1722,6.393,1749,6.333,2439,4.422,2440,6.428,2441,6.428,2442,7.421,2443,5.605,2444,7.421,2445,7.421,2446,5.605,2447,7.421,2448,6.428,2449,5.071,2450,5.071,2451,5.071,2452,7.421,2453,5.605,2454,5.071,2455,5.071,2456,5.071,2457,5.605,2458,5.071,2459,5.605,2460,5.071,2461,6.428,2462,5.071,2463,7.421,2464,5.071,2465,5.071,2466,5.071,2467,5.071,2468,5.071]],["title/components/SandboxAlarmComponent.html",[0,0.101,210,0.605]],["body/components/SandboxAlarmComponent.html",[0,0.203,1,0.341,2,0.734,3,0.063,4,0.048,5,1.123,6,0.395,7,0.395,8,0.367,9,0.048,13,0.308,14,1.236,21,0.74,22,0.838,24,0.395,25,1.253,26,1.118,27,1.189,28,1,30,0.341,32,0.205,33,0.605,34,1.205,36,0.483,40,0.892,42,1.12,43,0.838,48,0.692,52,0.97,53,0.014,54,0.555,55,0.661,56,0.424,59,0.304,65,0.961,68,1.862,72,0.59,73,2.085,74,0.994,78,3.732,79,1.315,82,1.058,91,0.7,101,0.178,102,1.377,103,0.071,106,0.424,107,0.18,108,0.03,109,1.18,111,1.72,115,1.044,116,1.21,120,1.154,125,1.137,128,0.914,131,0.914,132,0.681,135,1.336,136,0.52,137,0.873,140,1.393,144,1.021,147,0.226,148,0.627,149,0.627,150,0.395,151,0.889,152,0.395,153,0.627,154,0.341,155,0.395,156,0.329,157,0.395,158,0.341,159,0.78,160,0.316,161,0.627,162,0.341,163,0.395,164,0.341,165,0.395,166,0.341,167,0.627,168,0.341,169,0.627,170,0.329,171,0.395,172,0.341,173,1.214,174,0.889,175,0.329,176,0.395,177,0.354,178,0.674,179,0.78,180,0.341,181,0.78,182,0.341,183,0.78,184,0.341,185,0.395,186,0.341,187,0.395,188,0.341,189,0.381,190,0.341,191,0.395,192,0.329,193,0.395,194,0.341,195,0.542,196,1.104,197,1.116,198,0.78,199,0.542,200,0.627,201,0.542,202,0.542,203,0.395,204,0.542,205,0.892,206,0.341,207,0.341,208,0.329,209,0.395,210,0.971,211,1.206,212,0.542,213,0.542,214,0.341,215,0.329,216,0.395,217,0.341,218,0.601,219,0.627,220,0.341,221,0.395,222,0.329,223,0.367,224,0.341,225,0.935,226,0.367,227,0.7,228,0.329,229,0.395,230,0.341,231,0.258,232,0.354,233,0.341,234,1,235,0.395,236,0.341,237,0.341,238,0.341,239,0.341,240,0.341,241,0.341,242,0.381,243,0.395,244,0.395,245,0.004,246,0.006,247,0.004,251,1.258,285,1.295,294,1.341,295,1.539,297,2.117,300,2.314,314,1.147,315,1.384,318,0.906,319,2.26,320,1.826,325,3.597,342,1,347,2.121,350,1.433,357,3.048,361,1.922,367,1.112,384,1.621,394,0.873,395,1.603,396,0.906,416,0.756,421,0.942,424,0.841,437,2.3,438,3.41,442,2.486,444,2.582,448,2.507,451,1.691,459,1.442,461,1.767,463,1.393,465,2.066,472,3.819,486,2.503,487,2.722,488,2.121,489,2.121,490,2.121,491,2.121,492,1.965,493,2.04,494,1.171,509,0.756,512,0.942,517,1.301,518,1.065,531,1.762,559,1.94,590,2.198,591,0.98,592,0.942,596,1.621,597,2.562,624,0.681,649,1.221,658,3.381,680,1.336,687,1.762,757,2.121,803,1.908,871,1.496,878,1.849,884,1.065,888,2.859,889,2.413,925,3.656,929,0.841,1087,2.413,1098,2.507,1167,2.94,1188,1.94,1240,1.557,1248,2.198,1250,2.413,1260,1.112,1265,2.198,1324,1.826,1392,2.104,1394,3.055,1409,0.906,1431,3.618,1432,2.62,1433,3.163,1434,3.163,1435,2.396,1436,2.396,1438,3.231,1470,1.94,1491,1.221,1543,0.98,1679,1.94,1686,2.413,1729,3.468,1980,2.104,1983,1.065,2011,1.94,2063,2.748,2152,1.164,2155,2.413,2230,2.198,2235,3.629,2236,1.221,2237,3.154,2238,3.856,2239,3.358,2240,3.52,2241,3.52,2242,2.538,2243,2.04,2244,3.52,2245,1.284,2246,2.538,2247,1.284,2248,1.284,2249,1.284,2250,1.284,2251,1.284,2252,1.221,2253,1.284,2254,2.538,2255,1.284,2256,1.284,2257,1.284,2258,1.284,2259,1.284,2260,1.284,2261,1.284,2262,2.538,2263,1.284,2264,2.538,2265,1.284,2266,1.284,2267,2.538,2268,1.284,2269,2.538,2270,1.284,2271,1.284,2272,2.538,2273,1.284,2274,1.284,2275,1.284,2276,1.284,2277,2.538,2278,1.284,2279,2.538,2280,1.284,2281,2.538,2282,1.284,2283,1.284,2284,1.284,2285,1.284,2286,1.284,2287,1.284,2288,1.284,2289,1.284,2290,1.284,2291,1.284,2292,1.284,2293,1.284,2294,1.284,2295,1.284,2296,1.284,2297,1.284,2298,1.284,2299,1.284,2300,1.284,2301,1.284,2302,1.284,2303,1.284,2304,1.284,2305,1.284,2306,1.284,2307,1.284,2308,1.767,2309,2.04,2310,2.04,2311,2.04,2312,2.04,2313,1.849,2314,1.284,2315,2.04,2316,2.04,2317,2.04,2318,2.04,2319,2.999,2320,3.358,2321,1.284,2322,2.538,2323,2.538,2324,2.538,2325,1.284,2326,1.284,2327,1.284,2328,1.284,2329,1.284,2330,1.284,2331,1.284,2332,1.284,2333,1.221,2334,1.284,2335,1.284,2336,1.284,2337,1.221,2338,1.284,2339,1.284,2340,1.284,2341,1.284,2342,1.284,2343,1.284,2344,2.891,2345,2.891,2346,3.856,2347,3.154,2348,3.154,2349,3.154,2350,3.154,2351,2.62,2352,1.284,2353,3.653,2354,3.154,2355,2.538,2356,2.538,2357,2.538,2358,3.358,2359,2.538,2360,2.538,2361,2.538,2362,2.538,2363,2.891,2364,3.358,2365,2.198,2366,2.413,2367,2.538,2368,2.538,2369,2.538,2370,2.748,2371,2.748,2372,2.04,2373,2.04,2374,1.284,2375,1.94,2376,2.3,2377,2.999,2378,1.767,2379,1.94,2380,1.94,2381,1.284,2382,1.284,2383,1.284,2384,1.284,2385,1.221,2386,1.284,2387,1.284,2469,2.272,2470,2.272,2471,2.272,2472,2.272,2473,2.272,2474,1.79,2475,2.272,2476,2.272,2477,2.272,2478,2.272,2479,2.272,2480,2.272]],["title/components/SandboxAlarmLabelComponent.html",[0,0.101,212,0.605]],["body/components/SandboxAlarmLabelComponent.html",[0,0.203,1,0.352,2,0.743,3,0.065,4,0.049,5,1.135,6,0.407,7,0.407,8,0.379,9,0.049,13,0.312,14,1.243,21,0.752,22,0.85,24,0.407,25,1.255,26,1.12,27,1.195,28,1.01,30,0.352,32,0.211,33,0.62,34,0.97,36,0.495,40,0.904,43,0.838,48,0.563,52,0.984,53,0.014,54,0.561,55,0.543,56,0.437,59,0.313,65,0.98,68,1.533,72,0.571,73,2.098,74,1.014,78,3.752,79,1.332,82,1.076,91,0.576,101,0.181,102,1.39,103,0.073,106,0.437,107,0.182,108,0.031,109,1.187,111,1.73,115,1.057,116,1.22,120,1.171,125,1.16,128,0.593,131,0.936,132,0.702,135,1.369,136,0.536,137,0.9,140,1.421,144,1.052,147,0.233,148,0.642,149,0.642,150,0.407,151,0.904,152,0.407,153,0.642,154,0.352,155,0.407,156,0.339,157,0.407,158,0.352,159,0.796,160,0.326,161,0.642,162,0.352,163,0.407,164,0.352,165,0.407,166,0.352,167,0.642,168,0.352,169,0.642,170,0.339,171,0.407,172,0.352,173,1.221,174,0.904,175,0.339,176,0.407,177,0.365,178,0.688,179,0.796,180,0.352,181,0.796,182,0.352,183,0.796,184,0.352,185,0.407,186,0.352,187,0.407,188,0.352,189,0.393,190,0.352,191,0.407,192,0.339,193,0.407,194,0.352,195,0.555,196,1.108,197,1.127,198,0.796,199,0.555,200,0.642,201,0.555,202,0.555,203,0.407,204,0.555,205,0.904,206,0.352,207,0.352,208,0.339,209,0.407,210,0.904,211,1.215,212,0.781,213,0.555,214,0.352,215,0.339,216,0.407,217,0.352,218,0.613,219,0.642,220,0.352,221,0.407,222,0.339,223,0.379,224,0.352,225,0.944,226,0.379,227,0.714,228,0.339,229,0.407,230,0.352,231,0.266,232,0.365,233,0.352,234,1.01,235,0.407,236,0.352,237,0.352,238,0.352,239,0.352,240,0.352,241,0.352,242,0.393,243,0.407,244,0.407,245,0.004,246,0.006,247,0.004,251,1.283,285,1.317,294,1.351,295,1.534,297,2.026,300,2.348,314,0.884,315,1.374,318,0.934,319,1.955,320,1.857,325,3.615,342,1.01,347,2.157,350,1.457,357,3.06,361,1.792,367,1.146,384,1.661,394,0.9,395,1.635,396,0.934,416,0.779,421,0.971,424,0.867,437,1.199,438,2.346,442,2.4,444,2.566,448,2.337,451,1.097,459,1.471,461,1.809,463,1.421,465,2.097,472,3.836,486,2.546,487,2.743,488,2.157,489,2.157,490,2.157,491,2.157,492,1.998,493,2.075,494,1.191,509,0.779,512,0.971,517,1.327,518,1.097,531,1.792,559,1.258,590,2.242,591,1.01,592,0.971,596,1.661,597,2.596,624,0.702,649,1.258,658,3.396,680,1.369,687,1.792,757,2.157,803,1.933,871,0.971,878,1.199,884,1.097,888,2.901,889,2.461,925,3.672,929,0.867,1087,2.461,1098,2.544,1167,2.958,1188,1.986,1240,1.594,1248,2.242,1250,2.461,1260,1.146,1265,2.242,1324,1.857,1392,1.732,1394,2.96,1409,0.934,1431,3.63,1432,2.665,1433,3.197,1434,3.197,1435,2.437,1436,2.437,1438,3.254,1470,1.986,1491,1.258,1543,1.01,1679,1.986,1686,2.461,1729,2.946,1980,2.146,1983,1.097,2011,1.986,2063,2.795,2152,1.199,2155,2.461,2230,2.242,2235,3.083,2236,1.258,2237,3.201,2238,3.891,2239,3.402,2240,3.562,2241,3.562,2242,2.589,2243,2.089,2244,3.562,2245,1.323,2246,2.589,2247,1.323,2248,1.323,2249,1.323,2250,1.323,2251,1.323,2252,1.258,2253,1.323,2254,2.589,2255,1.323,2256,1.323,2257,1.323,2258,1.323,2259,1.323,2260,1.323,2261,1.323,2262,2.589,2263,1.323,2264,2.589,2265,1.323,2266,1.323,2267,2.589,2268,1.323,2269,2.589,2270,1.323,2271,1.323,2272,2.589,2273,1.323,2274,1.323,2275,1.323,2276,1.323,2277,2.589,2278,1.323,2279,2.589,2280,1.323,2281,2.589,2282,1.323,2283,1.323,2284,1.323,2285,1.323,2286,1.323,2287,1.323,2288,1.323,2289,1.323,2290,1.323,2291,1.323,2292,1.323,2293,1.323,2294,1.323,2295,1.323,2296,1.323,2297,1.323,2298,1.323,2299,1.323,2300,1.323,2301,1.323,2302,1.323,2303,1.323,2304,1.323,2305,1.323,2306,1.323,2307,1.323,2308,1.809,2309,2.089,2310,2.089,2311,2.089,2312,2.089,2313,1.894,2314,1.323,2315,2.089,2316,2.089,2317,2.089,2318,2.089,2319,3.043,2320,3.402,2321,1.323,2322,2.589,2323,2.589,2324,2.589,2325,1.323,2326,1.323,2327,1.323,2328,1.323,2329,1.323,2330,1.323,2331,1.323,2332,1.323,2333,1.258,2334,1.323,2335,1.323,2336,1.323,2337,1.258,2338,1.323,2339,1.323,2340,1.323,2341,1.323,2342,1.323,2343,1.323,2344,2.94,2345,2.94,2346,3.891,2347,3.201,2348,3.201,2349,3.201,2350,3.201,2351,2.665,2352,2.089,2353,3.692,2354,3.201,2355,2.589,2356,2.589,2357,2.589,2358,3.402,2359,2.589,2360,2.589,2361,2.589,2362,2.589,2363,2.94,2364,3.402,2365,2.242,2366,2.461,2367,2.589,2368,2.589,2369,2.589,2370,1.986,2371,1.986,2372,1.323,2373,2.089,2374,1.323,2375,1.986,2376,1.894,2377,1.986,2378,1.809,2379,1.986,2380,1.986,2381,1.323,2382,1.323,2383,1.323,2384,1.323,2385,1.258,2386,1.323,2387,1.323,2474,1.844,2481,2.342,2482,2.342,2483,2.342,2484,2.342,2485,2.342]],["title/components/SandboxAlarmTileComponent.html",[0,0.101,213,0.605]],["body/components/SandboxAlarmTileComponent.html",[0,0.203,1,0.346,2,0.738,3,0.064,4,0.048,5,1.129,6,0.401,7,0.401,8,0.373,9,0.048,13,0.31,14,1.239,21,0.746,22,0.844,24,0.401,25,1.254,26,1.119,27,1.192,28,1.005,30,0.346,32,0.208,33,0.612,34,1.212,36,0.489,40,0.898,43,0.839,48,0.645,52,0.977,53,0.014,54,0.558,55,0.666,56,0.43,59,0.309,65,0.97,68,1.88,72,0.594,73,2.091,74,1.004,78,3.742,79,1.324,82,1.067,91,0.707,101,0.18,102,1.384,103,0.072,106,0.43,107,0.181,108,0.03,109,1.183,111,1.725,115,1.05,116,1.215,120,1.163,125,1.148,128,0.584,131,0.925,132,0.691,135,1.352,136,0.528,137,0.886,140,1.407,144,1.036,147,0.229,148,0.635,149,0.635,150,0.401,151,0.896,152,0.401,153,0.635,154,0.346,155,0.401,156,0.333,157,0.401,158,0.346,159,0.788,160,0.321,161,0.635,162,0.346,163,0.401,164,0.346,165,0.401,166,0.346,167,0.635,168,0.346,169,0.635,170,0.333,171,0.401,172,0.346,173,1.218,174,0.896,175,0.333,176,0.401,177,0.359,178,0.681,179,0.788,180,0.346,181,0.788,182,0.346,183,0.788,184,0.346,185,0.401,186,0.346,187,0.401,188,0.346,189,0.387,190,0.346,191,0.401,192,0.333,193,0.401,194,0.346,195,0.549,196,1.106,197,1.122,198,0.788,199,0.549,200,0.635,201,0.549,202,0.549,203,0.401,204,0.549,205,0.898,206,0.346,207,0.346,208,0.333,209,0.401,210,0.898,211,1.21,212,0.549,213,0.775,214,0.346,215,0.333,216,0.401,217,0.346,218,0.607,219,0.635,220,0.346,221,0.401,222,0.333,223,0.373,224,0.346,225,0.939,226,0.373,227,0.707,228,0.333,229,0.401,230,0.346,231,0.262,232,0.359,233,0.346,234,1.005,235,0.401,236,0.346,237,0.346,238,0.346,239,0.346,240,0.346,241,0.346,242,0.387,243,0.401,244,0.401,245,0.004,246,0.006,247,0.004,251,1.27,285,1.306,294,1.346,295,1.544,297,2.016,300,2.331,314,0.876,315,1.371,318,0.92,319,1.944,320,1.842,325,3.606,342,1.005,347,2.138,350,1.445,357,3.054,361,1.937,367,1.129,384,1.641,394,0.886,395,1.619,396,0.92,416,0.767,421,0.956,424,0.854,437,1.181,438,2.323,442,2.496,444,2.588,448,2.037,451,1.081,459,1.456,461,1.788,463,1.407,465,2.081,472,3.828,486,2.524,487,2.732,488,2.138,489,2.138,490,2.138,491,2.138,492,1.982,493,2.058,494,1.181,509,0.767,512,0.956,517,1.314,518,1.081,531,1.777,559,1.239,590,2.22,591,0.995,592,0.956,596,1.641,597,2.579,624,0.691,649,1.239,658,3.389,680,1.352,687,1.777,757,2.138,803,1.92,871,0.956,878,1.181,884,1.081,888,2.879,889,2.437,925,3.664,929,0.854,1087,2.437,1098,2.525,1167,2.949,1188,2.772,1240,1.575,1248,2.22,1250,2.437,1260,1.129,1265,2.22,1324,1.842,1392,2.125,1394,3.065,1409,0.92,1431,3.624,1432,2.642,1433,3.18,1434,3.18,1435,2.417,1436,2.417,1438,3.242,1470,1.963,1491,1.239,1543,0.995,1679,1.963,1686,2.437,1729,3.274,1980,2.125,1983,1.081,2011,1.963,2063,2.772,2152,1.181,2155,2.437,2230,2.22,2235,3.427,2236,1.239,2237,3.177,2238,3.873,2239,3.38,2240,3.541,2241,3.541,2242,2.563,2243,2.064,2244,3.541,2245,1.304,2246,2.563,2247,1.304,2248,1.304,2249,1.304,2250,1.304,2251,1.304,2252,1.239,2253,1.304,2254,2.563,2255,1.304,2256,1.304,2257,1.304,2258,1.304,2259,1.304,2260,1.304,2261,1.304,2262,2.563,2263,1.304,2264,2.563,2265,1.304,2266,1.304,2267,2.563,2268,1.304,2269,2.563,2270,1.304,2271,1.304,2272,2.563,2273,1.304,2274,1.304,2275,1.304,2276,1.304,2277,2.563,2278,1.304,2279,2.563,2280,1.304,2281,2.563,2282,1.304,2283,1.304,2284,1.304,2285,1.304,2286,1.304,2287,1.304,2288,1.304,2289,1.304,2290,1.304,2291,1.304,2292,1.304,2293,1.304,2294,1.304,2295,1.304,2296,1.304,2297,1.304,2298,1.304,2299,1.304,2300,1.304,2301,1.304,2302,1.304,2303,1.304,2304,1.304,2305,1.304,2306,1.304,2307,1.304,2308,1.788,2309,2.064,2310,2.064,2311,2.064,2312,2.064,2313,1.871,2314,1.304,2315,2.064,2316,2.064,2317,2.064,2318,2.064,2319,3.021,2320,3.38,2321,1.304,2322,2.563,2323,2.563,2324,2.563,2325,1.304,2326,1.304,2327,1.304,2328,1.304,2329,1.304,2330,1.304,2331,1.304,2332,1.304,2333,1.239,2334,1.304,2335,1.304,2336,1.304,2337,1.239,2338,1.304,2339,1.304,2340,1.304,2341,1.304,2342,1.304,2343,1.304,2344,2.915,2345,2.915,2346,3.873,2347,3.177,2348,3.177,2349,3.177,2350,3.177,2351,2.642,2352,1.304,2353,3.672,2354,3.177,2355,2.563,2356,2.563,2357,2.563,2358,3.38,2359,2.563,2360,2.563,2361,2.563,2362,2.563,2363,2.915,2364,3.38,2365,2.22,2366,2.437,2367,2.563,2368,2.563,2369,2.563,2370,2.772,2371,2.772,2372,1.304,2373,2.064,2374,1.304,2375,1.963,2376,2.323,2377,3.021,2378,1.788,2379,1.963,2380,1.963,2381,1.304,2382,1.304,2383,1.304,2384,1.304,2385,1.239,2386,1.304,2387,1.304,2474,1.817,2486,2.307,2487,2.307,2488,2.307,2489,2.307,2490,2.307,2491,2.307,2492,2.307,2493,2.307]],["title/modules/SharedModule.html",[248,0.987,263,1.888]],["body/modules/SharedModule.html",[2,0.967,3,0.142,4,0.107,9,0.107,13,0.252,15,0.933,19,3.995,43,0.8,53,0.013,59,0.995,101,0.291,103,0.16,107,0.142,108,0.024,147,0.507,158,1.243,160,1.161,162,1.253,164,1.243,166,1.243,168,1.243,170,1.133,197,1.082,217,1.253,218,0.682,245,0.008,246,0.01,247,0.008,248,1.733,250,2.718,251,1.429,252,2.933,253,2.674,254,2.2,255,2.933,261,3.834,262,3.248,263,4.018,264,2.782,265,2.2,266,1.959,268,2.782,269,2.782,270,3.022,271,2.2,279,5.081,280,4.675,281,3.043,282,4.675,283,2.74,284,2.883,285,1.292,286,2.389,287,2.496,288,3.043,292,4.017,328,2.573,481,3.439,482,4.017,568,4.017,607,4.017,849,4.017,1185,4.017,1224,4.447,1258,3.439,1265,3.157,1529,2.898,1736,4.017,2351,3.304,2400,5.625,2401,4.017,2402,5.625,2438,4.447,2494,4.447,2495,4.447,2496,5.1,2497,4.447,2498,5.1,2499,6.451,2500,6.451,2501,4.017,2502,5.1,2503,5.1,2504,5.1,2505,5.1]],["title/components/ShelveButtonComponent.html",[0,0.101,214,0.605]],["body/components/ShelveButtonComponent.html",[0,0.198,1,0.6,2,0.834,3,0.111,4,0.084,5,0.694,6,0.694,7,1.09,8,0.646,9,0.084,12,2.896,13,0.272,14,1.395,15,1.058,16,3.979,17,3.276,18,3.473,19,3.371,20,4.789,21,0.794,22,0.942,23,5.471,24,0.694,25,1.286,26,1.146,27,0.856,28,0.825,29,4.942,30,0.825,31,4.325,32,0.361,33,0.921,34,1.17,35,4.253,36,0.735,38,5.321,39,5.891,40,1.014,41,4.555,42,1.704,43,0.811,44,0.706,45,3.485,46,6.754,47,6.754,48,0.758,49,4.789,52,0.694,53,0.013,54,0.539,55,0.743,56,0.745,57,1.793,58,3.371,59,1.114,60,3.743,61,3.276,62,4.789,63,5.891,64,3.104,65,1.175,66,1.961,72,0.734,73,1.757,74,1.216,76,2.191,77,3.473,78,3.306,79,1.216,81,2.368,82,1.136,83,2.951,84,4.325,85,4.325,86,4.325,87,3.276,88,4.325,89,4.789,90,4.789,91,1.053,95,2.277,96,4.325,97,3.979,101,0.235,102,1.136,103,0.125,104,3.485,105,2.896,106,0.745,107,0.111,108,0.019,109,0.978,110,1.646,111,0.915,112,3.485,113,3.485,114,3.485,115,1.133,117,2.259,118,1.24,122,3.148,125,1.589,126,1.657,127,3.071,128,1.012,129,1.795,131,1.391,132,1.198,133,1.657,134,2.527,135,1.479,136,1.436,137,1.535,138,4.325,139,2.033,140,1.24,142,2.047,143,2.147,144,1.795,145,1.795,146,2.695,147,0.397,148,0.954,149,0.954,150,0.694,151,1.174,152,0.694,153,0.954,154,0.6,155,0.694,156,0.578,157,0.694,158,0.6,159,1.09,160,0.556,161,0.954,162,0.6,163,0.694,164,0.6,165,0.694,166,0.6,167,0.954,168,0.6,169,0.954,170,0.578,171,0.694,172,0.6,173,0.646,174,1.174,175,0.578,176,0.694,177,0.623,178,0.942,179,1.09,180,0.6,181,1.09,182,0.6,183,1.09,184,0.6,185,0.694,186,0.6,187,0.694,188,0.6,189,0.67,190,0.6,191,0.694,192,0.578,193,0.694,194,0.6,195,0.6,196,0.985,197,0.67,198,1.09,199,0.6,200,0.694,201,0.6,202,0.6,203,0.694,204,0.6,205,0.6,206,0.6,207,0.6,208,0.578,209,0.694,210,0.6,211,1.052,212,0.6,213,0.6,214,1.014,215,0.578,216,0.694,217,0.6,218,0.535,219,0.954,220,0.6,221,0.694,222,0.578,223,0.646,224,0.6,225,1.104,226,0.646,227,0.978,228,0.578,229,0.694,230,0.6,231,0.454,232,0.623,233,0.6,234,0.825,235,0.694,236,0.6,237,0.6,238,0.6,239,0.6,240,0.6,241,0.6,242,0.67,243,0.694,244,0.694,245,0.006,246,0.009,247,0.006,275,6.101,294,1.26,297,2.096,335,3.104,342,0.942,362,2.259,409,2.688,440,2.191,997,3.703,1334,3.104,2130,3.148,2506,6.754,2507,6.756,2508,3.996,2509,4.789,2510,5.471,2511,3.996,2512,3.996,2513,3.485,2514,3.996,2515,3.485,2516,3.996]],["title/injectables/SidenavService.html",[35,2.165,916,1.294]],["body/injectables/SidenavService.html",[3,0.132,4,0.099,9,0.099,13,0.358,15,0.89,18,4.575,19,4.128,26,0.634,32,0.428,33,1.032,34,1.586,35,3.306,36,0.823,43,0.763,44,0.791,48,0.814,50,0.995,51,0.995,52,1.257,53,0.014,54,0.621,55,0.91,56,1.349,57,1.946,59,0.968,60,5.04,64,4.343,72,0.741,74,1.362,76,2.454,91,1.168,95,2.551,101,0.252,103,0.148,107,0.132,108,0.022,109,1.065,110,2.169,115,1.146,116,0.823,205,1.086,218,0.823,245,0.007,246,0.01,247,0.007,314,1.319,315,1.187,320,2.197,327,2.654,328,2.885,338,3.065,342,1.204,494,1.409,540,4.859,545,3.389,632,4.149,674,2.128,732,3.671,916,1.976,918,3.194,952,4.846,953,4.846,954,5.365,956,4.458,1007,6.308,1042,4.846,1219,5.242,1371,2.426,1412,3.433,1413,2.996,1473,3.936,1535,3.433,1591,5.365,1594,6.821,1598,4.088,1616,3.433,1749,6.052,2152,3.151,2385,3.306,2443,5.365,2446,5.365,2453,5.365,2457,5.365,2459,5.365,2517,4.131,2518,6.153,2519,6.834,2520,6.834,2521,6.834,2522,7.234,2523,6.153,2524,4.737,2525,6.153,2526,4.737,2527,6.308,2528,4.737,2529,5.365,2530,4.737,2531,4.737,2532,4.737,2533,5.365,2534,6.153,2535,4.737,2536,4.737,2537,6.153,2538,4.737,2539,4.737,2540,4.737,2541,4.737,2542,4.737,2543,4.737,2544,4.737,2545,4.737,2546,4.737,2547,4.737,2548,6.153,2549,4.737,2550,4.737]],["title/components/StatusViewComponent.html",[0,0.101,217,0.605]],["body/components/StatusViewComponent.html",[0,0.199,1,0.567,2,0.652,3,0.105,4,0.079,5,0.656,6,0.656,7,0.656,8,0.61,9,0.079,13,0.187,14,0.633,21,0.763,22,0.914,24,0.656,25,1.282,26,1.143,27,0.823,28,0.793,30,0.793,32,0.341,33,0.885,34,1.426,36,0.706,40,0.99,42,1.637,43,0.836,44,0.783,48,0.778,53,0.013,54,0.453,55,0.822,59,0.505,65,1.129,66,1.884,68,2.98,72,0.5,74,1.459,76,2.629,91,0.823,101,0.229,102,1.526,103,0.118,106,0.704,107,0.105,108,0.018,110,1.825,116,0.656,128,1.336,136,0.864,139,1.397,140,1.888,147,0.375,148,0.917,149,0.917,150,0.656,151,1.145,152,0.656,153,0.917,154,0.567,155,0.656,156,0.546,157,0.656,158,0.567,159,1.058,160,0.734,161,0.917,162,0.567,163,0.656,164,0.567,165,0.656,166,0.567,167,0.917,168,0.567,169,0.917,170,0.546,171,0.656,172,0.567,173,0.61,174,1.145,175,0.546,176,0.656,177,0.588,178,0.914,179,1.058,180,0.567,181,1.058,182,0.567,183,1.058,184,0.567,185,0.656,186,0.567,187,0.656,188,0.567,189,0.633,190,0.567,191,0.656,192,0.546,193,0.656,194,0.567,195,0.567,196,0.965,197,0.633,198,1.058,199,0.567,200,0.656,201,0.567,202,0.567,203,0.656,204,0.567,205,0.567,206,0.567,207,0.567,208,0.546,209,0.656,210,0.567,211,1.02,212,0.567,213,0.567,214,0.567,215,0.546,216,0.656,217,0.99,218,1.007,219,0.917,220,0.567,221,0.656,222,0.546,223,0.61,224,0.567,225,1.088,226,0.61,227,0.949,228,0.546,229,0.656,230,0.567,231,0.428,232,0.588,233,0.567,234,0.793,235,0.656,236,0.567,237,0.567,238,0.567,239,0.567,240,0.567,241,0.567,242,0.633,243,0.656,244,0.656,245,0.006,246,0.008,247,0.006,294,0.984,295,1.092,299,4.9,310,3.849,311,3.631,314,1.388,315,1.329,327,2.276,328,2.105,329,3.338,330,3.338,331,3.149,332,3.338,333,3.338,334,2.703,335,2.983,342,0.793,357,2.338,358,2.133,361,2.097,440,2.105,442,2.766,444,2.707,463,1.637,486,2.583,487,3.008,488,2.523,489,2.523,490,2.523,491,2.523,492,2.338,493,2.428,494,1.393,517,1.529,545,2.473,624,1.131,731,3.229,871,2.188,929,1.397,1167,2.867,1392,2.473,1394,3.247,1409,1.505,1431,3.736,1433,3.226,1434,3.226,1435,2.473,1436,2.473,1438,3.229,1528,3.825,1980,2.851,1983,1.768,2116,5.748,2118,3.291,2121,3.291,2123,3.291,2126,3.291,2194,4.157,2370,3.27,2371,3.27,2375,2.028,2376,2.703,2377,3.542,2378,1.847,2379,2.028,2380,2.028,2501,6.224,2551,6.891,2552,2.972,2553,6.087,2554,4.602,2555,6.087,2556,6.937,2557,5.278,2558,3.774,2559,3.774,2560,3.291,2561,5.278,2562,7.188,2563,3.774,2564,3.774,2565,5.278,2566,5.278,2567,5.278,2568,3.774,2569,3.774,2570,3.774,2571,3.774,2572,3.774,2573,3.774]],["title/modules/TabularModule.html",[248,0.987,1357,2.548]],["body/modules/TabularModule.html",[2,0.865,3,0.162,4,0.122,9,0.122,13,0.288,53,0.013,101,0.287,103,0.182,107,0.162,108,0.027,147,0.579,190,1.215,220,1.264,222,1.17,223,0.943,245,0.009,246,0.011,247,0.009,248,1.839,249,4.574,250,2.239,251,1.633,252,3.114,253,2.417,254,2.514,255,3.114,262,3.355,263,3.792,264,3.021,265,2.514,266,2.239,268,3.021,269,3.021,270,3.282,271,2.514,285,1.476,286,2.731,287,2.853,289,3.295,350,1.962,545,3.282,571,3.282,1357,5.39,1364,4.224,1529,3.147,1735,4.224,1736,4.592,2574,5.083,2575,5.083,2576,5.83,2577,5.083,2578,5.83,2579,5.83,2580,5.83]],["title/components/TabularViewComponent.html",[0,0.101,222,0.583]],["body/components/TabularViewComponent.html",[0,0.201,1,0.724,2,0.769,3,0.134,4,0.101,5,0.838,6,0.838,7,0.838,8,0.78,9,0.101,13,0.239,14,0.809,21,0.9,22,1.035,24,0.838,25,1.296,26,1.154,27,0.97,28,0.935,30,0.935,32,0.436,36,0.833,40,1.094,43,0.791,44,0.886,48,0.619,53,0.013,54,0.535,59,0.646,72,0.457,81,2.685,82,1.288,91,0.752,101,0.168,103,0.151,107,0.134,108,0.023,116,0.838,125,1.222,126,2.581,128,1.577,129,2.797,132,2.184,133,3.02,143,3.704,147,0.479,148,1.082,149,1.082,150,0.838,151,1.266,152,0.838,153,1.082,154,0.724,155,0.838,156,0.698,157,0.838,158,0.724,159,1.198,160,0.671,161,1.082,162,0.724,163,0.838,164,0.724,165,0.838,166,0.724,167,1.082,168,0.724,169,1.082,170,0.698,171,0.838,172,0.724,173,0.78,174,1.266,175,0.698,176,0.838,177,0.752,178,1.035,179,1.198,180,0.724,181,1.198,182,0.724,183,1.198,184,0.724,185,0.838,186,0.724,187,0.838,188,0.724,189,0.809,190,0.724,191,0.838,192,0.698,193,0.838,194,0.724,195,0.724,196,1.049,197,0.809,198,1.198,199,0.724,200,0.838,201,0.724,202,0.724,203,0.838,204,0.724,205,0.724,206,0.724,207,0.724,208,0.698,209,0.838,210,0.724,211,1.156,212,0.724,213,0.724,214,0.724,215,0.698,216,0.838,217,0.724,218,0.646,219,1.082,220,1.035,221,0.838,222,1.053,223,1.287,224,0.724,225,1.151,226,0.78,227,1.074,228,0.698,229,0.838,230,0.724,231,0.548,232,0.752,233,0.724,234,0.935,235,0.838,236,0.724,237,0.724,238,0.724,239,0.724,240,0.724,241,0.724,242,0.809,243,0.838,244,0.838,245,0.007,246,0.01,247,0.007,294,0.9,295,1.288,300,2.858,337,2.727,403,1.662,416,2.07,440,2.484,513,3.253,545,2.917,571,2.917,592,2,1029,4.198,1735,4.995,1933,5.429,2191,6.352,2552,3.8,2554,5.429,2560,4.207,2581,6.011,2582,6.226,2583,6.894,2584,4.825,2585,6.226,2586,5.429]],["title/interfaces/TimeoutOption.html",[2587,2.404,2588,3.173]],["body/interfaces/TimeoutOption.html",[0,0.183,3,0.128,4,0.065,9,0.065,13,0.154,14,0.771,15,0.873,18,1.971,19,2.471,21,0.451,22,0.691,25,0.468,26,0.417,28,0.468,30,0.468,32,0.281,33,0.771,34,0.858,35,3.459,40,0.468,43,0.813,44,0.401,53,0.014,55,0.545,57,1.764,58,2.937,59,0.994,60,3.84,61,1.859,64,1.762,65,1.17,70,1.762,72,0.692,73,1.288,74,1.336,76,1.243,79,1.018,81,1.984,82,0.645,91,1.138,95,2.266,98,2.102,101,0.262,102,0.645,103,0.097,105,2.258,106,0.581,107,0.128,108,0.015,109,1.115,110,2.189,111,1.595,115,1.312,116,0.542,117,3.638,118,1.696,120,1.131,122,3.623,215,0.451,218,0.417,245,0.005,246,0.007,247,0.009,281,1.859,283,1.675,284,3.411,294,1.362,295,0.951,297,2.219,314,0.602,315,1.37,320,1.642,327,1.984,328,3.04,338,1.243,342,1.213,355,2.455,357,2.473,362,4.127,374,2.909,380,5.049,418,2.718,440,1.243,453,1.971,459,1.477,465,1.154,494,1.252,498,1.971,518,1.46,538,3.686,540,1.971,558,1.036,567,4.767,596,2.711,610,1.984,613,2.455,614,3.623,619,2.909,620,2.455,621,3.623,622,3.623,623,4.407,624,1.639,625,2.258,626,2.455,627,2.455,628,2.455,629,2.455,633,2.102,674,1.4,675,2.321,676,1.292,686,3.623,687,1.074,714,3.923,803,2.419,871,1.907,914,3.623,925,2.155,935,3.459,936,2.258,945,4.07,949,5.291,966,2.718,982,2.6,983,1.675,994,2.455,1038,3.421,1055,2.258,1056,3.639,1076,6.367,1077,6.367,1078,3.333,1099,2.455,1105,4.011,1153,2.455,1240,2.603,1275,2.455,1334,2.6,1550,3.638,1562,3.333,1563,2.718,1621,2.718,1622,1.859,1623,3.333,1643,2.718,1715,2.258,1758,2.258,1759,3.623,1770,5.263,1832,3.102,1877,4.431,1942,2.718,2134,2.718,2135,4.011,2138,5.614,2139,4.011,2140,4.767,2143,2.718,2144,2.718,2154,2.718,2156,2.718,2158,2.718,2164,6.367,2168,4.011,2169,5.263,2170,4.011,2171,4.767,2174,2.718,2175,2.718,2179,4.374,2182,2.718,2184,2.718,2185,2.455,2313,2.356,2509,4.011,2510,5.874,2527,4.011,2529,2.718,2587,1.859,2588,4.306,2589,2.455,2590,2.718,2591,4.6,2592,7.427,2593,4.6,2594,5.467,2595,4.6,2596,4.6,2597,2.718,2598,5.263,2599,3.117,2600,3.117,2601,3.117,2602,3.117,2603,3.117,2604,4.6,2605,3.117,2606,3.117,2607,3.117,2608,3.117,2609,3.117,2610,5.467,2611,3.117,2612,3.117,2613,3.117,2614,3.117,2615,6.036,2616,3.117,2617,3.117,2618,6.036,2619,3.117,2620,5.467,2621,3.117,2622,3.117,2623,3.117,2624,4.306,2625,3.117,2626,3.117,2627,3.117,2628,3.117,2629,2.455,2630,3.117,2631,3.117,2632,2.455,2633,4.6,2634,4.6,2635,3.117,2636,5.467,2637,3.117,2638,4.6,2639,3.117,2640,3.117,2641,3.117,2642,4.6,2643,4.6,2644,3.117,2645,5.467,2646,4.6,2647,3.117,2648,3.117,2649,3.117,2650,4.6,2651,3.117,2652,3.117,2653,3.117,2654,3.117,2655,3.117,2656,3.117,2657,4.6,2658,2.718,2659,3.117,2660,4.6,2661,3.117,2662,4.6,2663,3.117,2664,4.6,2665,3.117,2666,3.117,2667,3.117,2668,5.467,2669,3.117,2670,6.036,2671,3.117,2672,7.623,2673,3.117,2674,4.6,2675,4.6,2676,4.6,2677,3.117,2678,2.718,2679,3.117,2680,3.117,2681,3.117,2682,3.117,2683,4.011,2684,3.117,2685,3.117,2686,2.718,2687,3.117,2688,3.117,2689,3.117,2690,3.117,2691,3.117,2692,3.117,2693,3.117,2694,3.117,2695,3.117,2696,3.117,2697,3.117,2698,3.117,2699,3.117,2700,4.6,2701,4.6,2702,4.011,2703,4.6,2704,3.117,2705,3.117,2706,4.6,2707,3.117,2708,3.117,2709,6.737,2710,3.117,2711,4.6,2712,4.6,2713,3.117,2714,3.117,2715,3.117,2716,3.117,2717,4.011,2718,3.117,2719,3.117,2720,3.117]],["title/interfaces/User.html",[1038,1.888,2587,2.404]],["body/interfaces/User.html",[3,0.162,4,0.123,9,0.123,13,0.289,15,0.845,32,0.528,33,1.176,34,1.09,44,0.751,50,0.945,51,0.945,53,0.013,55,0.831,56,1.308,57,1.904,58,3.14,101,0.271,103,0.183,107,0.195,108,0.035,109,0.911,110,1.752,115,1.176,245,0.009,246,0.011,247,0.009,342,1.216,463,2.332,483,4.731,543,3.696,610,2.52,624,1.752,674,2.625,916,2.253,927,3.14,932,3.736,933,3.594,934,3.303,982,3.303,983,3.14,1038,3.794,1056,3.287,1550,3.303,1561,4.603,1584,5.461,1877,4.185,2179,4.235,2186,4.603,2587,3.486,2589,4.603,2624,6.142,2629,6.142,2721,4.603,2722,7.062,2723,6.118,2724,5.096,2725,5.096,2726,5.096,2727,5.096,2728,5.096]],["title/injectables/UserService.html",[916,1.294,1550,2.277]],["body/injectables/UserService.html",[3,0.158,4,0.119,9,0.119,13,0.341,15,0.998,32,0.513,33,1.157,34,1.385,36,0.923,44,0.887,48,0.738,50,1.116,51,1.116,52,0.988,53,0.013,54,0.488,55,0.817,56,1.286,57,2.037,58,3.707,72,0.539,101,0.269,103,0.178,107,0.192,108,0.032,109,0.886,110,1.704,115,1.157,245,0.009,246,0.011,247,0.009,342,1.036,463,2.496,483,3.833,543,4.363,610,2.976,624,1.704,674,2.553,916,2.216,927,3.054,932,3.849,933,3.805,934,3.212,982,3.899,983,3.707,1038,3.769,1056,3.232,1371,2.911,1550,3.899,1561,5.434,1584,4.652,1877,4.116,1921,4.956,2179,4.119,2186,4.477,2587,3.391,2624,6.337,2629,6.518,2721,4.477,2722,6.016,2723,4.956,2724,6.016,2725,6.016,2726,6.736,2727,4.956,2728,4.956,2729,6.9,2730,5.684]],["title/components/WeatherBackupWsMarkerComponent.html",[0,0.101,224,0.605]],["body/components/WeatherBackupWsMarkerComponent.html",[0,0.201,1,0.633,2,0.703,3,0.117,4,0.088,5,0.733,6,0.733,7,0.733,8,0.682,9,0.088,13,0.282,14,0.707,15,1.075,21,0.824,22,0.969,24,0.733,25,1.289,26,1.148,27,0.888,28,0.855,30,0.855,32,0.381,33,0.955,34,1.461,36,0.762,40,1.037,42,1.767,43,0.82,44,0.732,48,0.755,50,0.921,51,0.921,52,0.733,53,0.013,54,0.554,55,0.855,56,0.786,57,1.883,59,0.564,72,0.684,82,1.178,91,0.657,101,0.269,102,1.178,103,0.132,106,1.062,107,0.117,108,0.02,109,0.888,115,0.707,116,0.99,147,0.419,148,0.99,149,0.99,150,0.733,151,1.2,152,0.733,153,0.99,154,0.633,155,0.733,156,0.61,157,0.733,158,0.633,159,1.121,160,0.792,161,0.99,162,0.633,163,0.733,164,0.633,165,0.733,166,0.633,167,0.99,168,0.633,169,0.99,170,0.61,171,0.733,172,0.633,173,0.682,174,1.2,175,0.61,176,0.733,177,0.657,178,0.969,179,1.121,180,0.633,181,1.121,182,0.633,183,1.121,184,0.633,185,0.733,186,0.633,187,0.733,188,0.633,189,0.707,190,0.633,191,0.733,192,0.61,193,0.733,194,0.633,195,0.633,196,1.004,197,0.707,198,1.121,199,0.633,200,0.733,201,0.633,202,0.633,203,0.733,204,0.633,205,0.633,206,0.633,207,0.633,208,0.61,209,0.733,210,0.633,211,1.081,212,0.633,213,0.633,214,0.633,215,0.61,216,0.733,217,0.633,218,0.564,219,0.99,220,0.633,221,0.733,222,0.61,223,0.682,224,1.037,225,1.2,226,1.358,227,1.313,228,0.61,229,0.733,230,0.633,231,0.479,232,0.657,233,0.633,234,0.855,235,0.733,236,0.633,237,0.633,238,0.633,239,1.141,240,0.633,241,0.633,242,0.707,243,0.733,244,0.733,245,0.007,246,0.009,247,0.007,294,1.062,295,1.334,338,2.272,342,0.855,350,1.595,424,2.557,442,1.505,535,2.573,539,2.573,558,2.633,624,1.264,675,2.773,676,1.748,890,3.602,926,2.897,929,1.561,1299,2.843,1300,4.674,1301,4.127,1309,3.321,1324,2.033,1374,3.466,1409,2.272,1442,4.658,2632,5.08,2731,4.369,2732,4.889,2733,5.213,2734,5.696,2735,3.91,2736,4.349,2737,2.666,2738,4.967,2739,3.676,2740,3.676,2741,3.676,2742,3.676,2743,2.515,2744,4.216]],["title/components/WeatherComponent.html",[0,0.101,228,0.583]],["body/components/WeatherComponent.html",[0,0.2,1,0.692,2,0.942,3,0.128,4,0.097,5,0.801,6,0.801,7,0.801,8,0.745,9,0.097,13,0.228,14,0.773,15,0.874,21,0.874,22,1.013,24,0.801,25,1.293,26,1.152,27,0.942,28,0.908,30,0.908,32,0.416,33,1.013,36,0.809,40,1.075,43,0.783,44,0.867,48,0.711,50,0.977,51,0.977,52,0.801,53,0.013,54,0.668,55,0.716,56,0.86,59,0.617,60,3.606,72,0.573,82,1.25,91,1.051,101,0.21,102,0.953,103,0.144,106,0.86,107,0.128,108,0.022,109,0.719,116,1.05,118,1.875,136,1.055,139,1.707,143,2.477,147,0.458,148,1.05,149,1.05,150,0.801,151,1.244,152,0.801,153,1.05,154,0.692,155,0.801,156,0.667,157,0.801,158,0.692,159,1.172,160,0.641,161,1.05,162,0.692,163,0.801,164,0.692,165,0.801,166,0.692,167,1.05,168,0.692,169,1.05,170,0.667,171,0.801,172,0.692,173,0.745,174,1.244,175,0.667,176,0.801,177,0.719,178,1.013,179,1.172,180,0.692,181,1.172,182,0.692,183,1.172,184,0.692,185,0.801,186,0.692,187,0.801,188,0.692,189,0.773,190,0.692,191,0.801,192,0.667,193,0.801,194,0.692,195,0.692,196,1.034,197,0.773,198,1.172,199,0.692,200,0.801,201,0.692,202,0.692,203,0.801,204,0.692,205,0.692,206,0.692,207,0.692,208,0.667,209,0.801,210,0.692,211,1.131,212,0.692,213,0.692,214,0.692,215,0.667,216,0.801,217,0.692,218,0.617,219,1.05,220,0.692,221,0.801,222,0.667,223,0.745,224,0.692,225,1.192,226,0.745,227,1.051,228,1.035,229,0.801,230,0.692,231,0.523,232,0.719,233,0.692,234,0.908,235,0.801,236,0.692,237,0.692,238,0.692,239,0.692,240,0.692,241,0.692,242,0.773,243,0.801,244,0.801,245,0.007,246,0.009,247,0.007,294,1.127,295,1.25,314,0.89,315,0.801,509,1.533,517,1.336,535,3.1,544,4.827,558,2.471,597,2.607,598,4.38,661,3.109,687,2.466,750,3.823,926,2.071,1029,4.076,1278,5.638,1281,3.631,1324,2.723,1333,4.761,1334,3.416,1345,4.761,1346,4.38,1347,5.271,2745,4.02,2746,6.045,2747,6.045,2748,6.745,2749,6.045,2750,6.481,2751,6.045,2752,6.045,2753,6.045,2754,4.61,2755,4.61,2756,4.02]],["title/components/WeatherDataMarkerComponent.html",[0,0.101,230,0.605]],["body/components/WeatherDataMarkerComponent.html",[0,0.204,1,0.629,2,0.7,3,0.116,4,0.088,5,0.728,6,0.728,7,0.728,8,0.677,9,0.088,13,0.28,14,0.702,15,1.073,21,0.82,22,0.965,24,0.728,25,1.288,26,1.148,27,0.884,28,0.851,30,0.851,32,0.378,33,0.951,34,1.384,36,0.759,40,1.034,42,1.759,43,0.777,44,0.729,48,0.754,50,0.917,51,0.917,52,0.728,53,0.013,54,0.552,55,0.816,56,0.781,57,1.879,58,3.702,59,0.56,72,0.397,79,1.525,82,1.173,91,0.653,101,0.258,102,1.425,103,0.131,106,1.057,107,0.116,108,0.02,109,0.884,125,1.436,127,2.05,130,2.649,132,1.927,133,1.736,135,1.551,136,1.472,140,1.299,147,0.416,148,0.985,149,0.985,150,0.728,151,1.197,152,0.728,153,0.985,154,0.629,155,0.728,156,0.606,157,0.728,158,0.629,159,1.117,160,0.789,161,0.985,162,0.629,163,0.728,164,0.629,165,0.728,166,0.629,167,0.985,168,0.629,169,0.985,170,0.606,171,0.728,172,0.629,173,0.677,174,1.197,175,0.606,176,0.728,177,0.653,178,0.965,179,1.117,180,0.629,181,1.117,182,0.629,183,1.117,184,0.629,185,0.728,186,0.629,187,0.728,188,0.629,189,0.702,190,0.629,191,0.728,192,0.606,193,0.728,194,0.629,195,0.629,196,1.002,197,0.702,198,1.117,199,0.629,200,0.728,201,0.629,202,0.629,203,0.728,204,0.629,205,0.629,206,0.629,207,0.629,208,0.606,209,0.728,210,0.629,211,1.078,212,0.629,213,0.629,214,0.629,215,0.606,216,0.728,217,0.629,218,0.56,219,0.985,220,0.629,221,0.728,222,0.606,223,0.677,224,0.629,225,1.196,226,0.677,227,1.074,228,0.606,229,0.728,230,1.034,231,0.954,232,0.653,233,0.629,234,0.851,235,0.728,236,0.629,237,0.629,238,0.629,239,1.081,240,0.629,241,0.629,242,0.702,243,0.728,244,0.728,245,0.007,246,0.009,247,0.007,294,1.057,295,1.33,297,1.299,314,1.095,315,0.985,319,1.299,350,1.588,393,2.25,394,1.609,395,1.495,403,1.953,409,2.05,424,2.858,509,1.393,515,1.962,531,1.953,535,2.564,539,2.564,558,2.63,610,2.446,640,2.499,675,2.77,676,1.736,684,4.109,687,2.214,699,4.466,880,2.499,926,2.888,1202,4.357,1265,2.775,1299,2.824,1300,4.658,1301,4.109,1315,4.945,1318,3.652,1324,2.024,1374,3.454,1394,1.736,1406,3.205,1409,1.671,1509,4.109,2308,2.775,2731,4.362,2732,4.882,2733,5.205,2735,3.906,2736,4.335,2737,2.649,2743,2.499,2757,5.606,2758,6.007,2759,4.189,2760,4.189,2761,4.189,2762,4.189]],["title/modules/WeatherModule.html",[248,0.987,1698,2.404]],["body/modules/WeatherModule.html",[2,0.799,3,0.142,4,0.107,9,0.107,13,0.253,53,0.013,61,3.859,101,0.294,103,0.16,107,0.142,108,0.024,147,0.509,224,1.178,225,1.184,226,1.046,227,1.222,228,1.134,230,1.178,231,0.734,232,1.222,233,1.178,234,1.118,236,1.178,237,1.178,238,1.178,239,0.971,240,1.244,245,0.008,246,0.01,247,0.008,248,1.736,249,4.433,250,1.968,251,1.435,252,2.939,253,2.124,254,3.058,255,2.939,261,3.838,262,3.251,263,3.674,264,2.79,265,2.209,266,1.968,268,2.79,269,2.79,270,3.031,271,2.209,283,2.752,285,1.297,286,2.4,287,2.507,288,3.056,289,2.895,350,1.812,558,2.477,1356,4.679,1361,4.467,1363,5.641,1364,3.712,1365,4.035,1368,6.182,1370,4.035,1529,2.906,1698,5.13,2732,4.71,2733,4.781,2735,3.838,2743,3.056,2763,4.467,2764,4.467,2765,5.123,2766,4.467,2767,4.467,2768,5.123,2769,6.469,2770,4.035,2771,4.035,2772,4.467,2773,5.123,2774,4.687,2775,4.035,2776,5.123]],["title/components/WeatherPrimaryWsConnectorComponent.html",[0,0.101,233,0.605]],["body/components/WeatherPrimaryWsConnectorComponent.html",[0,0.191,1,0.642,2,0.71,3,0.119,4,0.09,5,0.743,6,0.743,7,0.743,8,0.691,9,0.09,13,0.211,14,0.717,15,0.831,21,0.831,22,0.975,24,0.743,25,1.289,26,1.149,27,0.896,28,0.863,30,0.863,32,0.386,36,0.769,40,1.043,42,1.784,43,0.77,44,0.835,48,0.742,50,0.93,51,0.93,53,0.013,54,0.494,55,0.506,59,0.572,72,0.687,79,1.273,82,1.189,91,0.666,101,0.149,102,1.437,103,0.134,107,0.119,108,0.02,111,0.979,115,0.717,120,1.437,145,3.353,147,0.425,148,0.999,149,0.999,150,0.743,151,1.207,152,0.743,153,0.999,154,0.642,155,0.743,156,0.618,157,0.743,158,0.642,159,1.129,160,0.595,161,0.999,162,0.642,163,0.743,164,0.642,165,0.743,166,0.642,167,0.999,168,0.642,169,0.999,170,0.618,171,0.743,172,0.642,173,0.691,174,1.207,175,0.618,176,0.743,177,0.666,178,0.975,179,1.129,180,0.642,181,1.129,182,0.642,183,1.129,184,0.642,185,0.743,186,0.642,187,0.743,188,0.642,189,0.717,190,0.642,191,0.743,192,0.618,193,0.743,194,0.642,195,0.642,196,1.009,197,0.717,198,1.129,199,0.642,200,0.743,201,0.642,202,0.642,203,0.743,204,0.642,205,0.642,206,0.642,207,0.642,208,0.618,209,0.743,210,0.642,211,1.089,212,0.642,213,0.642,214,0.642,215,0.618,216,0.743,217,0.642,218,0.572,219,0.999,220,0.642,221,0.743,222,0.618,223,0.691,224,0.642,225,1.202,226,0.691,227,1.312,228,0.618,229,0.743,230,0.642,231,0.485,232,0.666,233,1.043,234,1.26,235,0.743,236,0.642,237,0.642,238,0.642,239,0.975,240,0.642,241,0.642,242,0.717,243,0.743,244,0.743,245,0.007,246,0.009,247,0.007,315,1.207,342,0.975,347,2.383,350,1.61,424,2.572,558,2.663,610,2.479,687,2.238,803,1.373,894,2.883,1028,5.88,1232,5.472,1320,3.877,1324,2.052,1345,4.528,1404,4.528,1515,3.877,1605,5.664,2068,5.013,2308,2.814,2731,4.311,2732,4.824,2757,5.664,2775,6.008,2777,3.728,2778,8.009,2779,5.749,2780,6.496,2781,5.749,2782,6.947,2783,6.496,2784,5.749,2785,4.275,2786,4.275,2787,4.275,2788,6.058,2789,4.275,2790,6.947,2791,4.275,2792,4.275,2793,4.275,2794,5.749,2795,5.749,2796,4.275,2797,4.275]],["title/components/WeatherPrimaryWsMarkerComponent.html",[0,0.101,236,0.605]],["body/components/WeatherPrimaryWsMarkerComponent.html",[0,0.201,1,0.633,2,0.703,3,0.117,4,0.088,5,0.732,6,0.732,7,0.732,8,0.681,9,0.088,13,0.282,14,0.706,15,1.075,21,0.823,22,0.968,24,0.732,25,1.289,26,1.148,27,0.887,28,0.855,30,0.855,32,0.381,33,0.955,34,1.461,36,0.762,40,1.037,42,1.766,43,0.82,44,0.732,48,0.755,50,0.921,51,0.921,52,0.732,53,0.013,54,0.554,55,0.854,56,0.786,57,1.882,59,0.564,72,0.684,82,1.177,91,0.657,101,0.269,102,1.177,103,0.132,106,1.062,107,0.117,108,0.02,109,0.887,115,0.706,116,1.121,147,0.419,148,0.989,149,0.989,150,0.732,151,1.2,152,0.732,153,0.989,154,0.633,155,0.732,156,0.609,157,0.732,158,0.633,159,1.121,160,0.792,161,0.989,162,0.633,163,0.732,164,0.633,165,0.732,166,0.633,167,0.989,168,0.633,169,0.989,170,0.609,171,0.732,172,0.633,173,0.681,174,1.2,175,0.609,176,0.732,177,0.657,178,0.968,179,1.121,180,0.633,181,1.121,182,0.633,183,1.121,184,0.633,185,0.732,186,0.633,187,0.732,188,0.633,189,0.706,190,0.633,191,0.732,192,0.609,193,0.732,194,0.633,195,0.633,196,1.004,197,0.706,198,1.121,199,0.633,200,0.732,201,0.633,202,0.633,203,0.732,204,0.633,205,0.633,206,0.633,207,0.633,208,0.609,209,0.732,210,0.633,211,1.081,212,0.633,213,0.633,214,0.633,215,0.609,216,0.732,217,0.633,218,0.564,219,0.989,220,0.633,221,0.732,222,0.609,223,0.681,224,0.633,225,1.193,226,0.681,227,1.313,228,0.609,229,0.732,230,0.633,231,0.478,232,0.657,233,0.633,234,1.267,235,0.732,236,1.037,237,0.633,238,0.633,239,1.083,240,0.633,241,0.633,242,0.706,243,0.732,244,0.732,245,0.007,246,0.009,247,0.007,294,1.062,295,1.334,338,2.755,342,0.855,350,1.595,424,2.557,442,1.504,535,2.572,539,2.572,558,2.633,624,1.263,675,2.806,676,1.747,926,2.897,929,1.56,1299,2.841,1300,4.673,1301,4.126,1309,3.319,1324,2.033,1374,3.465,1409,2.271,1442,4.657,1457,4.965,2632,5.079,2731,4.368,2732,4.888,2733,5.212,2735,3.91,2736,4.348,2737,2.665,2738,4.965,2739,3.674,2740,3.674,2741,3.674,2742,3.674,2743,2.514,2798,4.214]],["title/injectables/WeatherService.html",[916,1.294,2735,1.972]],["body/injectables/WeatherService.html",[0,0.147,2,0.543,3,0.082,4,0.062,9,0.062,13,0.311,15,0.848,32,0.265,33,0.738,34,1.557,36,0.589,43,0.655,44,0.566,48,0.8,51,0.712,52,1.019,53,0.014,54,0.504,55,0.945,56,1.093,57,1.906,66,1.049,68,2.43,72,0.714,73,1.479,74,0.65,79,1.168,83,2.365,87,2.626,91,0.914,93,2.255,101,0.25,103,0.092,106,0.821,107,0.082,108,0.014,109,0.979,110,1.883,111,1.209,115,1.205,116,1.019,118,1.819,160,0.409,173,0.712,218,0.941,225,1.016,231,0.798,239,0.661,245,0.005,246,0.007,247,0.005,295,1.454,314,1.132,315,1.019,324,1.825,342,1.079,350,1.233,357,2.7,361,2.593,424,2.44,440,1.756,442,2.918,444,2.695,459,1.414,465,1.63,473,2.488,487,2.999,488,2.914,489,2.914,490,2.914,491,2.914,492,2.7,493,2.804,494,1.676,496,2.626,535,3.065,538,3.953,539,2.629,543,4.546,544,2.968,558,2.337,624,1.32,673,4.701,674,1.32,675,2.421,676,1.218,689,3.933,714,2.365,757,1.218,772,3.726,890,2.784,916,1.414,918,1.981,926,2.634,927,1.578,929,1.088,932,2.942,933,2.255,934,1.66,945,2.968,956,3.19,982,2.488,983,3.542,997,3.953,1056,3.088,1155,4.248,1167,3.29,1202,3.708,1310,2.784,1320,2.968,1371,1.505,1373,3.838,1374,2.365,1375,4.603,1382,5.112,1384,5.112,1387,3.708,1390,3.19,1392,2.747,1394,3.38,1395,3.467,1396,3.19,1400,3.19,1403,3.19,1404,3.467,1406,2.488,1409,1.172,1410,2.129,1414,3.838,1416,2.562,1427,2.562,1429,3.838,1431,3.823,1432,3.856,1433,3.82,1434,3.684,1435,3.293,1436,3.293,1438,3.652,1520,2.129,1698,2.626,1980,2.942,1981,5.112,1983,2.473,2376,2.255,2378,2.869,2597,2.562,2598,2.562,2735,2.154,2799,2.562,2800,5.279,2801,5.279,2802,5.279,2803,5.279,2804,5.279,2805,5.279,2806,5.279,2807,5.279,2808,5.279,2809,5.279,2810,5.279,2811,5.279,2812,5.279,2813,4.402,2814,4.402,2815,4.402,2816,5.863,2817,4.402,2818,4.402,2819,2.938,2820,2.938,2821,4.402,2822,2.938,2823,6.129,2824,4.402,2825,3.838,2826,4.402,2827,2.938,2828,2.938,2829,4.402,2830,2.938,2831,4.402,2832,2.938,2833,2.938,2834,8.105,2835,2.938,2836,2.938,2837,5.748,2838,2.938,2839,2.938,2840,4.402,2841,2.938,2842,2.938,2843,8.105,2844,2.938,2845,4.402,2846,2.938,2847,2.938,2848,4.402,2849,2.938,2850,2.938,2851,6.592,2852,6.592,2853,2.938,2854,2.562,2855,2.938,2856,2.938,2857,6.835,2858,4.402,2859,4.402,2860,4.402,2861,4.402,2862,4.402,2863,4.402,2864,4.402,2865,2.938,2866,2.938,2867,2.938,2868,2.938,2869,2.938,2870,2.938,2871,2.938,2872,2.938,2873,2.938,2874,2.938,2875,7.806,2876,2.938,2877,7.806,2878,2.938]],["title/components/WeatherSidebarComponent.html",[0,0.101,237,0.605]],["body/components/WeatherSidebarComponent.html",[0,0.19,1,0.464,2,0.564,3,0.086,4,0.065,5,0.537,6,0.537,7,0.537,8,0.5,9,0.065,13,0.317,14,1.008,15,1.111,17,2.726,21,0.661,22,0.817,24,0.537,25,1.269,26,1.132,27,0.712,28,0.686,30,0.686,32,0.279,33,0.766,34,1.359,36,0.611,40,0.902,41,3.082,42,1.418,43,0.736,44,0.588,48,0.756,50,0.739,51,0.739,52,1.167,53,0.013,54,0.637,55,0.89,56,1.252,57,1.904,59,0.413,65,0.978,66,2.146,72,0.676,73,1.881,74,1.33,79,1.33,82,0.945,83,2.455,91,0.848,93,2.341,97,3.312,101,0.234,102,0.945,103,0.097,106,0.576,107,0.086,108,0.014,109,1.155,110,0.926,111,1.537,115,1.126,116,0.537,118,1.99,120,1.327,125,1.947,126,2.881,127,2.237,128,1.624,129,2.443,131,1.377,132,2.013,133,1.895,136,1.633,137,1.756,139,2.697,140,0.958,142,2.341,143,2.455,145,2.053,147,0.307,148,0.794,149,0.794,150,0.537,151,1.044,152,0.537,153,0.794,154,0.464,155,0.537,156,0.447,157,0.537,158,0.464,159,0.945,160,0.43,161,0.794,162,0.464,163,0.537,164,0.464,165,0.537,166,0.464,167,0.794,168,0.464,169,0.794,170,0.447,171,0.537,172,0.464,173,0.879,174,1.044,175,0.447,176,0.537,177,0.482,178,1.212,179,0.945,180,0.464,181,0.945,182,0.464,183,0.945,184,0.464,185,0.537,186,0.464,187,0.537,188,0.464,189,0.518,190,0.464,191,0.537,192,0.447,193,0.537,194,0.464,195,0.464,196,0.892,197,0.766,198,0.945,199,0.464,200,0.537,201,0.464,202,0.464,203,0.537,204,0.464,205,0.464,206,0.464,207,0.464,208,0.447,209,0.537,210,0.464,211,0.912,212,0.464,213,0.464,214,0.464,215,0.447,216,0.537,217,0.464,218,0.858,219,0.794,220,0.464,221,0.537,222,0.447,223,0.5,224,0.464,225,1.216,226,0.5,227,0.848,228,0.447,229,0.537,230,0.464,231,0.617,232,0.482,233,0.464,234,0.686,235,0.537,236,0.464,237,0.902,238,0.464,239,1.22,240,0.464,241,0.464,242,0.518,243,0.537,244,0.537,245,0.007,246,0.007,247,0.005,283,1.66,294,1.014,295,1.327,297,1.687,300,1.281,314,0.596,315,0.537,316,3.082,318,1.232,328,2.772,334,1.582,337,2.583,338,1.823,342,1.154,393,2.455,394,1.756,395,1.942,396,2.169,403,2.07,409,2.237,412,1.66,413,1.954,416,1.027,421,2.255,463,2.26,494,0.707,514,1.954,515,2.816,516,2.239,517,1.859,531,2.07,535,3.158,539,2.772,591,1.971,592,1.895,593,3.245,597,1.971,598,3.312,610,1.971,645,3.599,646,3.312,660,3.941,661,3.082,675,2.621,676,1.281,687,2.553,757,2.492,871,2.784,881,3.082,884,2.548,894,2.083,926,2.443,949,5.279,1038,2.548,1056,1.447,1078,3.312,1240,1.971,1275,2.433,1324,1.632,1334,4.118,1346,3.312,1374,2.922,1396,3.312,1439,2.239,1440,4.284,1441,3.599,1443,3.985,1446,3.985,1448,3.985,1453,3.599,1454,5.052,1465,3.082,1468,5.241,1489,2.694,1504,2.694,1505,4.284,1509,3.941,1526,2.89,1598,3.074,1616,2.239,1663,2.694,1877,1.843,1928,3.985,2085,5.473,2308,1.512,2658,2.694,2731,4.345,2735,3.762,2736,4.685,2737,1.954,2743,1.843,2750,4.743,2756,5.241,2770,5.289,2774,5.57,2823,3.985,2837,3.985,2879,3.985,2880,7.687,2881,4.57,2882,4.57,2883,5.439,2884,7.286,2885,6.716,2886,4.57,2887,3.09,2888,4.57,2889,3.09,2890,6.01,2891,4.57,2892,3.09,2893,6.01,2894,4.57,2895,3.09,2896,3.09,2897,4.57,2898,3.09,2899,4.57,2900,3.09,2901,3.985,2902,3.09,2903,2.694,2904,3.09,2905,2.694,2906,3.09,2907,3.09,2908,3.09,2909,3.09,2910,3.09,2911,3.09,2912,3.09,2913,3.09,2914,3.09,2915,3.09,2916,3.09,2917,4.57,2918,4.57,2919,3.09,2920,3.09,2921,3.09,2922,3.09,2923,3.09,2924,3.09,2925,3.09,2926,3.09,2927,3.09,2928,3.09,2929,3.09,2930,3.09]],["title/components/WeatherStationSidebarComponent.html",[0,0.101,238,0.605]],["body/components/WeatherStationSidebarComponent.html",[0,0.204,1,0.627,2,0.699,3,0.116,4,0.088,5,0.726,6,0.726,7,0.726,8,0.676,9,0.088,13,0.28,14,0.701,15,1.072,21,0.819,22,0.964,24,0.726,25,1.288,26,1.148,27,0.882,28,0.85,30,0.85,32,0.377,33,0.949,34,1.383,36,0.758,40,1.033,42,1.756,43,0.766,44,0.728,48,0.753,50,0.915,51,0.915,52,0.726,53,0.013,54,0.552,55,0.852,56,0.779,57,1.878,59,0.559,65,1.473,72,0.682,82,1.171,91,0.651,101,0.24,102,1.328,103,0.131,106,0.779,107,0.116,108,0.034,109,0.882,115,0.949,118,2.135,120,1.171,125,1.434,127,2.045,128,1.058,131,1.058,132,1.253,133,1.732,136,1.296,139,2.377,140,1.296,145,2.543,147,0.415,148,0.984,149,0.984,150,0.726,151,1.196,152,0.726,153,0.984,154,0.627,155,0.726,156,0.604,157,0.726,158,0.627,159,1.116,160,0.581,161,0.984,162,0.627,163,0.726,164,0.627,165,0.726,166,0.627,167,0.984,168,0.627,169,0.984,170,0.604,171,0.726,172,0.627,173,0.676,174,1.196,175,0.604,176,0.726,177,0.651,178,0.964,179,1.116,180,0.627,181,1.116,182,0.627,183,1.116,184,0.627,185,0.726,186,0.627,187,0.726,188,0.627,189,0.701,190,0.627,191,0.726,192,0.604,193,0.726,194,0.627,195,0.627,196,1.001,197,0.701,198,1.116,199,0.627,200,0.726,201,0.627,202,0.627,203,0.726,204,0.627,205,0.627,206,0.627,207,0.627,208,0.604,209,0.726,210,0.627,211,1.077,212,0.627,213,0.627,214,0.627,215,0.604,216,0.726,217,0.627,218,0.559,219,0.984,220,0.627,221,0.726,222,0.604,223,0.676,224,0.627,225,1.211,226,0.676,227,1.001,228,0.604,229,0.726,230,0.627,231,0.474,232,0.651,233,0.627,234,0.85,235,0.726,236,0.627,237,0.627,238,1.033,239,1.273,240,0.627,241,0.627,242,0.701,243,0.726,244,0.726,245,0.006,246,0.009,247,0.006,294,1.056,295,1.328,304,4.353,314,0.807,315,0.726,342,0.964,399,3.028,403,1.439,412,2.245,415,2.643,497,3.818,517,1.211,531,1.439,535,2.869,539,2.561,592,1.732,652,3.58,675,2.769,676,1.732,685,5.057,687,2.554,737,3.291,890,3.58,926,3.231,1324,2.021,1334,4.065,1374,3.45,1394,1.732,1406,3.2,1439,3.028,1440,5.057,1441,4.459,1453,4.459,1509,3.028,1512,3.291,1513,3.291,2731,4.36,2735,3.904,2736,4.33,2737,2.643,2743,2.493,2758,6.272,2774,5.59,2879,4.937,2903,3.644,2931,5.662,2932,4.179,2933,4.179,2934,4.179,2935,4.179,2936,4.179,2937,4.179,2938,4.179,2939,4.179,2940,4.179]],["title/components/WeatherSummaryComponent.html",[0,0.101,240,0.605]],["body/components/WeatherSummaryComponent.html",[0,0.19,1,0.628,2,0.7,3,0.116,4,0.088,5,0.727,6,0.727,7,0.727,8,0.676,9,0.088,13,0.318,14,0.701,15,1.143,21,0.819,22,0.965,24,0.727,25,1.288,26,1.148,27,0.883,28,0.851,30,0.851,32,0.378,33,0.95,34,1.383,36,0.758,40,1.034,43,0.793,44,0.729,48,0.737,50,0.916,51,0.916,52,0.985,53,0.013,54,0.592,55,0.816,56,1.057,57,1.954,59,0.56,72,0.609,83,3.044,91,1.001,93,2.902,95,2.663,101,0.269,103,0.131,106,1.057,107,0.116,108,0.02,109,1.073,110,1.254,116,0.727,120,1.329,125,1.059,128,1.435,131,1.059,132,2.157,136,1.297,137,1.607,147,0.416,148,0.985,149,0.985,150,0.727,151,1.197,152,0.727,153,0.985,154,0.628,155,0.727,156,0.605,157,0.727,158,0.628,159,1.116,160,0.788,161,0.985,162,0.628,163,0.727,164,0.628,165,0.727,166,0.628,167,0.985,168,0.628,169,0.985,170,0.605,171,0.727,172,0.628,173,0.676,174,1.197,175,0.605,176,0.727,177,0.652,178,0.965,179,1.116,180,0.628,181,1.116,182,0.628,183,1.116,184,0.628,185,0.727,186,0.628,187,0.727,188,0.628,189,0.701,190,0.628,191,0.727,192,0.605,193,0.727,194,0.628,195,0.628,196,1.001,197,0.701,198,1.116,199,0.628,200,0.727,201,0.628,202,0.628,203,0.727,204,0.628,205,0.628,206,0.628,207,0.628,208,0.605,209,0.727,210,0.628,211,1.077,212,0.628,213,0.628,214,0.628,215,0.605,216,0.727,217,0.628,218,0.56,219,0.985,220,0.628,221,0.727,222,0.605,223,0.676,224,0.628,225,1.213,226,0.676,227,1.001,228,0.605,229,0.727,230,0.628,231,0.782,232,0.652,233,0.628,234,0.851,235,0.727,236,0.628,237,0.628,238,0.628,239,0.628,240,1.034,241,0.628,242,0.701,243,0.727,244,0.727,245,0.006,246,0.009,247,0.006,285,1.059,295,1.488,342,1.081,393,2.248,394,2.176,403,1.441,509,1.391,535,1.669,539,2.563,545,3.475,553,3.38,571,3.226,624,1.254,652,2.646,675,2.77,676,1.734,731,2.545,926,1.879,929,1.549,1288,4.106,1310,4.063,1330,2.821,1331,2.821,1406,3.202,1409,1.669,1465,3.821,1473,3.686,1474,4.355,1475,4.717,1514,3.031,1515,3.821,1517,5.06,1518,4.463,1519,4.463,1522,4.463,1523,4.463,1525,4.463,1526,3.583,1527,5.375,1528,4.106,1529,2.545,1530,4.463,1535,3.031,1540,3.295,1964,3.648,2202,4.941,2731,4.287,2735,3.96,2737,2.646,2743,2.496,2771,5.975,2905,3.648,2941,5.666,2942,4.184,2943,4.184,2944,4.184,2945,4.184,2946,4.184,2947,4.184]],["title/components/WikiButtonComponent.html",[0,0.101,241,0.605]],["body/components/WikiButtonComponent.html",[0,0.193,1,0.676,2,0.735,3,0.125,4,0.094,5,0.782,6,0.782,7,0.782,8,0.728,9,0.094,12,3.262,13,0.223,14,1.378,15,0.86,16,4.312,17,3.55,18,3.763,21,0.86,22,1.001,24,0.782,25,1.292,26,1.151,27,0.927,28,0.894,29,5.25,30,0.894,31,4.687,32,0.406,36,0.796,38,5.586,40,1.065,41,4.782,42,1.846,43,0.796,44,0.857,48,0.733,50,0.962,51,0.962,53,0.013,54,0.511,55,0.533,59,0.602,72,0.672,73,1.867,74,1.317,76,2.374,77,3.763,78,3.471,79,1.317,91,0.927,95,2.467,96,4.687,101,0.157,102,1.231,103,0.141,107,0.125,108,0.021,115,0.755,125,1.688,126,1.866,127,3.262,128,1.14,129,2.022,131,1.507,132,1.349,133,1.866,134,2.847,135,1.666,136,1.526,137,2.286,138,4.687,139,2.203,140,1.396,142,2.306,143,2.419,144,2.022,145,2.022,146,3.035,147,0.447,148,1.034,149,1.034,150,0.782,151,1.232,152,0.782,153,1.034,154,0.676,155,0.782,156,0.651,157,0.782,158,0.676,159,1.158,160,0.626,161,1.034,162,0.676,163,0.782,164,0.676,165,0.782,166,0.676,167,1.034,168,0.676,169,1.034,170,0.651,171,0.782,172,0.676,173,0.728,174,1.232,175,0.651,176,0.782,177,0.702,178,1.001,179,1.158,180,0.676,181,1.158,182,0.676,183,1.158,184,0.676,185,0.782,186,0.676,187,0.782,188,0.676,189,0.755,190,0.676,191,0.782,192,0.651,193,0.782,194,0.676,195,0.676,196,1.026,197,0.755,198,1.158,199,0.676,200,0.782,201,0.676,202,0.676,203,0.782,204,0.676,205,0.676,206,0.676,207,0.676,208,0.651,209,0.782,210,0.676,211,1.118,212,0.676,213,0.676,214,0.676,215,0.651,216,0.782,217,0.676,218,0.602,219,1.034,220,0.676,221,0.782,222,0.651,223,0.728,224,0.676,225,1.134,226,0.728,227,1.039,228,0.651,229,0.782,230,0.676,231,0.511,232,0.702,233,0.676,234,0.894,235,0.782,236,0.676,237,0.676,238,0.676,239,0.676,240,0.676,241,1.065,242,1.378,243,0.782,244,0.782,245,0.007,246,0.009,247,0.007,276,5.967,342,0.894,409,2.203,440,2.374,459,2.481,681,4.485,933,2.306,968,4.687,1157,5.189,2130,3.545,2513,3.925,2515,3.925,2533,5.189,2948,6.606,2949,5.951,2950,4.501,2951,5.951,2952,6.666,2953,4.501,2954,4.501,2955,4.501]],["title/coverage.html",[2956,4.816]],["body/coverage.html",[0,0.214,1,0.574,9,0.08,10,5.231,11,3.013,12,4.442,35,2.055,43,0.38,53,0.013,55,0.453,108,0.035,154,0.574,156,0.553,158,0.574,160,0.532,162,0.574,164,0.574,166,0.574,168,0.574,170,0.553,172,0.574,175,0.553,177,0.596,180,0.574,182,0.574,184,0.574,186,0.574,188,0.574,190,0.574,192,0.553,194,0.574,195,0.574,199,0.574,201,0.574,202,0.574,204,0.574,206,0.574,208,0.553,210,0.574,212,0.574,213,0.574,214,0.574,215,0.553,217,0.574,220,0.574,222,0.553,224,0.574,226,0.861,227,1.125,228,0.553,230,0.574,231,0.605,232,0.596,233,0.574,234,0.996,236,0.574,237,0.574,238,0.574,239,0.8,240,0.574,241,0.574,245,0.006,246,0.008,247,0.006,275,3.013,276,3.013,277,4.442,291,4.792,292,3.013,293,4.196,422,4.196,442,1.366,481,2.579,494,0.876,517,2.514,535,1.526,536,3.335,537,3.335,558,2.4,568,3.013,569,3.335,571,1.792,607,3.013,608,3.335,625,2.772,650,2.772,651,4.829,675,1.318,677,2.772,681,2.419,849,3.013,850,3.335,885,3.013,886,4.646,916,2.495,923,4.134,927,2.055,928,3.335,929,1.416,930,2.419,932,1.792,935,2.055,1038,1.792,1185,3.013,1186,3.335,1202,5.398,1253,3.335,1296,4.804,1297,3.013,1298,3.013,1299,4.471,1308,2.162,1332,3.335,1360,3.335,1362,3.013,1369,3.013,1372,3.335,1411,3.335,1439,4.442,1473,1.959,1514,4.442,1542,3.335,1550,2.162,1722,3.013,1729,3.697,1735,2.772,1738,2.772,1753,2.772,1755,3.335,1756,3.335,1794,3.335,1906,3.335,1914,3.335,1959,3.013,1960,3.335,1984,3.335,1985,3.335,2066,3.013,2067,3.335,2099,3.335,2131,3.335,2193,3.335,2208,2.579,2212,3.335,2235,3.869,2236,4.058,2404,3.335,2405,3.013,2418,3.335,2439,3.335,2501,3.013,2506,3.335,2517,3.335,2551,3.335,2552,4.196,2581,3.335,2587,3.178,2588,3.013,2590,4.646,2721,4.196,2731,4.269,2732,4.193,2733,4.134,2735,1.872,2745,3.335,2771,3.013,2772,3.335,2774,3.861,2775,3.013,2777,3.335,2799,3.335,2854,3.335,2948,3.335,2956,3.335,2957,3.825,2958,3.825,2959,7.554,2960,3.825,2961,6.971,2962,7.406,2963,5.328,2964,3.825,2965,8.554,2966,3.825,2967,3.825,2968,3.825,2969,3.825,2970,6.971,2971,6.63,2972,6.63,2973,5.328,2974,3.825,2975,6.131,2976,6.131,2977,7.219,2978,7.554,2979,3.825,2980,3.825,2981,5.328,2982,3.825,2983,3.825,2984,3.825,2985,3.825,2986,6.63,2987,3.825,2988,3.335,2989,3.825,2990,6.971,2991,3.825,2992,7.406,2993,3.825,2994,3.825,2995,3.825,2996,6.131,2997,3.825,2998,3.825,2999,5.328,3000,6.131,3001,5.328,3002,5.328,3003,3.825,3004,6.131,3005,7.672,3006,3.825,3007,3.825,3008,3.825,3009,3.825,3010,3.825,3011,3.825,3012,3.825,3013,3.825,3014,3.825,3015,3.825,3016,7.406,3017,3.825,3018,3.825,3019,3.825,3020,3.825,3021,3.825,3022,3.825,3023,3.825,3024,3.825,3025,3.825,3026,3.825,3027,3.825]],["title/dependencies.html",[251,1.359,3028,3.353]],["body/dependencies.html",[53,0.013,103,0.193,245,0.01,246,0.011,247,0.01,251,1.73,253,3.006,271,2.664,281,3.685,283,3.896,284,3.491,674,2.775,921,5.386,922,5.386,1089,4.865,1254,4.865,1258,4.165,1616,4.476,1619,5.577,1620,4.889,1622,3.685,1832,4.165,2065,5.386,2401,4.865,2586,5.386,2770,4.865,3029,6.177,3030,8.421,3031,6.177,3032,7.251,3033,6.177,3034,7.251,3035,6.177,3036,6.177,3037,6.177,3038,6.177,3039,6.177,3040,6.177,3041,6.177,3042,6.177,3043,6.177,3044,6.177,3045,6.177,3046,6.177,3047,6.177,3048,6.177,3049,6.177,3050,6.177,3051,6.177,3052,6.177,3053,6.177,3054,6.177,3055,6.177]],["title/miscellaneous/enumerations.html",[3056,2.924,3057,4.231]],["body/miscellaneous/enumerations.html",[32,0.559,43,0.615,53,0.013,120,1.593,245,0.01,246,0.011,247,0.01,315,1.49,358,4.102,361,2.131,384,3.26,463,2.389,488,2.565,489,2.565,490,2.565,491,2.565,492,2.377,493,2.468,518,2.899,596,3.26,717,4.874,803,2.473,925,3.608,994,4.874,1098,3.26,1248,3.028,2230,3.552,2365,3.028,2366,3.325,2378,3.028,2717,5.396,2988,5.396,3056,5.396,3057,5.396,3058,7.702,3059,7.702,3060,7.258,3061,6.188,3062,6.188,3063,6.188,3064,6.188,3065,6.188]],["title/index.html",[32,0.303,1390,2.43,3066,2.924]],["body/index.html",[0,0.188,4,0.122,26,0.779,53,0.011,54,0.5,84,5.512,245,0.009,246,0.011,247,0.009,266,2.236,285,1.972,294,1.452,324,3.111,350,1.63,460,4.584,465,2.155,473,3.289,494,1.332,633,3.924,680,2.883,681,4.925,791,5.773,892,4.584,923,3.924,1166,4.584,1219,4.217,1258,5.517,1395,4.584,1413,3.681,1568,4.217,1820,5.075,1821,5.075,1832,4.719,1907,4.584,2025,4.584,2088,5.075,2153,4.584,2319,3.127,2365,2.848,2419,5.075,2678,5.075,2686,5.075,3067,5.82,3068,7.505,3069,5.82,3070,7.787,3071,6.103,3072,5.82,3073,6.999,3074,5.82,3075,5.82,3076,5.82,3077,5.82,3078,5.82,3079,5.82,3080,5.82,3081,5.82,3082,5.82,3083,5.82,3084,5.82,3085,5.82,3086,5.82,3087,6.946,3088,6.999,3089,7.967,3090,7.505,3091,6.999,3092,5.82,3093,5.82,3094,5.075,3095,5.82,3096,7.134,3097,5.82,3098,5.82,3099,5.82,3100,5.82,3101,5.82,3102,7.505,3103,5.82,3104,5.82,3105,5.82,3106,5.82,3107,5.82,3108,5.82,3109,6.999,3110,6.999,3111,7.787,3112,6.103,3113,6.999,3114,5.82,3115,7.787,3116,5.82,3117,5.82,3118,5.82,3119,5.82,3120,5.82,3121,7.505,3122,5.82]],["title/license.html",[1390,2.43,3066,2.924,3123,2.924]],["body/license.html",[4,0.161,9,0.085,15,0.915,17,2.421,34,1.492,48,0.551,52,0.705,53,0.009,61,3.311,64,2.294,65,1.573,70,4.024,77,2.567,108,0.019,120,1.148,196,0.88,231,0.772,245,0.006,246,0.009,247,0.006,324,3.048,337,3.137,341,2.941,384,3.442,472,1.986,494,1.448,512,1.682,518,3.186,546,2.941,561,3.539,596,1.823,609,5.751,610,3.071,623,4,637,6.209,658,2.394,694,5.927,698,4.371,716,3.742,757,1.682,792,3.196,803,1.782,808,4.371,824,4.982,890,4.915,892,3.196,894,2.737,948,5.515,1029,2.737,1038,2.6,1055,2.941,1095,3.539,1153,3.196,1166,6.192,1248,1.986,1261,5.515,1263,6.41,1277,5.515,1333,4.371,1374,2.181,1400,4.927,1465,2.737,1497,3.539,1526,3.51,1543,3.495,1585,4.839,1715,4.583,1758,2.941,1763,2.737,1773,3.539,1825,3.196,1907,5.608,1945,3.539,2025,3.196,2085,6.192,2153,6.251,2185,5.356,2230,2.716,2252,2.181,2313,3.24,2333,2.181,2337,2.181,2351,2.079,2587,3.773,2683,4.839,2702,3.539,2825,4.839,2901,3.539,3071,7.336,3087,3.539,3094,4.839,3096,3.539,3112,3.539,3123,7.312,3124,8.316,3125,7.772,3126,4.059,3127,4.059,3128,5.55,3129,6.325,3130,5.55,3131,6.8,3132,6.8,3133,6.8,3134,4.059,3135,4.059,3136,4.059,3137,4.059,3138,4.059,3139,5.55,3140,6.8,3141,4.059,3142,4.059,3143,7.663,3144,5.55,3145,4.059,3146,4.059,3147,5.55,3148,4.059,3149,4.059,3150,6.8,3151,7.862,3152,8.486,3153,7.121,3154,8.37,3155,4.059,3156,8.316,3157,4.059,3158,5.55,3159,4.059,3160,4.059,3161,4.059,3162,5.55,3163,4.059,3164,5.55,3165,4.059,3166,4.059,3167,4.059,3168,7.121,3169,6.325,3170,5.55,3171,5.55,3172,5.55,3173,4.059,3174,4.059,3175,5.55,3176,4.059,3177,4.059,3178,4.059,3179,4.059,3180,7.352,3181,4.059,3182,4.059,3183,4.059,3184,6.325,3185,7.121,3186,5.55,3187,6.8,3188,4.059,3189,4.059,3190,4.059,3191,4.059,3192,4.059,3193,4.059,3194,4.059,3195,4.059,3196,4.059,3197,4.059,3198,4.059,3199,4.059,3200,4.059,3201,4.059,3202,4.059,3203,4.059,3204,7.121,3205,4.059,3206,4.059,3207,4.059,3208,6.325,3209,4.059,3210,4.059,3211,4.059,3212,4.059,3213,4.059,3214,4.059,3215,4.059,3216,4.059,3217,4.059,3218,4.059,3219,6.325,3220,6.325,3221,6.8,3222,6.8,3223,4.059,3224,4.059,3225,5.55,3226,4.059,3227,4.059,3228,4.059,3229,4.059,3230,4.059,3231,4.059,3232,4.059,3233,5.55,3234,4.059,3235,4.059,3236,4.059,3237,4.059,3238,6.325,3239,4.059,3240,4.059,3241,4.059,3242,4.059,3243,5.55,3244,5.55,3245,5.55,3246,4.059,3247,4.059,3248,4.059,3249,4.059,3250,4.059,3251,6.325,3252,4.059,3253,4.059,3254,4.059,3255,4.059,3256,4.059,3257,4.059,3258,4.059,3259,6.325,3260,5.55,3261,4.059,3262,4.059,3263,5.55,3264,4.059,3265,4.059,3266,4.059,3267,4.059,3268,5.55,3269,4.059,3270,4.059,3271,4.059,3272,4.059,3273,4.059,3274,4.059,3275,4.059,3276,4.059,3277,5.55,3278,4.059,3279,4.059,3280,4.059,3281,6.325,3282,4.059,3283,5.55,3284,4.059,3285,4.059,3286,4.059,3287,4.059,3288,4.059,3289,4.059,3290,4.059]],["title/modules.html",[250,2.121]],["body/modules.html",[53,0.011,245,0.01,246,0.011,247,0.01,249,3.556,250,2.417,261,3.08,262,2.609,263,2.948,298,7.427,473,3.556,1350,3.754,1356,3.754,1357,3.98,1620,5.743,1689,4.56,1694,4.243,1695,4.243,1696,3.98,1697,4.243,1698,3.754,1721,4.243,2788,7.427,3291,8.535,3292,6.293]],["title/overview.html",[207,0.829]],["body/overview.html",[1,1.115,2,0.476,35,3.309,53,0.013,147,0.383,154,1.115,156,0.891,158,1.115,160,1.033,162,1.115,164,1.115,166,1.115,168,1.115,170,0.891,172,0.925,175,0.891,177,0.96,180,0.925,182,1.115,184,1.115,186,1.115,188,1.115,190,0.925,192,0.891,194,1.115,195,1.115,199,1.115,201,1.115,202,0.925,204,1.115,206,1.115,207,0.579,208,1.073,210,1.115,212,1.115,213,1.115,214,1.115,215,1.073,217,1.115,220,1.115,222,0.891,224,0.925,228,0.891,230,0.925,232,0.96,233,0.925,236,0.925,237,0.925,238,0.925,240,1.115,241,1.115,245,0.006,246,0.008,247,0.006,248,0.945,249,4.78,250,1.482,251,1.081,252,1.6,253,1.6,254,1.664,255,1.6,256,3.365,257,3.365,258,3.365,259,3.365,260,3.365,261,3.995,262,3.313,263,3.974,264,2.312,265,1.664,266,1.482,345,1.808,596,1.733,675,2.122,803,1.239,930,3.895,932,2.886,1236,3.884,1308,3.481,1350,5.015,1351,3.365,1352,3.365,1353,3.365,1354,3.365,1355,3.365,1356,4.643,1357,5.163,1371,1.976,1473,3.155,1550,3.481,1689,6.091,1690,3.365,1691,3.365,1692,3.365,1693,3.365,1694,5.303,1695,5.006,1696,5.054,1697,5.579,1698,5.051,1717,3.365,1718,3.365,1719,3.365,1720,3.365,1721,5.66,1725,2.796,1753,2.796,1789,3.365,1790,3.365,1948,3.365,1949,3.365,1954,3.365,1955,3.365,1957,3.365,2204,3.365,2205,3.365,2206,3.365,2207,3.365,2208,4.153,2365,1.888,2395,3.365,2396,3.365,2398,3.365,2430,3.365,2431,3.365,2433,3.365,2494,3.365,2495,3.365,2497,3.365,2574,3.365,2575,3.365,2577,3.365,2589,3.039,2735,3.014,2763,3.365,2764,3.365,2766,3.365,2767,3.365,3293,3.859,3294,3.859]],["title/routes.html",[1725,4.002]],["body/routes.html",[53,0.012,245,0.01,246,0.012,247,0.01,1725,4.859]]],"invertedIndex":[["",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["0.0",{"_index":1241,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["0.08",{"_index":420,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["0.12",{"_index":1500,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["0.24em",{"_index":532,"title":{},"body":{"components/AlarmComponent.html":{}}}],["0.2em",{"_index":524,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["0.2rem",{"_index":2928,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["0.375em",{"_index":2191,"title":{},"body":{"components/LoginComponent.html":{},"components/TabularViewComponent.html":{}}}],["0.5s",{"_index":1276,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["0.75",{"_index":1251,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["0.8*$cem",{"_index":874,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["0.8.29",{"_index":3055,"title":{},"body":{"dependencies.html":{}}}],["0.85",{"_index":1285,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["0.svg",{"_index":2116,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["00:15:00",{"_index":2602,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["00:30:00",{"_index":2605,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["01:00:00",{"_index":2607,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["02:00:00",{"_index":2609,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["06:00:00",{"_index":2611,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["0px",{"_index":409,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["1",{"_index":803,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["1).subscribe",{"_index":2696,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["1*$cem",{"_index":505,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1.0",{"_index":2233,"title":{},"body":{"injectables/MapService.html":{}}}],["1.0*$cem",{"_index":875,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["1.1.8",{"_index":3042,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":3052,"title":{},"body":{"dependencies.html":{}}}],["1.2*$cem",{"_index":506,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1.4*$cem",{"_index":876,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["1.4.5",{"_index":3072,"title":{},"body":{"index.html":{}}}],["1.45em",{"_index":2413,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["1.6*$cem",{"_index":507,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1.svg",{"_index":2118,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["1/1",{"_index":2965,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1236,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/CdbService.html":{},"overview.html":{}}}],["10/10",{"_index":3003,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":517,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["100%{opacity",{"_index":1252,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["1000",{"_index":1037,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["106",{"_index":595,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["10px",{"_index":531,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["11",{"_index":1947,"title":{},"body":{"injectables/CdbService.html":{}}}],["11*$status",{"_index":534,"title":{},"body":{"components/AlarmComponent.html":{}}}],["11.1.9",{"_index":3050,"title":{},"body":{"dependencies.html":{}}}],["11px",{"_index":1279,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{}}}],["12",{"_index":418,"title":{},"body":{"components/AlarmCardComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["12/12",{"_index":2972,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":641,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["1267252440000",{"_index":2358,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["12:00:00",{"_index":2612,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["12px",{"_index":593,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["13/13",{"_index":2970,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":2203,"title":{},"body":{"components/MapComponent.html":{}}}],["14",{"_index":3293,"title":{},"body":{"overview.html":{}}}],["14/14",{"_index":2975,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":1512,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["15",{"_index":2603,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["150px",{"_index":2416,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["16",{"_index":417,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["16px",{"_index":640,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["170px",{"_index":2417,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["18/18",{"_index":2984,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":2130,"title":{},"body":{"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["19*$lg",{"_index":529,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$md",{"_index":527,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$sm",{"_index":525,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$status",{"_index":533,"title":{},"body":{"components/AlarmComponent.html":{}}}],["19*$xs",{"_index":522,"title":{},"body":{"components/AlarmComponent.html":{}}}],["1em",{"_index":879,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/OverviewCardComponent.html":{}}}],["1px",{"_index":137,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["2",{"_index":596,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["2.0.8",{"_index":3044,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":3049,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":3041,"title":{},"body":{"dependencies.html":{}}}],["2.75px",{"_index":1688,"title":{},"body":{"components/AppComponent.html":{}}}],["2.svg",{"_index":2121,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["20",{"_index":316,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["200",{"_index":1087,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["2007",{"_index":3128,"title":{},"body":{"license.html":{}}}],["200px",{"_index":2930,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["201",{"_index":1082,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["20pt",{"_index":2384,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["20px",{"_index":592,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["21/21",{"_index":2999,"title":{},"body":{"coverage.html":{}}}],["21px",{"_index":141,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["22/22",{"_index":2985,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":3023,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":134,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["25",{"_index":1506,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["25/25",{"_index":2974,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":1499,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["25em",{"_index":1687,"title":{},"body":{"components/AppComponent.html":{}}}],["25px",{"_index":1490,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["26/26",{"_index":2989,"title":{},"body":{"coverage.html":{}}}],["273d54",{"_index":2386,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["28/28",{"_index":2960,"title":{},"body":{"coverage.html":{}}}],["28px",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["29",{"_index":3126,"title":{},"body":{"license.html":{}}}],["2px",{"_index":130,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["2s",{"_index":1244,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["3",{"_index":384,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["3.0*$cem",{"_index":508,"title":{},"body":{"components/AlarmComponent.html":{}}}],["3.0.0",{"_index":3046,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":3048,"title":{},"body":{"dependencies.html":{}}}],["3.svg",{"_index":2123,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["3/3",{"_index":2962,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2606,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["300",{"_index":2272,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["30px",{"_index":884,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["31/31",{"_index":2968,"title":{},"body":{"coverage.html":{}}}],["314963",{"_index":2387,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["32px",{"_index":138,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["330px",{"_index":648,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["34/34",{"_index":3015,"title":{},"body":{"coverage.html":{}}}],["34px",{"_index":2192,"title":{},"body":{"components/LoginComponent.html":{}}}],["35",{"_index":594,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["350px",{"_index":1280,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["35px",{"_index":1670,"title":{},"body":{"components/AppComponent.html":{}}}],["36/36",{"_index":3022,"title":{},"body":{"coverage.html":{}}}],["37.27px",{"_index":2929,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["37/37",{"_index":2969,"title":{},"body":{"coverage.html":{}}}],["380px",{"_index":1292,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["38px",{"_index":1238,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["39/39",{"_index":2987,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":643,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["4",{"_index":2230,"title":{},"body":{"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["4.0.2",{"_index":3038,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":3039,"title":{},"body":{"dependencies.html":{}}}],["4.svg",{"_index":2126,"title":{},"body":{"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["4/4",{"_index":2961,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1508,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["400",{"_index":2155,"title":{},"body":{"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["400px",{"_index":649,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["403",{"_index":2710,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["40px",{"_index":881,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["44px",{"_index":1678,"title":{},"body":{"components/AppComponent.html":{}}}],["450px",{"_index":638,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["45px",{"_index":2429,"title":{},"body":{"components/OverviewComponent.html":{}}}],["46",{"_index":3294,"title":{},"body":{"overview.html":{}}}],["46px",{"_index":2411,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["48px",{"_index":1237,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["4d0",{"_index":3256,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":3257,"title":{},"body":{"license.html":{}}}],["4px",{"_index":127,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["5",{"_index":1248,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["5/5",{"_index":2976,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1250,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["500",{"_index":2269,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["5000",{"_index":2921,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["500px",{"_index":1281,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["50px",{"_index":1513,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["56px",{"_index":2412,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["580px",{"_index":2190,"title":{},"body":{"components/LoginComponent.html":{}}}],["5px",{"_index":1505,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["6",{"_index":518,"title":{},"body":{"components/AlarmComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["6.4.0",{"_index":3053,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2971,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1510,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{}}}],["600",{"_index":2267,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["60px",{"_index":399,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["62px",{"_index":1496,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["64px",{"_index":1672,"title":{},"body":{"components/AppComponent.html":{}}}],["68px",{"_index":1239,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["6px",{"_index":510,"title":{},"body":{"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{}}}],["7",{"_index":2365,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["7.0.0",{"_index":3034,"title":{},"body":{"dependencies.html":{}}}],["7.2.3",{"_index":3030,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":3032,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2986,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1686,"title":{},"body":{"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["70px",{"_index":1673,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewCardComponent.html":{}}}],["725rem",{"_index":1682,"title":{},"body":{"components/AppComponent.html":{}}}],["74",{"_index":1675,"title":{},"body":{"components/AppComponent.html":{}}}],["75",{"_index":1293,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["78px",{"_index":883,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["7px",{"_index":1685,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":2366,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["8*$lg",{"_index":530,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8*$md",{"_index":528,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8*$sm",{"_index":526,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8*$xs",{"_index":523,"title":{},"body":{"components/AlarmComponent.html":{}}}],["8/8",{"_index":2990,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":2264,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["84.5px",{"_index":400,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["86px",{"_index":1677,"title":{},"body":{"components/AppComponent.html":{}}}],["9/9",{"_index":2959,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":644,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["900",{"_index":2262,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["960px",{"_index":1349,"title":{},"body":{"components/AntennasComponent.html":{}}}],["99",{"_index":1294,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["9px",{"_index":1684,"title":{},"body":{"components/AppComponent.html":{}}}],["_",{"_index":767,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_blank",{"_index":2955,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["_getsubtree(alarm",{"_index":778,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_initialized",{"_index":1375,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["_nodedata",{"_index":768,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expandable",{"_index":769,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":771,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["a.mat",{"_index":1676,"title":{},"body":{"components/AppComponent.html":{}}}],["a100",{"_index":2281,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["a400",{"_index":2279,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["a700",{"_index":2277,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["absolute",{"_index":415,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["accent",{"_index":2240,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["acceptance",{"_index":3289,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":546,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"license.html":{}}}],["accompany",{"_index":3222,"title":{},"body":{"license.html":{}}}],["accompanying",{"_index":3267,"title":{},"body":{"license.html":{}}}],["according",{"_index":2345,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["account_circle",{"_index":1655,"title":{},"body":{"components/AppComponent.html":{}}}],["accounts",{"_index":1561,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["ack",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack'},{'name",{"_index":155,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ack/ack.component",{"_index":272,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ackbuttoncomponent",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackcomponent",{"_index":154,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acklist",{"_index":690,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["acknowledge",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["acknowledge/:alarmid",{"_index":1748,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["acknowledgealarms(alarms_ids",{"_index":1057,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["acknowledged",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{}}}],["acknowledgement",{"_index":331,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["acknowledges",{"_index":1053,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["acks",{"_index":1067,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["acktreecomponent",{"_index":156,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":328,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["actions",{"_index":1598,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherSidebarComponent.html":{}}}],["actions/ack/ack.component",{"_index":1727,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/actions.module",{"_index":1364,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["actions/shelve/shelve.component",{"_index":1733,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["actions/sidenav.service",{"_index":1617,"title":{},"body":{"components/AppComponent.html":{}}}],["actions_storage_name",{"_index":1796,"title":{},"body":{"injectables/AuthService.html":{}}}],["actionsmodule",{"_index":249,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["actionssidenav",{"_index":1546,"title":{},"body":{"components/AppComponent.html":{}}}],["actionssidenavservice",{"_index":1547,"title":{},"body":{"components/AppComponent.html":{}}}],["activated",{"_index":469,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"guards/AuthLoginGuard.html":{}}}],["activatedroute",{"_index":2596,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["activatedroutesnapshot",{"_index":1765,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["active",{"_index":1679,"title":{},"body":{"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["actual",{"_index":2593,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["actual_component",{"_index":244,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["add",{"_index":1105,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["add_or_update_alarm(alarm",{"_index":1115,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["adding",{"_index":2010,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["additional",{"_index":1261,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"license.html":{}}}],["address",{"_index":3273,"title":{},"body":{"license.html":{}}}],["adds",{"_index":1113,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["addsvgicon",{"_index":1627,"title":{},"body":{"components/AppComponent.html":{}}}],["adjustments",{"_index":2427,"title":{},"body":{"components/OverviewComponent.html":{}}}],["administrator",{"_index":2682,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["afterviewinit",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["again",{"_index":2679,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["agile",{"_index":2334,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm",{"_index":43,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["alarm'},{'name",{"_index":161,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm.ack",{"_index":1129,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.acknowledge",{"_index":1062,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.alarmvalidity",{"_index":2349,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.alarmvalue",{"_index":2347,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.asalarm",{"_index":2355,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.asalarm(obj",{"_index":1102,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.component.html",{"_index":428,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.scss",{"_index":427,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.core_id",{"_index":1118,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.currentvalue.core_id",{"_index":743,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.currentvalue.dependencies.sort().join",{"_index":747,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies",{"_index":781,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{}}}],["alarm.dependencies.length",{"_index":779,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.operationalmode",{"_index":2348,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.previousvalue.core_id",{"_index":741,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.previousvalue.dependencies.sort().join",{"_index":745,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.properties",{"_index":2373,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarm.service",{"_index":1951,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.shelve",{"_index":1084,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.shouldrepeat",{"_index":1134,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.sound",{"_index":1127,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.unshelve",{"_index":1088,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.validity",{"_index":1169,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm.value",{"_index":1126,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm/alarm.component",{"_index":1224,"title":{},"body":{"components/AlarmTileComponent.html":{},"modules/SharedModule.html":{}}}],["alarm?.core_id",{"_index":630,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm?.description",{"_index":631,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm?.formattedproperties",{"_index":636,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm?.timestamp",{"_index":634,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["alarm_id",{"_index":540,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["alarm_ids",{"_index":1054,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_1.mp3",{"_index":901,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_2.mp3",{"_index":903,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_3.mp3",{"_index":905,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_sound_4.mp3",{"_index":907,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarm_types",{"_index":3017,"title":{},"body":{"coverage.html":{}}}],["alarmcardcomponent",{"_index":158,"title":{"components/AlarmCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmchangestream",{"_index":961,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmchangesubscription",{"_index":2626,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alarmcomponent",{"_index":160,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmconfig",{"_index":535,"title":{"classes/AlarmConfig.html":{}},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["alarmconfig.placemark",{"_index":1483,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmdataavailable",{"_index":2650,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alarmheadercomponent",{"_index":162,"title":{"components/AlarmHeaderComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmiconspriorityset",{"_index":2555,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmiconsset",{"_index":2370,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["alarmiconsunreliableset",{"_index":2371,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["alarmid",{"_index":2632,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["alarmimageset",{"_index":442,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["alarminfocomponent",{"_index":164,"title":{"components/AlarmInfoComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmitemflatnode",{"_index":650,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnode",{"_index":677,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(node",{"_index":836,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmlabel",{"_index":2352,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["alarmlabelcomponent",{"_index":166,"title":{"components/AlarmLabelComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmname",{"_index":378,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarmname.length",{"_index":381,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarmname.substring(0",{"_index":383,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarmnamemaxsize",{"_index":308,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["alarms",{"_index":295,"title":{},"body":{"components/AlarmCardComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["alarms_ids",{"_index":1058,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsarray",{"_index":958,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmservice",{"_index":675,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservice.countbyview",{"_index":1659,"title":{},"body":{"components/AppComponent.html":{}}}],["alarmservice.getname(this.selectedantenna",{"_index":1485,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["alarmservice.html#playalarmsound",{"_index":1162,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsindexes",{"_index":960,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmslist",{"_index":1106,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds",{"_index":885,"title":{"classes/AlarmSounds.html":{}},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["alarmsounds.getsoundsource(sound",{"_index":1145,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type1",{"_index":938,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type2",{"_index":939,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type3",{"_index":940,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmsounds.type4",{"_index":941,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["alarmstoackfromselection",{"_index":688,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtags",{"_index":2556,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["alarmtilecomponent",{"_index":168,"title":{"components/AlarmTileComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmtooltipcomponent",{"_index":170,"title":{"components/AlarmTooltipComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmvalue",{"_index":385,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["alarm}s",{"_index":565,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["align",{"_index":515,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["allow",{"_index":970,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["allowed",{"_index":1758,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["allowed_actions",{"_index":1840,"title":{},"body":{"injectables/AuthService.html":{}}}],["allowedshelve",{"_index":2660,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["allowedunshelve",{"_index":2662,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["alma",{"_index":2189,"title":{},"body":{"components/LoginComponent.html":{}}}],["already",{"_index":1465,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["and/or",{"_index":3175,"title":{},"body":{"license.html":{}}}],["angular",{"_index":680,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":3029,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3031,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":104,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["angular/cdk/collections",{"_index":666,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/cdk/tree",{"_index":668,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":3093,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":271,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1706,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compiler",{"_index":3033,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":2065,"title":{},"body":{"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":281,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["angular/http",{"_index":3036,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1616,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":2041,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":2044,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":2051,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/expansion",{"_index":2060,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/form",{"_index":2053,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1618,"title":{},"body":{"components/AppComponent.html":{},"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":2027,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":2048,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/menu",{"_index":2039,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/paginator",{"_index":2029,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":2031,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/select",{"_index":2056,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":2046,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slide",{"_index":2033,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/snack",{"_index":2062,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":2035,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/table",{"_index":2037,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":2058,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tree",{"_index":671,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":1619,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1622,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["animation",{"_index":1204,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["another",{"_index":1157,"title":{},"body":{"classes/AlarmSounds.html":{},"components/WikiButtonComponent.html":{}}}],["antenna",{"_index":173,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antenna.svg",{"_index":1632,"title":{},"body":{"components/AppComponent.html":{}}}],["antennaclicked",{"_index":1449,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["antennaimageset",{"_index":1376,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennaimageunreliableset",{"_index":1377,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennamarkercomponent",{"_index":172,"title":{"components/AntennaMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennas",{"_index":178,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas'},{'name",{"_index":176,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["antennas.component.html",{"_index":1338,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.component.scss",{"_index":1337,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennas.join",{"_index":2907,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["antennas.service",{"_index":1367,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["antennas/antennas.component",{"_index":1359,"title":{},"body":{"modules/AntennasModule.html":{}}}],["antennas/antennas.module",{"_index":1707,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["antennas/antennas.service",{"_index":1327,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["antennas/antennas/antennas.component",{"_index":1728,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["antennascomponent",{"_index":175,"title":{"components/AntennasComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasconfig",{"_index":1378,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennasmap",{"_index":1336,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennasmapcomponent",{"_index":177,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennasmapname",{"_index":1379,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennasmodule",{"_index":1350,"title":{"modules/AntennasModule.html":{}},"body":{"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["antennasservice",{"_index":1308,"title":{"injectables/AntennasService.html":{}},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassettings",{"_index":1411,"title":{},"body":{"injectables/AntennasService.html":{},"coverage.html":{}}}],["antennassettings.mapkey",{"_index":1401,"title":{},"body":{"injectables/AntennasService.html":{}}}],["antennassidebar",{"_index":1335,"title":{},"body":{"components/AntennasComponent.html":{}}}],["antennassidebarcomponent",{"_index":180,"title":{"components/AntennasSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummarycomponent",{"_index":182,"title":{"components/AntennasSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["antennassummaryconfig",{"_index":1380,"title":{},"body":{"injectables/AntennasService.html":{}}}],["anything",{"_index":2585,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["api",{"_index":2630,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["app",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["app.component",{"_index":1714,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":1545,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":1544,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":1700,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":184,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":3205,"title":{},"body":{"license.html":{}}}],["application",{"_index":1543,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["application/json",{"_index":1863,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["applications",{"_index":3262,"title":{},"body":{"license.html":{}}}],["applies",{"_index":3280,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2702,"title":{},"body":{"interfaces/TimeoutOption.html":{},"license.html":{}}}],["applying",{"_index":1525,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["appmodule",{"_index":1689,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":1742,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodule",{"_index":1694,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":3189,"title":{},"body":{"license.html":{}}}],["array",{"_index":347,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["arrayindex",{"_index":959,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["arrays",{"_index":1516,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["artifacts",{"_index":3104,"title":{},"body":{"index.html":{}}}],["asiasio",{"_index":2074,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":2083,"title":{},"body":{"classes/Iasio.html":{}}}],["ask",{"_index":2631,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["assets",{"_index":929,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["assets.icons",{"_index":1431,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["assets.sounds",{"_index":937,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["assets/img/ias",{"_index":1629,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":1259,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["associate",{"_index":1312,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["associated",{"_index":66,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["asterisc",{"_index":2712,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["attempted",{"_index":1778,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["attributes",{"_index":495,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["audio",{"_index":891,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["audiofile",{"_index":912,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["auth",{"_index":2180,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.service",{"_index":1781,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth",{"_index":1739,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.module",{"_index":1710,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":936,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{}}}],["auth/login/login.component",{"_index":1741,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticated",{"_index":1587,"title":{},"body":{"components/AppComponent.html":{}}}],["authentication",{"_index":984,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["authloginguard",{"_index":1738,"title":{"guards/AuthLoginGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":1695,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":1763,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"license.html":{}}}],["authorized",{"_index":2724,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["authservice",{"_index":935,"title":{"injectables/AuthService.html":{}},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["auto",{"_index":142,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["automatically",{"_index":3100,"title":{},"body":{"index.html":{}}}],["auxiliary",{"_index":777,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{}}}],["available",{"_index":473,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"injectables/WeatherService.html":{},"index.html":{},"modules.html":{}}}],["availablecounters",{"_index":1647,"title":{},"body":{"components/AppComponent.html":{}}}],["availablecounters.indexof(navitemcounter",{"_index":1649,"title":{},"body":{"components/AppComponent.html":{}}}],["avoid",{"_index":967,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["axis",{"_index":1314,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["b",{"_index":3204,"title":{},"body":{"license.html":{}}}],["backend",{"_index":996,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurls",{"_index":927,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["backendurls.antennas_summary",{"_index":1424,"title":{},"body":{"injectables/AntennasService.html":{}}}],["backendurls.antennas_view",{"_index":1417,"title":{},"body":{"injectables/AntennasService.html":{}}}],["backendurls.cdb_ias",{"_index":1935,"title":{},"body":{"injectables/CdbService.html":{}}}],["backendurls.files_json",{"_index":1427,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["backendurls.health_summary",{"_index":1977,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["backendurls.pads_status",{"_index":2866,"title":{},"body":{"injectables/WeatherService.html":{}}}],["backendurls.shelve_regs_filter",{"_index":1074,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["backendurls.tickets_info",{"_index":1069,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["background",{"_index":597,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["backup",{"_index":226,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["backups",{"_index":2734,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{}}}],["badge",{"_index":414,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["badges",{"_index":329,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["bar",{"_index":2063,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["base",{"_index":2011,"title":{},"body":{"injectables/HttpClientService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["based",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["basic",{"_index":2239,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["before",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":918,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{}}}],["behaviorsubject(false",{"_index":956,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"injectables/WeatherService.html":{}}}],["behaviorsubject(null",{"_index":1854,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(true",{"_index":962,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["being",{"_index":1153,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["below",{"_index":3147,"title":{},"body":{"license.html":{}}}],["besides",{"_index":333,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["beta.23",{"_index":3035,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":2779,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["blink",{"_index":1243,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["blinking",{"_index":1217,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["block",{"_index":513,"title":{},"body":{"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/TabularViewComponent.html":{}}}],["blocked",{"_index":1768,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["blocks",{"_index":2719,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["blue",{"_index":360,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["body",{"_index":1662,"title":{},"body":{"components/AppComponent.html":{}}}],["bold",{"_index":421,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["boolean",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["bootstrap",{"_index":253,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":2401,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["border",{"_index":132,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["both",{"_index":1333,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"license.html":{}}}],["bottom",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["bottom:15px",{"_index":402,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["bound",{"_index":3183,"title":{},"body":{"license.html":{}}}],["box",{"_index":1663,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["branch",{"_index":3083,"title":{},"body":{"index.html":{}}}],["break",{"_index":1291,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["bred",{"_index":2341,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["breed",{"_index":2325,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["breeds",{"_index":2331,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["broadcast",{"_index":1925,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastrate",{"_index":1927,"title":{},"body":{"injectables/CdbService.html":{}}}],["broadcastthreshold",{"_index":1175,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{}}}],["broadcastthreshold).subscribe",{"_index":1183,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["browse",{"_index":3291,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1620,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":1704,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{}}}],["browseranimationsmodule",{"_index":1703,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{}}}],["browsermodule",{"_index":1702,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1666,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["bty",{"_index":2500,"title":{},"body":{"modules/SharedModule.html":{}}}],["build",{"_index":791,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["buildfiletree(value",{"_index":794,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["builds",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'name",{"_index":153,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component",{"_index":274,"title":{},"body":{"modules/ActionsModule.html":{}}}],["button.component.css",{"_index":29,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.ts",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":2949,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:19",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":2950,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:28",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:29",{"_index":2515,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.ts:36",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:37",{"_index":2513,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.ts:43",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:44",{"_index":2512,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:52",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:53",{"_index":2508,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:64",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:68",{"_index":2511,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:71",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:75",{"_index":2514,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"coverage.html":{}}}],["button/shelve",{"_index":275,"title":{},"body":{"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":276,"title":{},"body":{"modules/ActionsModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["buttonref",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["buttons",{"_index":197,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons'},{'name",{"_index":187,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["buttons.component.css",{"_index":1910,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons.component.html",{"_index":1911,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["buttons/buttons.component",{"_index":290,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buttonscomponent",{"_index":186,"title":{"components/ButtonsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["c",{"_index":3130,"title":{},"body":{"license.html":{}}}],["calc(100vh",{"_index":1671,"title":{},"body":{"components/AppComponent.html":{},"components/MapComponent.html":{}}}],["calculation",{"_index":2226,"title":{},"body":{"injectables/MapService.html":{}}}],["called",{"_index":3167,"title":{},"body":{"license.html":{}}}],["calling",{"_index":1161,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/LoginComponent.html":{}}}],["calls",{"_index":2701,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["can_shelve",{"_index":2362,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["canacknowledge",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["canactivate",{"_index":1746,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{}}}],["canactivate(next",{"_index":1764,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["canclose",{"_index":2519,"title":{},"body":{"injectables/SidenavService.html":{}}}],["cansend",{"_index":2659,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["cansound",{"_index":971,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["card",{"_index":300,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["card'},{'name",{"_index":159,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.component",{"_index":2438,"title":{},"body":{"modules/OverviewModule.html":{},"modules/SharedModule.html":{}}}],["card.component.html",{"_index":302,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card.component.scss",{"_index":301,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card.component.ts",{"_index":293,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:100",{"_index":356,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:111",{"_index":336,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:12",{"_index":2407,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:128",{"_index":349,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:18",{"_index":313,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/OverviewCardComponent.html":{}}}],["card.component.ts:24",{"_index":326,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:29",{"_index":317,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:34",{"_index":322,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:39",{"_index":312,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:49",{"_index":352,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:56",{"_index":343,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card.component.ts:92",{"_index":354,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["card/alarm",{"_index":292,"title":{},"body":{"components/AlarmCardComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["card/fixtures.ts",{"_index":2994,"title":{},"body":{"coverage.html":{}}}],["card/overview",{"_index":2405,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["card__header",{"_index":2381,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["cards",{"_index":296,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["case",{"_index":323,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{}}}],["catch",{"_index":1944,"title":{},"body":{"injectables/CdbService.html":{}}}],["catcherror",{"_index":1859,"title":{},"body":{"injectables/AuthService.html":{}}}],["category",{"_index":2372,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["cdb.service",{"_index":1953,"title":{},"body":{"modules/DataModule.html":{}}}],["cdbservice",{"_index":930,"title":{"injectables/CdbService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"coverage.html":{},"overview.html":{}}}],["cdbservice.html#getbroadcastrate",{"_index":1177,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cem",{"_index":504,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["center",{"_index":880,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["centos",{"_index":3075,"title":{},"body":{"index.html":{}}}],["centralize",{"_index":2440,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":3278,"title":{},"body":{"license.html":{}}}],["change",{"_index":633,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{},"index.html":{}}}],["changealarms(any",{"_index":992,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["changedalarm2",{"_index":3006,"title":{},"body":{"coverage.html":{}}}],["changedalarm5",{"_index":3007,"title":{},"body":{"coverage.html":{}}}],["changeloginstatus",{"_index":1802,"title":{},"body":{"injectables/AuthService.html":{}}}],["changeloginstatus(status",{"_index":1815,"title":{},"body":{"injectables/AuthService.html":{}}}],["changes",{"_index":732,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{}}}],["changes.selectedalarm",{"_index":739,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["changes.selectedalarm.previousvalue",{"_index":738,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["changeselectedstation",{"_index":2751,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changeselectedstation(selectedstation",{"_index":2753,"title":{},"body":{"components/WeatherComponent.html":{}}}],["changing",{"_index":3141,"title":{},"body":{"license.html":{}}}],["channels",{"_index":922,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["characters",{"_index":321,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["check",{"_index":465,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["check_request_and_reload",{"_index":2649,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["checkboxes",{"_index":679,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":710,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselection",{"_index":711,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklogin",{"_index":1760,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["checklogin(url",{"_index":1774,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["checks",{"_index":760,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{}}}],["chevron_left",{"_index":1484,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["child",{"_index":765,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm",{"_index":782,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childalarm.ack",{"_index":784,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["childid",{"_index":780,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":541,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{}}}],["chip",{"_index":2312,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["choice",{"_index":3208,"title":{},"body":{"license.html":{}}}],["choose",{"_index":3283,"title":{},"body":{"license.html":{}}}],["class",{"_index":108,"title":{"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"classes/Iasio.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["classes",{"_index":345,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"classes/Iasio.html":{},"overview.html":{}}}],["classification",{"_index":556,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["classify",{"_index":552,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["classname",{"_index":1578,"title":{},"body":{"components/AppComponent.html":{}}}],["clean",{"_index":2452,"title":{},"body":{"injectables/RoutingService.html":{}}}],["cleanactionoutlet",{"_index":2442,"title":{},"body":{"injectables/RoutingService.html":{}}}],["cleans",{"_index":2529,"title":{},"body":{"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["clear",{"_index":487,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["clear.svg",{"_index":1432,"title":{},"body":{"injectables/AntennasService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/WeatherService.html":{}}}],["clear_invalid",{"_index":2102,"title":{},"body":{"components/LegendComponent.html":{}}}],["clear_valid",{"_index":2103,"title":{},"body":{"components/LegendComponent.html":{}}}],["cleared",{"_index":3065,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clearsoundsifack(alarm",{"_index":1163,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["cli",{"_index":3070,"title":{},"body":{"index.html":{}}}],["click",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["clicked",{"_index":1468,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["client",{"_index":1986,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service",{"_index":934,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["client.service.ts",{"_index":1985,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:107",{"_index":2008,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:14",{"_index":1992,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:31",{"_index":1997,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:47",{"_index":1999,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:57",{"_index":1996,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:70",{"_index":2004,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:83",{"_index":2006,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:95",{"_index":1994,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["clipboard",{"_index":2770,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["clipboardmodule",{"_index":2769,"title":{},"body":{"modules/WeatherModule.html":{}}}],["clipboardservice",{"_index":2884,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["close",{"_index":1007,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{}}}],["closeandclean",{"_index":2522,"title":{},"body":{"injectables/SidenavService.html":{}}}],["closed",{"_index":1042,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["closes",{"_index":2527,"title":{},"body":{"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["closing",{"_index":2717,"title":{},"body":{"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_actionsmodule",{"_index":256,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_declarations",{"_index":257,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_exports",{"_index":259,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_imports",{"_index":258,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_actionsmodule_providers",{"_index":260,"title":{},"body":{"modules/ActionsModule.html":{},"overview.html":{}}}],["cluster_antennasmodule",{"_index":1351,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_declarations",{"_index":1352,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_exports",{"_index":1354,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_imports",{"_index":1353,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_antennasmodule_providers",{"_index":1355,"title":{},"body":{"modules/AntennasModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":1690,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":1693,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":1691,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":1692,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":1717,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_declarations",{"_index":1718,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_imports",{"_index":1719,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_providers",{"_index":1720,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":1789,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":1790,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":1791,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_datamodule",{"_index":1948,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_providers",{"_index":1949,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodule",{"_index":1954,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declarations",{"_index":1955,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_exports",{"_index":1957,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_imports",{"_index":1956,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_mapmodule",{"_index":2204,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declarations",{"_index":2205,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_exports",{"_index":2206,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_providers",{"_index":2207,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule",{"_index":2395,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule_declarations",{"_index":2396,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule_exports",{"_index":2398,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"overview.html":{}}}],["cluster_materialsandboxmodule_imports",{"_index":2397,"title":{},"body":{"modules/MaterialSandboxModule.html":{}}}],["cluster_overviewmodule",{"_index":2430,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declarations",{"_index":2431,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_exports",{"_index":2433,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_imports",{"_index":2432,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodule",{"_index":2494,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2495,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2497,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":2496,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodule",{"_index":2574,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declarations",{"_index":2575,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_exports",{"_index":2577,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_imports",{"_index":2576,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodule",{"_index":2763,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declarations",{"_index":2764,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_exports",{"_index":2766,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_imports",{"_index":2765,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cluster_weathermodule_providers",{"_index":2767,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["code",{"_index":2153,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{},"license.html":{}}}],["color",{"_index":590,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["colorclass",{"_index":1328,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["colors",{"_index":2237,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["colors'},{'name",{"_index":198,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["column",{"_index":1489,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["columns",{"_index":1493,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["combined",{"_index":3156,"title":{},"body":{"license.html":{}}}],["combining",{"_index":3163,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":270,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["communicating",{"_index":2159,"title":{},"body":{"components/LoginComponent.html":{}}}],["compacted",{"_index":1680,"title":{},"body":{"components/AppComponent.html":{}}}],["compatible",{"_index":3250,"title":{},"body":{"license.html":{}}}],["complementary",{"_index":981,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["complements",{"_index":1560,"title":{},"body":{"components/AppComponent.html":{}}}],["complete",{"_index":1090,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["compodoc",{"_index":3119,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["componentname",{"_index":2346,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["componet",{"_index":480,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["computer",{"_index":3247,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":3275,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3144,"title":{},"body":{"license.html":{}}}],["conf",{"_index":1536,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["conf[0",{"_index":1538,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["config",{"_index":926,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["config.alarm_id",{"_index":1052,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["config.custom_name",{"_index":1051,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["config.ts",{"_index":537,"title":{},"body":{"classes/AlarmConfig.html":{},"coverage.html":{}}}],["config.ts:10",{"_index":550,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:13",{"_index":560,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:16",{"_index":562,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:19",{"_index":549,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:22",{"_index":557,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:25",{"_index":547,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:37",{"_index":564,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.ts:7",{"_index":548,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["config.type",{"_index":2857,"title":{},"body":{"injectables/WeatherService.html":{}}}],["configuration",{"_index":539,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/MapComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["connect",{"_index":963,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connection",{"_index":954,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/SidenavService.html":{}}}],["connectionpath",{"_index":1022,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatusstream",{"_index":955,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connectionstatustimer",{"_index":980,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["connector",{"_index":2778,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector'},{'name",{"_index":235,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["connector.component",{"_index":2776,"title":{},"body":{"modules/WeatherModule.html":{}}}],["connector.component.html",{"_index":2781,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.scss",{"_index":2780,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts",{"_index":2777,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:16",{"_index":2785,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":2786,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:22",{"_index":2784,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:31",{"_index":2789,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":2787,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["connector/weather",{"_index":2775,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"coverage.html":{}}}],["connects",{"_index":942,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["consider",{"_index":3085,"title":{},"body":{"index.html":{}}}],["considered",{"_index":3173,"title":{},"body":{"license.html":{}}}],["considering",{"_index":1569,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error('an",{"_index":2013,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.error('error",{"_index":2186,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["console.error(error",{"_index":1878,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('calling",{"_index":1142,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('connected",{"_index":1026,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('connection",{"_index":1041,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('counter",{"_index":1020,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('error",{"_index":2700,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["console.log('login",{"_index":1883,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('notify",{"_index":1012,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log('request",{"_index":1017,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["console.log(this.labellocation",{"_index":2374,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["const",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["constructor",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(alarmservice",{"_index":1520,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(antennasservice",{"_index":1450,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["constructor(attributes",{"_index":499,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["constructor(authservice",{"_index":1761,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["constructor(formbuilder",{"_index":2137,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(http",{"_index":1813,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["constructor(httpclient",{"_index":1385,"title":{},"body":{"injectables/AntennasService.html":{}}}],["constructor(httpclientservice",{"_index":1921,"title":{},"body":{"injectables/CdbService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":715,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["constructor(router",{"_index":2449,"title":{},"body":{"injectables/RoutingService.html":{}}}],["constructor(routingservice",{"_index":2524,"title":{},"body":{"injectables/SidenavService.html":{}}}],["constructor(service",{"_index":1307,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["constructor(sidenavservice",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["constructor(weatherservice",{"_index":2737,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["contact",{"_index":2681,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["contained",{"_index":3229,"title":{},"body":{"license.html":{}}}],["container",{"_index":509,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["container=\"body",{"_index":1264,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["containing",{"_index":497,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["contains",{"_index":1529,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/MapComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{}}}],["content",{"_index":403,"title":{},"body":{"components/AlarmCardComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["continue",{"_index":785,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["contracting",{"_index":1593,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":701,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["convert",{"_index":707,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["converted",{"_index":809,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["convey",{"_index":3180,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3264,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3184,"title":{},"body":{"license.html":{}}}],["coord",{"_index":2791,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[0",{"_index":2794,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coord[1",{"_index":2795,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["coordinates",{"_index":1404,"title":{},"body":{"injectables/AntennasService.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{}}}],["coords",{"_index":2783,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["copes",{"_index":2335,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["copied",{"_index":2890,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copies",{"_index":3139,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2085,"title":{},"body":{"classes/Iasio.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["copyantennas",{"_index":2881,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyantennas(stationconfig",{"_index":2888,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["copyright",{"_index":3129,"title":{},"body":{"license.html":{}}}],["core",{"_index":1089,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":325,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["core_timestamp",{"_index":2357,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["coreidchange",{"_index":749,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["corresponding",{"_index":890,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["corresponds",{"_index":2088,"title":{},"body":{"classes/Iasio.html":{},"index.html":{}}}],["count",{"_index":977,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{}}}],["countbyview",{"_index":978,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["countbyview[navitemcounter",{"_index":1650,"title":{},"body":{"components/AppComponent.html":{}}}],["counter",{"_index":1605,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["counterbyview",{"_index":1582,"title":{},"body":{"components/AppComponent.html":{}}}],["cover",{"_index":2383,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["coverage",{"_index":2956,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":3153,"title":{},"body":{"license.html":{}}}],["create",{"_index":498,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{}}}],["creates",{"_index":1969,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["credentials",{"_index":2157,"title":{},"body":{"components/LoginComponent.html":{}}}],["critical",{"_index":1155,"title":{},"body":{"classes/AlarmSounds.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"injectables/WeatherService.html":{}}}],["critical.svg",{"_index":1434,"title":{},"body":{"injectables/AntennasService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["crud",{"_index":1987,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["css",{"_index":344,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["currenlty",{"_index":973,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["current",{"_index":460,"title":{},"body":{"components/AlarmComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["currentalarmcoreid",{"_index":742,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["currentalarmvalue",{"_index":1230,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["currentdependenciesstring",{"_index":746,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["currently",{"_index":733,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["cursor",{"_index":1330,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["custom",{"_index":551,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{}}}],["custom_name",{"_index":542,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{}}}],["cx",{"_index":1303,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["cy",{"_index":1304,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["d",{"_index":3237,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2561,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":231,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["data).pipe",{"_index":1060,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data.push(node",{"_index":804,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data/alarm",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.service",{"_index":676,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/cdb.service",{"_index":931,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["data/data.module",{"_index":288,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["data/http",{"_index":1410,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{}}}],["data/user.service",{"_index":1621,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["database",{"_index":1091,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datamodule",{"_index":261,"title":{"modules/DataModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasource",{"_index":709,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["date",{"_index":635,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["date).gettime",{"_index":951,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["dateformat",{"_index":613,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["datepipe",{"_index":1701,"title":{},"body":{"modules/AppModule.html":{}}}],["dates",{"_index":621,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["debugging",{"_index":3232,"title":{},"body":{"license.html":{}}}],["decide",{"_index":561,"title":{},"body":{"classes/AlarmConfig.html":{},"license.html":{}}}],["declarations",{"_index":252,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decorators",{"_index":1595,"title":{},"body":{"components/AppComponent.html":{}}}],["deemed",{"_index":3161,"title":{},"body":{"license.html":{}}}],["deep",{"_index":1273,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{}}}],["default",{"_index":314,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["defaulttimeout",{"_index":2613,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["define",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["definealarmsandicons",{"_index":1963,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["definealarmsandimages",{"_index":2377,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["defined",{"_index":48,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["defines",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["defining",{"_index":3159,"title":{},"body":{"license.html":{}}}],["definition",{"_index":2591,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["definitions",{"_index":3148,"title":{},"body":{"license.html":{}}}],["degraded",{"_index":3063,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delayedfadein",{"_index":1274,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["delete",{"_index":1096,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["delete(url",{"_index":1993,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["deletes",{"_index":1839,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleting",{"_index":1837,"title":{},"body":{"injectables/AuthService.html":{}}}],["demo",{"_index":2015,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["depeding",{"_index":2667,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["dependencies",{"_index":251,"title":{"dependencies.html":{}},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencieschange",{"_index":748,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["depending",{"_index":346,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"guards/AuthLoginGuard.html":{}}}],["descendant",{"_index":829,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants",{"_index":819,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":822,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":834,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(node",{"_index":820,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(node",{"_index":826,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendents",{"_index":825,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["describes",{"_index":1319,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["destroy",{"_index":1034,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["destroyed",{"_index":2652,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["detail",{"_index":1497,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"license.html":{}}}],["dev",{"_index":3098,"title":{},"body":{"index.html":{}}}],["development",{"_index":3074,"title":{},"body":{"index.html":{}}}],["device",{"_index":1507,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["devices",{"_index":1408,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{}}}],["devicesconfig",{"_index":1381,"title":{},"body":{"injectables/AntennasService.html":{}}}],["dialog",{"_index":2309,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["dictionaries",{"_index":1107,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["dictionary",{"_index":496,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{}}}],["differ",{"_index":3272,"title":{},"body":{"license.html":{}}}],["different",{"_index":888,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["directing",{"_index":3236,"title":{},"body":{"license.html":{}}}],["direction",{"_index":334,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["directive",{"_index":150,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["directives",{"_index":243,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3103,"title":{},"body":{"index.html":{}}}],["directory",{"_index":3106,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1203,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["disableanimation",{"_index":1197,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["disabled",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["disconnect",{"_index":1033,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["dispays",{"_index":2582,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["display",{"_index":294,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"index.html":{}}}],["display/index.html",{"_index":3080,"title":{},"body":{"index.html":{}}}],["display:block",{"_index":392,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmTileComponent.html":{}}}],["displayed",{"_index":320,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{}}}],["displaying",{"_index":425,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{}}}],["displays",{"_index":2252,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["dist",{"_index":3105,"title":{},"body":{"index.html":{}}}],["distinct",{"_index":2329,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["distinguishing",{"_index":3276,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3137,"title":{},"body":{"license.html":{}}}],["divider",{"_index":2315,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["dividers",{"_index":2316,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["django",{"_index":921,"title":{},"body":{"classes/AlarmSounds.html":{},"dependencies.html":{}}}],["doc_url",{"_index":2070,"title":{},"body":{"classes/Iasio.html":{}}}],["document",{"_index":3140,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":681,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["dog",{"_index":2324,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["domsanitizer",{"_index":1557,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":2658,"title":{},"body":{"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["double",{"_index":2078,"title":{},"body":{"classes/Iasio.html":{}}}],["draw",{"_index":1320,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/MapComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{}}}],["duration",{"_index":1275,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["during",{"_index":2901,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["dy",{"_index":2232,"title":{},"body":{"injectables/MapService.html":{}}}],["dynamic",{"_index":3037,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1945,"title":{},"body":{"injectables/CdbService.html":{},"license.html":{}}}],["e.g",{"_index":913,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["e2e",{"_index":3116,"title":{},"body":{"index.html":{}}}],["each",{"_index":1400,"title":{},"body":{"injectables/AntennasService.html":{},"modules/OverviewModule.html":{},"injectables/WeatherService.html":{},"license.html":{}}}],["effectively",{"_index":3226,"title":{},"body":{"license.html":{}}}],["effort",{"_index":3195,"title":{},"body":{"license.html":{}}}],["element",{"_index":149,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["elementref",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["elements",{"_index":2246,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["email",{"_index":2722,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emit",{"_index":964,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["emitsound",{"_index":1143,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["emitsound(sound",{"_index":1141,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["emitted",{"_index":1346,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["enabletracing",{"_index":1752,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":3115,"title":{},"body":{"index.html":{}}}],["engineering",{"_index":3231,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":3196,"title":{},"body":{"license.html":{}}}],["entrycomponents",{"_index":2402,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{}}}],["enumerations",{"_index":3057,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":923,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"coverage.html":{},"index.html":{}}}],["environment.httpurl",{"_index":2022,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["environment.httpurl}${backendurls.token",{"_index":1880,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.httpurl}${backendurls.validate_token",{"_index":1866,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.websocketpath",{"_index":1027,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["environments/environment",{"_index":924,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["equal",{"_index":1174,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["error",{"_index":1877,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{}}}],["error.status",{"_index":2184,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["error['error",{"_index":2711,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["errormessage",{"_index":2134,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["errors",{"_index":2001,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["etc",{"_index":914,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{},"interfaces/TimeoutOption.html":{}}}],["event",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["eventemitter",{"_index":660,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["events",{"_index":1345,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["everyone",{"_index":3136,"title":{},"body":{"license.html":{}}}],["everytime",{"_index":730,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["example",{"_index":1265,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["exception",{"_index":3179,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3171,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3112,"title":{},"body":{"index.html":{},"license.html":{}}}],["executed",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["execution",{"_index":3234,"title":{},"body":{"license.html":{}}}],["exit_to_applog",{"_index":1657,"title":{},"body":{"components/AppComponent.html":{}}}],["expand/collapse",{"_index":702,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expandable",{"_index":654,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expanded",{"_index":2927,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["expanding",{"_index":1592,"title":{},"body":{"components/AppComponent.html":{}}}],["expansion",{"_index":2924,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["expected",{"_index":1576,"title":{},"body":{"components/AppComponent.html":{}}}],["expectedclasseswhenhiddentext",{"_index":2997,"title":{},"body":{"coverage.html":{}}}],["expectedclasseswhenshowtext",{"_index":2998,"title":{},"body":{"coverage.html":{}}}],["expectedfilteredtablerows",{"_index":3008,"title":{},"body":{"coverage.html":{}}}],["expectedreducedtablerows",{"_index":3009,"title":{},"body":{"coverage.html":{}}}],["expectedreducedtablerowsafterchange",{"_index":3010,"title":{},"body":{"coverage.html":{}}}],["expectedtablerows",{"_index":3011,"title":{},"body":{"coverage.html":{}}}],["expectedtreedata",{"_index":2964,"title":{},"body":{"coverage.html":{}}}],["explaining",{"_index":3265,"title":{},"body":{"license.html":{}}}],["export",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["exports",{"_index":255,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["extend",{"_index":521,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["extent",{"_index":3252,"title":{},"body":{"license.html":{}}}],["extras",{"_index":1787,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["fab",{"_index":2243,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["facilities",{"_index":3259,"title":{},"body":{"license.html":{}}}],["facility",{"_index":3187,"title":{},"body":{"license.html":{}}}],["fade",{"_index":1295,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["failed",{"_index":2620,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["fails",{"_index":2621,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["faith",{"_index":3194,"title":{},"body":{"license.html":{}}}],["false",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["family",{"_index":1282,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/OverviewCardComponent.html":{}}}],["favorite",{"_index":2244,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["fewer",{"_index":3217,"title":{},"body":{"license.html":{}}}],["field",{"_index":2054,"title":{},"body":{"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{}}}],["fields",{"_index":1099,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{}}}],["filepath",{"_index":915,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["files",{"_index":892,"title":{},"body":{"classes/AlarmSounds.html":{},"index.html":{},"license.html":{}}}],["fill",{"_index":2797,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["filter",{"_index":1527,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{}}}],["filter.replace",{"_index":2464,"title":{},"body":{"injectables/RoutingService.html":{}}}],["find",{"_index":3266,"title":{},"body":{"license.html":{}}}],["finding",{"_index":693,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["finds",{"_index":1457,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["fit",{"_index":1509,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["fix",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{}}}],["flag",{"_index":1395,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["flat",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["flatnode",{"_index":810,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expandable",{"_index":816,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":814,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":815,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":695,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattened",{"_index":696,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattener",{"_index":706,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":667,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":724,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flex",{"_index":591,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["flexlayoutmodule",{"_index":2064,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["float",{"_index":2410,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["flow",{"_index":1501,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["focus",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["focused",{"_index":2311,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["focusmonitor",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["folder",{"_index":3086,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1223,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["following",{"_index":1907,"title":{},"body":{"components/ButtonsComponent.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":395,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["footer",{"_index":1511,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["foreground",{"_index":2314,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["form",{"_index":623,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["format",{"_index":773,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["formatting",{"_index":620,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formbuilder",{"_index":2138,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol",{"_index":2164,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["formcontrol(this.defaulttimeout",{"_index":2635,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["formgroup",{"_index":2135,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["forms",{"_index":2142,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":279,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundation",{"_index":3133,"title":{},"body":{"license.html":{}}}],["free",{"_index":3131,"title":{},"body":{"license.html":{}}}],["full",{"_index":1745,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MapComponent.html":{}}}],["function",{"_index":716,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"license.html":{}}}],["functionality",{"_index":2144,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["functions",{"_index":3214,"title":{},"body":{"license.html":{}}}],["further",{"_index":3120,"title":{},"body":{"index.html":{}}}],["future",{"_index":3285,"title":{},"body":{"license.html":{}}}],["g",{"_index":3092,"title":{},"body":{"index.html":{}}}],["gap",{"_index":1494,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["general",{"_index":609,"title":{},"body":{"components/AlarmInfoComponent.html":{},"injectables/CdbService.html":{},"modules/OverviewModule.html":{},"license.html":{}}}],["generate",{"_index":3102,"title":{},"body":{"index.html":{}}}],["generatealarmslist",{"_index":2364,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["generated",{"_index":3069,"title":{},"body":{"index.html":{}}}],["generation",{"_index":2363,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["generic",{"_index":1100,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["get(core_id",{"_index":1044,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["get(url",{"_index":1995,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":2666,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getactionslink",{"_index":1551,"title":{},"body":{"components/AppComponent.html":{}}}],["getactionslink(item",{"_index":1564,"title":{},"body":{"components/AppComponent.html":{}}}],["getalarm",{"_index":1442,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["getalarm(alarm_id",{"_index":1455,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getalarm(config",{"_index":1048,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getalarmlist",{"_index":1093,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getalarmname",{"_index":303,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["getallowedactions",{"_index":1803,"title":{},"body":{"injectables/AuthService.html":{}}}],["getantennas",{"_index":1443,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["getantennas(stationconfig",{"_index":2891,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["getbroadcastrate",{"_index":1918,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbroadcastthreshold",{"_index":1919,"title":{},"body":{"injectables/CdbService.html":{}}}],["getbuttontooltiptext",{"_index":2507,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":763,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getchildrenalarmids",{"_index":1444,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["getclass",{"_index":304,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["getconfigurationdata",{"_index":1920,"title":{},"body":{"injectables/CdbService.html":{}}}],["getconnectionpath",{"_index":1030,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getdevices",{"_index":1445,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gethttpheaders",{"_index":1804,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["geticonset",{"_index":2813,"title":{},"body":{"injectables/WeatherService.html":{}}}],["geticonset(config",{"_index":2818,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getimage",{"_index":431,"title":{},"body":{"components/AlarmComponent.html":{}}}],["getlevel",{"_index":758,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmapdata",{"_index":1382,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["getmissingacks(alarm_id",{"_index":1068,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getmockalarm",{"_index":2354,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["getmockalarm(value",{"_index":2474,"title":{},"body":{"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["getname",{"_index":563,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["getname(config",{"_index":1050,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getnavitemcountclass",{"_index":1552,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcountclass(navitem",{"_index":1570,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext",{"_index":1553,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(item",{"_index":1658,"title":{},"body":{"components/AppComponent.html":{}}}],["getnavitemcounttext(navitem",{"_index":1580,"title":{},"body":{"components/AppComponent.html":{}}}],["getngclass",{"_index":1302,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["getpadsstatus",{"_index":2814,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getpadsstatus(group",{"_index":2821,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getpath",{"_index":2782,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["getprioritytext",{"_index":305,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["getprioritytextclass",{"_index":855,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["getresponsemessagetext",{"_index":2673,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["getresponsemessagetitle",{"_index":2671,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["gets",{"_index":1071,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getshelveregistries(alarm_id",{"_index":1073,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsizeclass",{"_index":856,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["getsoundsource",{"_index":899,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsoundsource(sound",{"_index":909,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["getsvgpaths",{"_index":2213,"title":{},"body":{"injectables/MapService.html":{}}}],["getsvgpaths(pathsgroup",{"_index":2216,"title":{},"body":{"injectables/MapService.html":{}}}],["gettextclass",{"_index":432,"title":{},"body":{"components/AlarmComponent.html":{}}}],["getting",{"_index":1390,"title":{"index.html":{},"license.html":{}},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["gettitletext",{"_index":2669,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["gettoken",{"_index":1805,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettreedata",{"_index":774,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getuser",{"_index":1554,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["give",{"_index":3219,"title":{},"body":{"license.html":{}}}],["given",{"_index":757,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["global",{"_index":1461,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["gnu",{"_index":3124,"title":{},"body":{"license.html":{}}}],["go",{"_index":1219,"title":{},"body":{"components/AlarmTileComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["going",{"_index":1771,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["good",{"_index":3193,"title":{},"body":{"license.html":{}}}],["gotoacknowledge",{"_index":2443,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoacknowledge(alarm_id",{"_index":2453,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoantennas",{"_index":2444,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotologin",{"_index":2445,"title":{},"body":{"injectables/RoutingService.html":{}}}],["gotoshelve",{"_index":2446,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gotoshelve(alarm_id",{"_index":2457,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["gototablefilteredby",{"_index":1519,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filter",{"_index":1523,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gotoweather",{"_index":2447,"title":{},"body":{"injectables/RoutingService.html":{}}}],["governed",{"_index":3155,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3151,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3292,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":367,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["green",{"_index":363,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["grey",{"_index":1329,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["grid",{"_index":1492,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{}}}],["group",{"_index":543,"title":{},"body":{"classes/AlarmConfig.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["group.github.io/ias",{"_index":3079,"title":{},"body":{"index.html":{}}}],["grouped",{"_index":2256,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["groups",{"_index":2228,"title":{},"body":{"injectables/MapService.html":{}}}],["guard",{"_index":1753,"title":{"guards/AuthLoginGuard.html":{}},"body":{"guards/AuthLoginGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1754,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["hammerjs",{"_index":3043,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["handleerror",{"_index":1989,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1998,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handles",{"_index":1373,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["handling",{"_index":1043,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["happen",{"_index":1654,"title":{},"body":{"components/AppComponent.html":{}}}],["haschild",{"_index":766,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocontent",{"_index":770,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasvalidtoken",{"_index":1806,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":337,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LoginComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["header'},{'name",{"_index":163,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["header.component",{"_index":2502,"title":{},"body":{"modules/SharedModule.html":{}}}],["header.component.html",{"_index":573,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.scss",{"_index":572,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts",{"_index":569,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:110",{"_index":579,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":575,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":578,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":576,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":577,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:38",{"_index":574,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:48",{"_index":581,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:55",{"_index":580,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:91",{"_index":582,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header.component.ts:99",{"_index":583,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["header/alarm",{"_index":568,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["header/fixtures.ts",{"_index":2995,"title":{},"body":{"coverage.html":{}}}],["headers",{"_index":570,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["health",{"_index":189,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.module",{"_index":1711,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodule",{"_index":1696,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycomponent",{"_index":188,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":139,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["height:100",{"_index":404,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["height:60px",{"_index":401,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["help",{"_index":3121,"title":{},"body":{"index.html":{}}}],["helps",{"_index":692,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["here",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"index.html":{}}}],["herein",{"_index":3149,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":519,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{}}}],["hide",{"_index":878,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["hides",{"_index":2715,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["hidespinner",{"_index":2718,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["high",{"_index":2125,"title":{},"body":{"components/LegendComponent.html":{}}}],["highlight",{"_index":1232,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["highlighted",{"_index":2758,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["hint",{"_index":2317,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["hour",{"_index":2608,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["hours",{"_index":2610,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["hover",{"_index":2308,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":933,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WikiButtonComponent.html":{}}}],["http://localhost:4200",{"_index":3099,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":1387,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"injectables/WeatherService.html":{}}}],["httpclientmodule",{"_index":1705,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{}}}],["httpclientservice",{"_index":932,"title":{"injectables/HttpClientService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["httpheaders",{"_index":1824,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["httpoptions",{"_index":2017,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":2000,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":3135,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":3078,"title":{},"body":{"index.html":{}}}],["https://www.alma.cl",{"_index":2360,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["humidity",{"_index":2834,"title":{},"body":{"injectables/WeatherService.html":{}}}],["humidityimageset",{"_index":2800,"title":{},"body":{"injectables/WeatherService.html":{}}}],["humidityimageunreliableset",{"_index":2801,"title":{},"body":{"injectables/WeatherService.html":{}}}],["hunting",{"_index":2342,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["ias",{"_index":285,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmSounds.html":{},"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"index.html":{}}}],["ias.ias",{"_index":1681,"title":{},"body":{"components/AppComponent.html":{}}}],["ias.overview",{"_index":2408,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["ias_antenna",{"_index":1607,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_health",{"_index":1979,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_overview",{"_index":1603,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_table",{"_index":1608,"title":{},"body":{"components/AppComponent.html":{}}}],["ias_type",{"_index":2071,"title":{},"body":{"classes/Iasio.html":{}}}],["ias_weather",{"_index":1606,"title":{},"body":{"components/AppComponent.html":{}}}],["iasconfiguration",{"_index":1915,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavailable",{"_index":1916,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdisplay",{"_index":3067,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":2066,"title":{"classes/Iasio.html":{}},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["iasmaterialmodule",{"_index":262,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":1917,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":140,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["icons",{"_index":1394,"title":{},"body":{"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["iconset",{"_index":1961,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1962,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["id",{"_index":338,"title":{},"body":{"components/AlarmCardComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["identifier",{"_index":2957,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":689,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{}}}],["image",{"_index":461,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["images",{"_index":435,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["imagesunreliable",{"_index":436,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["img.ias",{"_index":1668,"title":{},"body":{"components/AppComponent.html":{}}}],["img.ias.ias",{"_index":1683,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":101,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["important",{"_index":877,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{}}}],["imports",{"_index":268,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["inc",{"_index":3134,"title":{},"body":{"license.html":{}}}],["include",{"_index":3235,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2249,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["including",{"_index":1825,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["incorporate",{"_index":3207,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3209,"title":{},"body":{"license.html":{}}}],["incorporates",{"_index":3142,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":3206,"title":{},"body":{"license.html":{}}}],["index",{"_index":32,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["indexed",{"_index":2848,"title":{},"body":{"injectables/WeatherService.html":{}}}],["indicate",{"_index":355,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["indicates",{"_index":1396,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["info'},{'name",{"_index":165,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["info.component",{"_index":2504,"title":{},"body":{"modules/SharedModule.html":{}}}],["info.component.html",{"_index":612,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.scss",{"_index":611,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts",{"_index":608,"title":{},"body":{"components/AlarmInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:18",{"_index":616,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts:21",{"_index":618,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts:24",{"_index":615,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info.component.ts:34",{"_index":617,"title":{},"body":{"components/AlarmInfoComponent.html":{}}}],["info/alarm",{"_index":607,"title":{},"body":{"components/AlarmInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["information",{"_index":610,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["inherit",{"_index":2409,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["init",{"_index":2565,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["initial",{"_index":2940,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["initializated",{"_index":1933,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["initialization",{"_index":994,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["initialize",{"_index":997,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"injectables/WeatherService.html":{}}}],["initialized",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["initializes",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["initiated",{"_index":353,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{}}}],["initiates",{"_index":2202,"title":{},"body":{"components/MapComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["initiating",{"_index":467,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["injectable",{"_index":916,"title":{"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["injectables",{"_index":1371,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"overview.html":{}}}],["inline",{"_index":512,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["inner",{"_index":1278,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["innerhtmltextvalue",{"_index":2259,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["input",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inputs",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ButtonsComponent.html":{},"components/MapComponent.html":{},"components/MaterialColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inside",{"_index":1257,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["install",{"_index":3087,"title":{},"body":{"index.html":{},"license.html":{}}}],["installation",{"_index":3251,"title":{},"body":{"license.html":{}}}],["installdevelopment",{"_index":3095,"title":{},"body":{"index.html":{}}}],["installing",{"_index":3084,"title":{},"body":{"index.html":{}}}],["instance",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instantiated",{"_index":1324,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["instantiates",{"_index":440,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WikiButtonComponent.html":{}}}],["instructions",{"_index":3073,"title":{},"body":{"index.html":{}}}],["integrated",{"_index":1612,"title":{},"body":{"components/AppComponent.html":{}}}],["intended",{"_index":1154,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["interactive",{"_index":2879,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["interface",{"_index":2587,"title":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{}},"body":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":2589,"title":{},"body":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"overview.html":{}}}],["internal",{"_index":1347,"title":{},"body":{"components/AntennasComponent.html":{},"components/WeatherComponent.html":{}}}],["interval",{"_index":919,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["interval(1000",{"_index":1182,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["inu",{"_index":2323,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["invalid",{"_index":1438,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["invalid.svg",{"_index":1983,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["invoked",{"_index":3191,"title":{},"body":{"license.html":{}}}],["io_id",{"_index":2072,"title":{},"body":{"classes/Iasio.html":{}}}],["ionicons",{"_index":3045,"title":{},"body":{"dependencies.html":{}}}],["isalarmindexavailable(core_id",{"_index":1046,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["isallowed",{"_index":2664,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["isdisabled",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["isexpandable",{"_index":761,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isinitialized",{"_index":976,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["isnavigationcompacted",{"_index":1548,"title":{},"body":{"components/AppComponent.html":{}}}],["isolation",{"_index":3174,"title":{},"body":{"license.html":{}}}],["isselected",{"_index":1446,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["isselected(alarmconfig",{"_index":1462,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["isselected(stationconfig",{"_index":2894,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["issues",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["istextalarm",{"_index":433,"title":{},"body":{"components/AlarmComponent.html":{}}}],["isubscription",{"_index":2598,"title":{},"body":{"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["isvalidiasio",{"_index":2075,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":2086,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":652,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["item.icon",{"_index":1660,"title":{},"body":{"components/AppComponent.html":{}}}],["item.link",{"_index":1641,"title":{},"body":{"components/AppComponent.html":{}}}],["item.title",{"_index":1661,"title":{},"body":{"components/AppComponent.html":{}}}],["item[1",{"_index":2255,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["items",{"_index":1573,"title":{},"body":{"components/AppComponent.html":{}}}],["iteration",{"_index":1247,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["japan",{"_index":2332,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["jquery",{"_index":3047,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3040,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":772,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{}}}],["json.hasownproperty('doc_url",{"_index":2092,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_type",{"_index":2091,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":2089,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('short_desc",{"_index":2090,"title":{},"body":{"classes/Iasio.html":{}}}],["json.parse(allowed_actions",{"_index":1895,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(token",{"_index":1891,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(user",{"_index":1893,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(allowed_actions",{"_index":1905,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(token",{"_index":1900,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(user",{"_index":1902,"title":{},"body":{"injectables/AuthService.html":{}}}],["json['doc_url",{"_index":2098,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_type",{"_index":2097,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":2095,"title":{},"body":{"classes/Iasio.html":{}}}],["json['short_desc",{"_index":2096,"title":{},"body":{"classes/Iasio.html":{}}}],["june",{"_index":3127,"title":{},"body":{"license.html":{}}}],["k",{"_index":795,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["karma",{"_index":3114,"title":{},"body":{"index.html":{}}}],["keep",{"_index":697,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["keepclosed",{"_index":1040,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["key",{"_index":1403,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/WeatherService.html":{}}}],["keyframes",{"_index":1249,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["know",{"_index":2824,"title":{},"body":{"injectables/WeatherService.html":{}}}],["l",{"_index":2793,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["label",{"_index":448,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["label'},{'name",{"_index":167,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["label.component",{"_index":2505,"title":{},"body":{"modules/SharedModule.html":{}}}],["label.component.html",{"_index":852,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.scss",{"_index":851,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts",{"_index":850,"title":{},"body":{"components/AlarmLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:125",{"_index":866,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:141",{"_index":867,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:18",{"_index":860,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:23",{"_index":863,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:28",{"_index":862,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:33",{"_index":861,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:38",{"_index":870,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:43",{"_index":869,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:48",{"_index":859,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:58",{"_index":868,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:74",{"_index":865,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label.component.ts:85",{"_index":864,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["label/alarm",{"_index":849,"title":{},"body":{"components/AlarmLabelComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["label/fixtures.ts",{"_index":2996,"title":{},"body":{"coverage.html":{}}}],["labellocation",{"_index":437,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["labellocationoptions",{"_index":429,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["labelmode",{"_index":438,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["last",{"_index":632,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/SidenavService.html":{}}}],["lastalarmid",{"_index":2520,"title":{},"body":{"injectables/SidenavService.html":{}}}],["lastreceivedmessagetimestamp",{"_index":950,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["later",{"_index":808,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1254,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"modules/IasMaterialModule.html":{},"dependencies.html":{}}}],["layouts",{"_index":3212,"title":{},"body":{"license.html":{}}}],["left",{"_index":126,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["left:0",{"_index":2939,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["legend",{"_index":147,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/ButtonsComponent.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'name",{"_index":191,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":2100,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":2101,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.component",{"_index":2579,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcomponent",{"_index":190,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":341,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"license.html":{}}}],["lesser",{"_index":3125,"title":{},"body":{"license.html":{}}}],["level",{"_index":655,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":477,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["libraries",{"_index":3094,"title":{},"body":{"index.html":{},"license.html":{}}}],["library",{"_index":3152,"title":{},"body":{"license.html":{}}}],["license",{"_index":3123,"title":{"license.html":{}},"body":{"license.html":{}}}],["limited",{"_index":3210,"title":{},"body":{"license.html":{}}}],["line",{"_index":145,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["lines",{"_index":3218,"title":{},"body":{"license.html":{}}}],["link",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["linked",{"_index":3168,"title":{},"body":{"license.html":{}}}],["linkfab",{"_index":2390,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkflat",{"_index":2389,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkicon",{"_index":2392,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linking",{"_index":3164,"title":{},"body":{"license.html":{}}}],["linkmini",{"_index":2391,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["linkraised",{"_index":2388,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{}}}],["links",{"_index":1566,"title":{},"body":{"components/AppComponent.html":{}}}],["linux",{"_index":3076,"title":{},"body":{"index.html":{}}}],["list",{"_index":463,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["listed",{"_index":3146,"title":{},"body":{"license.html":{}}}],["listen",{"_index":1392,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["loadalarmsconfig",{"_index":1383,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["loadimages",{"_index":1384,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["loading",{"_index":2143,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["loadpadsstatus",{"_index":2815,"title":{},"body":{"injectables/WeatherService.html":{}}}],["loadpadsstatus(group",{"_index":2829,"title":{},"body":{"injectables/WeatherService.html":{}}}],["loads",{"_index":2831,"title":{},"body":{"injectables/WeatherService.html":{}}}],["loadweatherstationsconfig",{"_index":2816,"title":{},"body":{"injectables/WeatherService.html":{}}}],["local",{"_index":1821,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["locale",{"_index":625,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["locale.date_format",{"_index":627,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["locale.timezone",{"_index":629,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["localstorage.getitem(this.actions_storage_name",{"_index":1894,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(this.token_storage_name",{"_index":1890,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(this.user_storage_name",{"_index":1892,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.actions_storage_name",{"_index":1898,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.token_storage_name",{"_index":1896,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.user_storage_name",{"_index":1897,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(this.actions_storage_name",{"_index":1904,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(this.token_storage_name",{"_index":1899,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(this.user_storage_name",{"_index":1901,"title":{},"body":{"injectables/AuthService.html":{}}}],["locate",{"_index":2826,"title":{},"body":{"injectables/WeatherService.html":{}}}],["location",{"_index":559,"title":{},"body":{"classes/AlarmConfig.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["locations",{"_index":474,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["logged",{"_index":1759,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{}}}],["logging",{"_index":1856,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":1638,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["login'},{'name",{"_index":193,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["login(username",{"_index":1829,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.html",{"_index":2133,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":2132,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.guard",{"_index":1740,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login.guard.ts",{"_index":1756,"title":{},"body":{"guards/AuthLoginGuard.html":{},"coverage.html":{}}}],["login.guard.ts:13",{"_index":1762,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:31",{"_index":1767,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login.guard.ts:42",{"_index":1775,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["login/login.component",{"_index":1793,"title":{},"body":{"modules/AuthModule.html":{}}}],["logincomponent",{"_index":192,"title":{"components/LoginComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginstatus",{"_index":1797,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginstatusstream",{"_index":1798,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":1669,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":1039,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["logs",{"_index":1836,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2622,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["look",{"_index":2248,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["low",{"_index":2120,"title":{},"body":{"components/LegendComponent.html":{}}}],["low.svg",{"_index":1433,"title":{},"body":{"injectables/AntennasService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["m",{"_index":2796,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["macros",{"_index":3213,"title":{},"body":{"license.html":{}}}],["made",{"_index":3166,"title":{},"body":{"license.html":{}}}],["main",{"_index":1260,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["maintenance",{"_index":493,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["maintenance.svg",{"_index":1436,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["make",{"_index":3192,"title":{},"body":{"license.html":{}}}],["makes",{"_index":3157,"title":{},"body":{"license.html":{}}}],["malfunctioning",{"_index":3064,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manage",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["manner",{"_index":3243,"title":{},"body":{"license.html":{}}}],["map",{"_index":558,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["map'},{'name",{"_index":179,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["map((response",{"_index":1870,"title":{},"body":{"injectables/AuthService.html":{}}}],["map.component",{"_index":1361,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["map.component.html",{"_index":2196,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.scss",{"_index":2195,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts",{"_index":2973,"title":{},"body":{"coverage.html":{}}}],["map.service",{"_index":2211,"title":{},"body":{"modules/MapModule.html":{}}}],["map/antennas",{"_index":1360,"title":{},"body":{"modules/AntennasModule.html":{},"coverage.html":{}}}],["map/map.component",{"_index":2210,"title":{},"body":{"modules/MapModule.html":{}}}],["map/map.module",{"_index":1365,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["map/weather",{"_index":2772,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{}}}],["mapcomponent",{"_index":194,"title":{"components/MapComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapconfig",{"_index":2197,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataavailable",{"_index":2198,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdataprocessing",{"_index":2214,"title":{},"body":{"injectables/MapService.html":{}}}],["mapdataprocessing(placemarksgroups",{"_index":2222,"title":{},"body":{"injectables/MapService.html":{}}}],["mapmodule",{"_index":1356,"title":{"modules/MapModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/MapModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["maps",{"_index":807,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/MapService.html":{}}}],["mapservice",{"_index":2208,"title":{"injectables/MapService.html":{}},"body":{"modules/MapModule.html":{},"injectables/MapService.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["mark",{"_index":1579,"title":{},"body":{"components/AppComponent.html":{}}}],["marker",{"_index":424,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AntennaMarkerComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{}}}],["marker'},{'name",{"_index":174,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["marker.component",{"_index":1368,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["marker.component.html",{"_index":1301,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.scss",{"_index":1300,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts",{"_index":1299,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["marker.component.ts:17",{"_index":1311,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:20",{"_index":1318,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:21",{"_index":2741,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:23",{"_index":1321,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:24",{"_index":2738,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:25",{"_index":2759,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:26",{"_index":1313,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:29",{"_index":1315,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:32",{"_index":1309,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:33",{"_index":2742,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:37",{"_index":2762,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:38",{"_index":2761,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:39",{"_index":2740,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:40",{"_index":1326,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:41",{"_index":1325,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:44",{"_index":2760,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{}}}],["marker.component.ts:46",{"_index":2739,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["marker.component.ts:47",{"_index":1323,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker.component.ts:53",{"_index":1322,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["marker/antenna",{"_index":1298,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["marker/weather",{"_index":2733,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["markerimageset",{"_index":2802,"title":{},"body":{"injectables/WeatherService.html":{}}}],["markerimageunreliableset",{"_index":2803,"title":{},"body":{"injectables/WeatherService.html":{}}}],["markers/antenna",{"_index":1297,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"modules/AntennasModule.html":{},"coverage.html":{}}}],["markers/weather",{"_index":2732,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"coverage.html":{}}}],["master",{"_index":3082,"title":{},"body":{"index.html":{}}}],["mat",{"_index":143,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["matbuttonmodule",{"_index":2040,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodule",{"_index":2043,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcheckboxmodule",{"_index":2050,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matching",{"_index":246,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["material",{"_index":196,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["material.module",{"_index":287,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["material.module.ts",{"_index":2024,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ias",{"_index":286,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["materialbuttonscolorscomponent",{"_index":195,"title":{"components/MaterialButtonsColorsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialcardsamplecomponent",{"_index":199,"title":{"components/MaterialCardSampleComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialcolorscomponent",{"_index":201,"title":{"components/MaterialColorsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialid",{"_index":2258,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["materialsandboxcomponent",{"_index":202,"title":{"components/MaterialSandboxComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialsandboxmodule",{"_index":1721,"title":{"modules/MaterialSandboxModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/MaterialSandboxModule.html":{},"modules.html":{},"overview.html":{}}}],["materialtogglecolorscomponent",{"_index":204,"title":{"components/MaterialToggleColorsComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":2059,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matformfieldmodule",{"_index":2052,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonmodule",{"_index":2042,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["maticonregistry",{"_index":1556,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodule",{"_index":2026,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodule",{"_index":2047,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matmenumodule",{"_index":2038,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodule",{"_index":2028,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":2030,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matselectmodule",{"_index":2055,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenav",{"_index":1594,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["matsidenavmodule",{"_index":2045,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodule",{"_index":2032,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsnackbar",{"_index":2885,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["matsnackbarmodule",{"_index":2061,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsortmodule",{"_index":2034,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattablemodule",{"_index":2036,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodule",{"_index":2057,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasource",{"_index":670,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":726,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener",{"_index":669,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transformer",{"_index":719,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodule",{"_index":2049,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max",{"_index":318,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["maxcy",{"_index":2234,"title":{},"body":{"injectables/MapService.html":{}}}],["maximum",{"_index":340,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["md",{"_index":451,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["meaningful",{"_index":3203,"title":{},"body":{"license.html":{}}}],["means",{"_index":3170,"title":{},"body":{"license.html":{}}}],["meant",{"_index":2499,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechanism",{"_index":3244,"title":{},"body":{"license.html":{}}}],["medium",{"_index":457,"title":{},"body":{"components/AlarmComponent.html":{},"components/LegendComponent.html":{}}}],["menu",{"_index":1610,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":949,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["messages",{"_index":944,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["methods",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["middle",{"_index":516,"title":{},"body":{"components/AlarmComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["min",{"_index":135,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WikiButtonComponent.html":{}}}],["mini",{"_index":2245,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["minimal",{"_index":3169,"title":{},"body":{"license.html":{}}}],["minutes",{"_index":2604,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["miscellaneous",{"_index":3056,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["missing",{"_index":1066,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["mock",{"_index":2353,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["mockalarmdata",{"_index":2966,"title":{},"body":{"coverage.html":{}}}],["mockalarms",{"_index":2978,"title":{},"body":{"coverage.html":{}}}],["mockalarmstodisplay",{"_index":3012,"title":{},"body":{"coverage.html":{}}}],["mockantennas",{"_index":3018,"title":{},"body":{"coverage.html":{}}}],["mockantennasconfig",{"_index":2979,"title":{},"body":{"coverage.html":{}}}],["mockdevicesconfig",{"_index":2980,"title":{},"body":{"coverage.html":{}}}],["mockiasios",{"_index":3013,"title":{},"body":{"coverage.html":{}}}],["mockimageset",{"_index":3001,"title":{},"body":{"coverage.html":{}}}],["mockimagessets",{"_index":2981,"title":{},"body":{"coverage.html":{}}}],["mockimagesunreliablesets",{"_index":2982,"title":{},"body":{"coverage.html":{}}}],["mockimageunreliableset",{"_index":3002,"title":{},"body":{"coverage.html":{}}}],["mockpadsstatus",{"_index":3019,"title":{},"body":{"coverage.html":{}}}],["mocksummaryconfig",{"_index":2983,"title":{},"body":{"coverage.html":{}}}],["mockweatherstationsconfig",{"_index":3020,"title":{},"body":{"coverage.html":{}}}],["mockweathersummaryconfig",{"_index":3021,"title":{},"body":{"coverage.html":{}}}],["modal",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":472,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["model",{"_index":887,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["models",{"_index":483,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"modules/DataModule.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["modes",{"_index":3061,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modification",{"_index":3228,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3186,"title":{},"body":{"license.html":{}}}],["modified",{"_index":694,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["modify",{"_index":1095,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["module",{"_index":248,"title":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["modules",{"_index":250,"title":{"modules.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2586,"title":{},"body":{"components/TabularViewComponent.html":{},"dependencies.html":{}}}],["monitor",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["monitoring",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{}}}],["monospace",{"_index":1283,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["more",{"_index":2419,"title":{},"body":{"components/OverviewComponent.html":{},"index.html":{}}}],["mountainous",{"_index":2338,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["moz",{"_index":1245,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["multiple",{"_index":713,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["name",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["names",{"_index":348,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["nav",{"_index":1572,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1568,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["navigated",{"_index":1772,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["navigates",{"_index":1776,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["navigation",{"_index":1562,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["navigationsidenavitems",{"_index":1549,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem",{"_index":1577,"title":{},"body":{"components/AppComponent.html":{}}}],["navitem.counter",{"_index":1646,"title":{},"body":{"components/AppComponent.html":{}}}],["navitemcounter",{"_index":1645,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":2923,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["nearby",{"_index":2893,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["necessary",{"_index":3253,"title":{},"body":{"license.html":{}}}],["needed",{"_index":1374,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["nested",{"_index":691,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":700,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["new",{"_index":494,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["newlength",{"_index":1123,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["next",{"_index":1769,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["nexturl",{"_index":1780,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["ng",{"_index":1258,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngbmodule",{"_index":2400,"title":{},"body":{"modules/MaterialSandboxModule.html":{},"modules/SharedModule.html":{}}}],["ngmodule",{"_index":269,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngonchanges",{"_index":1194,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["ngonchanges(changes",{"_index":736,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{}}}],["ngondestroy",{"_index":2653,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["ngoninit",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":283,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodule",{"_index":282,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservice",{"_index":2140,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["node",{"_index":653,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":801,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expandable",{"_index":762,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":798,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":759,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodejs",{"_index":3088,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":678,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["non",{"_index":1158,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["none",{"_index":894,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"license.html":{}}}],["nonzero",{"_index":1651,"title":{},"body":{"components/AppComponent.html":{}}}],["nopadding",{"_index":857,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["nopaddingoptions",{"_index":853,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["normal",{"_index":397,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/LegendComponent.html":{}}}],["noselecteddescendants(node",{"_index":833,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":3081,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":1453,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["notice",{"_index":3221,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3233,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":953,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["notify",{"_index":1454,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["noting",{"_index":2436,"title":{},"body":{"modules/OverviewModule.html":{}}}],["npm",{"_index":3089,"title":{},"body":{"index.html":{}}}],["null",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["number",{"_index":658,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["number(this.iasconfiguration['broadcastrate",{"_index":1943,"title":{},"body":{"injectables/CdbService.html":{}}}],["number(this.iasconfiguration['broadcastthreshold",{"_index":1946,"title":{},"body":{"injectables/CdbService.html":{}}}],["numbered",{"_index":3279,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":2231,"title":{},"body":{"injectables/MapService.html":{}}}],["numerical",{"_index":3211,"title":{},"body":{"license.html":{}}}],["o",{"_index":1246,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["obj",{"_index":1097,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["object",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"license.html":{}}}],["object.assign(this",{"_index":500,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["object.keys(countbyview",{"_index":1648,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(subtree).length",{"_index":790,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["objects",{"_index":957,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{}}}],["observable",{"_index":673,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/WeatherService.html":{}}}],["obtained",{"_index":1176,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["occurred",{"_index":2014,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["of(false",{"_index":1865,"title":{},"body":{"injectables/AuthService.html":{}}}],["ofobservable",{"_index":672,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":764,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ogin",{"_index":2161,"title":{},"body":{"components/LoginComponent.html":{}}}],["old",{"_index":1063,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm",{"_index":1119,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.ack",{"_index":1122,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm.value",{"_index":1121,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_ack",{"_index":1117,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["old_alarm_value",{"_index":1116,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["once",{"_index":1156,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["onchanges",{"_index":664,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{}}}],["onclick",{"_index":41,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["onclick(alarmconfig",{"_index":1466,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["onclick(stationconfig",{"_index":2897,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["onclose",{"_index":2684,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["ondestroy",{"_index":2595,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["one",{"_index":2825,"title":{},"body":{"injectables/WeatherService.html":{},"license.html":{}}}],["onhover",{"_index":2757,"title":{},"body":{"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["opacity",{"_index":419,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["open",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WikiButtonComponent.html":{}}}],["open/close",{"_index":2537,"title":{},"body":{"injectables/SidenavService.html":{}}}],["opened",{"_index":2628,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["opens",{"_index":2533,"title":{},"body":{"injectables/SidenavService.html":{},"components/WikiButtonComponent.html":{}}}],["opensnackbar",{"_index":2882,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["opensnackbar(message",{"_index":2899,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["operate",{"_index":3248,"title":{},"body":{"license.html":{}}}],["operates",{"_index":3199,"title":{},"body":{"license.html":{}}}],["operational",{"_index":3060,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operationalmode",{"_index":358,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.unknown",{"_index":365,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["operations",{"_index":1988,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["operators",{"_index":2725,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["opt_cx",{"_index":1316,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["opt_cy",{"_index":1317,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["option",{"_index":2313,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["optional",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["optionalalarmname",{"_index":309,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["options",{"_index":453,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["order",{"_index":87,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmTooltipComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ShelveButtonComponent.html":{},"injectables/WeatherService.html":{}}}],["original",{"_index":2328,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["originally",{"_index":2340,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["others",{"_index":1981,"title":{},"body":{"components/HealthSummaryComponent.html":{},"injectables/WeatherService.html":{}}}],["otherwise",{"_index":3158,"title":{},"body":{"license.html":{}}}],["out",{"_index":266,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":1749,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["outlets",{"_index":1567,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":661,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["outputs",{"_index":1448,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["over",{"_index":1255,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{}}}],["overflow",{"_index":645,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["overview",{"_index":207,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":209,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.html",{"_index":2422,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.scss",{"_index":2421,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.svg",{"_index":1630,"title":{},"body":{"components/AppComponent.html":{}}}],["overview/overview.component",{"_index":2437,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.module",{"_index":1712,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.component",{"_index":1732,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["overviewcardcomponent",{"_index":206,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcomponent",{"_index":208,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodule",{"_index":1697,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["p",{"_index":1674,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":3028,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":1487,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["pad_name",{"_index":2913,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["padding",{"_index":125,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["padding:0",{"_index":511,"title":{},"body":{"components/AlarmComponent.html":{}}}],["padding:10px",{"_index":405,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["pads",{"_index":2823,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["pads[pad_name",{"_index":2914,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["padsstatus",{"_index":2804,"title":{},"body":{"injectables/WeatherService.html":{}}}],["padsstatusavailable",{"_index":2805,"title":{},"body":{"injectables/WeatherService.html":{}}}],["page",{"_index":968,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"components/WikiButtonComponent.html":{}}}],["pairs",{"_index":2257,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["palette",{"_index":2254,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["palettes",{"_index":2260,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["pallete",{"_index":2321,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["palletes",{"_index":2253,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel",{"_index":2925,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panel100",{"_index":2274,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel100accent",{"_index":2290,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel100warn",{"_index":2303,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel200",{"_index":2273,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel200accent",{"_index":2289,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel200warn",{"_index":2302,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel300",{"_index":2271,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel300accent",{"_index":2288,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel300warn",{"_index":2301,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel400",{"_index":2270,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel400accent",{"_index":2287,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel400warn",{"_index":2300,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel50",{"_index":2275,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel500",{"_index":2268,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel500accent",{"_index":2286,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel500warn",{"_index":2299,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel50accent",{"_index":2291,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel50warn",{"_index":2304,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel600",{"_index":2266,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel600accent",{"_index":2285,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel600warn",{"_index":2298,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel700",{"_index":2265,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel700accent",{"_index":2284,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel700warn",{"_index":2297,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel800",{"_index":2263,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel800accent",{"_index":2283,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel800warn",{"_index":2296,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel900",{"_index":2261,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel900accent",{"_index":2282,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panel900warn",{"_index":2295,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela100",{"_index":2280,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela100accent",{"_index":2294,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela100warn",{"_index":2307,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela400",{"_index":2278,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela400accent",{"_index":2293,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela400warn",{"_index":2306,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela700",{"_index":2276,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela700accent",{"_index":2292,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panela700warn",{"_index":2305,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["panelclass",{"_index":2922,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panelclicked",{"_index":2883,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["panels",{"_index":2385,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{}}}],["param",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["paramenters",{"_index":1262,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["parameters",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["parammap",{"_index":2640,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parammap.get('alarmid",{"_index":2641,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parammapsubscription",{"_index":2625,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["parent",{"_index":684,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTooltipComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["part",{"_index":824,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":3165,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2463,"title":{},"body":{"injectables/RoutingService.html":{}}}],["passed",{"_index":3190,"title":{},"body":{"license.html":{}}}],["passes",{"_index":1589,"title":{},"body":{"components/AppComponent.html":{}}}],["passing",{"_index":2146,"title":{},"body":{"components/LoginComponent.html":{}}}],["password",{"_index":1830,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["path",{"_index":1028,"title":{},"body":{"classes/AlarmSounds.html":{},"modules/AppRoutingModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["pathmatch",{"_index":1744,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paths",{"_index":2219,"title":{},"body":{"injectables/MapService.html":{}}}],["pathsgroup",{"_index":2221,"title":{},"body":{"injectables/MapService.html":{}}}],["pathsgroups",{"_index":2223,"title":{},"body":{"injectables/MapService.html":{}}}],["pathstring",{"_index":2790,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["payload",{"_index":1010,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["payload.data",{"_index":1015,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["pending",{"_index":330,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["perform",{"_index":982,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["performed",{"_index":1078,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasSidebarComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["performs",{"_index":1055,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["period",{"_index":1173,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["periodic",{"_index":1165,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["permanent",{"_index":3290,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1819,"title":{},"body":{"injectables/AuthService.html":{}}}],["permissions",{"_index":2683,"title":{},"body":{"interfaces/TimeoutOption.html":{},"license.html":{}}}],["permit",{"_index":3239,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1773,"title":{},"body":{"guards/AuthLoginGuard.html":{},"license.html":{}}}],["persists",{"_index":2680,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["pipe",{"_index":1869,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe(map((response",{"_index":1882,"title":{},"body":{"injectables/AuthService.html":{}}}],["pk",{"_index":2093,"title":{},"body":{"classes/Iasio.html":{}}}],["place",{"_index":3258,"title":{},"body":{"license.html":{}}}],["placemark",{"_index":544,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["placemarks",{"_index":2229,"title":{},"body":{"injectables/MapService.html":{}}}],["placemarksgroups",{"_index":2227,"title":{},"body":{"injectables/MapService.html":{}}}],["play",{"_index":972,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["playalarmsound(alarm",{"_index":1132,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["plays",{"_index":1159,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["please",{"_index":2678,"title":{},"body":{"interfaces/TimeoutOption.html":{},"index.html":{}}}],["point",{"_index":2082,"title":{},"body":{"classes/Iasio.html":{}}}],["pointer",{"_index":1331,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["points",{"_index":2069,"title":{},"body":{"classes/Iasio.html":{}}}],["popper.js",{"_index":3051,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":3172,"title":{},"body":{"license.html":{}}}],["position",{"_index":412,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["possible",{"_index":3059,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":1990,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":2003,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["pre",{"_index":642,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{}}}],["presence",{"_index":1574,"title":{},"body":{"components/AppComponent.html":{}}}],["present",{"_index":3245,"title":{},"body":{"license.html":{}}}],["prevalarmcoreid",{"_index":740,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["prevdependenciesstring",{"_index":744,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["previous",{"_index":1846,"title":{},"body":{"injectables/AuthService.html":{}}}],["previousalarmvalue",{"_index":1229,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["primary",{"_index":234,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["priorities",{"_index":2572,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["prioritity",{"_index":351,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["priority",{"_index":299,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{}}}],["priority_0",{"_index":2104,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_1",{"_index":2105,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_2",{"_index":2106,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_3",{"_index":2107,"title":{},"body":{"components/LegendComponent.html":{}}}],["priority_4",{"_index":2108,"title":{},"body":{"components/LegendComponent.html":{}}}],["prioritytext",{"_index":387,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["prioritytext.touppercase",{"_index":390,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["private",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":2158,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["problems",{"_index":3274,"title":{},"body":{"license.html":{}}}],["processed",{"_index":2012,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["processes",{"_index":2566,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["prod",{"_index":3107,"title":{},"body":{"index.html":{}}}],["produce",{"_index":3242,"title":{},"body":{"license.html":{}}}],["produced",{"_index":3162,"title":{},"body":{"license.html":{}}}],["production",{"_index":3108,"title":{},"body":{"index.html":{}}}],["proesses",{"_index":2009,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["programs",{"_index":3177,"title":{},"body":{"license.html":{}}}],["project",{"_index":3068,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":3220,"title":{},"body":{"license.html":{}}}],["promise",{"_index":2002,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.message",{"_index":2016,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["properly",{"_index":3249,"title":{},"body":{"license.html":{}}}],["properties",{"_index":33,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["props",{"_index":1286,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["protractor",{"_index":3117,"title":{},"body":{"index.html":{}}}],["provide",{"_index":1715,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["provided",{"_index":2185,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["providedin",{"_index":1412,"title":{},"body":{"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["providers",{"_index":254,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["provisory",{"_index":2426,"title":{},"body":{"components/OverviewComponent.html":{}}}],["proxy",{"_index":3284,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3287,"title":{},"body":{"license.html":{}}}],["public",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":3269,"title":{},"body":{"license.html":{}}}],["published",{"_index":3281,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":3201,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":426,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/HttpClientService.html":{}}}],["push",{"_index":2567,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1256,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"injectables/HttpClientService.html":{}}}],["put(url",{"_index":2005,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["r",{"_index":1305,"title":{},"body":{"components/AntennaMarkerComponent.html":{}}}],["radius",{"_index":133,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["raised",{"_index":2242,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["rate",{"_index":1926,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodule",{"_index":280,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":622,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["read_url",{"_index":1991,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["read_url(url",{"_index":2007,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["readalarmmessage(action",{"_index":1101,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readalarmmessageslist(alarmslist",{"_index":1108,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["readcountbyviewmessage(countbyview",{"_index":1110,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["reading",{"_index":734,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["readme",{"_index":3122,"title":{},"body":{"index.html":{}}}],["reads",{"_index":1094,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["received",{"_index":948,"title":{},"body":{"classes/AlarmSounds.html":{},"license.html":{}}}],["receives",{"_index":943,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{}}}],["recombine",{"_index":3240,"title":{},"body":{"license.html":{}}}],["recombining",{"_index":3254,"title":{},"body":{"license.html":{}}}],["record",{"_index":806,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recursively",{"_index":704,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":374,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["redirect",{"_index":1475,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/LoginComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirecting",{"_index":1785,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["redirectto",{"_index":1743,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":1799,"title":{},"body":{"injectables/AuthService.html":{}}}],["reference",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"license.html":{}}}],["refers",{"_index":3150,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":1924,"title":{},"body":{"injectables/CdbService.html":{}}}],["refreshed",{"_index":969,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["registry",{"_index":1563,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["registry['shelved_at",{"_index":2698,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["registry['timeout']).viewvalue",{"_index":2699,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["related",{"_index":350,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/TabularModule.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"index.html":{}}}],["relation",{"_index":484,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["relative",{"_index":413,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["release",{"_index":3077,"title":{},"body":{"index.html":{}}}],["reliable",{"_index":2378,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":3241,"title":{},"body":{"license.html":{}}}],["relinking",{"_index":3255,"title":{},"body":{"license.html":{}}}],["reload",{"_index":2686,"title":{},"body":{"interfaces/TimeoutOption.html":{},"index.html":{}}}],["reloads",{"_index":2685,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["remains",{"_index":3202,"title":{},"body":{"license.html":{}}}],["remove",{"_index":2425,"title":{},"body":{"components/OverviewComponent.html":{}}}],["removeallowedactions",{"_index":1807,"title":{},"body":{"injectables/AuthService.html":{}}}],["removetoken",{"_index":1808,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeuser",{"_index":1809,"title":{},"body":{"injectables/AuthService.html":{}}}],["repeat",{"_index":1133,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["repeated",{"_index":1140,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["repeatedly",{"_index":1160,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["replace('cleared",{"_index":388,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["replace('set_",{"_index":389,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["replacing",{"_index":1845,"title":{},"body":{"injectables/AuthService.html":{}}}],["represent",{"_index":2068,"title":{},"body":{"classes/Iasio.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["represents",{"_index":423,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["reproduce",{"_index":1139,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["reproduces",{"_index":1131,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["reproducing",{"_index":3178,"title":{},"body":{"license.html":{}}}],["repsonse",{"_index":1884,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":714,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["requests",{"_index":983,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{}}}],["requestshelveinfo",{"_index":2694,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatus",{"_index":2618,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requeststatusly",{"_index":2617,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["requestuserslist",{"_index":2726,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["require",{"_index":554,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["required",{"_index":2025,"title":{},"body":{"modules/IasMaterialModule.html":{},"index.html":{},"license.html":{}}}],["res",{"_index":1939,"title":{},"body":{"injectables/CdbService.html":{}}}],["reset",{"_index":265,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["resetcountbyview",{"_index":1112,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["resets",{"_index":1171,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["resettimer",{"_index":1178,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["resources",{"_index":2428,"title":{},"body":{"components/OverviewComponent.html":{}}}],["respective",{"_index":2376,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["response",{"_index":1056,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["response.push(pads[pad_name",{"_index":2915,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response.sort",{"_index":2916,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["response['allowed_actions",{"_index":1873,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['antennas",{"_index":1420,"title":{},"body":{"injectables/AntennasService.html":{}}}],["response['devices",{"_index":1422,"title":{},"body":{"injectables/AntennasService.html":{}}}],["response['status",{"_index":1081,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["response['token",{"_index":1885,"title":{},"body":{"injectables/AuthService.html":{}}}],["response['user_data",{"_index":1872,"title":{},"body":{"injectables/AuthService.html":{}}}],["response[0",{"_index":2697,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["restrict",{"_index":3227,"title":{},"body":{"license.html":{}}}],["result",{"_index":245,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["result.push('alarm",{"_index":359,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmTileComponent.html":{}}}],["result.push('blue",{"_index":584,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('gray",{"_index":587,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('green",{"_index":586,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('highlight",{"_index":1233,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["result.push('normal",{"_index":1234,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["result.push('red",{"_index":589,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('unreliable",{"_index":585,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["result.push('yellow",{"_index":588,"title":{},"body":{"components/AlarmHeaderComponent.html":{}}}],["results",{"_index":247,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["retrieve",{"_index":1310,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSummaryComponent.html":{}}}],["retrieved",{"_index":2147,"title":{},"body":{"components/LoginComponent.html":{}}}],["retruns",{"_index":911,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["retuns",{"_index":756,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["returned",{"_index":2154,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["returns",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusable",{"_index":2194,"title":{},"body":{"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["reverse",{"_index":3230,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3268,"title":{},"body":{"license.html":{}}}],["rgba(0",{"_index":1284,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["rgba(255",{"_index":1498,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["right",{"_index":128,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["right:4",{"_index":411,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["root",{"_index":1413,"title":{},"body":{"injectables/AntennasService.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{},"index.html":{}}}],["root'},{'name",{"_index":185,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["route",{"_index":1770,"title":{},"body":{"guards/AuthLoginGuard.html":{},"interfaces/TimeoutOption.html":{}}}],["router",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{},"injectables/RoutingService.html":{}}}],["routermodule",{"_index":1724,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":1751,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1766,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["routes",{"_index":1725,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":1474,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{}}}],["routing.module",{"_index":1709,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":1723,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.service",{"_index":1726,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":1708,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing/routing.service",{"_index":1535,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{}}}],["routing/routing.service.ts",{"_index":2439,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["routing/routing.service.ts:20",{"_index":2462,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:28",{"_index":2455,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:35",{"_index":2460,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:43",{"_index":2454,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:51",{"_index":2458,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:58",{"_index":2451,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:65",{"_index":2456,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routing/routing.service.ts:8",{"_index":2450,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routingservice",{"_index":1473,"title":{"injectables/RoutingService.html":{}},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"modules/AppRoutingModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["row",{"_index":1495,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["run",{"_index":3096,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":3109,"title":{},"body":{"index.html":{}}}],["running_id",{"_index":2356,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["rxjs",{"_index":674,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":917,"title":{},"body":{"classes/AlarmSounds.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["same",{"_index":698,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["sample",{"_index":200,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox",{"_index":211,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox'},{'name",{"_index":203,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sandbox.components",{"_index":1730,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MaterialSandboxModule.html":{}}}],["sandbox.components.html",{"_index":2251,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.scss",{"_index":2238,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts",{"_index":2236,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"coverage.html":{}}}],["sandbox.components.ts:123",{"_index":2393,"title":{},"body":{"components/MaterialColorsComponent.html":{}}}],["sandbox.components.ts:298",{"_index":2485,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:301",{"_index":2484,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:313",{"_index":2482,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:344",{"_index":2481,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:361",{"_index":2483,"title":{},"body":{"components/SandboxAlarmLabelComponent.html":{}}}],["sandbox.components.ts:39",{"_index":2394,"title":{},"body":{"components/MaterialColorsComponent.html":{}}}],["sandbox.components.ts:410",{"_index":2480,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:413",{"_index":2479,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:416",{"_index":2477,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:419",{"_index":2478,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:422",{"_index":2470,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:425",{"_index":2471,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:428",{"_index":2469,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:440",{"_index":2475,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:473",{"_index":2476,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:482",{"_index":2473,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:499",{"_index":2472,"title":{},"body":{"components/SandboxAlarmComponent.html":{}}}],["sandbox.components.ts:568",{"_index":2493,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:571",{"_index":2492,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:574",{"_index":2490,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:577",{"_index":2491,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:589",{"_index":2488,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:622",{"_index":2489,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:630",{"_index":2487,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.components.ts:647",{"_index":2486,"title":{},"body":{"components/SandboxAlarmTileComponent.html":{}}}],["sandbox.module",{"_index":1731,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sandbox.module.ts",{"_index":2399,"title":{},"body":{"modules/MaterialSandboxModule.html":{}}}],["sandbox/material",{"_index":1729,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"coverage.html":{}}}],["sandboxalarmcomponent",{"_index":210,"title":{"components/SandboxAlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sandboxalarmlabelcomponent",{"_index":212,"title":{"components/SandboxAlarmLabelComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sandboxalarmtilecomponent",{"_index":213,"title":{"components/SandboxAlarmTileComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sanitizer",{"_index":1625,"title":{},"body":{"components/AppComponent.html":{}}}],["sans",{"_index":2414,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["save",{"_index":1852,"title":{},"body":{"injectables/AuthService.html":{}}}],["saves",{"_index":1777,"title":{},"body":{"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{}}}],["scaffolding",{"_index":3101,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":2225,"title":{},"body":{"injectables/MapService.html":{}}}],["scenarios",{"_index":2344,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["secondary",{"_index":2318,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["seconds",{"_index":1928,"title":{},"body":{"injectables/CdbService.html":{},"components/WeatherSidebarComponent.html":{}}}],["section",{"_index":637,"title":{},"body":{"components/AlarmInfoComponent.html":{},"license.html":{}}}],["sections",{"_index":3181,"title":{},"body":{"license.html":{}}}],["select/deselect",{"_index":835,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected",{"_index":687,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"injectables/HttpClientService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selected.foreach",{"_index":844,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":685,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["selectedantenna",{"_index":1339,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["selecteddescendants",{"_index":827,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedstation",{"_index":2750,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["selection",{"_index":699,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["selectionmodel",{"_index":665,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(true",{"_index":712,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["self",{"_index":1502,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["send",{"_index":686,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"interfaces/TimeoutOption.html":{}}}],["sending",{"_index":1833,"title":{},"body":{"injectables/AuthService.html":{}}}],["sends",{"_index":990,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{}}}],["sent",{"_index":2594,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["separated",{"_index":1528,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serif",{"_index":2415,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["serve",{"_index":3097,"title":{},"body":{"index.html":{}}}],["server",{"_index":1832,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["services",{"_index":1559,"title":{},"body":{"components/AppComponent.html":{},"modules/DataModule.html":{}}}],["set",{"_index":444,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["set_critical",{"_index":491,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["set_high",{"_index":490,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["set_invalid",{"_index":2109,"title":{},"body":{"components/LegendComponent.html":{}}}],["set_low",{"_index":488,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["set_medium",{"_index":489,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["set_valid",{"_index":2110,"title":{},"body":{"components/LegendComponent.html":{}}}],["seterrormessage",{"_index":2136,"title":{},"body":{"components/LoginComponent.html":{}}}],["seterrormessage(error",{"_index":2150,"title":{},"body":{"components/LoginComponent.html":{}}}],["sets",{"_index":2152,"title":{},"body":{"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{}}}],["setsidenav",{"_index":2523,"title":{},"body":{"injectables/SidenavService.html":{}}}],["setsidenav(sidenav",{"_index":2534,"title":{},"body":{"injectables/SidenavService.html":{}}}],["settings",{"_index":624,"title":{},"body":{"components/AlarmInfoComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTooltipComponent.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSummaryComponent.html":{}}}],["shadow",{"_index":2926,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["shall",{"_index":3286,"title":{},"body":{"license.html":{}}}],["share",{"_index":2343,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["shared",{"_index":2351,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.component",{"_index":1409,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.module",{"_index":289,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["sharedmodule",{"_index":263,"title":{"modules/SharedModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":332,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["shelve",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve'},{'name",{"_index":216,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["shelve.component.html",{"_index":2599,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve.component.scss",{"_index":2600,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelve/:alarmid",{"_index":1750,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shelve/shelve.component",{"_index":273,"title":{},"body":{"modules/ActionsModule.html":{}}}],["shelve/unshelve",{"_index":2509,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["shelvealarm(alarm_id",{"_index":1079,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shelvebuttoncomponent",{"_index":214,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelvecomponent",{"_index":215,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved",{"_index":357,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["shelved/unshelved",{"_index":2615,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelved?({{alarm.shelved",{"_index":2350,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["shelvedatmessage",{"_index":2623,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["shelveregistry",{"_index":1072,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shelves",{"_index":1075,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["shelving",{"_index":1076,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["shiba",{"_index":2322,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["shleve/unshelve",{"_index":2459,"title":{},"body":{"injectables/RoutingService.html":{},"injectables/SidenavService.html":{}}}],["short",{"_index":2081,"title":{},"body":{"classes/Iasio.html":{}}}],["short_desc",{"_index":2073,"title":{},"body":{"classes/Iasio.html":{}}}],["shortened",{"_index":339,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["shouldreload",{"_index":2521,"title":{},"body":{"injectables/SidenavService.html":{}}}],["show",{"_index":871,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["showactionbadges",{"_index":310,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["showaspendingack",{"_index":306,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["showasshelved",{"_index":307,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["showbadgesoptions",{"_index":1191,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["showpriorityleveltext",{"_index":434,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["shows",{"_index":2156,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["showspinner",{"_index":2720,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["showtext",{"_index":858,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["showtextoptions",{"_index":854,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["shuttedown",{"_index":3062,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["side",{"_index":3260,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":1334,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":181,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sidebar.component",{"_index":1363,"title":{},"body":{"modules/AntennasModule.html":{},"modules/WeatherModule.html":{}}}],["sidebar.component.html",{"_index":1441,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1440,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":1439,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:100",{"_index":1467,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:110",{"_index":2900,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:17",{"_index":2932,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:18",{"_index":1452,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:19",{"_index":2887,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":2931,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:21",{"_index":1451,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:22",{"_index":2886,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:28",{"_index":2935,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":2934,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:30",{"_index":1472,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1471,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:32",{"_index":2904,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:33",{"_index":2902,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":2903,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":1464,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:41",{"_index":2933,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["sidebar.component.ts:42",{"_index":2896,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:47",{"_index":1456,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:51",{"_index":2889,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:55",{"_index":1458,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:63",{"_index":1459,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:70",{"_index":2892,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:75",{"_index":1460,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:82",{"_index":1469,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:88",{"_index":2895,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar.component.ts:92",{"_index":1463,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["sidebar.component.ts:96",{"_index":2898,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sidebar/antennas",{"_index":1362,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSidebarComponent.html":{},"coverage.html":{}}}],["sidebar/weather",{"_index":2774,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"coverage.html":{}}}],["sidenav",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AntennasComponent.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{}}}],["sidenav.service",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["sidenavreloadsubscription",{"_index":2627,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["sidenavservice",{"_index":35,"title":{"injectables/SidenavService.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AppComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"coverage.html":{},"overview.html":{}}}],["sidenv",{"_index":2518,"title":{},"body":{"injectables/SidenavService.html":{}}}],["similar",{"_index":3270,"title":{},"body":{"license.html":{}}}],["simplechange",{"_index":663,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["simplechanges",{"_index":662,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmTileComponent.html":{}}}],["single",{"_index":3261,"title":{},"body":{"license.html":{}}}],["six",{"_index":2327,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["size",{"_index":319,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{}}}],["size:10px",{"_index":406,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["sizeoptions",{"_index":430,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["sizes",{"_index":479,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["sizing",{"_index":1664,"title":{},"body":{"components/AppComponent.html":{}}}],["slider",{"_index":2320,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sm",{"_index":476,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["small",{"_index":2333,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["smallest",{"_index":2326,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["snackbar",{"_index":2880,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["sneds",{"_index":1817,"title":{},"body":{"injectables/AuthService.html":{}}}],["software",{"_index":3132,"title":{},"body":{"license.html":{}}}],["solid",{"_index":394,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["sort",{"_index":555,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["sound",{"_index":889,"title":{},"body":{"classes/AlarmSounds.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sound1",{"_index":2361,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["sounding",{"_index":974,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["soundingalarm",{"_index":975,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["sounds",{"_index":965,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["soundtoplay",{"_index":1144,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"modules/AntennasModule.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthLoginGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"modules/MapModule.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1288,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["span",{"_index":1491,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["specialized",{"_index":1522,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specific",{"_index":2420,"title":{},"body":{"components/OverviewComponent.html":{}}}],["specified",{"_index":1526,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["specifies",{"_index":3277,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3282,"title":{},"body":{"license.html":{}}}],["speed",{"_index":2852,"title":{},"body":{"injectables/WeatherService.html":{}}}],["spinner",{"_index":284,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/IasMaterialModule.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{},"interfaces/TimeoutOption.html":{},"dependencies.html":{}}}],["spinnerservice",{"_index":2139,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["spirit",{"_index":3271,"title":{},"body":{"license.html":{}}}],["spitz",{"_index":2330,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["src/.../alarm.ts",{"_index":3058,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/actions/ack",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/actions/ack/ack.component.ts",{"_index":2967,"title":{},"body":{"coverage.html":{}}}],["src/app/actions/actions.module.ts",{"_index":267,"title":{},"body":{"modules/ActionsModule.html":{}}}],["src/app/actions/buttons/buttons.component.ts",{"_index":1906,"title":{},"body":{"components/ButtonsComponent.html":{},"coverage.html":{}}}],["src/app/actions/buttons/buttons.component.ts:18",{"_index":1912,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/buttons/buttons.component.ts:28",{"_index":1913,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["src/app/actions/shelve",{"_index":2506,"title":{},"body":{"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["src/app/actions/shelve/shelve.component.ts",{"_index":2590,"title":{},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts",{"_index":2517,"title":{},"body":{"injectables/SidenavService.html":{},"coverage.html":{}}}],["src/app/actions/sidenav.service.ts:18",{"_index":2539,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:23",{"_index":2525,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:33",{"_index":2540,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:36",{"_index":2538,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:42",{"_index":2535,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:49",{"_index":2532,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:56",{"_index":2526,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:63",{"_index":2528,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:71",{"_index":2536,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:79",{"_index":2530,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/sidenav.service.ts:87",{"_index":2531,"title":{},"body":{"injectables/SidenavService.html":{}}}],["src/app/actions/wiki",{"_index":2948,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas",{"_index":1296,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.module.ts",{"_index":1358,"title":{},"body":{"modules/AntennasModule.html":{}}}],["src/app/antennas/antennas.service.ts",{"_index":1372,"title":{},"body":{"injectables/AntennasService.html":{},"coverage.html":{}}}],["src/app/antennas/antennas.service.ts:18",{"_index":1399,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:21",{"_index":1407,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:24",{"_index":1402,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:27",{"_index":1405,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:30",{"_index":1397,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:33",{"_index":1398,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:36",{"_index":1386,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:50",{"_index":1389,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:61",{"_index":1391,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:83",{"_index":1388,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas.service.ts:91",{"_index":1393,"title":{},"body":{"injectables/AntennasService.html":{}}}],["src/app/antennas/antennas/antennas.component.ts",{"_index":1332,"title":{},"body":{"components/AntennasComponent.html":{},"coverage.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:16",{"_index":1341,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:26",{"_index":1342,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/antennas/antennas.component.ts:32",{"_index":1344,"title":{},"body":{"components/AntennasComponent.html":{}}}],["src/app/antennas/tests_fixtures.ts",{"_index":2977,"title":{},"body":{"coverage.html":{}}}],["src/app/app",{"_index":1722,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":1542,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:117",{"_index":1588,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:138",{"_index":1565,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:150",{"_index":1590,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:160",{"_index":1583,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:168",{"_index":1586,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:181",{"_index":1571,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:210",{"_index":1581,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":1597,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":1613,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":1602,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":1609,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":1558,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":1600,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":1601,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:84",{"_index":1614,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:85",{"_index":1599,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":1611,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":1699,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth",{"_index":1755,"title":{},"body":{"guards/AuthLoginGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.module.ts",{"_index":1792,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":1794,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:117",{"_index":1831,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:140",{"_index":1835,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:150",{"_index":1826,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:163",{"_index":1827,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:176",{"_index":1818,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:188",{"_index":1841,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:195",{"_index":1842,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:20",{"_index":1857,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:202",{"_index":1838,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:210",{"_index":1848,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:219",{"_index":1850,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:228",{"_index":1844,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:25",{"_index":1858,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:30",{"_index":1851,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:35",{"_index":1855,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:41",{"_index":1853,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:46",{"_index":1814,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:60",{"_index":1816,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:69",{"_index":1823,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:86",{"_index":1828,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/login/login.component.ts",{"_index":2131,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/auth/login/login.component.ts:102",{"_index":2148,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:112",{"_index":2151,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:20",{"_index":2163,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:25",{"_index":2162,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:30",{"_index":2167,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:35",{"_index":2165,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:41",{"_index":2141,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:53",{"_index":2160,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:54",{"_index":2166,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:62",{"_index":2149,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:75",{"_index":2145,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/data/alarm",{"_index":536,"title":{},"body":{"classes/AlarmConfig.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.ts",{"_index":886,"title":{},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.ts:21",{"_index":900,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:24",{"_index":902,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:27",{"_index":904,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:30",{"_index":906,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:33",{"_index":908,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.service.ts:40",{"_index":910,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["src/app/data/alarm.ts",{"_index":2988,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/cdb.service.ts",{"_index":1914,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:15",{"_index":1936,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:20",{"_index":1934,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:25",{"_index":1922,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:39",{"_index":1932,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:50",{"_index":1931,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:58",{"_index":1923,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:72",{"_index":1929,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.ts",{"_index":1950,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/http",{"_index":1984,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts",{"_index":2067,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":2080,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":2077,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":2076,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":2087,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":2084,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":2079,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/user.service.ts",{"_index":2721,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/data/user.service.ts:26",{"_index":2729,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/data/user.service.ts:40",{"_index":2730,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/health/health",{"_index":1960,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.ts",{"_index":1958,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ias",{"_index":2023,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/map/fixtures.ts",{"_index":2991,"title":{},"body":{"coverage.html":{}}}],["src/app/map/map.module.ts",{"_index":2209,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/map/map.service.ts",{"_index":2212,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/map/map.service.ts:19",{"_index":2217,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:44",{"_index":2224,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map.service.ts:7",{"_index":2215,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/map/map/map.component.ts",{"_index":2193,"title":{},"body":{"components/MapComponent.html":{},"coverage.html":{}}}],["src/app/map/map/map.component.ts:16",{"_index":2200,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:21",{"_index":2199,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/map/map/map.component.ts:31",{"_index":2201,"title":{},"body":{"components/MapComponent.html":{}}}],["src/app/material",{"_index":2235,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"modules/MaterialSandboxModule.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview",{"_index":2404,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.ts",{"_index":2434,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.ts",{"_index":2418,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":2423,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":2424,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.ts",{"_index":2992,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/alarm",{"_index":291,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts",{"_index":422,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:10",{"_index":600,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:100",{"_index":447,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:105",{"_index":478,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:110",{"_index":439,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:120",{"_index":466,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:13",{"_index":604,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:134",{"_index":456,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:142",{"_index":458,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:16",{"_index":605,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:175",{"_index":462,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:19",{"_index":603,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:214",{"_index":464,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:22",{"_index":602,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:222",{"_index":468,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:230",{"_index":470,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:238",{"_index":471,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:25",{"_index":606,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:28",{"_index":601,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:31",{"_index":599,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:58",{"_index":441,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:63",{"_index":454,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:68",{"_index":443,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:73",{"_index":445,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:79",{"_index":450,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:85",{"_index":449,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:90",{"_index":452,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:95",{"_index":455,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/fixtures.ts",{"_index":3004,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2498,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/status",{"_index":2551,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts",{"_index":2099,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:15",{"_index":2114,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:18",{"_index":2113,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:21",{"_index":2129,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:24",{"_index":2115,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:27",{"_index":2128,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:30",{"_index":2127,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:33",{"_index":2117,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:36",{"_index":2119,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:39",{"_index":2122,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:42",{"_index":2124,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:45",{"_index":2111,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:51",{"_index":2112,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/table/fixtures.ts",{"_index":3005,"title":{},"body":{"coverage.html":{}}}],["src/app/tabular/table/table.component.ts",{"_index":3014,"title":{},"body":{"coverage.html":{}}}],["src/app/tabular/tabular",{"_index":2581,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/tabular.module.ts",{"_index":2578,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/test_fixtures.ts",{"_index":3016,"title":{},"body":{"coverage.html":{}}}],["src/app/weather/weather",{"_index":2731,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.ts",{"_index":2768,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/app/weather/weather.service.ts",{"_index":2799,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/weather/weather.service.ts:114",{"_index":2820,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:124",{"_index":2822,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:133",{"_index":2830,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:145",{"_index":2832,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:157",{"_index":2828,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:18",{"_index":2833,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:21",{"_index":2842,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:24",{"_index":2850,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:27",{"_index":2836,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:30",{"_index":2835,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:33",{"_index":2844,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:36",{"_index":2853,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:39",{"_index":2838,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:42",{"_index":2849,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:45",{"_index":2847,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:48",{"_index":2846,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:51",{"_index":2839,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:54",{"_index":2841,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:57",{"_index":2817,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:72",{"_index":2827,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather.service.ts:86",{"_index":2819,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weather/weather.component.ts",{"_index":2745,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather/weather.component.ts:16",{"_index":2752,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:27",{"_index":2755,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather/weather.component.ts:33",{"_index":2754,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.docker.ts",{"_index":3024,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":3025,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.ts",{"_index":3026,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":995,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{}}}],["startanimation",{"_index":1195,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["started",{"_index":3066,"title":{"index.html":{},"license.html":{}},"body":{}}],["startup",{"_index":717,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":731,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["state.url",{"_index":1782,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["state_change_timestamp",{"_index":2359,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["statement",{"_index":3288,"title":{},"body":{"license.html":{}}}],["statements",{"_index":2958,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":446,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/LegendComponent.html":{}}}],["static",{"_index":893,"title":{},"body":{"classes/AlarmSounds.html":{},"classes/Iasio.html":{}}}],["station",{"_index":239,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["stationconfig",{"_index":2736,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["stationconfig.group",{"_index":2911,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["stationconfig.placemark",{"_index":2918,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["stations",{"_index":2837,"title":{},"body":{"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{}}}],["status",{"_index":218,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["statuses",{"_index":486,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["statusviewcomponent",{"_index":217,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":3198,"title":{},"body":{"license.html":{}}}],["stop",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["stopanimation",{"_index":1196,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["stops",{"_index":1152,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["storage",{"_index":1822,"title":{},"body":{"injectables/AuthService.html":{}}}],["storageitems",{"_index":2993,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":619,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{}}}],["storeallowedactions",{"_index":1810,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeallowedactions(allowed_actions",{"_index":1843,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":1820,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["stores",{"_index":538,"title":{},"body":{"classes/AlarmConfig.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["storetoken",{"_index":1811,"title":{},"body":{"injectables/AuthService.html":{}}}],["storetoken(token",{"_index":1847,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeuser",{"_index":1812,"title":{},"body":{"injectables/AuthService.html":{}}}],["storeuser(user",{"_index":1849,"title":{},"body":{"injectables/AuthService.html":{}}}],["stream",{"_index":952,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/SidenavService.html":{}}}],["streamname",{"_index":1011,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["streams",{"_index":928,"title":{},"body":{"classes/AlarmSounds.html":{},"coverage.html":{}}}],["string",{"_index":342,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["string(count",{"_index":1653,"title":{},"body":{"components/AppComponent.html":{}}}],["structure",{"_index":792,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["style",{"_index":393,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["styleurls",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":793,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subalarms",{"_index":1503,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["subclass",{"_index":3160,"title":{},"body":{"license.html":{}}}],["subcomponents",{"_index":1908,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["subscribe",{"_index":2179,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["subscribes",{"_index":1970,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["subscription",{"_index":2624,"title":{},"body":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["subscriptionlike",{"_index":2597,"title":{},"body":{"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["subsubtree",{"_index":786,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subsystem",{"_index":2941,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["subsystems",{"_index":2406,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["subtree",{"_index":703,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtree[childid",{"_index":788,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subtreeisempty",{"_index":789,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["succesfull",{"_index":1779,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["succesfully",{"_index":2674,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["successful",{"_index":1834,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["successfully",{"_index":2619,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["such",{"_index":1263,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"license.html":{}}}],["sudo",{"_index":3090,"title":{},"body":{"index.html":{}}}],["suitable",{"_index":3238,"title":{},"body":{"license.html":{}}}],["summarized",{"_index":1515,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary",{"_index":1406,"title":{},"body":{"injectables/AntennasService.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'name",{"_index":183,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.component",{"_index":1370,"title":{},"body":{"modules/AntennasModule.html":{},"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.html",{"_index":1518,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.scss",{"_index":1517,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts",{"_index":1514,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:111",{"_index":1966,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:15",{"_index":1521,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:18",{"_index":2942,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:22",{"_index":1971,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:25",{"_index":1533,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:27",{"_index":2946,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:28",{"_index":1964,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:33",{"_index":1531,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:35",{"_index":2944,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":1534,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:44",{"_index":2943,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:45",{"_index":1968,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:51",{"_index":2945,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:53",{"_index":1972,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:55",{"_index":1524,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:62",{"_index":1532,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["summary.component.ts:64",{"_index":1967,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:79",{"_index":1965,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary/antennas",{"_index":1369,"title":{},"body":{"modules/AntennasModule.html":{},"components/AntennasSummaryComponent.html":{},"coverage.html":{}}}],["summary/health",{"_index":1959,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weather",{"_index":2771,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary_url",{"_index":1423,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["supplemented",{"_index":3145,"title":{},"body":{"license.html":{}}}],["supplied",{"_index":3188,"title":{},"body":{"license.html":{}}}],["supply",{"_index":3197,"title":{},"body":{"license.html":{}}}],["support",{"_index":298,"title":{},"body":{"components/AlarmCardComponent.html":{},"modules.html":{}}}],["svg",{"_index":2788,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{},"modules.html":{}}}],["svgicon",{"_index":1604,"title":{},"body":{"components/AppComponent.html":{}}}],["svgicons",{"_index":1624,"title":{},"body":{"components/AppComponent.html":{}}}],["svgpaths",{"_index":2220,"title":{},"body":{"injectables/MapService.html":{}}}],["system",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["t.value",{"_index":2676,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["table",{"_index":571,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":221,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["table.svg",{"_index":1633,"title":{},"body":{"components/AppComponent.html":{}}}],["table/table.component",{"_index":2580,"title":{},"body":{"modules/TabularModule.html":{}}}],["tablecomponent",{"_index":220,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3027,"title":{},"body":{"coverage.html":{}}}],["tablewithfilter",{"_index":2448,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filter",{"_index":2461,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":223,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filter",{"_index":1747,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular",{"_index":1734,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabular/tabular.module",{"_index":1366,"title":{},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{}}}],["tabularmodule",{"_index":1357,"title":{"modules/TabularModule.html":{}},"body":{"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcomponent",{"_index":222,"title":{"components/TabularViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tags",{"_index":2562,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["taken",{"_index":3224,"title":{},"body":{"license.html":{}}}],["target",{"_index":1065,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["targetanimationstate",{"_index":1192,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["td",{"_index":1504,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["temperature",{"_index":2843,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tempimageset",{"_index":2806,"title":{},"body":{"injectables/WeatherService.html":{}}}],["tempimageunreliableset",{"_index":2807,"title":{},"body":{"injectables/WeatherService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["templates",{"_index":3215,"title":{},"body":{"license.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":3216,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3143,"title":{},"body":{"license.html":{}}}],["terrain",{"_index":2339,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["test",{"_index":2319,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"index.html":{}}}],["tests",{"_index":3111,"title":{},"body":{"index.html":{}}}],["text",{"_index":297,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["th",{"_index":639,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this._getsubtree(childalarm",{"_index":787,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._getsubtree(this.selectedalarm",{"_index":776,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this._initialized",{"_index":1414,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["this.acklist",{"_index":842,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":845,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.actionssidenavservice.canclose",{"_index":1640,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.close",{"_index":1636,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actionssidenavservice.setsidenav(this.actionssidenav",{"_index":1635,"title":{},"body":{"components/AppComponent.html":{}}}],["this.add_or_update_alarm(alarm",{"_index":1103,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarm",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.ack",{"_index":121,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.alarmvalue",{"_index":386,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["this.alarm.core_id",{"_index":380,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.mode",{"_index":364,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.shelved",{"_index":362,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarm.showasmaintenance",{"_index":366,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.state_change_timestamp",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.alarm.validity",{"_index":376,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm.value",{"_index":368,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["this.alarm_id",{"_index":567,"title":{},"body":{"classes/AlarmConfig.html":{},"interfaces/TimeoutOption.html":{}}}],["this.alarmchangestream.next(any",{"_index":993,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmchangesubscription",{"_index":2646,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmchangesubscription.unsubscribe",{"_index":2656,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmconfig",{"_index":1974,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmconfig[0",{"_index":1975,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmiconspriorityset",{"_index":2573,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmiconsset",{"_index":2379,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["this.alarmiconsunreliableset",{"_index":2380,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["this.alarmnamemaxsize",{"_index":382,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["this.alarms.push(alarm",{"_index":2368,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["this.alarmsarray",{"_index":1164,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray.push(alarm",{"_index":1124,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[alarm.core_id",{"_index":1120,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsarray[this.alarmsindexes[core_id",{"_index":1045,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmservice.alarmchangestream",{"_index":2647,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(alarm_id",{"_index":1477,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.get(childid",{"_index":783,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":2687,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.get(this.alarmconfig[0].alarm_id",{"_index":1976,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.stationconfig.alarm_id",{"_index":2798,"title":{},"body":{"components/WeatherPrimaryWsMarkerComponent.html":{}}}],["this.alarmservice.getalarm(conf[0",{"_index":1539,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.alarmservice.getalarm(this.selectedantenna",{"_index":1479,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.getalarm(this.stationconfig",{"_index":2744,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{}}}],["this.alarmservice.getname(selectedantenna",{"_index":1488,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.alarmservice.getshelveregistries(this.alarm_id",{"_index":2695,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.initialize",{"_index":1634,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.isalarmindexavailable",{"_index":2651,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.shelvealarm",{"_index":2707,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmservice.unshelvealarms",{"_index":2713,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.alarmsindexes",{"_index":1047,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmsindexes[alarm.core_id",{"_index":1125,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":846,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.antennaclicked.emit(this.selectedantenna",{"_index":1481,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennaimageset",{"_index":1430,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennaimageunreliableset",{"_index":1437,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennasconfig",{"_index":1419,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennasmapname",{"_index":1428,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.antennasservice.antennasconfig",{"_index":1478,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.antennassummaryconfig",{"_index":1537,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.antennasservice.devicesconfig",{"_index":1480,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.antennasservice.initialize",{"_index":1476,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{}}}],["this.antennassummaryconfig",{"_index":1426,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.audio",{"_index":1002,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.addeventlistener('ended",{"_index":1147,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.load",{"_index":1150,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.pause",{"_index":1136,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.paused",{"_index":1138,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.play",{"_index":1151,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.audio.src",{"_index":1146,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.getallowedactions()['can_shelve",{"_index":2661,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.getallowedactions()['can_unshelve",{"_index":2663,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.authservice.gettoken",{"_index":1032,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/HttpClientService.html":{}}}],["this.authservice.getuser",{"_index":1643,"title":{},"body":{"components/AppComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.authservice.hasvalidtoken().pipe(map((response",{"_index":1784,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.authservice.login",{"_index":2176,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginstatus",{"_index":999,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.authservice.loginstatusstream.subscribe",{"_index":987,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{}}}],["this.authservice.logout",{"_index":1644,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.redirecturl",{"_index":1786,"title":{},"body":{"guards/AuthLoginGuard.html":{},"components/LoginComponent.html":{}}}],["this.buildfiletree(tree_data",{"_index":755,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":802,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledge",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":2706,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.cansound",{"_index":1001,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.getbroadcastthreshold",{"_index":1181,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.cdbservice.initialize",{"_index":1000,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms('all",{"_index":1109,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changealarms(alarm.core_id",{"_index":1104,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.changeloginstatus(false",{"_index":1864,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.changeloginstatus(true",{"_index":1876,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.check_request_and_reload",{"_index":2642,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.checklistselection.deselect(...descendants",{"_index":840,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(node",{"_index":832,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":823,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(descendant",{"_index":830,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(node",{"_index":838,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscribe",{"_index":727,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descendants",{"_index":839,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(node",{"_index":831,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.selected",{"_index":843,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(node",{"_index":837,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklogin(url",{"_index":1783,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.clearsoundsifack(alarm",{"_index":1130,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.clipboardservice.copyfromcontent(result",{"_index":2908,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.close",{"_index":2545,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.connect",{"_index":1003,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(false",{"_index":1184,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.next(true",{"_index":1005,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatusstream.subscribe",{"_index":985,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustimer",{"_index":1179,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.connectionstatustimer.unsubscribe",{"_index":1180,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.coords",{"_index":2792,"title":{},"body":{"components/WeatherPrimaryWsConnectorComponent.html":{}}}],["this.countbyview",{"_index":1111,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.currenttime",{"_index":1148,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.custom_name",{"_index":566,"title":{},"body":{"classes/AlarmConfig.html":{}}}],["this.datasource",{"_index":725,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.datasource.data",{"_index":754,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.dateformat",{"_index":626,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.definealarmsandicons",{"_index":1973,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimages",{"_index":2375,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{}}}],["this.destroy",{"_index":989,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.devicesconfig",{"_index":1421,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.disableanimation",{"_index":1226,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl",{"_index":1628,"title":{},"body":{"components/AppComponent.html":{}}}],["this.elementref.nativeelement.children[0",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.emitsound(alarm.sound",{"_index":1137,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.errormessage",{"_index":2169,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.flatnodemap.set(flatnode",{"_index":817,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.focusmonitor.stopmonitoring(buttonref",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.form",{"_index":2637,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.form.get('message').value).subscribe",{"_index":2714,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.form.valid",{"_index":2665,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.formbuilder.group",{"_index":2174,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.formgroup",{"_index":2173,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.password.value",{"_index":2178,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formgroup.controls.user.value",{"_index":2177,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.generatealarmslist",{"_index":2369,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["this.get(alarm_id",{"_index":1083,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.get(config.alarm_id",{"_index":1049,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.get(id",{"_index":1061,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmlist",{"_index":1006,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.getalarmname",{"_index":391,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{}}}],["this.getantennas(stationconfig",{"_index":2906,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.getchildren",{"_index":722,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().subscribe((res",{"_index":1937,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getconnectionpath",{"_index":1023,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.gethttpheaders",{"_index":1868,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["this.getlevel",{"_index":720,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmockalarm",{"_index":2367,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["this.getpadsstatus(group).subscribe",{"_index":2867,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.getprioritytext",{"_index":873,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["this.gettoken",{"_index":1862,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettreedata",{"_index":753,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getuser",{"_index":1656,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hidespinner",{"_index":2709,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.http.delete(this.read_url(url",{"_index":2021,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(this.read_url(url",{"_index":2018,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(url",{"_index":1867,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.read_url(url",{"_index":2019,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(url",{"_index":1881,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.put(this.read_url(url",{"_index":2020,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclient.get(backendurls.weather_summary).subscribe((response",{"_index":2873,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.httpclient.get(backendurls.weather_view).subscribe((response",{"_index":2871,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.httpclient.get(summary_url).subscribe((response",{"_index":1425,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["this.httpclient.get(url",{"_index":1429,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["this.httpclient.get(url).subscribe((response",{"_index":1418,"title":{},"body":{"injectables/AntennasService.html":{}}}],["this.httpclientservice.get(backendurls.users_list",{"_index":2727,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":1941,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(url).pipe",{"_index":1070,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.post(backendurls.shelve_api",{"_index":1080,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.tickets_multiple_ack",{"_index":1059,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.httpclientservice.put(backendurls.unshelve_api",{"_index":1086,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.humidityimageset",{"_index":2858,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.humidityimageunreliableset",{"_index":2862,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.iasconfiguration",{"_index":1938,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(true",{"_index":1940,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1978,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1982,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.initialize",{"_index":988,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isexpandable",{"_index":721,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isinitialized",{"_index":998,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.isnavigationcompacted",{"_index":1642,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isvalidiasio(json",{"_index":2094,"title":{},"body":{"classes/Iasio.html":{}}}],["this.labelmode",{"_index":502,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.lastalarmid",{"_index":2548,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.loadalarmsconfig",{"_index":1415,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{}}}],["this.loadimages",{"_index":1416,"title":{},"body":{"injectables/AntennasService.html":{},"injectables/WeatherService.html":{}}}],["this.loadpadsstatus",{"_index":2856,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.loadweatherstationsconfig",{"_index":2855,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.loginstatus",{"_index":1860,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginstatusstream.next(status",{"_index":1861,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logout",{"_index":1879,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.markerimageset",{"_index":2876,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.markerimageunreliableset",{"_index":2878,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.maticonregistry",{"_index":1626,"title":{},"body":{"components/AppComponent.html":{}}}],["this.message",{"_index":2633,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.message.reset",{"_index":2689,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.message.value",{"_index":2704,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.nestednodemap.get(node",{"_index":812,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":813,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(node",{"_index":811,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(node",{"_index":818,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.opensnackbar(message",{"_index":2909,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.optionalalarmname",{"_index":379,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{}}}],["this.padsstatus",{"_index":2869,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.padsstatusavailable.next(false",{"_index":2868,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.padsstatusavailable.next(true",{"_index":2870,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.panelclicked.emit(this.selectedstation",{"_index":2919,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.parammapsubscription",{"_index":2638,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.parammapsubscription.unsubscribe",{"_index":2654,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.password",{"_index":2172,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.password.seterrors({'incorrect",{"_index":2188,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.play",{"_index":1149,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.playalarmsound(alarm",{"_index":1128,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessage(payload.action",{"_index":1014,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readalarmmessageslist(payload.data",{"_index":1018,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.readcountbyviewmessage(payload.data",{"_index":1021,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.reload",{"_index":2645,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.removeallowedactions",{"_index":1903,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removetoken",{"_index":1888,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.removeuser",{"_index":1889,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.requestshelveinfo",{"_index":2688,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.requeststatus",{"_index":2672,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.resetcountbyview",{"_index":1008,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.resettimer",{"_index":1013,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.route.parammap",{"_index":2639,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.router.navigate(['/login",{"_index":1788,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["this.router.navigate(['/tabular",{"_index":2466,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['antennas",{"_index":2467,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate(['weather",{"_index":2468,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.router.navigate([redirect",{"_index":2181,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([{outlets",{"_index":1637,"title":{},"body":{"components/AppComponent.html":{},"injectables/RoutingService.html":{}}}],["this.routing.gotoantennas",{"_index":1541,"title":{},"body":{"components/AntennasSummaryComponent.html":{}}}],["this.routing.gotoweather",{"_index":2947,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.routing.tablewithfilter(filter",{"_index":1540,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.routingservice.cleanactionoutlet",{"_index":2544,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoacknowledge(alarm_id",{"_index":2547,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.routingservice.gotoshelve(alarm_id",{"_index":2550,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.selectedalarm",{"_index":737,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedalarm.alarm_id",{"_index":2936,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.selectedantenna",{"_index":1348,"title":{},"body":{"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.alarm_id",{"_index":1486,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedantenna.placemark",{"_index":1482,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["this.selectedstation",{"_index":2756,"title":{},"body":{"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["this.selectedstation.placemark",{"_index":2917,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.seterrormessage(error",{"_index":2183,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.shelve",{"_index":2693,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shelvedatmessage",{"_index":2636,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.shouldreload.next(true",{"_index":2549,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.showactionbadges",{"_index":377,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.showspinner",{"_index":2703,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.showtextoptions.indexof(this.showtext",{"_index":872,"title":{},"body":{"components/AlarmLabelComponent.html":{}}}],["this.sidenav",{"_index":2541,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.close",{"_index":2543,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.open",{"_index":2542,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenav.toggle",{"_index":2546,"title":{},"body":{"injectables/SidenavService.html":{}}}],["this.sidenavreloadsubscription",{"_index":2643,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavreloadsubscription.unsubscribe",{"_index":2655,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.canclose",{"_index":122,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.closeandclean",{"_index":2657,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.gotoacknowledge(this.alarm.core_id",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.sidenavservice.gotoshelve(this.alarm.core_id",{"_index":2516,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.sidenavservice.open",{"_index":2648,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sidenavservice.shouldreload",{"_index":2644,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.sizeoptions.indexof(this.size",{"_index":501,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{}}}],["this.snackbar.open(message",{"_index":2920,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.soundingalarm",{"_index":1135,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.spinnerservice.hide",{"_index":2182,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.spinnerservice.show",{"_index":2175,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.startanimation",{"_index":1227,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["this.stationconfig.alarm_id",{"_index":2937,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["this.stopanimation",{"_index":1231,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["this.storeallowedactions(allowed_actions",{"_index":1875,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storetoken(token",{"_index":1886,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(user_data['username",{"_index":1874,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeuser(username",{"_index":1887,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.targetanimationstate",{"_index":1225,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["this.tempimageset",{"_index":2859,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.tempimageunreliableset",{"_index":2863,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.text",{"_index":503,"title":{},"body":{"components/AlarmComponent.html":{}}}],["this.timeout",{"_index":2634,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.reset(this.defaulttimeout",{"_index":2690,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.value",{"_index":2705,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeout.value).viewvalue",{"_index":2677,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts.find(t",{"_index":2675,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timeouts[0].value",{"_index":2614,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.timezone",{"_index":628,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.treecontrol",{"_index":723,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(node",{"_index":821,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflattener",{"_index":718,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.triggeralarmsnonvalidconnectionstate",{"_index":986,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.unshelve",{"_index":2692,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.updateacklist",{"_index":728,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.updatedata",{"_index":729,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.url",{"_index":2952,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.url.match(/^https?:\\/\\//i",{"_index":2953,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["this.user",{"_index":2170,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["this.user.seterrors({'incorrect",{"_index":2187,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.user_selected",{"_index":2708,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["this.users",{"_index":2728,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.userservice.requestuserslist",{"_index":1639,"title":{},"body":{"components/AppComponent.html":{}}}],["this.weathermapname",{"_index":2865,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.weatherservice.initialize",{"_index":2905,"title":{},"body":{"components/WeatherSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.weatherservice.padsstatus",{"_index":2910,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherservice.padsstatus[stationconfig.group",{"_index":2912,"title":{},"body":{"components/WeatherSidebarComponent.html":{}}}],["this.weatherstationsconfig",{"_index":2872,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.weathersummaryconfig",{"_index":2874,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.websocketbridge.connect(connectionpath",{"_index":1024,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.alarms",{"_index":1009,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.counter",{"_index":1019,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.demultiplex(streams.updates",{"_index":1016,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.listen(connectionpath",{"_index":1025,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.addeventlistener",{"_index":1004,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.socket.close",{"_index":1036,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.websocketbridge.stream(streams.updates).send",{"_index":1035,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["this.windsimageset",{"_index":2861,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.windsimageunreliableset",{"_index":2864,"title":{},"body":{"injectables/WeatherService.html":{}}}],["thorugh",{"_index":2441,"title":{},"body":{"injectables/RoutingService.html":{}}}],["those",{"_index":2250,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["threshold",{"_index":1930,"title":{},"body":{"injectables/CdbService.html":{}}}],["through",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmSounds.html":{},"injectables/CdbService.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["tickets",{"_index":1064,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["tile",{"_index":1188,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["tile'},{'name",{"_index":169,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tile.component",{"_index":2503,"title":{},"body":{"modules/SharedModule.html":{}}}],["tile.component.html",{"_index":1190,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.scss",{"_index":1189,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts",{"_index":1186,"title":{},"body":{"components/AlarmTileComponent.html":{},"coverage.html":{}}}],["tile.component.ts:107",{"_index":1214,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:135",{"_index":1212,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:151",{"_index":1216,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:158",{"_index":1218,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:166",{"_index":1213,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:19",{"_index":1199,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:24",{"_index":1205,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:29",{"_index":1206,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:35",{"_index":1209,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:40",{"_index":1200,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:45",{"_index":1208,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:50",{"_index":1210,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:55",{"_index":1211,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:60",{"_index":1201,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:65",{"_index":1222,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:70",{"_index":1221,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:75",{"_index":1220,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:80",{"_index":1198,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile.component.ts:92",{"_index":1215,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["tile/alarm",{"_index":1185,"title":{},"body":{"components/AlarmTileComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["tile/fixtures.ts",{"_index":3000,"title":{},"body":{"coverage.html":{}}}],["tiles",{"_index":1187,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["time",{"_index":1277,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"license.html":{}}}],["timeout",{"_index":1077,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["timeoutoption",{"_index":2588,"title":{"interfaces/TimeoutOption.html":{}},"body":{"interfaces/TimeoutOption.html":{},"coverage.html":{}}}],["timeouts",{"_index":2601,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["timer",{"_index":979,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timer's",{"_index":1172,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timestamp",{"_index":947,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["timezone",{"_index":614,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["title",{"_index":1240,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherSidebarComponent.html":{}}}],["todo",{"_index":1623,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"interfaces/TimeoutOption.html":{}}}],["together",{"_index":3225,"title":{},"body":{"license.html":{}}}],["toggle",{"_index":205,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["toggledefault",{"_index":2403,"title":{},"body":{"components/MaterialToggleColorsComponent.html":{}}}],["toggles",{"_index":1591,"title":{},"body":{"components/AppComponent.html":{},"injectables/SidenavService.html":{}}}],["toggleshelveunshelve",{"_index":2691,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["togglesidenav",{"_index":1555,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":1031,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AuthService.html":{},"injectables/HttpClientService.html":{}}}],["token_storage_name",{"_index":1800,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":1795,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbar",{"_index":1665,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":335,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{}}}],["tooltip'},{'name",{"_index":171,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tooltip.component",{"_index":482,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"modules/SharedModule.html":{}}}],["tooltip.component.html",{"_index":1267,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":1266,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts",{"_index":1253,"title":{},"body":{"components/AlarmTooltipComponent.html":{},"coverage.html":{}}}],["tooltip.component.ts:32",{"_index":1269,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:37",{"_index":1270,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:40",{"_index":1272,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:43",{"_index":1268,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip.component.ts:54",{"_index":1271,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["tooltip/alarm",{"_index":481,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTooltipComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["tooltipdirection",{"_index":311,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/StatusViewComponent.html":{}}}],["tooltipdirectionoptions",{"_index":1193,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["top",{"_index":416,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["top:0",{"_index":2938,"title":{},"body":{"components/WeatherStationSidebarComponent.html":{}}}],["transform",{"_index":407,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{}}}],["transformer",{"_index":805,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["transforms",{"_index":2218,"title":{},"body":{"injectables/MapService.html":{}}}],["transition",{"_index":1228,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["transparent",{"_index":598,"title":{},"body":{"components/AlarmHeaderComponent.html":{},"components/AntennasComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'name",{"_index":157,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.component",{"_index":278,"title":{},"body":{"modules/ActionsModule.html":{}}}],["tree.component.html",{"_index":682,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":683,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.ts",{"_index":651,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":847,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":848,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":657,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":659,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":656,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":277,"title":{},"body":{"modules/ActionsModule.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree/fixtures.ts",{"_index":2963,"title":{},"body":{"coverage.html":{}}}],["tree_data",{"_index":752,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[this.selectedalarm.core_id",{"_index":775,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":705,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflattener",{"_index":708,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["trigger",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ButtonsComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["triggeralarmsnonvalidconnectionstate",{"_index":1168,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["triggered",{"_index":966,"title":{},"body":{"classes/AlarmSounds.html":{},"interfaces/TimeoutOption.html":{}}}],["triggers",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["true",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WikiButtonComponent.html":{}}}],["try",{"_index":1942,"title":{},"body":{"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{}}}],["type",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"injectables/MapService.html":{},"components/MaterialColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["type1",{"_index":895,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type2",{"_index":896,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type3",{"_index":897,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["type4",{"_index":898,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["typeof",{"_index":800,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unack",{"_index":1575,"title":{},"body":{"components/AppComponent.html":{}}}],["unblocks",{"_index":2716,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["uncombined",{"_index":3263,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":799,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["under",{"_index":1166,"title":{},"body":{"classes/AlarmSounds.html":{},"index.html":{},"license.html":{}}}],["unique",{"_index":2723,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["unit",{"_index":3110,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":492,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AntennasService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["unknown.svg",{"_index":1435,"title":{},"body":{"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["unrealiable",{"_index":1207,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["unreliable",{"_index":361,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"injectables/AntennasService.html":{},"components/HealthSummaryComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/enumerations.html":{}}}],["unselectantenna",{"_index":1447,"title":{},"body":{"components/AntennasSidebarComponent.html":{}}}],["unselected",{"_index":1470,"title":{},"body":{"components/AntennasSidebarComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["unselecteddescendants",{"_index":828,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unset",{"_index":882,"title":{},"body":{"components/AlarmLabelComponent.html":{},"components/AppComponent.html":{}}}],["unshelve",{"_index":2510,"title":{},"body":{"components/ShelveButtonComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["unshelvealarms(alarms_ids",{"_index":1085,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["unshelved",{"_index":2668,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["unshelving",{"_index":2670,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["update",{"_index":750,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"injectables/AuthService.html":{},"components/WeatherComponent.html":{}}}],["updateacklist",{"_index":841,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updated",{"_index":991,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["updatedata",{"_index":751,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updates",{"_index":1114,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["updateselectedantenna",{"_index":1340,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updateselectedantenna(selectedantenna",{"_index":1343,"title":{},"body":{"components/AntennasComponent.html":{}}}],["updating",{"_index":3118,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":408,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/LoginComponent.html":{},"components/OverviewCardComponent.html":{}}}],["url",{"_index":459,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{},"components/WikiButtonComponent.html":{}}}],["url('https://material.angular.io/assets/img/examples/shiba1.jpg",{"_index":2382,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["urls",{"_index":485,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/RoutingService.html":{}}}],["use",{"_index":324,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/WeatherService.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"injectables/MapService.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["useful",{"_index":2247,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["user",{"_index":1038,"title":{"interfaces/User.html":{}},"body":{"classes/AlarmSounds.html":{},"components/AppComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"components/WeatherSidebarComponent.html":{},"coverage.html":{},"license.html":{}}}],["user's",{"_index":3246,"title":{},"body":{"license.html":{}}}],["user.service",{"_index":1952,"title":{},"body":{"modules/DataModule.html":{}}}],["user_data",{"_index":1871,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_selected",{"_index":2616,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["user_storage_name",{"_index":1801,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":1584,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["users",{"_index":2629,"title":{},"body":{"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":1550,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"modules/DataModule.html":{},"interfaces/TimeoutOption.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":1585,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["usevalue",{"_index":1716,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1029,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AntennasComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherComponent.html":{},"license.html":{}}}],["utility",{"_index":3176,"title":{},"body":{"license.html":{}}}],["v",{"_index":796,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":1167,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/AuthService.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["valid.svg",{"_index":1980,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/StatusViewComponent.html":{},"injectables/WeatherService.html":{}}}],["validators",{"_index":2168,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validators.required",{"_index":2171,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["validity",{"_index":925,"title":{},"body":{"classes/AlarmSounds.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"interfaces/TimeoutOption.html":{},"miscellaneous/enumerations.html":{}}}],["validity.unreliable",{"_index":1170,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["value",{"_index":315,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmConfig.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["value.cleared",{"_index":369,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_critical",{"_index":375,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_high",{"_index":373,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_low",{"_index":370,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value.set_medium",{"_index":372,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["value[k",{"_index":797,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["values",{"_index":1098,"title":{},"body":{"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"injectables/MapService.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variable",{"_index":1202,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/WeatherDataMarkerComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["verbatim",{"_index":3138,"title":{},"body":{"license.html":{}}}],["verify",{"_index":1757,"title":{},"body":{"guards/AuthLoginGuard.html":{}}}],["version",{"_index":3071,"title":{},"body":{"index.html":{},"license.html":{}}}],["versions",{"_index":3185,"title":{},"body":{"license.html":{}}}],["vertical",{"_index":514,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["very",{"_index":2336,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["via",{"_index":3113,"title":{},"body":{"index.html":{}}}],["view",{"_index":545,"title":{},"body":{"classes/AlarmConfig.html":{},"classes/AlarmSounds.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'name",{"_index":219,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.component",{"_index":1736,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":2553,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.html",{"_index":2554,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.scss",{"_index":2583,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts",{"_index":2552,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:11",{"_index":2584,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:19",{"_index":2558,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:22",{"_index":2560,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.ts:25",{"_index":2571,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:28",{"_index":2569,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:31",{"_index":2570,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:34",{"_index":2568,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:40",{"_index":2559,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:45",{"_index":2557,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:55",{"_index":2564,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:62",{"_index":2563,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view/status",{"_index":2501,"title":{},"body":{"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"coverage.html":{}}}],["view/tabular",{"_index":1735,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["viewbox",{"_index":1306,"title":{},"body":{"components/AntennaMarkerComponent.html":{},"injectables/MapService.html":{}}}],["viewchild",{"_index":1615,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('actionssidenav",{"_index":1596,"title":{},"body":{"components/AppComponent.html":{}}}],["views",{"_index":553,"title":{},"body":{"classes/AlarmConfig.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["viewvalue",{"_index":2592,"title":{},"body":{"interfaces/TimeoutOption.html":{}}}],["visibility",{"_index":520,"title":{},"body":{"components/AlarmComponent.html":{},"components/AlarmLabelComponent.html":{}}}],["visual",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["void",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"interfaces/TimeoutOption.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["warn",{"_index":2241,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["warning",{"_index":2310,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{}}}],["weather",{"_index":225,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"injectables/AntennasService.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather'},{'name",{"_index":229,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather.component.html",{"_index":2749,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":2748,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.service",{"_index":2743,"title":{},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["weather.svg",{"_index":1631,"title":{},"body":{"components/AppComponent.html":{}}}],["weather/weather.component",{"_index":2773,"title":{},"body":{"modules/WeatherModule.html":{}}}],["weather/weather.module",{"_index":1713,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weather/weather/weather.component",{"_index":1737,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["weather_station",{"_index":2877,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weatherbackupwsmarkercomponent",{"_index":224,"title":{"components/WeatherBackupWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathercomponent",{"_index":228,"title":{"components/WeatherComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdatamarkercomponent",{"_index":230,"title":{"components/WeatherDataMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermap",{"_index":2747,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathermapcomponent",{"_index":232,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathermapname",{"_index":2808,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weathermodule",{"_index":1698,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"modules.html":{},"overview.html":{}}}],["weatherprimarywsconnectorcomponent",{"_index":233,"title":{"components/WeatherPrimaryWsConnectorComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherprimarywsmarkercomponent",{"_index":236,"title":{"components/WeatherPrimaryWsMarkerComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherservice",{"_index":2735,"title":{"injectables/WeatherService.html":{}},"body":{"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersettings",{"_index":2854,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["weathersettings.mapkey",{"_index":2845,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weathersidebar",{"_index":2746,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weathersidebarcomponent",{"_index":237,"title":{"components/WeatherSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherstationsconfig",{"_index":2809,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weatherstationsidebarcomponent",{"_index":238,"title":{"components/WeatherStationSidebarComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummarycomponent",{"_index":240,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weathersummaryconfig",{"_index":2810,"title":{},"body":{"injectables/WeatherService.html":{}}}],["webkit",{"_index":1242,"title":{},"body":{"components/AlarmTileComponent.html":{}}}],["webserver",{"_index":945,"title":{},"body":{"classes/AlarmSounds.html":{},"injectables/AntennasService.html":{},"injectables/CdbService.html":{},"interfaces/TimeoutOption.html":{},"injectables/WeatherService.html":{}}}],["websocket",{"_index":1092,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websocketbridge",{"_index":920,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websockets",{"_index":946,"title":{},"body":{"classes/AlarmSounds.html":{}}}],["websver",{"_index":2840,"title":{},"body":{"injectables/WeatherService.html":{}}}],["weight",{"_index":396,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["well",{"_index":2337,"title":{},"body":{"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"license.html":{}}}],["wether",{"_index":327,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"guards/AuthLoginGuard.html":{},"injectables/AuthService.html":{},"components/MapComponent.html":{},"injectables/SidenavService.html":{},"components/StatusViewComponent.html":{},"interfaces/TimeoutOption.html":{}}}],["whatever",{"_index":3200,"title":{},"body":{"license.html":{}}}],["whenever",{"_index":735,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["whether",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["white",{"_index":1287,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["width",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AppComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["width:100",{"_index":398,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["width:20px",{"_index":410,"title":{},"body":{"components/AlarmCardComponent.html":{}}}],["wikbuttoncomponent",{"_index":1909,"title":{},"body":{"components/ButtonsComponent.html":{}}}],["wiki",{"_index":242,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wikibuttoncomponent",{"_index":241,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"modules/ActionsModule.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wind",{"_index":2851,"title":{},"body":{"injectables/WeatherService.html":{}}}],["wind_speed",{"_index":2875,"title":{},"body":{"injectables/WeatherService.html":{}}}],["window",{"_index":2951,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["window.open(this.url",{"_index":2954,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["windsimageset",{"_index":2811,"title":{},"body":{"injectables/WeatherService.html":{}}}],["windsimageunreliableset",{"_index":2812,"title":{},"body":{"injectables/WeatherService.html":{}}}],["windspeed",{"_index":2860,"title":{},"body":{"injectables/WeatherService.html":{}}}],["without",{"_index":3182,"title":{},"body":{"license.html":{}}}],["word",{"_index":1290,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["words",{"_index":1530,"title":{},"body":{"components/AntennasSummaryComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":3154,"title":{},"body":{"license.html":{}}}],["works",{"_index":3223,"title":{},"body":{"license.html":{}}}],["worth",{"_index":2435,"title":{},"body":{"modules/OverviewModule.html":{}}}],["wrap",{"_index":1289,"title":{},"body":{"components/AlarmTooltipComponent.html":{}}}],["wrapper",{"_index":1667,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewCardComponent.html":{}}}],["wrong",{"_index":2465,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":227,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmCardComponent.html":{},"components/AlarmComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmInfoComponent.html":{},"components/AlarmLabelComponent.html":{},"classes/AlarmSounds.html":{},"components/AlarmTileComponent.html":{},"components/AlarmTooltipComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/AntennasSummaryComponent.html":{},"components/AppComponent.html":{},"components/ButtonsComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/LoginComponent.html":{},"components/MapComponent.html":{},"components/MaterialButtonsColorsComponent.html":{},"components/MaterialCardSampleComponent.html":{},"components/MaterialColorsComponent.html":{},"components/MaterialSandboxComponent.html":{},"components/MaterialToggleColorsComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/SandboxAlarmComponent.html":{},"components/SandboxAlarmLabelComponent.html":{},"components/SandboxAlarmTileComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherBackupWsMarkerComponent.html":{},"components/WeatherComponent.html":{},"components/WeatherDataMarkerComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherPrimaryWsConnectorComponent.html":{},"components/WeatherPrimaryWsMarkerComponent.html":{},"components/WeatherSidebarComponent.html":{},"components/WeatherStationSidebarComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["x",{"_index":647,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["xs",{"_index":475,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AlarmLabelComponent.html":{},"components/AlarmTileComponent.html":{}}}],["y",{"_index":646,"title":{},"body":{"components/AlarmInfoComponent.html":{},"components/AntennaMarkerComponent.html":{},"components/AntennasSidebarComponent.html":{},"components/WeatherSidebarComponent.html":{}}}],["yellow",{"_index":371,"title":{},"body":{"components/AlarmCardComponent.html":{},"components/AlarmHeaderComponent.html":{},"components/AlarmTileComponent.html":{},"components/AntennaMarkerComponent.html":{}}}],["yum",{"_index":3091,"title":{},"body":{"index.html":{}}}],["z",{"_index":1235,"title":{},"body":{"components/AlarmTileComponent.html":{},"components/OverviewCardComponent.html":{}}}],["zero",{"_index":1652,"title":{},"body":{"components/AppComponent.html":{},"components/LegendComponent.html":{}}}],["zone.js",{"_index":3054,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":264,"title":{},"body":{"modules/ActionsModule.html":{},"modules/AntennasModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/MapModule.html":{},"modules/MaterialSandboxModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ./ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAcknowledge\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:19\n                            \n                        \n                \n                    \n                        Alarm object associated to the button\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAcknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Defines whether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initializes the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Handle click on ack button, it triggers ack sidenav through the Router service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-button/ack-button.component.ts:28\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initializes the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   * @return {boolean} true if the {@link Alarm} can be acknowledged, false if not.\n   */\n  canAcknowledge(): boolean {\n    if (this.alarm != null && this.alarm.state_change_timestamp > 0) {\n      return !this.alarm.ack;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Defines whether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled(): boolean {\n    return !this.sidenavService.canClose || !this.canAcknowledge();\n  }\n\n  /**\n  * Handle click on ack button, it triggers ack sidenav through the {@link Router} service\n  */\n  onClick() {\n    this.sidenavService.goToAcknowledge(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./ack-button.component.css\n                \n                .ack-button {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 2px;\n  margin-right: 4px;\n  margin-left: 4px;\n  border-radius: 24px;\n  min-width: 1px;\n  width: 32px;\n  height: 32px;\n}\n\n.ack-button-icon {\n  width: 21px;\n  margin: auto;\n}\n\n.mat-flat-button {\n  line-height: 28px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/actions/actions.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AckButtonComponent\n                        \n                        \n                            AckComponent\n                        \n                        \n                            AckTreeComponent\n                        \n                        \n                            ButtonsComponent\n                        \n                        \n                            ShelveButtonComponent\n                        \n                        \n                            ShelveComponent\n                        \n                        \n                            WikiButtonComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SidenavService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AckButtonComponent\n                        \n                        \n                            AckComponent\n                        \n                        \n                            ButtonsComponent\n                        \n                        \n                            ShelveButtonComponent\n                        \n                        \n                            ShelveComponent\n                        \n                        \n                            WikiButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AckComponent } from './ack/ack.component';\nimport { ShelveComponent } from './shelve/shelve.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { SidenavService } from './sidenav.service';\nimport { ButtonsComponent } from './buttons/buttons.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AckComponent,\n    AckTreeComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ],\n  providers: [\n    SidenavService,\n  ],\n  exports: [\n    AckButtonComponent,\n    AckComponent,\n    ButtonsComponent,\n    ShelveComponent,\n    ShelveButtonComponent,\n    WikiButtonComponent,\n  ]\n})\nexport class ActionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmCardComponent.html":{"url":"components/AlarmCardComponent.html","title":"component - AlarmCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-card/alarm-card.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as cards with text support for the\npriority of the alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-card\n            \n\n            \n                styleUrls\n                ./alarm-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                getPriorityText\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-card/alarm-card.component.ts:39\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:18\n                            \n                        \n                \n                    \n                        Alarm object associated to the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:29\n                            \n                        \n                \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:34\n                            \n                        \n                \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:24\n                            \n                        \n                \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:39\n                            \n                        \n                \n                    \n                        Defines the direction of the tooltip\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriorityText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriorityText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Returns a string related to the name of the alarm priority\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    alarm prioritity name for the display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm has pending acknowledgement, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-card/alarm-card.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm is shelved\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is shelved, false if not\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as cards with text support for the\n * priority of the alarm\n */\n@Component({\n  selector: 'app-alarm-card',\n  templateUrl: './alarm-card.component.html',\n  styleUrls: ['./alarm-card.component.scss']\n})\nexport class AlarmCardComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('alarm-card-blue');\n      result.push('alarm-card-unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('alarm-card-green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('alarm-card-blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('alarm-card-gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('alarm-card-green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('alarm-card-yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('alarm-card-yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('alarm-card-red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('alarm-card-red');\n    } else {\n      result.push('alarm-card-blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('alarm-card-unreliable');\n    }\n    return result;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n  * @returns {boolean} true if the alarm has pending acknowledgement, false if not\n  */\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm is shelved\n  * @returns {boolean} true if the alarm is shelved, false if not\n  */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n  /**\n  * Returns a string related to the name of the alarm priority\n  * @returns {string} alarm prioritity name for the display\n  */\n  getPriorityText(): string {\n    const alarmValue: string = this.alarm.alarmValue;\n    const priorityText: string = alarmValue\n      .replace('cleared', '')\n      .replace('set_', '');\n    return priorityText.toUpperCase();\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n      {{this.getAlarmName()}}\n      \n        \n      \n    \n    \n\n      \n\n        \n        \n          \n        \n        \n          \n        \n\n        \n        \n          \n        \n        \n          \n        \n\n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./alarm-card.component.scss\n                \n                .alarm-card {\n\n  display:block;\n  border-width: 4px;\n  border-style: solid;\n  border-radius: 4px;\n  font-weight: normal;\n\n  width:100%;\n  min-height: 60px;\n  width: 84.5px;\n  height:60px;\n  margin-bottom:15px;\n  line-height: normal;\n\n  .alarm-card-content {\n    height:100%;\n    padding:10px 4px;\n    .alarm-name {}\n    .alarm-priority {\n      font-size:10px;\n      text-transform: uppercase;\n      padding: 2px 0px;\n    }\n  }\n\n  .alarm-card-badges {\n    height:100%;\n    max-width:20px;\n    margin-right:4%;\n    position: relative;\n\n    .badges {\n      .badge-icon {\n        position: absolute;\n        &.ack-icon { top: 16%; }\n        &.shelve-icon { bottom: 12%; }\n      }\n      .badge-off {\n        opacity: 0.08;\n      }\n    }\n\n  }\n\n}\n\n.alarm-card-green {\n}\n\n.alarm-card-yellow {\n  font-weight: bold;\n}\n\n.alarm-card-red {\n  font-weight: bold;\n}\n\n.alarm-card-gray {\n  font-weight: bold;\n}\n\n.alarm-card-blue {\n  font-weight: bold;\n}\n\n.alarm-card-unreliable {\n  font-weight: normal;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{this.getAlarmName()}}                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                ./alarm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                labelLocationOptions\n                            \n                            \n                                    Private\n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getImage\n                            \n                            \n                                getTextClass\n                            \n                            \n                                isTextAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                            \n                                showPriorityLevelText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                labelLocation\n                            \n                            \n                                labelMode\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:110\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:58\n                            \n                        \n                \n                    \n                        Alarm object associated to the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :     AlarmImageSet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:68\n                            \n                        \n                \n                    \n                        Set of names for the images to use\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                \n                \n                    \n                        Type :     AlarmImageSet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:73\n                            \n                        \n                \n                    \n                        Set of names for the images to use for unreliable states\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelLocation\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:100\n                            \n                        \n                \n                    \n                        Defines the direction of the label\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelMode\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:85\n                            \n                        \n                \n                    \n                        Defines wether or not the component will display the text of the label\nwith the alarm priority\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:79\n                            \n                        \n                \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 'md'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:90\n                            \n                        \n                \n                    \n                        Defines the size of the component, can be either of the options defined by sizeOptions\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:63\n                            \n                        \n                \n                    \n                        Alarm object associated to the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:95\n                            \n                        \n                \n                    \n                        Defines the direction of the tooltip\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            Returns the style class name based on the optional input size. By default\nthe class is medium size.\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    style class name\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:142\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    url of the image\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTextClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:175\n                            \n                        \n\n\n                \n                    \n                            Returns the class to be used to display the text\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    list of css classes\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTextAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nisTextAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:214\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed as a text alarm or as an icon alarm\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:222\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the pending ack badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the pending ack must be activated, false if it must not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:230\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm must be displayed with the shelve badge activated\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the alarm is shelved, false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showPriorityLevelText\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowPriorityLevelText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:238\n                            \n                        \n\n\n                \n                    \n                            Check if the alarm should display the priority text in the related label\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if mode is 'text' else False\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            labelLocationOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['right', 'bottom']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:110\n                            \n                        \n\n                \n                    \n                        Available locations for the label component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:105\n                            \n                        \n\n                \n                    \n                        Available sizes for the alarm componet\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AlarmTooltipComponent } from '../alarm-tooltip/alarm-tooltip.component';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines wether or not the component will display the text of the label\n   * with the alarm priority\n   */\n  @Input() labelMode = 'text';\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Defines the direction of the label\n   */\n  @Input() labelLocation = 'right';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n   * Available locations for the label component\n   */\n  private labelLocationOptions = ['right', 'bottom'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size)  0;\n  }\n\n  /**\n   * Check if the alarm must be displayed with the shelve badge activated\n   * @return {boolean} True if the alarm is shelved, false if it is not\n   */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n   * Check if the alarm should display the priority text in the related label\n   * @return {boolean} True if mode is 'text' else False\n   */\n   showPriorityLevelText(): boolean {\n     if (this.labelMode === 'text') {\n       return true;\n     } else if (this.labelMode === 'line') {\n       return false;\n     } else {\n       return false;\n     }\n   }\n\n}\n\n    \n\n    \n         \n\n\n\n  \n    \n      \n    \n\n    \n\n       \n\n      \n        \n          {{this.text}}\n        \n      \n\n      \n        \n          \n        \n      \n\n      \n        \n      \n\n    \n\n    \n      \n      \n        \n      \n      \n        \n      \n\n      \n      \n        \n      \n      \n        \n      \n    \n\n  \n\n\n\n\n\n\n\n  \n    \n      \n    \n\n     \n    \n      \n    \n\n    \n      \n        {{this.text}}\n      \n    \n\n    \n      \n        \n      \n    \n\n    \n      \n      \n        \n      \n      \n        \n      \n\n      \n      \n        \n      \n      \n        \n      \n    \n\n    \n      \n    \n\n  \n\n\n\n\n    \n\n    \n                \n                    ./alarm.component.scss\n                \n                $cem: 1px;\n$xs-cem: 1*$cem;\n$sm-cem: 1.2*$cem;\n$md-cem: 1.6*$cem;\n$lg-cem: 3.0*$cem;\n$status-cem: 1*$cem;\n\n.alarm-component {\n\n  .alarm-label-container {\n    padding-left: 6px;\n    &.bottom {\n      margin: auto;\n      padding:0;\n      line-height: 0;\n    }\n  }\n\n  .icon {\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n\n    .alarm-icon{\n      height: 100%;\n    }\n\n  }\n\n  .text {\n    vertical-align: middle;\n    height: 100%;\n    padding-right: 6%;\n  }\n\n  .badges{\n    display: inline-block;\n    vertical-align: middle;\n    height: 100%;\n\n    .badge-icon{\n      width: 100%;\n\n      &.ack-icon{\n        margin-top: 6%;\n      }\n\n      &.shelve-icon{\n        margin-bottom: 6%;\n      }\n\n      &.badge-off{\n        opacity: 0.08;\n      }\n    }\n\n    &.hidden {\n      visibility: hidden;\n    }\n  }\n\n}\n\n.alarm-component-xs {\n  @extend .alarm-component;\n  height: 19*$xs-cem;\n  line-height: 19*$xs-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$xs-cem;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n\n}\n\n.alarm-component-sm {\n  @extend .alarm-component;\n  height: 19*$sm-cem;\n  line-height: 19*$sm-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$sm-cem;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n\n}\n\n.alarm-component-md {\n  @extend .alarm-component;\n  height: 19*$md-cem;\n  line-height: 19*$md-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$md-cem;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.2em;\n    }\n  }\n}\n\n.alarm-component-lg {\n  @extend .alarm-component;\n  height: 19*$lg-cem;\n  line-height: 19*$lg-cem;\n\n  .badges{\n    @extend .badges;\n    width: 8*$lg-cem;\n    margin-left: 10px;\n  }\n\n  .alarm-label-container {\n    &.bottom {\n      padding-top: 0.24em;\n    }\n  }\n}\n\n.alarm-component-status {\n  @extend .alarm-component;\n  height: 19*$status-cem;\n  line-height: 19*$status-cem;\n\n  .badges{\n    @extend .badges;\n    width: 11*$status-cem;\n\n    .badge-icon{\n      @extend .badge-icon;\n\n      &.ack-icon{\n        @extend .ack-icon;\n        margin-top: 0;\n      }\n\n      &.shelve-icon{\n        @extend .shelve-icon;\n        margin-bottom: 0;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{this.text}}                                                                                                                                                                                                                                       {{this.text}}                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmConfig.html":{"url":"classes/AlarmConfig.html","title":"class - AlarmConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm-config.ts\n        \n\n            \n                Description\n            \n            \n                Stores the displaying configuration of an Alarm\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm_id\n                            \n                            \n                                    Public\n                                children\n                            \n                            \n                                    Public\n                                custom_name\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                placemark\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/alarm-config.ts:25\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmConfig instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:7\n                            \n                        \n\n                \n                    \n                        ID of the associated Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:19\n                            \n                        \n\n                \n                    \n                        List of children Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            custom_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:10\n                            \n                        \n\n                \n                    \n                        Custom name to display the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:25\n                            \n                        \n\n                \n                    \n                        Group of the alarm, in order to classify it for views that require some sort of classification of Alarms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placemark\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:22\n                            \n                        \n\n                \n                    \n                        ID to map the Alarm to a location on a map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:13\n                            \n                        \n\n                \n                    \n                        Type associated to the Alarm, used to decide how to display the alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm-config.ts:16\n                            \n                        \n\n                \n                    \n                        View where the alarm is displayed Alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm-config.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class AlarmConfig {\n\n  /** ID of the associated {@link Alarm} */\n  public alarm_id: string;\n\n  /** Custom name to display the {@link Alarm} */\n  public custom_name: string;\n\n  /** Type associated to the {@link Alarm}, used to decide how to display the alarm */\n  public type: string;\n\n  /** View where the alarm is displayed {@link Alarm} */\n  public view: string;\n\n  /** List of children {@link Alarm} */\n  public children = [];\n\n  /** ID to map the {@link Alarm} to a location on a map */\n  public placemark: string;\n\n  /** Group of the alarm, in order to classify it for views that require some sort of classification of {@link Alarm}s */\n  public group: string;\n\n  /**\n  * Builds a new AlarmConfig instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  public get name(): string {\n    if (this.custom_name) {\n      return this.custom_name;\n    } else {\n      return this.alarm_id;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmHeaderComponent.html":{"url":"components/AlarmHeaderComponent.html","title":"component - AlarmHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-header/alarm-header.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as headers in a table or list\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-header\n            \n\n            \n                styleUrls\n                ./alarm-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showAsPendingAck\n                            \n                            \n                                showAsShelved\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-header/alarm-header.component.ts:38\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:17\n                            \n                        \n                \n                    \n                        Alarm object associated to the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:28\n                            \n                        \n                \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:33\n                            \n                        \n                \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:23\n                            \n                        \n                \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:38\n                            \n                        \n                \n                    \n                        Defines the direction of the tooltip\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsPendingAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsPendingAck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm has pending acknowledgement, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAsShelved\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowAsShelved()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-header/alarm-header.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Defines wether or not the component should indicate that the alarm is shelved\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is shelved, false if not\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n * Component used to display alarms as headers in a table or list\n */\n@Component({\n  selector: 'app-alarm-header',\n  templateUrl: './alarm-header.component.html',\n  styleUrls: ['./alarm-header.component.scss']\n})\nexport class AlarmHeaderComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('blue');\n      result.push('unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('red');\n    } else {\n      result.push('blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('unreliable');\n    }\n    return result;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm has a pending acknowledgement\n  * @returns {boolean} true if the alarm has pending acknowledgement, false if not\n  */\n  showAsPendingAck(): boolean {\n    return this.showActionBadges && this.alarm != null && !this.alarm.ack && this.alarm.state_change_timestamp > 0;\n  }\n\n  /**\n  * Defines wether or not the component should indicate that the alarm is shelved\n  * @returns {boolean} true if the alarm is shelved, false if not\n  */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n  \n    \n        {{this.getAlarmName()}}\n    \n    \n      \n    \n  \n\n\n  \n    \n\n      \n      \n        \n      \n      \n        \n      \n\n      \n      \n        \n      \n      \n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./alarm-header.component.scss\n                \n                .alarm-header-container {\n  height: 100%;\n}\n\n.alarm-header-color {\n  height: 100%;\n  width: 10px;\n  border-radius: 4px 0px 0px 4px;\n  margin-right: 10px;\n  display: flex;\n}\n\n.alarm-header-name {\n  padding-top: 20px;\n  padding-right: 4px;\n}\n\n.alarm-header-badges {\n  position: relative;\n  margin: 12px 0 12px 0px;\n}\n\n.badges{\n\n  .badge-icon{\n    position: absolute;\n    height: 35%;\n    left: 106%;\n  }\n\n  .ack-icon{\n    top: 2%;\n  }\n\n  .shelve-icon{\n    bottom: 2%;\n  }\n\n  .badge-off{\n    opacity: 0.08;\n  }\n}\n\n.green {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.yellow {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.red {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.gray {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.blue {\n  border-width: 1px;\n  border-style: solid;\n}\n\n.unreliable {\n  background: transparent;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{this.getAlarmName()}}                                                                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:31\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:10\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:28\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:22\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:19\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:13\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:31\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:25\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { AlarmTooltipComponent } from '../alarm-tooltip/alarm-tooltip.component';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n  /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.scss']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() text = '';\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines wether or not the component will display the text of the label\n   * with the alarm priority\n   */\n  @Input() labelMode = 'text';\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Defines the direction of the label\n   */\n  @Input() labelLocation = 'right';\n\n  /**\n   * Available sizes for the alarm componet\n   */\n  private sizeOptions = ['xs', 'sm', 'md', 'lg', 'status'];\n\n  /**\n   * Available locations for the label component\n   */\n  private labelLocationOptions = ['right', 'bottom'];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size)  0;\n  }\n\n  /**\n   * Check if the alarm must be displayed with the shelve badge activated\n   * @return {boolean} True if the alarm is shelved, false if it is not\n   */\n  showAsShelved(): boolean {\n    return this.showActionBadges && this.alarm != null && this.alarm.shelved;\n  }\n\n  /**\n   * Check if the alarm should display the priority text in the related label\n   * @return {boolean} True if mode is 'text' else False\n   */\n   showPriorityLevelText(): boolean {\n     if (this.labelMode === 'text') {\n       return true;\n     } else if (this.labelMode === 'line') {\n       return false;\n     } else {\n       return false;\n     }\n   }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmInfoComponent.html":{"url":"components/AlarmInfoComponent.html","title":"component - AlarmInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-info/alarm-info.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display general information about an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-info\n            \n\n            \n                styleUrls\n                ./alarm-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateFormat\n                            \n                            \n                                    Public\n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-info/alarm-info.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:18\n                            \n                        \n                \n                    \n                        Alarm object associated to the component\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:21\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timezone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-info/alarm-info.component.ts:24\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm} from '../../data/alarm';\nimport { Locale } from '../../settings';\n\n/**\n * Component used to display general information about an alarm\n */\n@Component({\n  selector: 'app-alarm-info',\n  templateUrl: './alarm-info.component.html',\n  styleUrls: ['./alarm-info.component.scss']\n})\nexport class AlarmInfoComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /** String to store the formatting of dates, read form the settings */\n  public dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  public timezone: string;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Alarm ID\n      {{alarm?.core_id}}\n    \n    \n      Description\n      {{alarm?.description}}\n    \n    \n      Last Change\n      {{alarm?.timestamp | date: dateFormat: timezone}}\n    \n    \n      Last Properties\n      {{alarm?.formattedProperties}}\n    \n  \n\n\n    \n\n    \n                \n                    ./alarm-info.component.scss\n                \n                .section {\n  padding: 24px 0px 10px 0px;\n\n  &.alarm-info {\n    table {\n      vertical-align: top;\n      width: 450px;\n    }\n\n    th {\n      padding-right: 16px;\n      font-weight: normal;\n      vertical-align: top;\n      width: 120px;\n    }\n\n    pre {\n      padding-top: 3px;\n      font-size: 90%;\n      overflow-y: auto;\n      overflow-x: auto;\n      margin: 0px;\n      max-width: 330px;\n      max-height: 400px;\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Alarm ID      {{alarm?.core_id}}              Description      {{alarm?.description}}              Last Change      {{alarm?.timestamp | date: dateFormat: timezone}}              Last Properties      {{alarm?.formattedProperties}}      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output, SimpleChanges, SimpleChange } from '@angular/core';\nimport { OnInit, OnChanges } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe( () => {\n      this.updateAckList();\n    });\n    this.updateData();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whenever the alarm changes)\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedAlarm) {\n      if (changes.selectedAlarm.previousValue) {\n        const alarm: SimpleChange = changes.selectedAlarm;\n        const prevAlarmCoreID = alarm.previousValue.core_id;\n        const currentAlarmCoreID = alarm.currentValue.core_id;\n        const prevDependenciesString = alarm.previousValue.dependencies.sort().join();\n        const currentDependenciesString = alarm.currentValue.dependencies.sort().join();\n        const dependenciesChange = (prevDependenciesString !== currentDependenciesString);\n        const coreIDChange = (prevAlarmCoreID !== currentAlarmCoreID);\n        if ((coreIDChange === true) || (dependenciesChange === true)) {\n          this.updateData();\n        }\n      } else {\n        this.updateData();\n      }\n    }\n  }\n\n\n  /**\n   * Update the data for the dataSource\n   */\n  updateData() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {any}  the tree data in a JSON format\n   */\n  getTreeData(): any {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {any}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm): any {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    const subTreeIsEmpty = Object.keys(subTree).length === 0;\n    if ( subTreeIsEmpty ) {\n      return null;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {AlarmItemNode[]} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number): AlarmItemNode[] {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {AlarmItemFlatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode: any;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output, SimpleChanges, SimpleChange } from '@angular/core';\nimport { OnInit, OnChanges } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit, OnChanges {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n  }\n\n  /**\n   * This function is defined by default and executed on Component startup.\n   */\n  ngOnInit() {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe( () => {\n      this.updateAckList();\n    });\n    this.updateData();\n  }\n\n  /**\n   * This function is executed on Component startup and everytime its state changes.\n   * It currently builds the tree by reading the data from the alarm (whenever the alarm changes)\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.selectedAlarm) {\n      if (changes.selectedAlarm.previousValue) {\n        const alarm: SimpleChange = changes.selectedAlarm;\n        const prevAlarmCoreID = alarm.previousValue.core_id;\n        const currentAlarmCoreID = alarm.currentValue.core_id;\n        const prevDependenciesString = alarm.previousValue.dependencies.sort().join();\n        const currentDependenciesString = alarm.currentValue.dependencies.sort().join();\n        const dependenciesChange = (prevDependenciesString !== currentDependenciesString);\n        const coreIDChange = (prevAlarmCoreID !== currentAlarmCoreID);\n        if ((coreIDChange === true) || (dependenciesChange === true)) {\n          this.updateData();\n        }\n      } else {\n        this.updateData();\n      }\n    }\n  }\n\n\n  /**\n   * Update the data for the dataSource\n   */\n  updateData() {\n    if (this.dataSource) {\n      const tree_data = this.getTreeData();\n      this.dataSource.data = this.buildFileTree(tree_data, 0);\n    }\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Get tree data from selected alarm\n   * @returns {any}  the tree data in a JSON format\n   */\n  getTreeData(): any {\n    const tree_data = {};\n    tree_data[this.selectedAlarm.core_id] = this._getSubTree(this.selectedAlarm);\n    return tree_data;\n  }\n\n  /**\n   * Auxiliary function used to get the tree data from a given alarm\n   * @param {Alarm} alarm the {@link Alarm}\n   * @returns {any}  the tree data in a JSON format\n   */\n  private _getSubTree(alarm: Alarm): any {\n    if (alarm.dependencies.length === 0) {\n      return null;\n    }\n    const subTree = {};\n    for (const childId of alarm.dependencies) {\n      const childAlarm = this.alarmService.get(childId);\n      if (childAlarm.ack) {\n        continue;\n      }\n      const subSubTree = this._getSubTree(childAlarm);\n      subTree[childId] = subSubTree;\n    }\n    const subTreeIsEmpty = Object.keys(subTree).length === 0;\n    if ( subTreeIsEmpty ) {\n      return null;\n    }\n    return subTree;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {AlarmItemNode[]} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number): AlarmItemNode[] {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {AlarmItemFlatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode: any;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n\n    let selectedDescendants = 0;\n    let unSelectedDescendants = 0;\n    for (const descendant of descendants) {\n      if (this.checklistSelection.isSelected(descendant)) {\n        selectedDescendants++;\n      } else {\n        unSelectedDescendants++;\n      }\n    }\n    if (unSelectedDescendants === 0) {\n      this.checklistSelection.select(node);\n    } else {\n      this.checklistSelection.deselect(node);\n    }\n    return selectedDescendants > 0 && unSelectedDescendants > 0;\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return !result;\n  }\n\n  /**\n  * Toggle the alarm item selection. Select/deselect all the descendants node\n  * @param {AlarmItemFlatNode} node the node\n  */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    if (this.checklistSelection.isSelected(node)) {\n      this.checklistSelection.select(...descendants);\n    } else {\n      this.checklistSelection.deselect(...descendants);\n    }\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmLabelComponent.html":{"url":"components/AlarmLabelComponent.html","title":"component - AlarmLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-label/alarm-label.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display a label related to the alarm priority\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-label\n            \n\n            \n                styleUrls\n                ./alarm-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                noPaddingOptions\n                            \n                            \n                                showTextOptions\n                            \n                            \n                                sizeOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getPriorityText\n                            \n                            \n                                getPriorityTextClass\n                            \n                            \n                                getSizeClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                noPadding\n                            \n                            \n                                showText\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-label/alarm-label.component.ts:48\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:18\n                            \n                        \n                \n                    \n                        Alarm object associated to the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        noPadding\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:33\n                            \n                        \n                \n                    \n                        Defines the direction of the label\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showText\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:28\n                            \n                        \n                \n                    \n                        Defines if the priority text should be displayed (if set state for the alarm)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 'md'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:23\n                            \n                        \n                \n                    \n                        Size options\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriorityText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriorityText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Returns a string related to the name of the alarm priority\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    alarm prioritity name for the display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPriorityTextClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPriorityTextClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSizeClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSizeClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noPaddingOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:43\n                            \n                        \n\n                \n                    \n                        Padding Options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTextOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:38\n                            \n                        \n\n                \n                    \n                        Show text options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-label/alarm-label.component.ts:48\n                            \n                        \n\n                \n                    \n                        Size Options\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../../data/alarm';\n\n\n/**\n * Component used to display a label related to the alarm priority\n */\n@Component({\n  selector: 'app-alarm-label',\n  templateUrl: './alarm-label.component.html',\n  styleUrls: ['./alarm-label.component.scss']\n})\nexport class AlarmLabelComponent implements OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n  * Size options\n  */\n  @Input() size = 'md';\n\n  /**\n  * Defines if the priority text should be displayed (if set state for the alarm)\n  */\n  @Input() showText = true;\n\n  /**\n   * Defines the direction of the label\n   */\n  @Input() noPadding = false;\n\n  /**\n  * Show text options\n  */\n  showTextOptions = [true, false];\n\n  /**\n  * Padding Options\n  */\n  noPaddingOptions = [true, false];\n\n  /**\n  * Size Options\n  */\n  sizeOptions = ['xs', 'sm', 'md', 'lg'];\n\n  /**\n  * Builds a new instance\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.showTextOptions.indexOf(this.showText) \n    \n\n    \n        \n  \n    {{this.getPriorityText()}}\n  \n\n\n    \n\n    \n                \n                    ./alarm-label.component.scss\n                \n                $cem: 10px;\n$xs-cem: 0.8*$cem;\n$sm-cem: 1.0*$cem;\n$md-cem: 1.4*$cem;\n$lg-cem: 1.4*$cem;\n\n.no-padding {\n  padding: 0 !important;\n}\n\n.hide-label {\n  visibility: hidden;\n  border: 1px solid red;\n}\n\n.priority-text {\n  margin: auto;\n  font-weight: bold;\n  &.hide-text {\n    visibility: hidden;\n    line-height: 0.2em !important;\n  }\n}\n\n.unreliable {\n  padding: 2px 2px !important;\n}\n\n.alarm-label {\n  text-transform: uppercase;\n  line-height: 1em;\n  display: inline-flex;\n\n  &.hide-text {\n    line-height: 0.2em;\n  }\n\n  .alarm-label-content {\n    border-radius: 2px;\n    padding: 2px 2px;\n    text-align: center;\n  }\n\n}\n\n.alarm-label-xs {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $xs-cem;\n    &.hide-text {\n      width: 16px;\n    }\n  }\n}\n\n.alarm-label-sm {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $sm-cem;\n    min-width: 40px;\n    &.hide-text {\n      min-width: unset;\n      width: 20px !important;\n    }\n  }\n}\n\n.alarm-label-md {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $md-cem;\n    min-width: 78px;\n    &.hide-text {\n      min-width: unset;\n      width: 30px !important;\n    }\n  }\n}\n\n.alarm-label-lg {\n  @extend .alarm-label;\n  .priority-text {\n    font-size: $lg-cem;\n    &.hide-text {\n      width: 40px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{this.getPriorityText()}}  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmSounds.html":{"url":"classes/AlarmSounds.html","title":"class - AlarmSounds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmSounds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.service.ts\n        \n\n            \n                Description\n            \n            \n                Class used to model the different sound options and their corresponding audio files\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                none\n                            \n                            \n                                    Static\n                                type1\n                            \n                            \n                                    Static\n                                type2\n                            \n                            \n                                    Static\n                                type3\n                            \n                            \n                                    Static\n                                type4\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getSoundsource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            none\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:21\n                            \n                        \n\n                \n                    \n                        This is the type for alarms with no sound \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_1.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:24\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE1 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_2.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:27\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE2 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_3.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:30\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE3 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm_Sound_4.mp3'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:33\n                            \n                        \n\n                \n                    \n                        The name of the audio file associated to the sound TYPE4 \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getSoundsource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSoundsource(sound: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Given a sound type, retruns the associated audiofile\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sound\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The sound type, e.g. TYPE1, TYPE2, etc.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the filepath of the corresponding audio file\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport { interval } from 'rxjs';\nimport { WebSocketBridge } from 'django-channels';\nimport { environment } from '../../environments/environment';\nimport { Alarm, Validity, Value } from '../data/alarm';\nimport { AlarmConfig } from '../data/alarm-config';\nimport { BackendUrls, Streams, Assets } from '../settings';\nimport { CdbService } from '../data/cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { AuthService } from '../auth/auth.service';\n\n\n/**\n* Class used to model the different sound options and their corresponding audio files\n*/\nexport class AlarmSounds {\n\n  /** This is the type for alarms with no sound */\n  static none = '';\n\n  /** The name of the audio file associated to the sound TYPE1 */\n  static type1 = 'Alarm_Sound_1.mp3';\n\n  /** The name of the audio file associated to the sound TYPE2 */\n  static type2 = 'Alarm_Sound_2.mp3';\n\n  /** The name of the audio file associated to the sound TYPE3 */\n  static type3 = 'Alarm_Sound_3.mp3';\n\n  /** The name of the audio file associated to the sound TYPE4 */\n  static type4 = 'Alarm_Sound_4.mp3';\n\n  /**\n  * Given a sound type, retruns the associated audiofile\n  * @param {string} sound The sound type, e.g. TYPE1, TYPE2, etc.\n  * @returns {string} the filepath of the corresponding audio file\n  */\n  static getSoundsource(sound: string): string {\n    if (sound === 'TYPE1') {\n      return Assets.SOUNDS + AlarmSounds.type1;\n    } else if (sound === 'TYPE2') {\n      return Assets.SOUNDS + AlarmSounds.type2;\n    } else if (sound === 'TYPE3') {\n      return Assets.SOUNDS + AlarmSounds.type3;\n    } else if (sound === 'TYPE4') {\n      return Assets.SOUNDS + AlarmSounds.type4;\n    }\n    return null;\n  }\n}\n\n/**\n* Service that connects and receives {@link Alarm} messages from the\n* IAS Webserver through Websockets\n*/\n@Injectable()\nexport class AlarmService {\n\n  /**\n  * Timestamp related with the last received message\n  */\n  public lastReceivedMessageTimestamp: number = (new Date).getTime();\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public connectionStatusStream = new BehaviorSubject(false);\n\n  /**\n  * Array of {@link Alarm} objects\n  */\n  public alarmsArray: Alarm[] = [];\n\n  /**\n  * Index for the alarmsArray { core_id: arrayIndex }\n  */\n  public alarmsIndexes: {[core_id: string]: number} = {};\n\n  /**\n  * Stream of notifications of changes in\n  * the dictionary of {@link Alarm} objects\n  */\n  public alarmChangeStream = new BehaviorSubject(true);\n\n  /**\n  * Django Channels WebsocketBridge,\n  * used to connect to Django Channels through Websockets\n  */\n  public webSocketBridge: WebSocketBridge = new WebSocketBridge();\n\n  /**\n  * Defines wether or not the display should emit sounds when alarms are triggered.\n  * It is used to avoid sounds when the page is refreshed, and only allow them after that\n  */\n  public canSound: boolean;\n\n  /**\n  * Reference to the audio object used to play the sounds\n  */\n  public audio = new Audio();\n\n  /**\n  * Id of the currenlty sounding Alarm\n  */\n  public soundingAlarm: string;\n\n  /**\n  * Defines wether or not the service is initialized\n  */\n  public isInitialized = false;\n\n  /**\n  * Information about the count of alarms by view\n  */\n  public countByView = {};\n\n  /**\n  * Connection status timer\n  */\n  public connectionStatusTimer: any;\n\n  /**\n   * Builds an instance of the service\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   * @param {AuthService} authService Service used for authentication\n   */\n  constructor(\n    private cdbService: CdbService,\n    private httpClientService: HttpClientService,\n    private authService: AuthService,\n  ) {\n    this.connectionStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.triggerAlarmsNonValidConnectionState();\n        }\n      }\n    );\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === true) {\n          this.initialize();\n        } else {\n          this.destroy();\n        }\n      }\n    );\n  }\n\n  /**\n  * Sends an {@link Alarm} change event\n  *\n  * @param {Any} any the core_id of the updated alarm,\n  * or 'all' if all were updated\n  */\n  changeAlarms(any: any) {\n    this.alarmChangeStream.next(any);\n  }\n\n  /******* SERVICE INITIALIZATION *******/\n\n  /**\n  * Start connection to the backend through websockets\n  */\n  initialize() {\n    if (this.isInitialized || !this.authService.loginStatus) {\n      return;\n    }\n    this.cdbService.initialize();\n    this.isInitialized = true;\n    this.canSound = false;\n    this.audio = new Audio();\n    this.connect();\n    this.webSocketBridge.socket.addEventListener(\n      'open', () => {\n        this.connectionStatusStream.next(true);\n        this.getAlarmList();\n      }\n    );\n    this.webSocketBridge.socket.addEventListener(\n      'close', () => {\n        this.resetCountByView();\n      }\n    );\n    this.webSocketBridge.demultiplex(Streams.ALARMS, (payload: any, streamName: any) => {\n      // console.log('notify ', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessage(payload.action, payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.UPDATES, (payload: any, streamName: any) => {\n      // console.log('request', payload);\n      if (this.authService.loginStatus) {\n        this.resetTimer();\n        this.readAlarmMessagesList(payload.data);\n      }\n    });\n    this.webSocketBridge.demultiplex(Streams.COUNTER, (payload: any, streamName: any) => {\n      // console.log('counter ', payload);\n      if (this.authService.loginStatus) {\n        this.readCountByViewMessage(payload.data);\n      }\n    });\n  }\n\n  /**\n  *  Start connection to the backend through websockets\n  */\n  connect() {\n    const connectionPath = this.getConnectionPath();\n    this.webSocketBridge.connect(connectionPath);\n    this.webSocketBridge.listen(connectionPath);\n    console.log('Connected to webserver at: ' + environment.websocketPath);\n  }\n\n  /**\n  *  Connection path using authentication data\n  */\n  getConnectionPath() {\n    return environment.websocketPath + '?token=' + this.authService.getToken();\n  }\n\n  /**\n  *  Disconnect from the backend\n  */\n  destroy() {\n    // Close connection\n    if (this.isInitialized) {\n      this.webSocketBridge.stream(Streams.UPDATES).send({\n        'action': 'close'\n      });\n      this.webSocketBridge.socket.close(\n        1000, 'User logout', {keepClosed: true});\n      this.resetCountByView();\n    }\n    this.isInitialized = false;\n    console.log('Connection to webserver closed');\n  }\n\n  /******* ALARM HANDLING *******/\n\n  /**\n   * Returns an Alarm object\n   * @param core_id core_id of the Alarm to return\n   * @returns {Alarm} Alarm object corresponding to the given core_id\n   */\n  get(core_id: string): Alarm {\n    return this.alarmsArray[this.alarmsIndexes[core_id]] as Alarm;\n  }\n\n  /**\n   * Returns a boolean to check if there is information available about an alarm\n   * @param core_id core_id of the Alarm\n   * @returns {boolean} true if there is information about the alarm\n   */\n  isAlarmIndexAvailable(core_id: string): boolean {\n    return (core_id in this.alarmsIndexes);\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm} associated to a given {@link AlarmConfig}\n  * @param {AlarmConfig} config the corresponding AlarmConfig from where to get the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm} associated to the given {@link AlarmConfig}\n  */\n  getAlarm(config: AlarmConfig): Alarm {\n    if (config) {\n      return this.get(config.alarm_id);\n    }\n  }\n\n  /**\n  * Returns the custom_name of the {@link Alarm} given a corresponding {@link AlarmConfig}.\n  * If there is no custom_name, it returns the alarm_id\n  * @param {AlarmConfig} config the corresponding AlarmConfig from where to get the {@link Alarm}\n  * @returns {string} the name associated to the given {@link AlarmConfig}\n  */\n  getName(config: AlarmConfig): string {\n    if (config) {\n      if (config.custom_name) {\n        return config.custom_name;\n      } else {\n        return config.alarm_id;\n      }\n    }\n  }\n\n  /**\n   * Acknowledges a list of Alarms with a message\n   * @param {string[]} alarm_ids list of ids of the alarms to acknowledge\n   * @param {string} message message of the acknowledgement\n   * @param {string} user user that performs the acknowledgement\n   * @returns {json} response of the HTTP request of the acknowledge\n   */\n  acknowledgeAlarms(alarms_ids: string[], message: string, user: string): any {\n    const data = {\n      'alarms_ids': alarms_ids,\n      'message': message,\n      'user': user\n    };\n    return this.httpClientService.put(BackendUrls.TICKETS_MULTIPLE_ACK, data).pipe(\n    map(\n      (response) => {\n        for (const id of alarms_ids) {\n          const alarm = this.get(id);\n          alarm.acknowledge();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Get information about old tickets related to a target alarm\n   * @param alarm_id id of the target alarm\n   * @returns {any[]} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getMissingAcks(alarm_id: string) {\n    const url = BackendUrls.TICKETS_INFO + '?alarm_id=' + alarm_id;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Gets the open {@link ShelveRegistry} for an {@link Alarm}\n   * @param {string} alarm_id id of the target alarm\n   * @param {number} status id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getShelveRegistries(alarm_id: string, status: number): any {\n    const url = BackendUrls.SHELVE_REGS_FILTER + '?alarm_id=' + alarm_id + '&status=' + status;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string} alarm_id id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @param {string} timeout the timeout for the shelving\n   * @param {string} user the user who performed the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  shelveAlarm(alarm_id: string, message: string, timeout: string, user: string): any {\n    const data = {\n      'alarm_id': alarm_id,\n      'message': message,\n      'timeout': timeout,\n      'user': user\n    };\n    return this.httpClientService.post(BackendUrls.SHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 201) {\n          const alarm = this.get(alarm_id);\n          alarm.shelve();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and {@link Alarm} with a message\n   * @param {string[]} alarms_ids id of the alarm to shelve\n   * @param {string} message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  unshelveAlarms(alarms_ids: string[], message: string): any {\n    const data = {\n      'alarms_ids': alarms_ids,\n    };\n    return this.httpClientService.put(BackendUrls.UNSHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 200) {\n          for (const id of alarms_ids) {\n            const alarm = this.get(id);\n            alarm.unshelve();\n          }\n        }\n        return response;\n      }\n    ));\n  }\n\n  /******* HANDLING OF ALARM MESSAGES FROM THE CORE *******/\n\n  /**\n  * Get the complete list of alarms from the webserver database\n   * through the websocket\n   */\n  getAlarmList() {\n    this.webSocketBridge.stream(Streams.UPDATES).send({\n      'action': 'list'\n    });\n  }\n\n  /**\n   * Reads an alarm message from the Core and modify the service alarms list\n   * depending on the action value.\n   * @param {string} action create, update or delete\n   * @param {Object} obj dictionary with values for alarm fields (as generic object)\n   */\n  readAlarmMessage(action: string, obj: Object) {\n    if ( action === 'create' || action === 'update' ) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n      this.changeAlarms(alarm.core_id);\n    }\n  }\n\n  /**\n   * Reads a list of alarm messages form the Core and add them to the\n   * service alarms list\n   * @param {Object[]} alarmsList list of dictionaries with values for alarm fields (as generic objects)\n   */\n  readAlarmMessagesList(alarmsList: Object[]) {\n    for (const obj of alarmsList) {\n      const alarm = Alarm.asAlarm(obj);\n      this.add_or_update_alarm(alarm);\n    }\n    this.changeAlarms('all');\n    this.canSound = true;\n  }\n\n  /**\n   * Reads the count by view object received from the webserver\n   * @param {Object} countByView\n   */\n  readCountByViewMessage(countByView: Object) {\n    this.countByView = countByView;\n  }\n\n  /**\n   * Method to clear the count by view if there is the ws connection is closed\n   */\n  resetCountByView() {\n    this.countByView = {};\n  }\n\n  /**\n   * Adds or updates an {@link Alarm} to the AlarmService\n   * @param {Alarm} alarm the {@link Alarm} to add or update\n   */\n  add_or_update_alarm(alarm: Alarm) {\n    let old_alarm_value = Value.cleared;\n    let old_alarm_ack = true;\n    if (alarm.core_id in this.alarmsIndexes) {\n      const old_alarm = this.alarmsArray[this.alarmsIndexes[alarm.core_id]];\n      old_alarm_value = old_alarm.value;\n      old_alarm_ack = old_alarm.ack;\n      this.alarmsArray[this.alarmsIndexes[alarm.core_id]] = alarm;\n    } else {\n      const newLength = this.alarmsArray.push(alarm);\n      this.alarmsIndexes[alarm.core_id] = newLength - 1;\n    }\n    if (old_alarm_value === Value.cleared && alarm.value !== Value.cleared) {\n      if (alarm.sound !== 'NONE') {\n        this.playAlarmSound(alarm);\n      }\n    }\n    if (!old_alarm_ack && alarm.ack) {\n      if (alarm.sound !== 'NONE') {\n        this.clearSoundsIfAck(alarm);\n      }\n    }\n  }\n\n  /**\n   * Reproduces the sound of a given {@link Alarm}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  playAlarmSound(alarm: Alarm) {\n    if (!this.canSound) {\n      return;\n    }\n    const repeat = alarm.shouldRepeat();\n    if (repeat) {\n      this.soundingAlarm = alarm.core_id;\n      this.audio.pause();\n      this.emitSound(alarm.sound, repeat);\n    } else if (this.audio.paused) {\n      this.emitSound(alarm.sound, repeat);\n    }\n  }\n\n  /**\n   * Reproduces a sound\n   * @param {string} sound the type of sound to reproduce\n   * @param {boolean} repeat true if the sound should be repeated, false if not\n   */\n  emitSound(sound: string, repeat: boolean) {\n    console.log('calling emitSound with: ', sound);\n    this.audio = new Audio();\n    const soundToPlay = AlarmSounds.getSoundsource(sound);\n    if (soundToPlay === null || soundToPlay === '') {\n      return;\n    }\n    this.audio.src = soundToPlay;\n    if (repeat) {\n      this.audio.addEventListener('ended', function() {\n        this.currentTime = 0;\n        this.play();\n      }, false);\n    }\n    this.audio.load();\n    this.audio.play();\n  }\n\n  /**\n   * Stops the sound of a given {@link Alarm}, only if the sound is being repeated\n   * It is intended to be used when critical alarms (repeated) are acknowledged.\n   * Once the sound stops, it check there is another non-acknowledged alarm and plays its sound repeatedly,\n   * by calling {@link AlarmService.html#playAlarmSound}\n   * @param {Alarm} alarm the {@link Alarm}\n   */\n  clearSoundsIfAck(alarm: Alarm) {\n    if (!alarm.shouldRepeat()) {\n      return;\n    }\n    if (this.soundingAlarm === alarm.core_id) {\n      this.audio.pause();\n      this.soundingAlarm = null;\n      for (alarm of this.alarmsArray) {\n        if (!alarm.ack && alarm.sound !== 'NONE' && alarm.shouldRepeat()) {\n          this.soundingAlarm = alarm.core_id;\n          this.playAlarmSound(alarm);\n          return;\n        }\n      }\n    }\n  }\n\n  /******* PERIODIC CHECK OF VALIDITY OF ALARMS *******/\n\n  /**\n   * Set selected state to alarms under an non-valid connection\n   */\n  triggerAlarmsNonValidConnectionState() {\n    for (const alarm of this.alarmsArray) {\n      alarm.validity = Validity.unreliable;\n    }\n    this.changeAlarms('all');\n  }\n\n  /**\n   * Resets the status connection check timer\n   * The timer's period is equal to the broadcastThreshold obtained by {@link CdbService.html#getBroadcastRate}\n   */\n  resetTimer() {\n    if (this.connectionStatusTimer) {\n      this.connectionStatusTimer.unsubscribe();\n      this.connectionStatusStream.next(true);\n    }\n    const broadcastThreshold = this.cdbService.getBroadcastThreshold();\n    this.connectionStatusTimer = interval(1000 * broadcastThreshold).subscribe( () => {\n      this.connectionStatusStream.next(false);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmTileComponent.html":{"url":"components/AlarmTileComponent.html","title":"component - AlarmTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-tile/alarm-tile.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display alarms as tiles in the overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-tile\n            \n\n            \n                styleUrls\n                ./alarm-tile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-tile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBadgesOptions\n                            \n                            \n                                sizeOptions\n                            \n                            \n                                targetAnimationState\n                            \n                            \n                                tooltipDirectionOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmName\n                            \n                            \n                                getClass\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                startAnimation\n                            \n                            \n                                    Public\n                                stopAnimation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                alarmNameMaxSize\n                            \n                            \n                                disableAnimation\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                            \n                                optionalAlarmName\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                size\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:80\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:19\n                            \n                        \n                \n                    \n                        Alarm object associated to the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        alarmNameMaxSize\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:40\n                            \n                        \n                \n                    \n                        Defines the max size of the displayed alarm name. This value is 20 characters by default.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableAnimation\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:60\n                            \n                        \n                \n                    \n                        Variable to disable animation\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :     AlarmImageSet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:24\n                            \n                        \n                \n                    \n                        Image set related to the alarm\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                \n                \n                    \n                        Type :     AlarmImageSet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:29\n                            \n                        \n                \n                    \n                        Image set related to unrealiable states for the alarm\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        optionalAlarmName\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:45\n                            \n                        \n                \n                    \n                        Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:35\n                            \n                        \n                \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 'md'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:50\n                            \n                        \n                \n                    \n                        Defines the size of the component, can be either of the options defined by sizeOptions\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:55\n                            \n                        \n                \n                    \n                        Defines the direction of the tooltip\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Returns the name of the alarm that should be displayed in the header.\nIf the input optionalAlarmName is defined, this is the name that will be displayed\nIf not, the alarm ID is displayed\nIn any case, the name is shortened to a maximum length defined by the alarmNameMaxSize\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    name to display\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:166\n                            \n                        \n\n\n                \n                    \n                            Defines the CSS classes to use depending on the Alarm status\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    array with names of the classes to use\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Method to handle the changes on the alarm values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startAnimation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            Method to start the blinking animation\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopAnimation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stopAnimation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:158\n                            \n                        \n\n\n                \n                    \n                            Method to go to the normal state to stop the animation\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBadgesOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [true, false]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:75\n                            \n                        \n\n                \n                    \n                        Show badges options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['xs', 'sm', 'md', 'lg']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:70\n                            \n                        \n\n                \n                    \n                        Size options\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetAnimationState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:65\n                            \n                        \n\n                \n                    \n                        Auxiliary variable to follow the status of the animation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipDirectionOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['right', 'left']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tile/alarm-tile.component.ts:80\n                            \n                        \n\n                \n                    \n                        Tooltip Direction Options\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnChanges, Input, SimpleChanges } from '@angular/core';\nimport { AlarmImageSet } from '../alarm/alarm.component';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n\n/**\n * Component used to display alarms as tiles in the overview\n */\n@Component({\n  selector: 'app-alarm-tile',\n  templateUrl: './alarm-tile.component.html',\n  styleUrls: ['./alarm-tile.component.scss'],\n})\nexport class AlarmTileComponent implements OnChanges, OnInit {\n\n  /**\n  * Alarm object associated to the component\n  */\n  @Input() alarm: Alarm;\n\n  /**\n  * Image set related to the alarm\n  */\n  @Input() images: AlarmImageSet;\n\n  /**\n  * Image set related to unrealiable states for the alarm\n  */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the max size of the displayed alarm name. This value is 20 characters by default.\n   */\n  @Input() alarmNameMaxSize = 20;\n\n  /**\n   * Defines an optional alarm name to display. By default it is null and in that case the component use the alarm core_id.\n   */\n  @Input() optionalAlarmName = null;\n\n  /**\n   * Defines the size of the component, can be either of the options defined by {@link sizeOptions}\n   */\n  @Input() size = 'md';\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n   * Variable to disable animation\n   */\n  @Input() disableAnimation = false;\n\n  /**\n   * Auxiliary variable to follow the status of the animation\n   */\n  targetAnimationState: string;\n\n  /**\n  * Size options\n  */\n  sizeOptions = ['xs', 'sm', 'md', 'lg'];\n\n  /**\n  * Show badges options\n  */\n  showBadgesOptions = [true, false];\n\n  /**\n  * Tooltip Direction Options\n  */\n  tooltipDirectionOptions = ['right', 'left'];\n\n  /**\n  * Builds a new instance\n  */\n  constructor() {\n    this.targetAnimationState = 'normal';\n  }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n    if (this.sizeOptions.indexOf(this.size)  0) ) {\n          if (this.disableAnimation === false) {\n            this.startAnimation();\n          }\n        }\n        // set to clear transition\n        if ( (previousAlarmValue > 0) && (currentAlarmValue === 0) ) {\n          if (this.disableAnimation === false) {\n            this.stopAnimation();\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Returns the name of the alarm that should be displayed in the header.\n  * If the input {@link optionalAlarmName} is defined, this is the name that will be displayed\n  * If not, the alarm ID is displayed\n  * In any case, the name is shortened to a maximum length defined by the {@link alarmNameMaxSize}\n  * @returns {string} name to display\n  */\n  getAlarmName(): string {\n    let alarmName = '';\n    if (this.optionalAlarmName) {\n      alarmName = this.optionalAlarmName;\n    } else if (this.alarm && !this.optionalAlarmName) {\n        alarmName = this.alarm.core_id;\n    }\n    if (alarmName.length > this.alarmNameMaxSize) {\n      alarmName = alarmName.substring(0, this.alarmNameMaxSize - 3) + '...';\n    }\n    return alarmName;\n  }\n\n  /**\n  * Method to start the blinking animation\n  */\n  public startAnimation(): void {\n    this.targetAnimationState = 'highlight';\n  }\n\n  /**\n  * Method to go to the normal state to stop the animation\n  */\n  public stopAnimation(): void {\n    this.targetAnimationState = 'normal';\n  }\n\n  /**\n  * Defines the CSS classes to use depending on the Alarm status\n  * @returns {string[]} array with names of the classes to use\n  */\n  getClass(): string[] {\n    const result = [];\n    if (!this.alarm) {\n      result.push('alarm-tile-blue');\n      result.push('alarm-tile-unreliable');\n      return result;\n    }\n    if (this.alarm.shelved === true) {\n      result.push('alarm-tile-green');\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      result.push('alarm-tile-blue');\n    } else if (this.alarm.showAsMaintenance()) {\n      result.push('alarm-tile-gray');\n    } else if (this.alarm.value === Value.cleared) {\n      result.push('alarm-tile-green');\n    } else if (this.alarm.value === Value.set_low) {\n      result.push('alarm-tile-yellow');\n    } else if (this.alarm.value === Value.set_medium) {\n      result.push('alarm-tile-yellow');\n    } else if (this.alarm.value === Value.set_high) {\n      result.push('alarm-tile-red');\n    } else if (this.alarm.value === Value.set_critical) {\n      result.push('alarm-tile-red');\n    } else {\n      result.push('alarm-tile-blue');\n    }\n    if (this.alarm.validity === 0 && this.alarm.shelved !== true) {\n      result.push('alarm-tile-unreliable');\n    }\n    if (this.targetAnimationState === 'highlight') {\n      result.push('highlight');\n    } else {\n      result.push('normal');\n    }\n    return result;\n  }\n\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{getAlarmName()}}\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./alarm-tile.component.scss\n                \n                .alarm-tile-container {\n  display:block;\n  position: relative;\n}\n\n.alarm-tile-background {\n  position: absolute;\n  border-width: 4px;\n  border-style: solid;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.alarm-tile {\n  position: relative;\n  z-index: 10;\n\n  .alarm-tile-content {\n\n    padding: 48px;\n    padding-top: 38px;\n    padding-bottom: 68px;\n\n    .title {\n      text-transform: uppercase;\n      padding-bottom: 10px;\n      text-align: center;\n    }\n\n    .alarm {\n      display: inline-flex;\n      width: 100%;\n\n      app-alarm {\n        margin: auto;\n      }\n\n    }\n\n  }\n\n}\n\n.normal {\n  opacity: 0.0;\n}\n\n.highlight {\n  -webkit-animation: BLINK 2s;\n  animation: BLINK 2s;\n  -moz-animation: BLINK 2s;\n  -o-animation: BLINK 2s;\n  animation-iteration-count: 5;\n  opacity: 0.0;\n}\n\n@-webkit-keyframes BLINK {\n  0% {opacity: 0.0}\n  50% {opacity: 0.75}\n  100% {opacity: 0.0}\n}\n\n@-moz-keyframes BLINK {\n  0% {opacity: 0.0}\n  50% {opacity: 0.75}\n  100% {opacity: 0.0}\n}\n\n@keyframes BLINK {\n  0% {opacity: 0.0}\n  50% {opacity: 0.75}\n  100%{opacity: 0.0}\n}\n\n@-o-keyframes BLINK {\n  0% {opacity: 0.0}\n  50% {opacity: 0.75}\n  100%{opacity: 0.0}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{getAlarmName()}}                          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmTooltipComponent.html":{"url":"components/AlarmTooltipComponent.html","title":"component - AlarmTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm-tooltip/alarm-tooltip.component.ts\n\n\n    \n        Description\n    \n    \n        Component that defines the content and layout of the tooltip over Alarm Components\nIn order to use it you have to put the AlarmTooltipComponent inside an ng-template\nand assign the ng-template to the main container of the parent component with some additional paramenters,\nsuch as data-container=\"body\".\nFor example:\n\n   \n     \n   \n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm-tooltip\n            \n\n            \n                styleUrls\n                ./alarm-tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./alarm-tooltip.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateFormat\n                            \n                            \n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                tooltipDirection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:43\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:32\n                            \n                        \n                \n                    \n                        Alarm object associated to the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:37\n                            \n                        \n                \n                    \n                        Defines the direction of the tooltip\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\nInitializes the dateFormat and timezone\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:40\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timezone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm-tooltip/alarm-tooltip.component.ts:43\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\nimport { Locale } from '../../settings';\n\n/**\n* Component that defines the content and layout of the tooltip over Alarm Components\n* In order to use it you have to put the {@link AlarmTooltipComponent} inside an ng-template\n* and assign the ng-template to the main container of the parent component with some additional paramenters,\n* such as data-container=\"body\".\n*\n* For example:\n*\n* \n*   \n*     \n*   \n**/\n@Component({\n  selector: 'app-alarm-tooltip',\n  templateUrl: './alarm-tooltip.component.html',\n  styleUrls: ['./alarm-tooltip.component.scss']\n})\nexport class AlarmTooltipComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /** String to store the formatting of dates, read form the settings */\n  dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  timezone: string;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  * Initializes the dateFormat and timezone\n  */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Alarm ID\n      {{alarm?.core_id}}\n    \n    \n      Description\n      {{ alarm?.description }}\n    \n    \n      Last Change\n      {{ alarm?.timestamp | date: dateFormat: timezone }}\n    \n    \n      Last Properties\n      {{ alarm?.formattedProperties }}\n    \n  \n\n\n    \n\n    \n                \n                    ./alarm-tooltip.component.scss\n                \n                ::ng-deep .tooltip {\n  animation-name: delayedFadeIn;\n  animation-duration: 0.5s; /* Control animation time */\n}\n\n::ng-deep .tooltip-inner {\n  font-size: 11px;\n  min-width: 350px;\n  max-width: 500px;\n  font-family: monospace;\n  vertical-align: top;\n  text-align: left;\n  background: rgba(0, 0, 0, 0.85);\n\n  table {\n    vertical-align: top;\n  }\n\n  th {\n    width: 120px;\n    vertical-align: top;\n  }\n\n  .props-container {\n    color: white;\n    vertical-align: top;\n    font-size: 100%;\n    white-space: pre-wrap;\n    word-wrap: break-all;\n    margin: 0px;\n    max-width: 380px;\n  }\n}\n\n@keyframes delayedFadeIn {\n  0% {opacity: 0;}\n  75% {opacity: 0;} /* Set this to 99% for no fade-in. */\n  100% {opacity: 1;}\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Alarm ID      {{alarm?.core_id}}              Description      {{ alarm?.description }}              Last Change      {{ alarm?.timestamp | date: dateFormat: timezone }}              Last Properties      {{ alarm?.formattedProperties }}      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n\n               "},"components/AntennaMarkerComponent.html":{"url":"components/AntennaMarkerComponent.html","title":"component - AntennaMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennaMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display an Antenna in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antenna-marker\n            \n\n            \n                styleUrls\n                ./antenna-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antenna-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNgClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                cx\n                            \n                            \n                                cy\n                            \n                            \n                                placemark\n                            \n                            \n                                r\n                            \n                            \n                                viewbox\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:17\n                            \n                        \n                \n                    \n                        The Alarm to associate to the antenna \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        cx\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:26\n                            \n                        \n                \n                    \n                        The position of the antenna in the X axis \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        cy\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:29\n                            \n                        \n                \n                    \n                        The position of the antenna in the Y axis \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placemark\n                    \n                \n                \n                    \n                        Default value : {'name': '', 'opt_cx': 0, 'opt_cy': 0}\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:20\n                            \n                        \n                \n                    \n                        The placemark that describes how to draw the antenna \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        r\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:32\n                            \n                        \n                \n                    \n                        Radius of the antenna \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewbox\n                    \n                \n                \n                    \n                        Default value : '0 0 10 10'\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:23\n                            \n                        \n                \n                    \n                        The placemark that describes how to draw the antenna \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNgClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNgClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class that should be used to draw the marker\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:41\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts:40\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle antennas configuration\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../../data/alarm';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { AntennasService } from '../../../antennas/antennas.service';\n\n/**\n * Marker to display an Antenna in a map\n */\n@Component({\n  selector: 'app-antenna-marker',\n  templateUrl: './antenna-marker.component.html',\n  styleUrls: ['./antenna-marker.component.scss']\n})\nexport class AntennaMarkerComponent implements OnInit {\n\n  /** The {@link Alarm} to associate to the antenna */\n  @Input() alarm: Alarm;\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() placemark = {'name': '', 'opt_cx': 0, 'opt_cy': 0};\n\n  /** The placemark that describes how to draw the antenna */\n  @Input() viewbox = '0 0 10 10';\n\n  /** The position of the antenna in the X axis */\n  @Input() cx = 0;\n\n  /** The position of the antenna in the Y axis */\n  @Input() cy = 0;\n\n  /** Radius of the antenna */\n  @Input() r = 1;\n\n  /**\n   * Builds an instance of the component\n   * @param {AntennasService} service Service used to retrieve and handle antennas configuration\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public service: AntennasService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the CSS class that should be used to draw the marker\n   */\n  getNgClass() {\n    let colorClass = 'green';\n    if (this.alarm.shelved === true) {\n      colorClass = 'green';\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      colorClass = 'blue';\n    } else if (this.alarm.showAsMaintenance()) {\n      colorClass = 'grey';\n    } else if (this.alarm.value === Value.cleared) {\n      colorClass = 'green';\n    } else if (this.alarm.value === Value.set_low) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_medium) {\n      colorClass = 'yellow';\n    } else if (this.alarm.value === Value.set_high) {\n      colorClass = 'red';\n    } else if (this.alarm.value === Value.set_critical) {\n      colorClass = 'red';\n    } else {\n      colorClass = 'green';\n    }\n\n    if (this.alarm.validity === 0) {\n      return [colorClass, 'unreliable'];\n    } else {\n      return [colorClass];\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./antenna-marker.component.scss\n                \n                .antenna-marker {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennaMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasComponent.html":{"url":"components/AntennasComponent.html","title":"component - AntennasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas/antennas.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Antennas Alarms both in a sidebar (instantiated in a AntennasSidebar),\nand a map (instantiated by a AntennasMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas\n            \n\n            \n                styleUrls\n                ./antennas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateSelectedAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSelectedAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSelectedAntenna(selectedAntenna: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedAntenna\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAntenna\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas/antennas.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n* Component used to display Antennas Alarms both in a sidebar (instantiated in a {@link AntennasSidebar}),\n* and a map (instantiated by a {@link AntennasMap})\n*/\n@Component({\n  selector: 'app-antennas',\n  templateUrl: './antennas.component.html',\n  styleUrls: ['./antennas.component.scss']\n})\nexport class AntennasComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedAntenna: AlarmConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AlarmConfig}\n   */\n  updateSelectedAntenna(selectedAntenna: AlarmConfig): void {\n    this.selectedAntenna = selectedAntenna;\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./antennas.component.scss\n                \n                mat-sidenav-container {\n  background: transparent;\n  height: 100%;\n}\n\n#antennas-map {\n}\n\n#antennas-sidenav {\n  background: transparent;\n  width: 960px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AntennasModule.html":{"url":"modules/AntennasModule.html","title":"module - AntennasModule","body":"\n                   \n\n\n\n\n    Modules\n    AntennasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAntennasModule -->\n\nTabularModule->AntennasModule\n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/antennas/antennas.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AntennaMarkerComponent\n                        \n                        \n                            AntennasComponent\n                        \n                        \n                            AntennasMapComponent\n                        \n                        \n                            AntennasSidebarComponent\n                        \n                        \n                            AntennasSummaryComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AntennasService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TabularModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AntennasSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AntennasComponent } from './antennas/antennas.component';\nimport { AntennasMapComponent } from './antennas-map/antennas-map.component';\nimport { AntennasSidebarComponent } from './antennas-sidebar/antennas-sidebar.component';\nimport { DataModule } from '../data/data.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { TabularModule } from '../tabular/tabular.module';\nimport { AntennasService } from './antennas.service';\nimport { AntennaMarkerComponent } from './antennas-map-markers/antenna-marker/antenna-marker.component';\nimport { AntennasSummaryComponent } from './antennas-summary/antennas-summary.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    ActionsModule,\n    IasMaterialModule,\n    MapModule,\n    SharedModule,\n    TabularModule,\n  ],\n  providers: [\n    AntennasService\n  ],\n  declarations: [\n    AntennasComponent,\n    AntennasMapComponent,\n    AntennasSidebarComponent,\n    AntennaMarkerComponent,\n    AntennasSummaryComponent\n  ],\n  exports: [\n    AntennasSummaryComponent\n  ]\n})\nexport class AntennasModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AntennasService.html":{"url":"injectables/AntennasService.html","title":"injectable - AntennasService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AntennasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/antennas/antennas.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the AntennasModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                antennaImageSet\n                            \n                            \n                                    Public\n                                antennaImageUnreliableSet\n                            \n                            \n                                    Public\n                                antennasConfig\n                            \n                            \n                                    Public\n                                antennasMapName\n                            \n                            \n                                    Public\n                                antennasSummaryConfig\n                            \n                            \n                                    Public\n                                devicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMapData\n                            \n                            \n                                initialize\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                loadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas.service.ts:36\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service and initializes it calling the initialize method\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Define the icons used by this module components\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:36\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:30\n                            \n                        \n\n                \n                    \n                        Set of antenna icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennaImageUnreliableSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:33\n                            \n                        \n\n                \n                    \n                        Set of antenna Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:18\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for each antenna *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasMapName\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AntennasSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:24\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasSummaryConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:27\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the antennas summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            devicesConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas.service.ts:21\n                            \n                        \n\n                \n                    \n                        List of Alarm configuration for other devices related with the array *\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AlarmConfig } from '../data/alarm-config';\nimport { Assets } from '../settings';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, AntennasSettings } from '../settings';\n\n/**\n * Service that stores and handles all configuration needed by the components of the {@link AntennasModule}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AntennasService {\n\n  /** List of Alarm configuration for each antenna **/\n  public antennasConfig: AlarmConfig [] = [];\n\n  /** List of Alarm configuration for other devices related with the array **/\n  public devicesConfig: AlarmConfig [] = [];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public antennasMapName = AntennasSettings.mapKey;\n\n  /** Alarms Ids for the antennas summary **/\n  public antennasSummaryConfig: AlarmConfig [] = [];\n\n  /** Set of antenna icons */\n  public antennaImageSet: AlarmImageSet;\n\n  /** Set of antenna Unreliable icons */\n  public antennaImageUnreliableSet: AlarmImageSet;\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Builds an instance of the service and initializes it calling the {@link initialize} method\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClient: HttpClientService\n  ) {\n  }\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize(): void {\n    if (this._initialized === false) {\n      this.loadAlarmsConfig();\n      this.loadImages();\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const url = BackendUrls.ANTENNAS_VIEW;\n    this.httpClient.get(url).subscribe((response) => {\n      this.antennasConfig = response['antennas'] as AlarmConfig[];\n      this.devicesConfig = response['devices'] as AlarmConfig[];\n    });\n\n    const summary_url = BackendUrls.ANTENNAS_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.antennasSummaryConfig = response as AlarmConfig[];\n        }\n      }\n    });\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.antennasMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Define the icons used by this module components\n  */\n  loadImages(): void {\n    /** Set of icons */\n    this.antennaImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.antennaImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSidebarComponent.html":{"url":"components/AntennasSidebarComponent.html","title":"component - AntennasSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Display used to show the list of antennas' alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-sidebar\n            \n\n            \n                styleUrls\n                ./antennas-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                getAntennas\n                            \n                            \n                                getChildrenAlarmIds\n                            \n                            \n                                getDevices\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                unselectAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAntenna\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                antennaClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(antennasService: AntennasService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAntenna\n                    \n                \n                \n                    \n                        Type :     AlarmConfig\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:18\n                            \n                        \n                \n                    \n                        Selected antenna object, null if it is nothing selected \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        antennaClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:21\n                            \n                        \n                \n                    \n                        Event emitted to notify when an antenna is selected \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the ID of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Return the list of antennas Alarm configuration\n\n\n                            \n                            \n                            \n                                Returns :     AlarmConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getChildrenAlarmIds\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetChildrenAlarmIds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Return the list of alarm IDs of the children of the selectedAntenna\n\n\n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    list of alarm IDs\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDevices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDevices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Return the list of Alarm configuration for global devices\n\n\n                            \n                            \n                            \n                                Returns :     AlarmConfig[]\n\n                            \n                                \n                                    list of {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(alarmConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Indicates if the antenna is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(alarmConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Action performed when the antenna is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked antenna\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unselectAntenna\n                            \n                            \n                        \n                    \n                \n                \n                    \nunselectAntenna()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            If there is a selected antenna it will be unselected\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:31\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n * Display used to show the list of antennas' alarms\n */\n@Component({\n  selector: 'app-antennas-sidebar',\n  templateUrl: './antennas-sidebar.component.html',\n  styleUrls: ['./antennas-sidebar.component.scss']\n})\nexport class AntennasSidebarComponent implements OnInit {\n\n  /** Selected antenna object, null if it is nothing selected */\n  @Input() selectedAntenna: AlarmConfig = null;\n\n  /** Event emitted to notify when an antenna is selected */\n  @Output() antennaClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {AntennasService} antennasService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {RoutingService} routing Service used to redirect to other views\n   */\n  constructor(\n    public antennasService: AntennasService,\n    public alarmService: AlarmService\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @param {string} alarm_id the ID of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(alarm_id: string): Alarm {\n    return this.alarmService.get(alarm_id);\n  }\n\n  /**\n  * Return the list of antennas Alarm configuration\n  * @returns {list} list of {@link AlarmConfig}\n  */\n  getAntennas(): AlarmConfig [] {\n    return this.antennasService.antennasConfig;\n  }\n\n  /**\n  * Return the list of alarm IDs of the children of the selectedAntenna\n  * @returns {string[]} list of alarm IDs\n  */\n  getChildrenAlarmIds(): string[] {\n    const alarm = this.alarmService.getAlarm(this.selectedAntenna);\n    if (!alarm) {\n      return [];\n    }\n    return alarm.dependencies;\n  }\n\n  /**\n  * Return the list of Alarm configuration for global devices\n  * @returns {list} list of {@link AlarmConfig}\n  */\n  getDevices(): AlarmConfig [] {\n    return this.antennasService.devicesConfig;\n  }\n\n  /**\n  * If there is a selected antenna it will be unselected\n  */\n  unselectAntenna() {\n    this.selectedAntenna = null;\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n  /**\n  * Indicates if the antenna is selected or not\n  * @param {AlarmConfig} alarmConfig configuration of the alarm\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(alarmConfig: AlarmConfig): boolean {\n    return this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark);\n  }\n\n  /**\n  * Action performed when the antenna is clicked\n  * @param {AlarmConfig} alarmConfig configuration of the clicked antenna\n  */\n  onClick(alarmConfig: AlarmConfig) {\n    if ( this.selectedAntenna && (this.selectedAntenna.placemark === alarmConfig.placemark) ) {\n      this.selectedAntenna = null;\n    } else {\n      this.selectedAntenna = alarmConfig;\n    }\n    this.antennaClicked.emit(this.selectedAntenna);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n\n  \n  \n     \n  \n\n\n\n\n   ANTENNAS \n\n\n\n\n    \n      chevron_left\n       {{alarmService.getName(this.selectedAntenna)}} \n    \n\n\n\n\n  \n    \n      \n        \n      \n    \n  \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n        \n          Alarm ID\n          {{this.selectedAntenna.alarm_id}}\n        \n        \n          Antenna (Pad)\n          {{this.alarmService.getName(selectedAntenna)}} ({{this.selectedAntenna.placemark}})\n        \n      \n    \n    \n      \n    \n  \n\n  \n    \n      Antenna devices alarms\n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./antennas-sidebar.component.scss\n                \n                .antennas-sidebar-card {\n  padding: 0 12px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  .antennas-sidebar-title {\n    padding: 12px 0px;\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n\n    .return-link {\n      cursor: pointer;\n\n      i {\n        vertical-align: middle;\n        font-size: 25px;\n      }\n\n      span {\n        vertical-align: middle;\n      }\n    }\n  }\n\n  .antennas-sidebar-content {\n    padding: 12px 0px;\n    height: 100%;\n    overflow-y: auto;\n\n    .antennas-container {\n      margin: 6px 0px 20px 0px;\n\n      .grid-container {\n        display: grid;\n        grid-template-columns: auto auto auto auto auto auto auto auto auto auto;\n        grid-column-gap: 10px;\n        grid-row-gap: 10px;\n\n        .grid-item {\n          height: 60px;\n          line-height: 62px;\n          border-radius: 4px;\n          padding: 0;\n          position: relative;\n          cursor: pointer;\n        }\n\n      }\n    }\n\n    .global-devices-container {\n      margin: 20px 0px 6px 0px;\n\n      .grid-container {\n        display: grid;\n        grid-template-columns: auto auto auto;\n        grid-column-gap: 10px;\n        grid-row-gap: 10px;\n\n        .grid-item {\n          height: 60px;\n          line-height: 62px;\n          border-radius: 4px;\n          padding: 0;\n          position: relative;\n          cursor: pointer;\n        }\n\n      }\n\n    }\n\n    .antennas-detail {\n\n      margin-left: 28px;\n      margin-right: 28px;\n\n      &.alarm-info {\n        padding-bottom: 12px;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n        border-bottom-color: rgba(255, 255, 255, 0.12);\n        display: flex;\n        flex-flow: row;\n\n        .header {\n          font-weight: bold;\n        }\n\n        .alarm-buttons {\n          flex: 1 1 auto;\n          align-self: center;\n        }\n\n        table {\n          vertical-align: top;\n        }\n\n        th {\n          padding-right: 16px;\n          font-weight: normal;\n        }\n      }\n\n      &.subalarms {\n        // padding-top: 20px;\n\n        .subalarms-header {\n          padding: 20px 0 10px 0px;\n          font-weight: bold;\n        }\n      }\n\n      &.devices-alarms {\n\n        padding-top: 20px;\n\n        table {\n            width: 100%;\n        }\n\n        td {\n          padding: 5px;\n          height: 40px;\n\n          &.antenna {\n            padding-left: 0px;\n            font-weight: bold;\n            width: 25%;\n          }\n\n          &.device {\n            padding-left: 20px;\n            font-weight: bold;\n            width: 40%;\n          }\n        }\n        .icon {\n          padding-left: 20px;\n          height: 30px;\n          width: fit-content;\n          align: right;\n        }\n        .text {\n          padding-left: 0;\n          height: 30px;\n          width: 75%;\n          align: right;\n        }\n        .status {\n          padding-left: 20px;\n        }\n        .buttons {\n          width: 60%;\n        }\n      }\n\n      &.footer {\n        width: 100%;\n        font-size: 14px;\n        display: table;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n        padding-top: 50px;\n\n        button {\n          margin: 0px 10px 0px 10px;\n        }\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        ANTENNAS           chevron_left       {{alarmService.getName(this.selectedAntenna)}}                                                                                                                                                                                                                                                                 Alarm ID          {{this.selectedAntenna.alarm_id}}                          Antenna (Pad)          {{this.alarmService.getName(selectedAntenna)}} ({{this.selectedAntenna.placemark}})                                              Antenna devices alarms              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AntennasSummaryComponent.html":{"url":"components/AntennasSummaryComponent.html","title":"component - AntennasSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AntennasSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/antennas/antennas-summary/antennas-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the Antennas Arrays\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-antennas-summary\n            \n\n            \n                styleUrls\n                ./antennas-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./antennas-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennasService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, antennasService: AntennasService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:15\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        antennasService\n                                                  \n                                                        \n                                                                    AntennasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get Antennas configuration\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the AntennasService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            antennasService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AntennasService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        Service used to get Antennas configuration\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/antennas/antennas-summary/antennas-summary.component.ts:41\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AntennasService } from '../antennas.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Summarized state of the Antennas Arrays\n */\n@Component({\n  selector: 'app-antennas-summary',\n  templateUrl: './antennas-summary.component.html',\n  styleUrls: ['./antennas-summary.component.scss']\n})\nexport class AntennasSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {AntennasService} antennasService Service used to get Antennas configuration\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    public antennasService: AntennasService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   * Initializes the {@link AntennasService} if not already initialized\n   */\n  ngOnInit() {\n    this.antennasService.initialize();\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    const conf = this.antennasService.antennasSummaryConfig;\n    if (conf && conf[0]) {\n      return this.alarmService.getAlarm(conf[0]);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Antennas View\n   */\n  redirect() {\n    this.routing.goToAntennas();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./antennas-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AntennasSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actionsSidenav\n                            \n                            \n                                    Public\n                                actionsSidenavService\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isNavigationCompacted\n                            \n                            \n                                navigationSidenavItems\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionsLink\n                            \n                            \n                                getNavItemCountClass\n                            \n                            \n                                getNavItemCountText\n                            \n                            \n                                getUser\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, authService: AuthService, userService: UserService, actionsSidenavService: SidenavService, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:68\n                            \n                        \n\n                \n                    \n                            Builds an instance of the application, with its related services and complements\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used for authentication\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to manage information about user accounts\n\n                                                        \n                                                \n                                                \n                                                        actionsSidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for the navigation\n\n                                                        \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular material registry for custom icons\n\n                                                        \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionsLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionsLink(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Returns the links for the router outlets to navigate the different views,\nconsidering of the actionsSidenav can be closed or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                an item of the navigation sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    The links in a dictionary\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountClass(navItem: any, countByView: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:181\n                            \n                        \n\n\n                \n                    \n                            Method to get the class related to the count of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the countByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the classname for the nav item mark\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNavItemCountText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNavItemCountText(navItem: any, countByView: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:210\n                            \n                        \n\n\n                \n                    \n                            Method to get the text related to the mark of the nav items\nto highlight or not the presence of unack alarms by view\n\" It is expected to use the counterByView\ndefined on the AlarmService\nand the configuration defined in the navigationSidenavItems\nvariable\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navItem\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        countByView\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text related to the count for the nav item\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            Method to get the username\n\" Uses the getUser method defined on the AuthService\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the username\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Method to logout an authenticated user\n\" Uses the logout method defined on the AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Method executed when the application is initiated\nInitializes the AlarmService and passes its actionsSidenav to the ActionsSidenavService for it to control it\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isNavigationCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('actionsSidenav')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Reference to the Actions sidenav (right sidenav)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actionsSidenavService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:85\n                            \n                        \n\n                \n                    \n                        Service for the navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:82\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms of this component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:83\n                            \n                        \n\n                \n                    \n                        Service used for authentication\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNavigationCompacted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationSidenavItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                        Navigation Sidenav Menu of the application (left sidenav) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:88\n                            \n                        \n\n                \n                    \n                        instance of an Angular {\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:84\n                            \n                        \n\n                \n                    \n                        Service used to manage information about user accounts\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { AlarmService } from './data/alarm.service';\nimport { SidenavService } from './actions/sidenav.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AuthService } from './auth/auth.service';\nimport { UserService } from './data/user.service';\nimport { Router } from '@angular/router';\n\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n  * Reference to the Actions sidenav (right sidenav)\n  */\n  @ViewChild('actionsSidenav') public actionsSidenav: MatSidenav;\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isNavigationCompacted = true;\n\n  // TODO: Use only custom svgIcons\n  /** Navigation Sidenav Menu of the application (left sidenav) */\n  navigationSidenavItems = [\n    {\n      title: 'Overview',\n      link: 'overview',\n      icon: 'ias_overview',\n      svgIcon: true,\n      counter: 'summary'\n    },\n    {\n      title: 'Weather',\n      link: 'weather',\n      icon: 'ias_weather',\n      svgIcon: true,\n      counter: 'weather'\n    },\n    {\n      title: 'Antennas',\n      link: 'antennas',\n      icon: 'ias_antenna',\n      svgIcon: true,\n      counter: 'antennas'\n    },\n    {\n      title: 'Table',\n      link: 'tabular',\n      icon: 'ias_table',\n      svgIcon: true,\n      counter: ''\n    }\n  ];\n\n\n  /**\n   * Builds an instance of the application, with its related services and complements\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   * @param {AuthService} authService Service used for authentication\n   * @param {UserService} userService Service used to manage information about user accounts\n   * @param {SidenavService} actionsSidenavService Service for the navigation\n   * @param {MatIconRegistry} matIconRegistry Angular material registry for custom icons\n   * @param {DomSanitizer} matIconRegistry Angular material DOM sanitizer for custom icons\n   * @param {Router} router instance of an Angular {@link Router} to handle routing\n   */\n  constructor(\n    public alarmService: AlarmService,\n    public authService: AuthService,\n    public userService: UserService,\n    public actionsSidenavService: SidenavService,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    public router: Router,\n  ) {\n    this.matIconRegistry\n      .addSvgIcon(\n        'ias_overview',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-overview.svg')\n      )\n      .addSvgIcon(\n        'ias_weather',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-weather.svg')\n      )\n      .addSvgIcon(\n        'ias_antenna',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-antenna.svg')\n      )\n      .addSvgIcon(\n        'ias_table',\n        this.domSanitizer.bypassSecurityTrustResourceUrl(\n          '../assets/img/ias-icon-table.svg')\n      );\n  }\n\n  /**\n   * Method executed when the application is initiated\n   * Initializes the {@link AlarmService} and passes its {@link actionsSidenav} to the {@link ActionsSidenavService} for it to control it\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n    this.actionsSidenavService.setSidenav(this.actionsSidenav);\n    this.authService.loginStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.actionsSidenavService.close();\n          this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n        } else if (value === true) {\n          this.userService.requestUsersList();\n        }\n      }\n    );\n  }\n\n  /**\n  * Returns the links for the router outlets to navigate the different views,\n  * considering of the actionsSidenav can be closed or not\n  * @param {any} item an item of the navigation sidenav\n  * @returns {Object} The links in a dictionary\n  */\n  getActionsLink(item: any): Object {\n    if (this.actionsSidenavService.canClose) {\n      return {outlets: { primary: item.link, actions: null }};\n    } else {\n      return {outlets: { primary: item.link }};\n    }\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isNavigationCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isNavigationCompacted = !this.isNavigationCompacted;\n    return this.isNavigationCompacted;\n  }\n\n  /**\n   * Method to get the username\n   \" Uses the getUser method defined on the {@link AuthService}\n   * @returns {string} the username\n   */\n  getUser(): string {\n    return this.authService.getUser();\n  }\n\n  /**\n   * Method to logout an authenticated user\n   \" Uses the logout method defined on the {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Method to get the class related to the count of the nav items\n   * to highlight or not the presence of unack alarms by view\n   \" It is expected to use the countByView\n   * defined on the {@link AlarmService}\n   * and the configuration defined in the navigationSidenavItems\n   * variable\n   * @returns {string} the classname for the nav item mark\n   */\n   getNavItemCountClass(navItem: any, countByView: any): string {\n     const navItemCounter = navItem.counter;\n     const availableCounters = Object.keys(countByView);\n     if (navItemCounter === '') {\n       return 'hide-count';\n     } else {\n       if (availableCounters.indexOf(navItemCounter) > -1) {\n         if (countByView[navItemCounter] > 0) {\n           return 'nonzero-count';\n         }\n         if (countByView[navItemCounter] === 0) {\n           return 'zero-count';\n         }\n       } else {\n         return 'unknown-count';\n       }\n\n     }\n   }\n\n   /**\n    * Method to get the text related to the mark of the nav items\n    * to highlight or not the presence of unack alarms by view\n    \" It is expected to use the counterByView\n    * defined on the {@link AlarmService}\n    * and the configuration defined in the navigationSidenavItems\n    * variable\n    * @returns {string} the text related to the count for the nav item\n    */\n    getNavItemCountText(navItem: any, countByView: any): string {\n      const navItemCounter = navItem.counter;\n      const availableCounters = Object.keys(countByView);\n      if (navItemCounter === '') {\n        return '';\n      } else {\n        if (availableCounters.indexOf(navItemCounter) > -1) {\n          const count = countByView[navItemCounter];\n          if (count >= 0) {\n            if (count 100');\n            }\n          } else {\n            return String(count);  // this case should not happen\n          }\n        } else {\n          return '?';\n        }\n\n      }\n    }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n      \n       Integrated Alarm System \n    \n    \n      \n        account_circle {{ this.getUser() }}\n      \n      \n        \n          exit_to_appLog out\n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                {{ getNavItemCountText(item, alarmService.countByView) }}\n              \n              \n                \n                  {{ item.icon }}\n                \n                \n                  {{ item.icon }}\n                \n              \n            \n            {{ item.title }} \n          \n        \n      \n    \n\n    \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                html, body {\n  box-sizing: border-box;\n  height: 100%;\n  margin: 0;\n}\n\n#app-toolbar {\n\n  padding: 0;\n\n  .btn-wrapper {\n    padding: 0 16px;\n  }\n\n  .content-wrapper {\n    padding: 0 16px;\n    width: 100%;\n  }\n\n  .user-wrapper {\n    padding: 0 24px;\n  }\n\n  img.ias-logo {\n    width: 35px;\n    margin-right: 10px;\n  }\n\n}\n\n#actions-sidenav  {\n  width: 500px;\n  min-height: 100%;\n}\n\n\n#main-content  {\n  height: calc(100vh - 64px) !important;\n}\n\n#navigation-sidenav {\n\n  min-width: 70px;\n\n  p {\n    padding-right: 50px;\n  }\n\n  /deep/ .mat-list-item-content {\n    padding: 0px 12px;\n  }\n\n  /deep/ .mat-list-text {\n    padding-left: 0;\n    width: 74%;\n  }\n\n  mat-nav-list a.mat-list-item {\n\n    height: 86px;\n\n    mat-icon {\n      height: 44px;\n      width: 44px;\n    }\n\n    &.active-link {\n\n      /deep/ .mat-line {\n        font-weight: bold;\n      }\n\n    }\n\n  }\n\n  &.compacted {\n\n    width: unset;\n\n    .ias.ias-logo-container {\n      padding: .725rem 0;\n      width: 60%;\n      left: 20%;\n    }\n\n    img.ias.ias-logo {\n      width: 30px;\n    }\n\n    mat-nav-list a.mat-list-item {\n\n      padding-left: 0px;\n\n    }\n\n  }\n\n}\n\n\n.ias-nav-button-container {\n\n  .ias-count-label {\n    position: absolute;\n    top: 9px;\n    right: 7px;\n    text-align: center;\n    font-weight: 700;\n\n    &.hide-count {\n      display: none;\n    }\n\n    &.nonzero-count {\n      font-size: 10px;\n      border-radius: .25em;\n      padding: 2.75px 5px;\n      border-width: 0px;\n      border-style: hidden;\n    }\n\n    &.zero-count {\n      display: none;\n    }\n\n    &.unknown-count {\n      font-size: 11px;\n      border-radius: .25em;\n      border-width: 2px;\n      border-style: solid;\n      padding: 0px 2px;\n    }\n\n  }\n\n  .ias-icon {\n    display: inline-block;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                           Integrated Alarm System                       account_circle {{ this.getUser() }}                              exit_to_appLog out                                                                                            {{ getNavItemCountText(item, alarmService.countByView) }}                                                              {{ item.icon }}                                                  {{ item.icon }}                                                      {{ item.title }}                                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Application module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            AntennasModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            OverviewModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TabularModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BASE_HREF, DatePipe } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { DataModule } from './data/data.module';\nimport { ActionsModule } from './actions/actions.module';\nimport { AntennasModule } from './antennas/antennas.module';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { AuthModule } from './auth/auth.module';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { HealthModule } from './health/health.module';\nimport { MapModule } from './map/map.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { AppComponent } from './app.component';\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    ActionsModule,\n    AntennasModule,\n    AppRoutingModule,\n    AuthModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n    MapModule,\n  ],\n  providers: [\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nMaterialSandboxModule\n\nMaterialSandboxModule\n\nAppRoutingModule -->\n\nMaterialSandboxModule->AppRoutingModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MaterialSandboxComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RoutingService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IasMaterialModule\n                        \n                        \n                            MaterialSandboxModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutingService } from './routing.service';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { AckComponent } from '../actions/ack/ack.component';\nimport { AntennasComponent } from '../antennas/antennas/antennas.component';\nimport { MaterialSandboxComponent } from '../material-sandbox/material-sandbox.components';\nimport { MaterialSandboxModule } from '../material-sandbox/material-sandbox.module';\nimport { OverviewComponent } from '../overview/overview/overview.component';\nimport { ShelveComponent } from '../actions/shelve/shelve.component';\nimport { TabularViewComponent } from '../tabular/tabular-view/tabular-view.component';\nimport { WeatherComponent } from '../weather/weather/weather.component';\nimport { AuthLoginGuard } from '../auth/auth-login.guard';\nimport { LoginComponent } from '../auth/login/login.component';\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent},\n  { path: 'overview', component: OverviewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'tabular/:filter', component: TabularViewComponent , canActivate: [AuthLoginGuard]},\n  { path: 'acknowledge/:alarmID', component: AckComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'shelve/:alarmID', component: ShelveComponent, outlet: 'actions', canActivate: [AuthLoginGuard]},\n  { path: 'weather', component: WeatherComponent, canActivate: [AuthLoginGuard]},\n  { path: 'sandbox', component: MaterialSandboxComponent, canActivate: [AuthLoginGuard]},\n  { path: 'antennas', component: AntennasComponent, canActivate: [AuthLoginGuard]},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    MaterialSandboxModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthLoginGuard.html":{"url":"guards/AuthLoginGuard.html","title":"guard - AuthLoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthLoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth-login.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth-login.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Builds an instance of the guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:31\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next activated route\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the next state of router navigation, used to retrieve the url that is going to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckLogin(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth-login.guard.ts:42\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged in.\nIf false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the nexturl to be navigated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if navigation is permitted, false if not\n\n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n/**\n* Guard that is used to verify if navigation should be allowed depending if there is a logged-in user.\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthLoginGuard implements CanActivate {\n\n  /**\n  * Builds an instance of the guard\n  * @param {AuthService} authService service used to check and handle authorization\n  * @param {Router} router Angular router used to navigate the application\n  */\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  /**\n  * Checks wether or not the navigation should be blocked or not, depending if a user is logged in the application\n  * @param {ActivatedRouteSnapshot} next the next activated route\n  * @param {RouterStateSnapshot} state the next state of router navigation, used to retrieve the url that is going to be navigated\n  * @returns {Observable} true if navigation is permitted, false if not\n  */\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n\n  /**\n  * Checks wether or not the user is logged in.\n  * If false, navigates to login and saves the last url the user attempted to navigate, in order to be used after a succesfull login\n  * @param {string} url the nexturl to be navigated\n  * @returns {boolean} true if navigation is permitted, false if not\n  */\n  checkLogin(url: string): Observable {\n    return this.authService.hasValidToken().pipe(map((response: any) => {\n      if (response === true) {\n        return true;\n      } else {\n        // Store the attempted URL for redirecting\n        this.authService.redirectUrl = url;\n\n        // Navigate to the login page with extras\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }));\n\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IasMaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoginComponent } from './login/login.component';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    IasMaterialModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to request and handle tokens and authorization\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ACTIONS_STORAGE_NAME\n                            \n                            \n                                loginStatus\n                            \n                            \n                                    Public\n                                loginStatusStream\n                            \n                            \n                                redirectUrl\n                            \n                            \n                                TOKEN_STORAGE_NAME\n                            \n                            \n                                USER_STORAGE_NAME\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLoginStatus\n                            \n                            \n                                getAllowedActions\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                hasValidToken\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                removeAllowedActions\n                            \n                            \n                                removeToken\n                            \n                            \n                                removeUser\n                            \n                            \n                                storeAllowedActions\n                            \n                            \n                                storeToken\n                            \n                            \n                                storeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:46\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient used to request the token for authentication\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLoginStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeLoginStatus(status: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:60\n                            \n                        \n\n\n                \n                    \n                            Changes the loginStatus and sneds the corresponding update in the loginStatusStream\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the new login status\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:176\n                            \n                        \n\n\n                \n                    \n                            Returns the user permission over the specified action stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    the permission as a boolean\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:150\n                            \n                        \n\n\n                \n                    \n                            Returns the token stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the token as a string, or undefined if there is no token\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:163\n                            \n                        \n\n\n                \n                    \n                            Returns the user stored in the local storage\n\n\n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    the user name as a string, or undefined if there is no user\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValidToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasValidToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:86\n                            \n                        \n\n\n                \n                    \n                            Checks wether or not the user is logged-in, which is true if there is a valid token\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    true if there is a valid token, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:117\n                            \n                        \n\n\n                \n                    \n                            Requests a token from the server, sending user and password information.\nSaves the token in the local storage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the name of the user\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the password of the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of true if the login is successful, observable of false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:140\n                            \n                        \n\n\n                \n                    \n                            Logs out of the server by deleting the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAllowedActions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:202\n                            \n                        \n\n\n                \n                    \n                            Deletes the allowed_actions from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:188\n                            \n                        \n\n\n                \n                    \n                            Deletes the token from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:195\n                            \n                        \n\n\n                \n                    \n                            Deletes the user from the local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeAllowedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreAllowedActions(allowed_actions: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:228\n                            \n                        \n\n\n                \n                    \n                            Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allowed_actions\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            Stores a given the token in the local storage, replacing the previous token, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the token to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreUser(user: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:219\n                            \n                        \n\n\n                \n                    \n                            Stores a given the user in the local storage, replacing the previous user, if any\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the user to be stored\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ACTIONS_STORAGE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IAS-ACTIONS'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:30\n                            \n                        \n\n                \n                    \n                        Name for the browser to use in order to save the allowed actions in the local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:41\n                            \n                        \n\n                \n                    \n                        Store if the user is logged in or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginStatusStream\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:46\n                            \n                        \n\n                \n                    \n                        Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:35\n                            \n                        \n\n                \n                    \n                        Store the URL so we can redirect after logging in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_STORAGE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IAS-TOKEN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                        Name for the browser to use in order to save the token in the local storage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_STORAGE_NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IAS-USER'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Name for the browser to use in order to save the user in the local storage\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { BackendUrls } from '../settings';\nimport { environment } from '../../environments/environment';\n\n\n/**\n* Service used to request and handle tokens and authorization\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n  * Name for the browser to use in order to save the token in the local storage\n  */\n  TOKEN_STORAGE_NAME = 'IAS-TOKEN';\n\n  /**\n  * Name for the browser to use in order to save the user in the local storage\n  */\n  USER_STORAGE_NAME = 'IAS-USER';\n\n  /**\n  * Name for the browser to use in order to save the allowed actions in the local storage\n  */\n  ACTIONS_STORAGE_NAME = 'IAS-ACTIONS';\n\n  /**\n  * Store the URL so we can redirect after logging in\n  */\n  redirectUrl: string;\n\n\n  /**\n  * Store if the user is logged in or not\n  */\n  loginStatus = false;\n\n  /**\n  * Stream of notifications when the user logs in. Sends true, if the user is logged in, and false if not\n  */\n  public loginStatusStream = new BehaviorSubject(null);\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClient} http Angular HttpClient used to request the token for authentication\n   */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Changes the {@link loginStatus} and sneds the corresponding update in the {@link loginStatusStream}\n   * @param {boolean} status the new login status\n   */\n  changeLoginStatus(status: boolean) {\n    this.loginStatus = status;\n    this.loginStatusStream.next(status);\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n   * Checks wether or not the user is logged-in, which is true if there is a valid token\n   * @returns { Observable} true if there is a valid token, false if not\n   */\n  hasValidToken(): Observable {\n    if (!this.getToken()) {\n      this.changeLoginStatus(false);\n      return of(false);\n    } else {\n      const url = `${environment.httpUrl}${BackendUrls.VALIDATE_TOKEN}`;\n      return this.http.get(url, {headers: this.getHttpHeaders()} ).pipe(\n        map((response: any) => {\n          const user_data = response['user_data'];\n          const allowed_actions = response['allowed_actions'];\n          this.storeUser(user_data['username']);\n          this.storeAllowedActions(allowed_actions);\n          this.changeLoginStatus(true);\n          return true;\n        }),\n        catchError( error => {\n          console.error(error);\n          this.logout();\n          return of(false);\n        }\n      ));\n    }\n  }\n\n  /**\n   * Requests a token from the server, sending user and password information.\n   * Saves the token in the local storage\n   * @param {string} username the name of the user\n   * @param {string} password the password of the user\n   * @returns {Observable} observable of true if the login is successful, observable of false if not\n   */\n  login(username: string, password: string): Observable {\n    const url = `${environment.httpUrl}${BackendUrls.TOKEN}`;\n    return this.http.post(url, {\n      username: username,\n      password: password\n    }).pipe(map((response: any) => {\n      console.log('Login repsonse:', response);\n      const token = response['token'];\n      if (token) {\n        this.storeToken(token);\n        this.storeUser(username);\n        this.changeLoginStatus(true);\n        return true;\n      } else {\n        this.changeLoginStatus(false);\n        return false;\n      }\n    }));\n  }\n\n  /**\n   * Logs out of the server by deleting the token from the local storage\n   */\n  logout(): void {\n    this.changeLoginStatus(false);\n    this.removeToken();\n    this.removeUser();\n  }\n\n  /**\n  * Returns the token stored in the local storage\n  * @returns {string | undefined} the token as a string, or undefined if there is no token\n  */\n  getToken(): string | undefined {\n    const token = localStorage.getItem(this.TOKEN_STORAGE_NAME);\n    if (token === null) {\n      return undefined;\n    } else {\n      return JSON.parse(token);\n    }\n  }\n\n  /**\n  * Returns the user stored in the local storage\n  * @returns {string | undefined} the user name as a string, or undefined if there is no user\n  */\n  getUser(): string | undefined {\n    const user = localStorage.getItem(this.USER_STORAGE_NAME);\n    if (user === null) {\n      return undefined;\n    } else {\n      return JSON.parse(user);\n    }\n  }\n\n  /**\n  * Returns the user permission over the specified action stored in the local storage\n  * @returns {boolean | undefined} the permission as a boolean\n  */\n  getAllowedActions(): boolean {\n    const allowed_actions = localStorage.getItem(this.ACTIONS_STORAGE_NAME);\n    if (allowed_actions === null) {\n      return undefined;\n    } else {\n      return JSON.parse(allowed_actions);\n    }\n  }\n\n  /**\n  * Deletes the token from the local storage\n  */\n  removeToken() {\n    localStorage.removeItem(this.TOKEN_STORAGE_NAME);\n  }\n\n  /**\n  * Deletes the user from the local storage\n  */\n  removeUser() {\n    localStorage.removeItem(this.USER_STORAGE_NAME);\n  }\n\n  /**\n  * Deletes the allowed_actions from the local storage\n  */\n  removeAllowedActions() {\n    localStorage.removeItem(this.ACTIONS_STORAGE_NAME);\n  }\n\n  /**\n  * Stores a given the token in the local storage, replacing the previous token, if any\n  * @param {string} token the token to be stored\n  */\n  storeToken(token: string) {\n    localStorage.removeItem(this.TOKEN_STORAGE_NAME);\n    localStorage.setItem(this.TOKEN_STORAGE_NAME, JSON.stringify(token));\n  }\n\n  /**\n  * Stores a given the user in the local storage, replacing the previous user, if any\n  * @param {string} user the user to be stored\n  */\n  storeUser(user: string) {\n    localStorage.removeItem(this.USER_STORAGE_NAME);\n    localStorage.setItem(this.USER_STORAGE_NAME, JSON.stringify(user));\n  }\n\n  /**\n  * Stores the user allowed_actions in the local storage, replacing the previous allowed_actions, if any\n  * @param {string} permission the user allowed_actions to be stored\n  */\n  storeAllowedActions(allowed_actions: Object) {\n    this.removeAllowedActions();\n    localStorage.setItem(this.ACTIONS_STORAGE_NAME, JSON.stringify(allowed_actions));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonsComponent.html":{"url":"components/ButtonsComponent.html","title":"component - ButtonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/buttons/buttons.component.ts\n\n\n    \n        Description\n    \n    \n        Set of buttons used to trigger actions over AlarmService\nContains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-buttons\n            \n\n            \n                styleUrls\n                ./buttons.component.css\n            \n\n\n\n            \n                templateUrl\n                ./buttons.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:18\n                            \n                        \n                \n                    \n                        Alarm object associated to the buttons\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/buttons/buttons.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method executed when the component is initiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Set of buttons used to trigger actions over AlarmService\n * Contains the following subcomponents: AckButtonComponent, ShelveButtonComponent, WikButtonComponent\n */\n@Component({\n  selector: 'app-buttons',\n  templateUrl: './buttons.component.html',\n  styleUrls: ['./buttons.component.css']\n})\nexport class ButtonsComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the buttons\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the component is initiated\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./buttons.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBroadcastRate\n                            \n                            \n                                getBroadcastThreshold\n                            \n                            \n                                getConfigurationData\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:25\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastRate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastRate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast rate from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastRate' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBroadcastThreshold\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBroadcastThreshold()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Get refresh broadcast threshold from IAS configuration data\n\n\n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    contains the 'broadcastThreshold' in seconds\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:20\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:25\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BackendUrls.CDB_IAS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:15\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { BackendUrls } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = BackendUrls.CDB_IAS;\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return this.getConfigurationData().subscribe((res) => {\n      this.iasConfiguration = res;\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {json} IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get refresh broadcast rate from IAS configuration data\n  * @returns {number} contains the 'broadcastRate' in seconds\n  */\n  getBroadcastRate(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastRate']);\n    } catch (e) {\n      value = 10;\n    }\n    return value;\n  }\n\n  /**\n  * Get refresh broadcast threshold from IAS configuration data\n  * @returns {number} contains the 'broadcastThreshold' in seconds\n  */\n  getBroadcastThreshold(): number {\n    let value;\n    try {\n      value = Number(this.iasConfiguration['broadcastThreshold']);\n    } catch (e) {\n      value = 11;\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the services and data models\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AlarmService\n                        \n                        \n                            CdbService\n                        \n                        \n                            HttpClientService\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AlarmService } from './alarm.service';\nimport { UserService } from './user.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\n\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClient,\n    HttpClientService,\n    UserService\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nHealthModule -->\n\nIasMaterialModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains the components associated to the health of the IAS\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HealthSummaryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HealthSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\n\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                ./health-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmConfig\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                loadAlarmsConfig\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alarm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService, httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:28\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarmsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarmsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:28\n                            \n                        \n\n                \n                    \n                        Configuration for displaying the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:25\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:53\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { HttpClientService } from '../../data/http-client.service';\nimport { BackendUrls } from '../../settings';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.scss']\n})\nexport class HealthSummaryComponent implements OnInit {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** Configuration for displaying the {@link Alarm} */\n  public alarmConfig: AlarmConfig[];\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n    private httpClient: HttpClientService\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.loadAlarmsConfig();\n    this.defineAlarmsAndIcons();\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    if (this.alarmConfig && this.alarmConfig[0]) {\n      return this.alarmService.get(this.alarmConfig[0].alarm_id);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadAlarmsConfig(): void {\n\n    const summary_url = BackendUrls.HEALTH_SUMMARY;\n    this.httpClient.get(summary_url).subscribe((response) => {\n      for (const key in response) {\n        if (key) {\n          this.alarmConfig = response as AlarmConfig[];\n        }\n      }\n    });\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-clear-valid.svg',\n      set_low: Assets.ICONS + 'ias_health-others-valid.svg',\n      set_medium: Assets.ICONS + 'ias_health-others-valid.svg',\n      set_high: Assets.ICONS + 'ias_health-critical-valid.svg',\n      set_critical: Assets.ICONS + 'ias_health-critical-valid.svg',\n      unknown: Assets.ICONS + 'ias_health-clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'ias_health-clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'ias_health-clear-valid.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-clear-invalid.svg',\n      set_low: Assets.ICONS + 'ias_health-others-invalid.svg',\n      set_medium: Assets.ICONS + 'ias_health-others-invalid.svg',\n      set_high: Assets.ICONS + 'ias_health-critical-invalid.svg',\n      set_critical: Assets.ICONS + 'ias_health-critical-invalid.svg',\n      unknown: Assets.ICONS + 'ias_health-clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'ias_health-clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'ias_health-clear-valid.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./health-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getHttpHeaders\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                            \n                                read_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:14\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HTTP Service used to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:95\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Builds and returns HttpHeaders for the requests, including the token for requests\n\n\n                            \n                            \n                            \n                                Returns :     HttpHeaders\n\n                            \n                                \n                                    http headers\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url, data)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url, data)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    the response of the request\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read_url\n                            \n                            \n                        \n                    \n                \n                \n                    \nread_url(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Proesses the url for the request by adding the base url for http requests\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the processed target url\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from '../auth/auth.service';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /**\n  * Builds an instance of the service\n  * @param {HttpClient} http Angular HTTP Service used to perform HTTP requests\n  * @param {AuthService} authService service used to check and handle authorization\n  */\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {\n  }\n\n  /**\n  * Builds and returns HttpHeaders for the requests, including the token for requests\n  * @returns {HttpHeaders} http headers\n  */\n  getHttpHeaders(): HttpHeaders {\n    if (this.authService.getToken()) {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Token ' + this.authService.getToken()\n      });\n    } else {\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n      });\n    }\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param {string} url target url\n  * @returns {Response} the response of the request\n  */\n  get(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.get(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.post(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param {string} url target url\n  * @param data json with data\n  * @returns {Response} the response of the request\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.put(this.read_url(url), data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param {string} url target url with the selected object id\n  * @returns {Response} the response of the request\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: this.getHttpHeaders()\n    };\n    return this.http.delete(this.read_url(url), httpOptions);\n  }\n\n  /**\n  * Proesses the url for the request by adding the base url for http requests\n  * @param {string} url target url\n  * @returns {string} the processed target url\n  */\n  read_url(url: string): string {\n    return environment.httpUrl + url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    IasMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for the required Angular Material components\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatMenuModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSnackBarModule,\n    FlexLayoutModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                ./legend.component.css\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clear_invalid\n                            \n                            \n                                clear_valid\n                            \n                            \n                                maintenance\n                            \n                            \n                                priority_0\n                            \n                            \n                                priority_1\n                            \n                            \n                                priority_2\n                            \n                            \n                                priority_3\n                            \n                            \n                                priority_4\n                            \n                            \n                                set_invalid\n                            \n                            \n                                set_valid\n                            \n                            \n                                unknown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_invalid\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:18\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear_valid\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'clear-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:15\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in clear and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maintenance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'maintenance-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in maintenance state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_0\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-0.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority zero (clear) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-1.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority low \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_2\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-2.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority medium \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_3\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-3.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:42\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority high \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority_4\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'priority-4.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:45\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms with priority critical \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_invalid\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-invalid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:30\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and invalid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set_valid\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'set-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:27\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in set and valid states \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unknown\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Assets.ICONS + 'unknown-valid.svg'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                        Reference to the icon used to display Alarms in unknown state \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Assets } from '../../settings';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Reference to the icon used to display Alarms in clear and valid states */\n  clear_valid = Assets.ICONS + 'clear-valid.svg';\n\n  /** Reference to the icon used to display Alarms in clear and invalid states */\n  clear_invalid = Assets.ICONS + 'clear-invalid.svg';\n\n  /** Reference to the icon used to display Alarms in unknown state */\n  unknown = Assets.ICONS + 'unknown-valid.svg';\n\n  /** Reference to the icon used to display Alarms in maintenance state */\n  maintenance = Assets.ICONS + 'maintenance-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and valid states */\n  set_valid = Assets.ICONS + 'set-valid.svg';\n\n  /** Reference to the icon used to display Alarms in set and invalid states */\n  set_invalid = Assets.ICONS + 'set-invalid.svg';\n\n  /** Reference to the icon used to display Alarms with priority zero (clear) */\n  priority_0 = Assets.ICONS + 'priority-0.svg';\n\n  /** Reference to the icon used to display Alarms with priority low */\n  priority_1 = Assets.ICONS + 'priority-1.svg';\n\n  /** Reference to the icon used to display Alarms with priority medium */\n  priority_2 = Assets.ICONS + 'priority-2.svg';\n\n  /** Reference to the icon used to display Alarms with priority high */\n  priority_3 = Assets.ICONS + 'priority-3.svg';\n\n  /** Reference to the icon used to display Alarms with priority critical */\n  priority_4 = Assets.ICONS + 'priority-4.svg';\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    LEGEND\n\n    \n      \n\n        \n\n          \n            \n               Clear Valid\n            \n            \n               Clear Invalid\n            \n          \n\n          \n            \n               Set Valid\n            \n            \n               Set Invalid\n            \n          \n\n        \n\n        \n          \n             Maintenance\n          \n          \n             Unknown\n          \n        \n\n        \n\n          \n            \n               Low\n            \n            \n               Medium\n            \n          \n\n          \n            \n               High\n            \n            \n               Critical\n            \n          \n\n        \n      \n    \n\n\n    \n\n    \n                \n                    ./legend.component.css\n                \n                .legend {\n  font-size: 12px;\n  font-weight: normal;\n  text-align: left;\n  width: 100%;\n}\n\n.legend-icon {\n  display: inline-block;\n  margin-right: 6px;\n  text-align: center;\n  width: 18px;\n  font-weight: bold;\n}\n\n.legend-priority {\n  display: inline-block;\n  margin-right: 6px;\n  text-align: center;\n  width: 24px;\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    LEGEND                                                       Clear Valid                                       Clear Invalid                                                           Set Valid                                       Set Invalid                                                             Maintenance                                 Unknown                                                               Low                                       Medium                                                           High                                       Critical                                        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component that defines the login form\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                message\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular FormBuilder used to build forms\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service used to check and handle authorization\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router used to navigate the application\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Performs the login, by calling the login() function of AuthService passing the user and password retrieved from the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Performs the logout, by calling the logout() function of AuthService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the component and defines its form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetErrorMessage(error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Sets the errorMessage to display, based on the status code of the error returned by the request.\nIf the status code is 400, it shows that the credentials are not valid\nIf the status code is not 400, it shows that there was a problem communicating with the server.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the error returned by the request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:53\n                            \n                        \n\n                \n                    \n                        service used to check and handle authorization\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                        Error message to be displayed if the ogin is not successful\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        Message with the current login status, to be displayed in the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the password from the form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:54\n                            \n                        \n\n                \n                    \n                        Angular router used to navigate the application\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        Form control used to retrieve the username from the form\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthService } from '../auth.service';\n\n/**\n * Component that defines the login form\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * Message with the current login status, to be displayed in the component\n   */\n  message: string;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  formGroup: FormGroup;\n\n  /**\n   * Form control used to retrieve the username from the form\n   */\n  user: FormControl;\n\n  /**\n   * Form control used to retrieve the password from the form\n   */\n  password: FormControl;\n\n\n  /**\n   * Error message to be displayed if the ogin is not successful\n   */\n  errorMessage = undefined;\n\n\n  /**\n   * Builds an instance of the component\n   * @param {FormBuilder} formBuilder Angular FormBuilder used to build forms\n   * @param {AuthService} authService service used to check and handle authorization\n   * @param {Router} router Angular router used to navigate the application\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    public authService: AuthService,\n    public router: Router,\n    private spinnerService: NgxSpinnerService\n  ) {\n  }\n\n  /**\n   * Initializes the component and defines its form\n   */\n  ngOnInit() {\n    this.errorMessage = undefined;\n    this.user = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [Validators.required]);\n    this.formGroup = this.formBuilder.group({\n      user: this.user,\n      password: this.password,\n    });\n  }\n\n  /**\n   * Performs the login, by calling the login() function of {@link AuthService} passing the user and password retrieved from the form\n   */\n  login() {\n    this.errorMessage = undefined;\n    this.spinnerService.show();\n    this.authService.login(\n      this.formGroup.controls.user.value,\n      this.formGroup.controls.password.value,\n    ).subscribe(\n      (response) => {\n        if (response === true) {\n          // Get the redirect URL from our auth service\n          // If no redirect has been set, use the default\n          const redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '';\n          // Redirect the user\n          this.router.navigate([redirect]);\n        }\n        this.spinnerService.hide();\n      },\n      (error) => {\n        this.spinnerService.hide();\n        this.setErrorMessage(error);\n      }\n    );\n  }\n\n  /**\n   * Performs the logout, by calling the logout() function of {@link AuthService}\n   */\n  logout() {\n    this.authService.logout();\n  }\n\n  /**\n   * Sets the {@link errorMessage} to display, based on the status code of the error returned by the request.\n   * If the status code is 400, it shows that the credentials are not valid\n   * If the status code is not 400, it shows that there was a problem communicating with the server.\n   * @param {Error} error the error returned by the request\n   */\n  setErrorMessage(error) {\n    if (error.status === 400) {\n      this.errorMessage = 'The credentials provided are not valid';\n    } else {\n      this.errorMessage = 'There was an error communicating with the Server';\n      console.error('Error communicating with Server: ', error);\n    }\n    this.user.setErrors({'incorrect': true});\n    this.password.setErrors({'incorrect': true});\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n       IAS ALMA \n    \n  \n  \n    \n        \n            \n                User\n                \n            \n            \n                Password\n                \n                 {{errorMessage}} \n            \n            \n                \n                  Login\n                \n            \n        \n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .mat-card {\n  max-width: 580px;\n  margin: auto;\n\n  .mat-card-header {\n    border-top-left-radius: 0.375em;\n    border-top-right-radius: 0.375em;\n\n    .login-header {\n      text-align: center;\n      width: 100%;\n      margin-right: 16px;\n\n      .title {\n        display: block;\n        font-size: 34px;\n      }\n\n      .message {\n        display: block;\n        font-size: 12px;\n      }\n    }\n  }\n\n  .mat-card-content {\n    border-bottom-left-radius: 0.375em;\n    border-bottom-right-radius: 0.375em;\n  }\n}\n\n.login-form-container {\n  padding: 40px;\n\n  .form-group {\n\n    .form-field {\n      width: 100%;\n    }\n  }\n\n  .btn-login-container {\n    padding: 10px 0;\n    text-align: center;\n\n    .btn-login {\n      text-transform: uppercase;\n      font-weight: bold;\n      width: 100%;\n      display: inline-block;\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             IAS ALMA                                                 User                                                        Password                                 {{errorMessage}}                                                           Login                                              '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map/map.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component used to display a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                ./map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapConfig\n                            \n                            \n                                mapdataAvailable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:21\n                            \n                        \n                \n                    \n                        contains the configuration to draw the map\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mapdataAvailable\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:16\n                            \n                        \n                \n                    \n                        Defines wether or no there is data available to draw the map\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map/map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Initiates the component when it is displayed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n* Reusable component used to display a map\n*/\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  /**\n  * Defines wether or no there is data available to draw the map\n  */\n  @Input() mapdataAvailable = false;\n\n  /**\n  * contains the configuration to draw the map\n  */\n  @Input() mapConfig = {};\n\n  /**\n  * Builds an instance of the component\n  */\n  constructor() { }\n\n  /**\n  * Initiates the component when it is displayed\n  */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n  \n\n\n\n\n\n  \n\n\n\n    \n\n    \n                \n                    ./map.component.scss\n                \n                .ws-map {\n\n  width: 100%;\n\n  &.full-height {\n    height: calc(100vh - 130px);\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n    Modules\n    MapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\n\nMapComponent\n\nMapComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MapService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapComponent } from './map/map.component';\nimport { MapService } from './map.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    MapComponent,\n  ],\n  providers: [\n    MapService\n  ],\n  exports: [\n    MapComponent,\n  ]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map/map.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the maps\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSVGPaths\n                            \n                            \n                                mapdataProcessing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.service.ts:7\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSVGPaths\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSVGPaths(pathsGroup: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:19\n                            \n                        \n\n\n                \n                    \n                            Transforms a group of paths into svgPaths\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pathsGroup\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    svgPaths\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapdataProcessing\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapdataProcessing(placemarksGroups: any, pathsGroups: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/map/map.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Scaling and calculation of max and min values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        placemarksGroups\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of groups of placemarks\n\n                                                        \n                                                \n                                                \n                                                        pathsGroups\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                list of group of paths\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The viewbox: list of 4 numbers used to define the size of the map\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n* Service used to handle the maps\n*/\n@Injectable()\nexport class MapService {\n\n  /**\n  * Builds an instance of the service\n  */\n  constructor() { }\n\n  /**\n  * Transforms a group of paths into svgPaths\n  * @param {any} pathsGroup group of paths\n  * @returns {any} svgPaths\n  */\n  getSVGPaths(pathsGroup: any): any {\n    const svgPaths = [];\n    for (let i = 0; i  0) {\n      dy = -1.0 * maxCY;\n    }\n    for (let k = 0; k \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialButtonsColorsComponent.html":{"url":"components/MaterialButtonsColorsComponent.html","title":"component - MaterialButtonsColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialButtonsColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display colors for different sets of material buttons\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-buttons-colors\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                Basic Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nRaised Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFlat Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  Link\n\n\nFab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nMini Fab Buttons\n\n  Basic\n  Primary\n  Accent\n  Warn\n  Disabled\n  \n    favorite\n  \n  Link\n\n\nIcon Buttons\n\n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n  \n    favorite\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Basic Buttons  Basic  Primary  Accent  Warn  Disabled  LinkRaised Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFlat Buttons  Basic  Primary  Accent  Warn  Disabled  LinkFab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkMini Fab Buttons  Basic  Primary  Accent  Warn  Disabled      favorite    LinkIcon Buttons      favorite        favorite        favorite        favorite        favorite  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialButtonsColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialCardSampleComponent.html":{"url":"components/MaterialCardSampleComponent.html","title":"component - MaterialCardSampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialCardSampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display an example with the material card\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sample-card\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n  \n    \n    Shiba Inu\n    Dog Breed\n  \n  \n  \n    \n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    \n  \n  \n    LIKE\n    SHARE\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Shiba Inu    Dog Breed                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally      bred for hunting.            LIKE    SHARE  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialCardSampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialColorsComponent.html":{"url":"components/MaterialColorsComponent.html","title":"component - MaterialColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component that displays color palletes for Angular Material Elements.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-colors\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                {{palette}}\n\n  \n    {{item[1]}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                palettes\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                palette\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        palette\n                    \n                \n                \n                    \n                        Default value : 'palette'\n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:123\n                            \n                        \n                \n                    \n                        Name for the color pallete\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            palettes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:39\n                            \n                        \n\n                \n                    \n                        List of grouped pairs (materialId, innerHTMLTextValue)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{palette}}      {{item[1]}}  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialSandboxComponent.html":{"url":"components/MaterialSandboxComponent.html","title":"component - MaterialSandboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialSandboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Main component to display some Angular Material Elements.\nUseful to check how the application would look if it includes those elements\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-sandbox\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-sandbox.components.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialSandboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialSandboxModule.html":{"url":"modules/MaterialSandboxModule.html","title":"module - MaterialSandboxModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialSandboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MaterialSandboxModule\n\n\n\ncluster_MaterialSandboxModule_declarations\n\n\n\ncluster_MaterialSandboxModule_imports\n\n\n\ncluster_MaterialSandboxModule_exports\n\n\n\n\nMaterialButtonsColorsComponent\n\nMaterialButtonsColorsComponent\n\n\n\nMaterialSandboxModule\n\nMaterialSandboxModule\n\nMaterialSandboxModule -->\n\nMaterialButtonsColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialCardSampleComponent\n\nMaterialCardSampleComponent\n\nMaterialSandboxModule -->\n\nMaterialCardSampleComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialColorsComponent\n\nMaterialColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialToggleColorsComponent\n\nMaterialToggleColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialToggleColorsComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmComponent\n\nSandboxAlarmComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmLabelComponent\n\nSandboxAlarmLabelComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmLabelComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmTileComponent\n\nSandboxAlarmTileComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmTileComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent  -->\n\nMaterialSandboxModule->MaterialButtonsColorsComponent \n\n\n\n\n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent  -->\n\nMaterialSandboxModule->MaterialCardSampleComponent \n\n\n\n\n\nMaterialColorsComponent \n\nMaterialColorsComponent \n\nMaterialColorsComponent  -->\n\nMaterialSandboxModule->MaterialColorsComponent \n\n\n\n\n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent  -->\n\nMaterialSandboxModule->MaterialToggleColorsComponent \n\n\n\n\n\nSandboxAlarmComponent \n\nSandboxAlarmComponent \n\nSandboxAlarmComponent  -->\n\nMaterialSandboxModule->SandboxAlarmComponent \n\n\n\n\n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent  -->\n\nMaterialSandboxModule->SandboxAlarmLabelComponent \n\n\n\n\n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent  -->\n\nMaterialSandboxModule->SandboxAlarmTileComponent \n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nMaterialSandboxModule -->\n\nIasMaterialModule->MaterialSandboxModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMaterialSandboxModule -->\n\nSharedModule->MaterialSandboxModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material-sandbox/material-sandbox.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MaterialButtonsColorsComponent\n                        \n                        \n                            MaterialCardSampleComponent\n                        \n                        \n                            MaterialColorsComponent\n                        \n                        \n                            MaterialToggleColorsComponent\n                        \n                        \n                            SandboxAlarmComponent\n                        \n                        \n                            SandboxAlarmLabelComponent\n                        \n                        \n                            SandboxAlarmTileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MaterialButtonsColorsComponent\n                        \n                        \n                            MaterialCardSampleComponent\n                        \n                        \n                            MaterialColorsComponent\n                        \n                        \n                            MaterialToggleColorsComponent\n                        \n                        \n                            SandboxAlarmComponent\n                        \n                        \n                            SandboxAlarmLabelComponent\n                        \n                        \n                            SandboxAlarmTileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MaterialColorsComponent } from './material-sandbox.components';\nimport { MaterialToggleColorsComponent } from './material-sandbox.components';\nimport { MaterialButtonsColorsComponent } from './material-sandbox.components';\nimport { MaterialCardSampleComponent } from './material-sandbox.components';\nimport { SandboxAlarmLabelComponent } from './material-sandbox.components';\nimport { SandboxAlarmComponent } from './material-sandbox.components';\nimport { SandboxAlarmTileComponent } from './material-sandbox.components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    SharedModule,\n    NgbModule\n  ],\n  declarations: [\n    MaterialColorsComponent,\n    MaterialToggleColorsComponent,\n    MaterialButtonsColorsComponent,\n    MaterialCardSampleComponent,\n    SandboxAlarmLabelComponent,\n    SandboxAlarmComponent,\n    SandboxAlarmTileComponent\n  ],\n  exports: [\n    MaterialColorsComponent,\n    MaterialToggleColorsComponent,\n    MaterialButtonsColorsComponent,\n    MaterialCardSampleComponent,\n    SandboxAlarmLabelComponent,\n    SandboxAlarmComponent,\n    SandboxAlarmTileComponent\n  ],\n  entryComponents: [\n  ]\n})\nexport class MaterialSandboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialToggleColorsComponent.html":{"url":"components/MaterialToggleColorsComponent.html","title":"component - MaterialToggleColorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialToggleColorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display material toggle colors\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-toggle-colors\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                Material Toggle\nDefault \nPrimary \nAccent \nWarn\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Material ToggleDefault Primary Accent Warn'\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialToggleColorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                ./overview-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.scss']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n                \n                    ./overview-card.component.scss\n                \n                .ias.overview-card {\n  position: relative;\n  display: grid;\n  z-index: 100;\n  width: inherit;\n  margin: 40px 20px 60px 70px;\n\n  .marker-wrapper{\n    float: left;\n    position: absolute;\n    top: 10px;\n    left: -46px;\n    width: 46px;\n    height: 56px;\n    line-height: 56px;\n    z-index: 0;\n    text-align: left;\n    vertical-align: middle;\n    border-top-left-radius: 28px;\n    border-bottom-left-radius: 28px;\n\n    .marker {\n      margin: 0px 0px;\n      height: 100%;\n      position: absolute;\n      top:-2px;\n      left:-4px;\n      width: 56px;\n    }\n  }\n\n  .label{\n    position: absolute;\n    top: -1.45em;\n    right: 0;\n    height: 1em;\n    text-align: right;\n    text-transform: uppercase;\n    font-family: sans-serif;\n    font-size: 16px;\n    z-index: 1;\n  }\n\n  .content-wrapper{\n    position: relative;\n    top: 0;\n    left: 0;\n    min-height: 150px;\n    width: inherit;\n    min-width: 170px;\n\n    .content{\n      padding: 0px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n    \n    \n      \n         ANTENNAS \n          \n        \n          \n        \n      \n    \n    \n      \n         WEATHER \n          \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./overview.component.scss\n                \n                /* TODO: Remove provisory adjustments for the health marker if related resources are available */\n\n#ias-card-health-marker {\n  padding-left: 14px;\n  padding-right: 12px;\n}\n\n.ias-overview {\n  display: flex;\n\n  .content {\n    padding-top: 45px;\n    width: 100%;\n  }\n}\n\n.no-margin {\n  margin: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     IAS HEALTH                                                                  ANTENNAS                                                                  WEATHER                                                 '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n    Modules\n    OverviewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OverviewCardComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AntennasModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            WeatherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OverviewCardComponent\n                        \n                        \n                            OverviewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { AntennasModule } from '../antennas/antennas.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    AntennasModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanActionOutlet\n                            \n                            \n                                goToAcknowledge\n                            \n                            \n                                goToAntennas\n                            \n                            \n                                goToLogin\n                            \n                            \n                                goToShelve\n                            \n                            \n                                goToWeather\n                            \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-routing/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cleanActionOutlet\n                            \n                            \n                        \n                    \n                \n                \n                    \ncleanActionOutlet()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToAntennas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Go to the Antennas View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Go to login and clean action outlet\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToWeather()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Go to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-routing/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TableComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TableComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TableComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TableComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n  /**\n  * Go to the Antennas View\n  */\n  goToAntennas() {\n    this.router.navigate(['antennas']);\n  }\n\n  /**\n  * Go to the Weather View\n  */\n  goToWeather() {\n    this.router.navigate(['weather']);\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  goToAcknowledge(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['acknowledge', alarm_id]}}]);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  goToShelve(alarm_id: string) {\n    this.router.navigate([{outlets: {actions: ['shelve', alarm_id]}}]);\n  }\n\n  /**\n  * Clean action outlet\n  */\n  cleanActionOutlet() {\n    this.router.navigate([{outlets: {actions: null}}]);\n  }\n\n  /**\n  * Go to login and clean action outlet\n  */\n  goToLogin() {\n    this.router.navigate([{outlets: {primary: 'login', actions: null}}]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmComponent.html":{"url":"components/SandboxAlarmComponent.html","title":"component - SandboxAlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n  \n    {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n  \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelLocation\n                            \n                            \n                                labelMode\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelLocation\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:428\n                            \n                        \n                \n                    \n                        Label location \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labelMode\n                    \n                \n                \n                    \n                        Default value : 'text'\n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:422\n                            \n                        \n                \n                    \n                        Show or hide label text \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 'md'\n                    \n                \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:425\n                            \n                        \n                \n                    \n                        Size category \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:499\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:482\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:440\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:473\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:416\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:419\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:413\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:410\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{componentName}} - labelMode: {{labelMode}} - size: {{size}}                      {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmLabelComponent.html":{"url":"components/SandboxAlarmLabelComponent.html","title":"component - SandboxAlarmLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm-label\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n   {{componentName}} \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:344\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:313\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:361\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:301\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AlarmLabel'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:298\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{componentName}}                     {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SandboxAlarmTileComponent.html":{"url":"components/SandboxAlarmTileComponent.html","title":"component - SandboxAlarmTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SandboxAlarmTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/material-sandbox/material-sandbox.components.ts\n\n\n    \n        Description\n    \n    \n        Component to display ias components in different scenarios\naccording to the values related to an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sandbox-alarm-tile\n            \n\n            \n                styleUrls\n                ./material-sandbox.components.scss\n            \n\n\n            \n                template\n                \n   {{componentName}} \n  \n    \n      \n        {{alarm.alarmValue}}\n        \n        {{alarm.operationalMode}}\n        \n        {{alarm.alarmValidity}}\n        \n        shelved?({{alarm.shelved}})\n      \n      \n        +\n        \n        +\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                alarms\n                            \n                            \n                                componentName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                generateAlarmsList\n                            \n                            \n                                getMockAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:647\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateAlarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateAlarmsList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:630\n                            \n                        \n\n\n                \n                    \n                            Alarms generation to check the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMockAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMockAlarm(value: number, core_id: string, mode: number, validity: number, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:589\n                            \n                        \n\n\n                \n                    \n                            Return a mock alarm with a given set of input parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mode\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    a mock {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:622\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:574\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:577\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Alarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:571\n                            \n                        \n\n                \n                    \n                        Array of Alarms to display \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Alarm Tile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/material-sandbox/material-sandbox.components.ts:568\n                            \n                        \n\n                \n                    \n                        Name of the Shared component to be displayed in the SandboxAlarmComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Alarm, Value } from '../data/alarm';\nimport { AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { Assets } from '../settings';\n\n/**\n* Main component to display some Angular Material Elements.\n* Useful to check how the application would look if it includes those elements\n*/\n@Component({\n  selector: 'app-material-sandbox',\n  templateUrl: './material-sandbox.components.html',\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialSandboxComponent {\n\n}\n\n/**\n* Component that displays color palletes for Angular Material Elements.\n*/\n@Component({\n  selector: 'app-material-colors',\n  template: `\n    {{palette}}\n    \n      \n        {{item[1]}}\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialColorsComponent {\n\n  /**\n  * List of grouped pairs (materialId, innerHTMLTextValue)\n  */\n  palettes = {\n    'Primary': [\n      ['panel900', '900'],\n      ['panel800', '800'],\n      ['panel700', '700'],\n      ['panel600', '600'],\n      ['panel500', '500'],\n      ['panel400', '400'],\n      ['panel300', '300'],\n      ['panel200', '200'],\n      ['panel100', '100'],\n      ['panel50', '50'],\n      ['panelA700', 'A700'],\n      ['panelA400', 'A400'],\n      ['panelA100', 'A100']\n    ],\n    'Accent': [\n      ['panel900accent', '900'],\n      ['panel800accent', '800'],\n      ['panel700accent', '700'],\n      ['panel600accent', '600'],\n      ['panel500accent', '500'],\n      ['panel400accent', '400'],\n      ['panel300accent', '300'],\n      ['panel200accent', '200'],\n      ['panel100accent', '100'],\n      ['panel50accent', '50'],\n      ['panelA700accent', 'A700'],\n      ['panelA400accent', 'A400'],\n      ['panelA100accent', 'A100']\n    ],\n    'Warn': [\n      ['panel900warn', '900'],\n      ['panel800warn', '800'],\n      ['panel700warn', '700'],\n      ['panel600warn', '600'],\n      ['panel500warn', '500'],\n      ['panel400warn', '400'],\n      ['panel300warn', '300'],\n      ['panel200warn', '200'],\n      ['panel100warn', '100'],\n      ['panel50warn', '50'],\n      ['panelA700warn', 'A700'],\n      ['panelA400warn', 'A400'],\n      ['panelA100warn', 'A100']\n    ],\n    'Background': [\n      ['status-bar', 'status-bar'],\n      ['app-bar', 'app-bar'],\n      ['background', 'background'],\n      ['hover', 'hover'],\n      ['card', 'card'],\n      ['dialog', 'dialog'],\n      ['disabled-button', 'disabled-button'],\n      ['warning', 'warning'],\n      ['raised-button', 'raised-button'],\n      ['focused-button', 'focused-button'],\n      ['selected-button', 'selected-button'],\n      ['selected-disabled-button', 'selected-disabled-button'],\n      ['disabled-button-toggle', 'disabled-button-toggle'],\n      ['unselected-chip', 'unselected-chip'],\n      ['disabled-list-option', 'disabled-list-option']\n    ],\n    'Foreground': [\n      ['base', 'base'],\n      ['divider', 'divider'],\n      ['dividers', 'dividers'],\n      ['disabled', 'disabled'],\n      ['disabled-button', 'disabled-button'],\n      ['disabled-text', 'disabled-text'],\n      ['hint-text', 'hint-text'],\n      ['secondary-test', 'secondary-test'],\n      ['icon', 'icon'],\n      ['icons', 'icons'],\n      ['text', 'text'],\n      ['slider-min', 'slider-min'],\n      ['slider-off', 'slider-off'],\n      ['slider-off-active', 'slider-off-active']\n    ]\n  };\n\n  /**\n   * Name for the color pallete\n   */\n  @Input() palette = 'palette';\n\n}\n\n/**\n* Component to display material toggle colors\n*/\n@Component({\n  selector: 'app-material-toggle-colors',\n  template: `\n    Material Toggle\n    Default \n    Primary \n    Accent \n    Warn\n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialToggleColorsComponent {\n\n}\n\n/**\n* Component to display colors for different sets of material buttons\n*/\n@Component({\n  selector: 'app-material-buttons-colors',\n  template: `\n  Basic Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Raised Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Flat Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    Link\n  \n\n  Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Mini Fab Buttons\n  \n    Basic\n    Primary\n    Accent\n    Warn\n    Disabled\n    \n      favorite\n    \n    Link\n  \n\n  Icon Buttons\n  \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n    \n      favorite\n    \n  \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialButtonsColorsComponent {\n\n}\n\n/**\n* Component to display an example with the material card\n*/\n@Component({\n  selector: 'app-material-sample-card',\n  template: `\n    \n      \n        \n        Shiba Inu\n        Dog Breed\n      \n      \n      \n        \n          The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n          A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n          bred for hunting.\n        \n      \n      \n        LIKE\n        SHARE\n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class MaterialCardSampleComponent {\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-label',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmLabelComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'AlarmLabel';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    return Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 1, 2, 3, 4]) {\n        for (const validity of [0, 1]) {\n          for (const mode of [0, 1, 2, 3, 4, 5, 6, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.generateAlarmsList();\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm',\n  template: `\n    \n      \n        {{componentName}} - labelMode: {{labelMode}} - size: {{size}}\n      \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Show or hide label text */\n  @Input() labelMode = 'text';\n\n  /** Size category */\n  @Input() size = 'md';\n\n  /** Label location */\n  @Input() labelLocation = 'right';\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    console.log(this.labelLocation);\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n  generateAlarmsList() {\n    for (const shelved of [false]) {\n      for (const value of [0, 4]) {\n        for (const validity of [1]) {\n          for (const mode of [5, 7, 8]) {\n            const alarm = this.getMockAlarm(\n              value, 'test', mode, validity, false, shelved);\n            this.alarms.push(alarm);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n  }\n\n}\n\n/**\n* Component to display ias components in different scenarios\n* according to the values related to an alarm\n*/\n@Component({\n  selector: 'app-sandbox-alarm-tile',\n  template: `\n    \n       {{componentName}} \n      \n        \n          \n            {{alarm.alarmValue}}\n            \n            {{alarm.operationalMode}}\n            \n            {{alarm.alarmValidity}}\n            \n            shelved?({{alarm.shelved}})\n          \n          \n            +\n            \n            +\n          \n        \n      \n    \n  `,\n  styleUrls: ['./material-sandbox.components.scss']\n})\nexport class SandboxAlarmTileComponent implements OnInit {\n\n  /** Name of the Shared component to be displayed in the {@link SandboxAlarmComponent} */\n  componentName = 'Alarm Tile';\n\n  /** Array of Alarms to display */\n  alarms: Alarm[] = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /**\n  * Return a mock alarm with a given set of input parameters\n  * @param {value} number the value of the Alarm\n  * @param {core_id} string the core_id of the Alarm\n  * @param {mode} number the mode of the Alarm\n  * @param {validity} number the validity of the Alarm\n  * @param {ack} boolean the ack of the Alarm\n  * @param {shelved} boolean the shelved of the Alarm\n  * @returns {Alarm} a mock {@link Alarm} object\n  */\n  getMockAlarm(\n    value: number,\n    core_id: string,\n    mode: number,\n    validity: number,\n    ack: boolean,\n    shelved: boolean\n  ): Alarm {\n    const alarm = Alarm.asAlarm(\n      {\n        'value': value,\n        'core_id': core_id,\n        'running_id': core_id,\n        'mode': mode,\n        'core_timestamp': 1267252440000,\n        'state_change_timestamp': 1267252440000,\n        'validity': validity,\n        'description': 'my description',\n        'url': 'https://www.alma.cl',\n        'sound': 'sound1',\n        'can_shelve': true,\n        'ack': ack,\n        'shelved': shelved,\n        'dependencies': [],\n      }\n    );\n    alarm.properties = {};\n    return alarm;\n  }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.generateAlarmsList();\n  }\n\n  /**\n   * Alarms generation to check the component\n   */\n   generateAlarmsList() {\n     for (const shelved of [false]) {\n       for (const value of [0, 1]) {\n         for (const validity of [1]) {\n           for (const mode of [5, 7, 8]) {\n             const alarm = this.getMockAlarm(\n               value, 'test', mode, validity, false, shelved);\n             this.alarms.push(alarm);\n           }\n         }\n       }\n     }\n   }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-valid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-valid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-valid-low.svg',\n      set_high: Assets.ICONS + 'antenna-valid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-valid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'antenna-invalid-clear.svg',\n      set_low: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_medium: Assets.ICONS + 'antenna-invalid-low.svg',\n      set_high: Assets.ICONS + 'antenna-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'antenna-invalid-critical.svg',\n      unknown: Assets.ICONS + 'antenna-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'antenna-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'antenna-valid-clear.svg',\n    });\n\n  }\n\n}\n\n    \n\n\n    \n                \n                    ./material-sandbox.components.scss\n                \n                .example-card {\n  max-width: 400px;\n}\n\n.example-card__header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.title {\n  font-size: 20pt;\n  padding-top: 20px;\n}\n\n.panels {\n  span {\n    padding: 30px;\n  }\n}\n\n.sandbox-component {\n  display: inline-flex;\n}\n\n.sandbox-marker {\n  color: gray;\n}\n\n.sandbox-title {\n  font-weight: bold;\n}\n\n.sandbox-alarm-container {\n  border: 1px solid #273d54;\n  margin: 10px;\n  padding: 10px;\n  background: #314963;\n}\n\n.sandbox-alarm-values {\n  font-size: 10px;\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{componentName}}                     {{alarm.alarmValue}}                {{alarm.operationalMode}}                {{alarm.alarmValidity}}                shelved?({{alarm.shelved}})                    +                +            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SandboxAlarmTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAlarmCardComponent\n\nAlarmCardComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAlarmCardComponent->SharedModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nAlarmInfoComponent\n\nAlarmInfoComponent\n\nSharedModule -->\n\nAlarmInfoComponent->SharedModule\n\n\n\n\n\nAlarmLabelComponent\n\nAlarmLabelComponent\n\nSharedModule -->\n\nAlarmLabelComponent->SharedModule\n\n\n\n\n\nAlarmTileComponent\n\nAlarmTileComponent\n\nSharedModule -->\n\nAlarmTileComponent->SharedModule\n\n\n\n\n\nAlarmTooltipComponent\n\nAlarmTooltipComponent\n\nSharedModule -->\n\nAlarmTooltipComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nAlarmCardComponent \n\nAlarmCardComponent \n\nAlarmCardComponent  -->\n\nSharedModule->AlarmCardComponent \n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nAlarmInfoComponent \n\nAlarmInfoComponent \n\nAlarmInfoComponent  -->\n\nSharedModule->AlarmInfoComponent \n\n\n\n\n\nAlarmLabelComponent \n\nAlarmLabelComponent \n\nAlarmLabelComponent  -->\n\nSharedModule->AlarmLabelComponent \n\n\n\n\n\nAlarmTileComponent \n\nAlarmTileComponent \n\nAlarmTileComponent  -->\n\nSharedModule->AlarmTileComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlarmCardComponent\n                        \n                        \n                            AlarmComponent\n                        \n                        \n                            AlarmHeaderComponent\n                        \n                        \n                            AlarmInfoComponent\n                        \n                        \n                            AlarmLabelComponent\n                        \n                        \n                            AlarmTileComponent\n                        \n                        \n                            AlarmTooltipComponent\n                        \n                        \n                            StatusViewComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AlarmComponent\n                        \n                        \n                            AlarmHeaderComponent\n                        \n                        \n                            StatusViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AlarmCardComponent\n                        \n                        \n                            AlarmComponent\n                        \n                        \n                            AlarmHeaderComponent\n                        \n                        \n                            AlarmInfoComponent\n                        \n                        \n                            AlarmLabelComponent\n                        \n                        \n                            AlarmTileComponent\n                        \n                        \n                            StatusViewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { AlarmHeaderComponent } from './alarm-header/alarm-header.component';\nimport { AlarmTooltipComponent } from './alarm-tooltip/alarm-tooltip.component';\nimport { AlarmCardComponent } from './alarm-card/alarm-card.component';\nimport { AlarmTileComponent } from './alarm-tile/alarm-tile.component';\nimport { AlarmInfoComponent } from './alarm-info/alarm-info.component';\nimport { AlarmLabelComponent } from './alarm-label/alarm-label.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule\n  ],\n  declarations: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n    AlarmTooltipComponent,\n    AlarmCardComponent,\n    AlarmTileComponent,\n    AlarmInfoComponent,\n    AlarmLabelComponent,\n  ],\n  exports: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n    AlarmCardComponent,\n    AlarmTileComponent,\n    AlarmInfoComponent,\n    AlarmLabelComponent,\n  ],\n  entryComponents: [\n    AlarmComponent,\n    StatusViewComponent,\n    AlarmHeaderComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                ./shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sidenavService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                isDisabled\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sidenavService: SidenavService, focusMonitor: FocusMonitor, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenavService\n                                                  \n                                                        \n                                                                    SidenavService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to manage the Acknowledge and Shelve sidenav\n\n                                                        \n                                                \n                                                \n                                                        focusMonitor\n                                                  \n                                                        \n                                                                    FocusMonitor\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                system service used to monitor focus of components\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                reference to this component in the DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:19\n                            \n                        \n                \n                    \n                        Alarm object associated to the button\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Defines whether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Method executed after the component is initialized.\nIt is used here to stop focus monitoring of the button, in order to fix some visual issues\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Handle click on shelve button, it triggers the shelve sidebar\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SidenavService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/shelve-button/shelve-button.component.ts:29\n                            \n                        \n\n                \n                    \n                        service to manage the Acknowledge and Shelve sidenav\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { SidenavService } from '../sidenav.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit, AfterViewInit {\n\n  /**\n   * Alarm object associated to the button\n   */\n  @Input() alarm: Alarm;\n\n\n  /**\n   * Instantiates the component\n   * @param {SidenavService} sidenavService service to manage the Acknowledge and Shelve sidenav\n   * @param {FocusMonitor} focusMonitor system service used to monitor focus of components\n   * @param {ElementRef} elementRef reference to this component in the DOM\n   */\n  constructor(\n    public sidenavService: SidenavService,\n    private focusMonitor: FocusMonitor,\n    private elementRef: ElementRef\n  ) { }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Method executed after the component is initialized.\n  * It is used here to stop focus monitoring of the button, in order to fix some visual issues\n  */\n  ngAfterViewInit() {\n    const buttonRef = this.elementRef.nativeElement.children[0];\n    this.focusMonitor.stopMonitoring(buttonRef);\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Defines whether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled(): boolean {\n    return !this.sidenavService.canClose;\n  }\n\n  /**\n  * Handle click on shelve button, it triggers the shelve sidebar\n  */\n  onClick(): void {\n    this.sidenavService.goToShelve(this.alarm.core_id);\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./shelve-button.component.css\n                \n                .shelve-button {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 0px;\n  margin: 0px 4px;\n  border-radius: 24px;\n  min-width: 1px;\n  width: 32px;\n  height: 32px;\n}\n\n.shelve-button-icon {\n  width: 18px;\n  margin: auto;\n}\n\n.mat-flat-button {\n  line-height: 28px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SidenavService.html":{"url":"injectables/SidenavService.html","title":"injectable - SidenavService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SidenavService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sidenav.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canClose\n                            \n                            \n                                lastAlarmId\n                            \n                            \n                                    Public\n                                shouldReload\n                            \n                            \n                                    Private\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                closeAndClean\n                            \n                            \n                                    Public\n                                goToAcknowledge\n                            \n                            \n                                    Public\n                                goToShelve\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setSidenav\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routingService: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routingService\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeAndClean\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeAndClean()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Closes the sidenav and cleans the actions outlet\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToAcknowledge(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Go to Acknowledge View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Acknowledge\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goToShelve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goToShelve(alarm_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Go to Shelve View in the action outlet\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Id of the alarm to Shleve/Unshelve\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Opens the sidenav\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSidenav(sidenav: MatSidenav)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Sets the reference to the sidenav\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sidenav\n                                                        \n                                                                    MatSidenav\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Reference to the sidenav\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Toggles the sidenav (open/close)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:36\n                            \n                        \n\n                \n                    \n                        Defines wether or not the sidenav can be closed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastAlarmId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:23\n                            \n                        \n\n                \n                    \n                        Id of the last Alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldReload\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:18\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe status of the service connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/sidenav.service.ts:33\n                            \n                        \n\n                \n                    \n                        Reference to the sidenav \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs';\nimport { RoutingService } from '../app-routing/routing.service';\n\n/**\n* Service used to handle the sidenv where the actions panels (Acknowledge and Shelve) are displayed\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public shouldReload = new BehaviorSubject(false);\n\n  /**\n  * Id of the last {@link Alarm}\n  */\n  lastAlarmId = '';\n\n  /**\n   * Builds an instance of the service\n   */\n  constructor(\n    private routingService: RoutingService\n  ) { }\n\n  /** Reference to the sidenav */\n  private sidenav: MatSidenav;\n\n  /** Defines wether or not the sidenav can be closed */\n  public canClose = true;\n\n  /**\n  * Sets the reference to the sidenav\n  * @param {MatSidenav} sidenav Reference to the sidenav\n  */\n  public setSidenav(sidenav: MatSidenav) {\n    this.sidenav = sidenav;\n  }\n\n  /**\n  * Opens the sidenav\n  */\n  public open() {\n    return this.sidenav.open();\n  }\n\n  /**\n  * Closes the sidenav\n  */\n  public close() {\n    return this.sidenav.close();\n  }\n\n  /**\n  * Closes the sidenav and cleans the actions outlet\n  */\n  public closeAndClean() {\n    this.routingService.cleanActionOutlet();\n    return this.close();\n  }\n\n  /**\n  * Toggles the sidenav (open/close)\n  */\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n\n  /**\n  * Go to Acknowledge View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Acknowledge\n  */\n  public goToAcknowledge(alarm_id: string) {\n    this.routingService.goToAcknowledge(alarm_id);\n  }\n\n  /**\n  * Go to Shelve View in the action outlet\n  * @param {string} alarm_id Id of the alarm to Shleve/Unshelve\n  */\n  public goToShelve(alarm_id: string) {\n    if (alarm_id === this.lastAlarmId) {\n      this.shouldReload.next(true);\n    } else {\n      this.lastAlarmId = alarm_id;\n    }\n    this.routingService.goToShelve(alarm_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                ./status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmIconsPrioritySet\n                            \n                            \n                                    Public\n                                alarmIconsSet\n                            \n                            \n                                    Public\n                                alarmIconsUnreliableSet\n                            \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                showActionBadges\n                            \n                            \n                                tooltipDirection\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/status-view/status-view.component.ts:45\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n                \n                    \n                        Type :     Alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:19\n                            \n                        \n                \n                    \n                        Alarm object associated to the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showActionBadges\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:40\n                            \n                        \n                \n                    \n                        Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\nThis value is \"true\" by default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipDirection\n                    \n                \n                \n                    \n                        Default value : 'right'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:45\n                            \n                        \n                \n                    \n                        Defines the direction of the tooltip\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:22\n                            \n                        \n                \n                    \n                        Dash-separated string with the tags that define the state of an alarm \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the alarmTags\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsPrioritySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Set of alarm priority icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:28\n                            \n                        \n\n                \n                    \n                        Set of alarm icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmIconsUnreliableSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:31\n                            \n                        \n\n                \n                    \n                        Set of alarm unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/status-view/status-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, OperationalMode } from '../../data/alarm';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { Assets } from '../../settings';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /** Dash-separated string with the tags that define the state of an alarm */\n  @Input() value = '';\n\n  /** List of tags that define the state of an alarm */\n  private alarmTags = [];\n\n  /** Set of alarm icons */\n  public alarmIconsSet: AlarmImageSet;\n\n  /** Set of alarm unreliable icons */\n  public alarmIconsUnreliableSet: AlarmImageSet;\n\n  /** Set of alarm priority icons */\n  public alarmIconsPrioritySet: AlarmImageSet;\n\n  /**\n   * Defines wether or not the component will display the action badges (\"pending acknowledgement\" and \"alarm in shelf\") besides the icon.\n   * This value is \"true\" by default\n   */\n  @Input() showActionBadges = true;\n\n  /**\n   * Defines the direction of the tooltip\n   */\n  @Input() tooltipDirection = 'right';\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n\n    /** Set of icons for reliable statuses */\n    this.alarmIconsSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-valid.svg',\n      set_low: Assets.ICONS + 'set-valid-low.svg',\n      set_medium: Assets.ICONS + 'set-valid-low.svg',\n      set_high: Assets.ICONS + 'set-valid-critical.svg',\n      set_critical: Assets.ICONS + 'set-valid-critical.svg',\n      unknown: Assets.ICONS + 'clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for unreliable statuses */\n    this.alarmIconsUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'clear-invalid.svg',\n      set_low: Assets.ICONS + 'set-invalid-low.svg',\n      set_medium: Assets.ICONS + 'set-invalid-low.svg',\n      set_high: Assets.ICONS + 'set-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'set-invalid-critical.svg',\n      unknown: Assets.ICONS + 'clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'clear-valid.svg',\n    });\n\n    /** Set of icons for priorities */\n    this.alarmIconsPrioritySet = new AlarmImageSet({\n      clear: Assets.ICONS + 'priority-0.svg',\n      set_low: Assets.ICONS + 'priority-1.svg',\n      set_medium: Assets.ICONS + 'priority-2.svg',\n      set_high: Assets.ICONS + 'priority-3.svg',\n      set_critical: Assets.ICONS + 'priority-4.svg',\n      unknown: Assets.ICONS + 'priority-0.svg',\n      maintenance: Assets.ICONS + 'priority-0.svg',\n      shelved: Assets.ICONS + 'priority-0.svg',\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./status-view.component.css\n                \n                .alarm-icon {\n  height: 100%;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n    Modules\n    TabularModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTabularModule -->\n\nTableComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nTabularModule->TableComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the components related to the Table view\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LegendComponent\n                        \n                        \n                            TableComponent\n                        \n                        \n                            TabularViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { ActionsModule } from '../actions/actions.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { TableComponent } from './table/table.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ActionsModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    TableComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TableComponent,\n  ],\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabularViewComponent.html":{"url":"components/TabularViewComponent.html","title":"component - TabularViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabularViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/tabular-view/tabular-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component that dispays all the Alarms in a table using the TableComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabular-view\n            \n\n            \n                styleUrls\n                ./tabular-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabular-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/tabular-view/tabular-view.component.ts:11\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Method executed when the Component is initializated\nDoes not do anything at the moment\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component that dispays all the Alarms in a table using the {@link TableComponent}\n*/\n@Component({\n  selector: 'app-tabular-view',\n  templateUrl: './tabular-view.component.html',\n  styleUrls: ['./tabular-view.component.scss']\n})\nexport class TabularViewComponent implements OnInit {\n\n  /**\n   * Instantiates the component\n   */\n  constructor() { }\n\n  /**\n   * Method executed when the Component is initializated\n   * Does not do anything at the moment\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./tabular-view.component.scss\n                \n                .mat-card {\n\n  .mat-card-header {\n    display: block;\n    padding: 20px;\n    border-top-left-radius: 0.375em;\n    border-top-right-radius: 0.375em;\n  }\n\n  .mat-card-content {\n    border-bottom-left-radius: 0.375em;\n    border-bottom-right-radius: 0.375em;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabularViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutOption.html":{"url":"interfaces/TimeoutOption.html","title":"interface - TimeoutOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeoutOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/shelve/shelve.component.ts\n        \n\n            \n                Description\n            \n            \n                Definition of a timeout option for shelving an alarm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The actual value to be sent to the server \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value to be displayed to the user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SubscriptionLike as ISubscription } from 'rxjs';\nimport { SidenavService } from '../sidenav.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { UserService } from '../../data/user.service';\nimport { AuthService } from '../../auth/auth.service';\nimport { Alarm } from '../../data/alarm';\nimport { Locale } from '../../settings';\n\n/**\n* Definition of a timeout option for shelving an alarm\n*/\nexport interface TimeoutOption {\n\n  /** The actual value to be sent to the server */\n  value: string;\n\n  /** The value to be displayed to the user */\n  viewValue: string;\n}\n\n/**\n * Component used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve',\n  templateUrl: './shelve.component.html',\n  styleUrls: ['./shelve.component.scss']\n})\nexport class ShelveComponent implements OnInit, OnDestroy {\n\n  /**\n  * Timeout options for shelving alarms\n  */\n  timeouts: TimeoutOption[] = [\n    {value: '00:15:00', viewValue: '15 minutes'},\n    {value: '00:30:00', viewValue: '30 minutes'},\n    {value: '01:00:00', viewValue: '1 hour'},\n    {value: '02:00:00', viewValue: '2 hours'},\n    {value: '06:00:00', viewValue: '6 hours'},\n    {value: '12:00:00', viewValue: '12 hours'},\n  ];\n\n  /**\n   * Default timeout for shelving\n   */\n  defaultTimeout = this.timeouts[0].value;\n\n  /**\n   * Id of the Alarm object to be shelved/unshelved\n   */\n  alarm_id: string;\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  alarm: Alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * FormControl for the shelve message\n  */\n  message: FormControl;\n\n  /**\n  * FormControl for the shelve timeout\n  */\n  timeout: FormControl;\n\n  /**\n  * FormControl for the user who performs the action\n  */\n  user: FormControl;\n\n  /**\n   * Selected user\n   */\n  user_selected: string;\n\n  /**\n  * Stores wether or not the action has been executed requestStatusly\n  * If requestStatus = 0, the request has not been sent yet\n  * If requestStatus = 1, the request was successfully\n  * If requestStatus = -1, the request has failed\n  */\n  requestStatus = 0;\n\n  /**\n  * Stores the error message returned by the Webserver if a shelve or unshelve request fails\n  */\n  errorMessage = '';\n\n  /**\n  * Stores the message with the information of when the alarm has been shelved and for how long\n  */\n  shelvedAtMessage = '';\n\n  /**\n   * Route param map subscription\n   */\n  paramMapSubscription: ISubscription;\n\n   /**\n    * Alarm change subscription\n    */\n  alarmChangeSubscription: ISubscription;\n\n  /**\n   * Sidenav service subscription\n   */\n sidenavReloadSubscription: ISubscription;\n\n /** String to store the formatting of dates, read form the settings */\n private dateFormat: string;\n\n /** String to store the timezone to display dates, read from the settings */\n private timezone: string;\n\n  /**\n   * Instantiates the component\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {NgxSpinnerService} spinnerService Service to provide the loading spinner functionality\n   * @param {Route} route Reference to the url that triggered the initialization of this component\n   * @param {SidenavService} sidenavService Service to handle the sidenav where the component is opened\n   * @param {UserService} userService Service to handle request to the users api\n   * @param {AuthService} authService Service to ask for the logged in user\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private route: ActivatedRoute,\n    public sidenavService: SidenavService,\n    private spinnerService: NgxSpinnerService,\n    private userService: UserService,\n    public authService: AuthService\n  ) {\n  }\n\n  /**\n   * Get the alarmID from the url, create the form and open the sidenav\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n    this.user = new FormControl('', [Validators.required]);\n    this.message = new FormControl('', [Validators.required]);\n    this.timeout = new FormControl(this.defaultTimeout, [Validators.required]);\n    this.shelvedAtMessage = '';\n    this.form = this.formBuilder.group({\n      user: this.user,\n      message: this.message,\n      timeout: this.timeout\n    });\n    this.paramMapSubscription = this.route.paramMap\n    .subscribe( paramMap => {\n      this.alarm_id = paramMap.get('alarmID');\n      this.check_request_and_reload();\n    });\n    this.sidenavReloadSubscription = this.sidenavService.shouldReload\n    .subscribe(\n      value => {\n        if (value === true) {\n          this.reload();\n        }\n      }\n    );\n    this.alarmChangeSubscription = this.alarmService.alarmChangeStream\n    .subscribe( () => {\n      this.check_request_and_reload();\n    });\n    this.sidenavService.open();\n  }\n\n  /**\n  * Method to manage the information of the component\n  */\n  check_request_and_reload(): void {\n    const alarmDataAvailable = this.alarmService.isAlarmIndexAvailable(\n      this.alarm_id\n    );\n    if (alarmDataAvailable === true) {\n      if (this.alarm) {\n        if (this.alarm.core_id !== this.alarm_id) {\n          this.reload();\n        }\n      } else {\n        this.reload();\n      }\n    }\n  }\n\n  /**\n  * Closes the sidenav when the component is destroyed\n  */\n  ngOnDestroy() {\n    if (this.paramMapSubscription) {\n      this.paramMapSubscription.unsubscribe();\n    }\n    if (this.sidenavReloadSubscription) {\n      this.sidenavReloadSubscription.unsubscribe();\n    }\n    if (this.alarmChangeSubscription) {\n      this.alarmChangeSubscription.unsubscribe();\n    }\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} True if shelve action can be performed and false if not\n   */\n  canSend(): boolean {\n    const allowedShelve = this.authService.getAllowedActions()['can_shelve'];\n    const allowedUnshelve = this.authService.getAllowedActions()['can_unshelve'];\n    const isAllowed = allowedShelve && allowedUnshelve;\n    return (this.alarm.shelved || this.form.valid) && isAllowed;\n  }\n\n  /**\n   * Returns the text to display in the action button\n   * @returns {string} the text to display in the button, either \"Shelve\" or \"Unshelve\"\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title, depeding if the alarm is \"Shelved\" or \"Unshelved\"\n   * @returns {string} the text to display in the title\n   */\n  getTitleText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'ALARM UNSHELVING';\n    } else {\n      return 'ALARM SHELVING';\n    }\n  }\n\n  /**\n   * Returns the text to display in the title\n   * @returns {string} the text to display in the title, either \"Shelving results\" or \"Unshelving results\"\n   */\n  getResponseMessageTitle(): string {\n    let action: string;\n    if (!this.alarm.shelved) {\n      action = 'Shelving';\n    } else {\n      action = 'Unshelving';\n    }\n    if (this.requestStatus === 1) {\n      return action + ' results';\n    } else if (this.requestStatus === -1 ) {\n      return 'Error ' + action;\n    } else if (this.requestStatus === -2) {\n      return 'Action not allowed';\n    }\n  }\n\n  /**\n   * Returns the text to display when the shelve or unshelve action is performed\n   * @returns {string} the text to display\n   */\n  getResponseMessageText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    let response = '';\n    if (this.requestStatus === 1) {\n      if (!this.alarm.shelved) {\n        response = 'The alarm ' + this.alarm.core_id + ' was shelved succesfully for ' +\n        this.timeouts.find(t => t.value === this.timeout.value).viewValue + '.';\n      } else {\n        response = 'The alarm ' + this.alarm.core_id + ' was unshelved succesfully.';\n      }\n    } else if (this.requestStatus === -1) {\n      if (!this.alarm.shelved) {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been shelved.';\n      } else {\n        response = 'The request has failed, the alarm ' + this.alarm.core_id + ' has not been unshelved.';\n      }\n      response += ' Please try again. If the problem persists, contact the system administrator.';\n    } else if (this.requestStatus === -2 ) {\n      response = 'The logged in user (' + this.authService.getUser();\n      if (!this.alarm.shelved) {\n        response += ') does not have permissions to perform the shelve.';\n      } else {\n        response += ') does not have permissions to perform the unshelve.';\n      }\n    }\n    return response;\n  }\n\n\n  /**\n  * Closes the sidenav\n  */\n  onClose(): void {\n    this.sidenavService.closeAndClean();\n  }\n\n  /**\n  * Cleans the component and reloads the Alarm\n  */\n  reload(): void {\n    this.shelvedAtMessage = '';\n    this.alarm = this.alarmService.get(this.alarm_id);\n    if (this.alarm.shelved) {\n      this.requestShelveInfo();\n    }\n    this.requestStatus = 0;\n    this.message.reset();\n    this.timeout.reset(this.defaultTimeout);\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Requests the alarm shelving info to the Webserver\n   */\n  requestShelveInfo(): void {\n    this.alarmService.getShelveRegistries(this.alarm_id, 1).subscribe(\n        (response: any) => {\n          const registry = response[0];\n          this.shelvedAtMessage = 'This Alarm was shelved at ' + registry['shelved_at'] +\n          ' with a duration of ' + this.timeouts.find(t => t.value === registry['timeout']).viewValue;\n        },\n        (error: any) => {\n          console.log('Error: ', error);\n          return error;\n        }\n      );\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve(): void {\n    this.showSpinner();\n    const message = this.message.value;\n    const timeout = this.timeout.value;\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(\n        this.alarm.core_id, message, timeout, this.user_selected\n      ).subscribe(\n          (response: any) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error: any) => {\n            if (error.status === 403) {\n              this.requestStatus = -2;\n            } else {\n              this.requestStatus = -1;\n            }\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve(): void {\n    this.showSpinner();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response: any) => {\n            this.requestStatus = 1;\n            this.hideSpinner();\n            this.errorMessage = '';\n          },\n          (error: any) => {\n            console.log('Error: ', error);\n            this.requestStatus = -1;\n            this.hideSpinner();\n            this.errorMessage = error['error'];\n            return error;\n          }\n        );\n    } else {\n      this.hideSpinner();\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n  * Hides the spinner after the Alarm has been shelved/unshelved\n  * It also unblocks closing and navigation of the the Sidebar\n  */\n  private hideSpinner(): void {\n    this.spinnerService.hide();\n    this.sidenavService.canClose = true;\n  }\n\n  /**\n  * Shows a spinner used to indicate the user that the Alarm is being shelved/unshelved\n  * It also blocks closing and navigation of the the Sidebar\n  */\n  private showSpinner(): void {\n    this.sidenavService.canClose = false;\n    this.spinnerService.show();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Class that models a User\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Optional email \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique username \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\nimport { Subscription } from 'rxjs';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {Subscription} subscription to the list of users\n  */\n  requestUsersList(): Subscription {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/user.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to manage information about user accounts\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestUsersList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            Builds an instance of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestUsersList\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequestUsersList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/user.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Get the list of users in the operators group\n\n\n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    subscription to the list of users\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/user.service.ts:26\n                            \n                        \n\n                \n                    \n                        List of authorized users\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClientService } from './http-client.service';\nimport { BackendUrls } from '../settings';\nimport { Subscription } from 'rxjs';\n\n/**\n* Class that models a User\n**/\nexport interface User {\n  /** Unique username */\n  username: string;\n\n  /** Optional email */\n  email: string;\n}\n\n/**\n* Service to manage information about user accounts\n*/\n@Injectable()\nexport class UserService {\n\n  /**\n  * List of authorized users\n  **/\n  public users: User[];\n\n  /**\n   * Builds an instance of the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) { }\n\n  /**\n  * Get the list of users in the operators group\n  * @return {Subscription} subscription to the list of users\n  */\n  requestUsersList(): Subscription {\n    return this.httpClientService.get(BackendUrls.USERS_LIST)\n    .subscribe (\n        (response) => {\n            this.users =  response;\n        },\n        (error) => {\n            console.error('error: ', error);\n        }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherBackupWsMarkerComponent.html":{"url":"components/WeatherBackupWsMarkerComponent.html","title":"component - WeatherBackupWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherBackupWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display backups weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-backup-ws-marker\n            \n\n            \n                styleUrls\n                ./weather-backup-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-backup-ws-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                \n                \n                    \n                        Type :     AlarmConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:24\n                            \n                        \n                \n                    \n                        Station config related to the component \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm corresponding to the weather station\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { AlarmConfig } from '../../../data/alarm-config';\nimport { WeatherService } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display backups weather station in a map\n */\n@Component({\n  selector: 'app-weather-backup-ws-marker',\n  templateUrl: './weather-backup-ws-marker.component.html',\n  styleUrls: ['./weather-backup-ws-marker.component.scss']\n})\nexport class WeatherBackupWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: AlarmConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the {@link Alarm} corresponding to the weather station\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.getAlarm(this.stationConfig);\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./weather-backup-ws-marker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherBackupWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather/weather.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms both in a sidebar (instantiated in a WeatherSidebar),\nand a map (instantiated by a WeatherMap)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedStation\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeSelectedStation\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeSelectedStation(selectedStation: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Update selected placemark name using events emitted from internal components\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        selectedStation\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmConfig\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather/weather.component.ts:16\n                            \n                        \n\n                \n                    \n                        Selected placemark name from the inner map or inner components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, OnInit } from '@angular/core';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n* Component used to display Weather Alarms both in a sidebar (instantiated in a {@link WeatherSidebar}),\n* and a map (instantiated by a {@link WeatherMap})\n*/\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  /** Selected placemark name from the inner map or inner components */\n  selectedStation: AlarmConfig = null;\n\n  /**\n   * Builds an instance of the component\n   */\n  constructor(\n  ) { }\n\n  /**\n   * Executed after the component is instantiated\n   */\n  ngOnInit() {\n  }\n\n  /** Update selected placemark name using events emitted from internal components\n   * @param {AlarmConfig}\n   */\n  changeSelectedStation(selectedStation: AlarmConfig): void {\n    this.selectedStation = selectedStation;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./weather.component.scss\n                \n                mat-sidenav-container {\n  background: transparent;\n  height: 100%;\n}\n\n#weather-map {\n}\n\n#weather-sidenav {\n  background: transparent;\n  width: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherDataMarkerComponent.html":{"url":"components/WeatherDataMarkerComponent.html","title":"component - WeatherDataMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherDataMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display the weather station summary information in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-data-marker\n            \n\n            \n                styleUrls\n                ./weather-data-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-data-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:29\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:29\n                            \n                        \n                \n                    \n                        Variable to manage if the marker should be highlighted from hover\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:25\n                            \n                        \n                \n                    \n                        Variable to manage if the marker should be highlighted\nfor example after the selection from a parent component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                \n                \n                    \n                        Type :     AlarmConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:20\n                            \n                        \n                \n                    \n                        Station config related to the component \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:38\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts:37\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { AlarmConfig } from '../../../data/alarm-config';\nimport { WeatherService } from '../../weather.service';\n\n\n/**\n * Marker to display the weather station summary information in a map\n */\n@Component({\n  selector: 'app-weather-data-marker',\n  templateUrl: './weather-data-marker.component.html',\n  styleUrls: ['./weather-data-marker.component.scss']\n})\nexport class WeatherDataMarkerComponent implements OnInit {\n\n  /** Station config related to the component */\n  @Input() stationConfig: AlarmConfig;\n\n  /** Variable to manage if the marker should be highlighted\n  * for example after the selection from a parent component\n  */\n  @Input() selected = false;\n\n  /** Variable to manage if the marker should be highlighted from hover\n  */\n  @Input() onHover = false;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() { }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./weather-data-marker.component.scss\n                \n                .ws-data-container {\n  border-style: solid;\n  border-width: 2px;\n  border-radius: 4px;\n  padding: 10px;\n  text-align: center;\n  font-size: 16px;\n  min-width: fit-content;\n\n  .weather-icons {\n  }\n\n  .icon {\n    padding: 0px 10px;\n    width: fit-content;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherDataMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n    Modules\n    WeatherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nActionsModule\n\nActionsModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains all the components related to the Weather system\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WeatherBackupWsMarkerComponent\n                        \n                        \n                            WeatherComponent\n                        \n                        \n                            WeatherDataMarkerComponent\n                        \n                        \n                            WeatherMapComponent\n                        \n                        \n                            WeatherPrimaryWsConnectorComponent\n                        \n                        \n                            WeatherPrimaryWsMarkerComponent\n                        \n                        \n                            WeatherSidebarComponent\n                        \n                        \n                            WeatherStationSidebarComponent\n                        \n                        \n                            WeatherSummaryComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            WeatherService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActionsModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            IasMaterialModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WeatherSummaryComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ActionsModule } from '../actions/actions.module';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { MapModule } from '../map/map.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\nimport { WeatherMapComponent } from './weather-map/weather-map.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { WeatherSidebarComponent } from './weather-sidebar/weather-sidebar.component';\nimport { WeatherService } from './weather.service';\nimport { WeatherStationSidebarComponent } from './weather-station-sidebar/weather-station-sidebar.component';\n\nimport {\n  WeatherBackupWsMarkerComponent\n} from './weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component';\nimport {\n  WeatherPrimaryWsMarkerComponent\n} from './weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component';\nimport {\n  WeatherPrimaryWsConnectorComponent\n} from './weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component';\nimport {\n  WeatherDataMarkerComponent\n} from './weather-map-markers/weather-data-marker/weather-data-marker.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    ClipboardModule,\n    ActionsModule,\n    DataModule,\n    SharedModule,\n    MapModule,\n    IasMaterialModule,\n  ],\n  providers: [\n    WeatherService\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n    WeatherMapComponent,\n    WeatherComponent,\n    WeatherSidebarComponent,\n    WeatherStationSidebarComponent,\n    WeatherBackupWsMarkerComponent,\n    WeatherDataMarkerComponent,\n    WeatherPrimaryWsMarkerComponent,\n    WeatherPrimaryWsConnectorComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsConnectorComponent.html":{"url":"components/WeatherPrimaryWsConnectorComponent.html","title":"component - WeatherPrimaryWsConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n\n\n    \n        Description\n    \n    \n        Line connector between the weather station marker and the summarized weather\ninformation marker in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-connector\n            \n\n            \n                styleUrls\n                ./weather-primary-ws-connector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-connector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPath\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                coords\n                            \n                            \n                                onHover\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        coords\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:16\n                            \n                        \n                \n                    \n                        Array of coordinates for the connector path \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onHover\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:22\n                            \n                        \n                \n                    \n                        Value to highlight the connector for hover related events \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:19\n                            \n                        \n                \n                    \n                        Value to highlight the connector \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Returns the svg path used to draw the line in the map\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    svg path that represent the line\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n\n/**\n * Line connector between the weather station marker and the summarized weather\n * information marker in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-connector',\n  templateUrl: './weather-primary-ws-connector.component.html',\n  styleUrls: ['./weather-primary-ws-connector.component.scss']\n})\nexport class WeatherPrimaryWsConnectorComponent implements OnInit {\n\n  /** Array of coordinates for the connector path */\n  @Input() coords: [[0, 0]];\n\n  /** Value to highlight the connector */\n  @Input() selected: false;\n\n  /** Value to highlight the connector for hover related events */\n  @Input() onHover: false;\n\n  /**\n  * Builds an instance of the component */\n  constructor() { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Returns the svg path used to draw the line in the map\n   * @returns {string} svg path that represent the line\n   */\n  getPath(): string {\n    let pathString = '';\n    let counter = 0;\n    for (const coord of this.coords) {\n      if (counter > 0) {\n        pathString += 'L ' + coord[0] + ' ' + coord[1] + ' ';\n      } else {\n        pathString += 'M ' + coord[0] + ' ' + coord[1] + ' ';\n      }\n      counter += 1;\n    }\n    return pathString;\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./weather-primary-ws-connector.component.scss\n                \n                .ws-connector {\n  fill: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherPrimaryWsMarkerComponent.html":{"url":"components/WeatherPrimaryWsMarkerComponent.html","title":"component - WeatherPrimaryWsMarkerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherPrimaryWsMarkerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n\n\n    \n        Description\n    \n    \n        Marker to display primary weather station in a map\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-primary-ws-marker\n            \n\n            \n                styleUrls\n                ./weather-primary-ws-marker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-primary-ws-marker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:24\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                \n                \n                    \n                        Type :     AlarmConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:24\n                            \n                        \n                \n                    \n                        Station config related to the component \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Finds and returns an Alarm by ID in the AlarmService\n\n\n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:21\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:33\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmComponent } from '../../../shared/alarm/alarm.component';\nimport { AlarmImageSet } from '../../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../../data/alarm.service';\nimport { Alarm } from '../../../data/alarm';\nimport { AlarmConfig } from '../../../data/alarm-config';\nimport { WeatherService } from '../../weather.service';\nimport { Assets } from '../../../settings';\n\n/**\n * Marker to display primary weather station in a map\n */\n@Component({\n  selector: 'app-weather-primary-ws-marker',\n  templateUrl: './weather-primary-ws-marker.component.html',\n  styleUrls: ['./weather-primary-ws-marker.component.scss']\n})\nexport class WeatherPrimaryWsMarkerComponent implements OnInit {\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Station config related to the component */\n  @Input() stationConfig: AlarmConfig;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n   * Executed after the component is instantiated.\n   */\n  ngOnInit() {\n  }\n\n  /**\n  * Finds and returns an {@link Alarm} by ID in the {@link AlarmService}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  getAlarm(): Alarm {\n    return this.alarmService.get(this.stationConfig.alarm_id);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./weather-primary-ws-marker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherPrimaryWsMarkerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/weather.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that stores and handles all configuration needed by the components of the WeatherModule\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initialized\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                markerImageSet\n                            \n                            \n                                    Public\n                                markerImageUnreliableSet\n                            \n                            \n                                    Public\n                                padsStatus\n                            \n                            \n                                    Public\n                                padsStatusAvailable\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                weatherMapName\n                            \n                            \n                                    Public\n                                weatherStationsConfig\n                            \n                            \n                                    Public\n                                weatherSummaryConfig\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIconSet\n                            \n                            \n                                getMapData\n                            \n                            \n                                getPadsStatus\n                            \n                            \n                                initialize\n                            \n                            \n                                loadImages\n                            \n                            \n                                loadPadsStatus\n                            \n                            \n                                loadWeatherStationsConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, httpClient: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.service.ts:57\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIconSet(config: AlarmConfig, reliable: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:86\n                            \n                        \n\n\n                \n                    \n                            Returns the instance of the Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the corresponding AlarmConfig from where to get the type\n\n                                                        \n                                                \n                                                \n                                                        reliable\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AlarmImageSet\n\n                            \n                                \n                                    the type of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMapData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMapData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Requests data for the weather station map\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the group\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    observable of the data in a JSON\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Initializes the Service and getting configuration from Webserver\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadImages\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadPadsStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadPadsStatus(group: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:133\n                            \n                        \n\n\n                \n                    \n                            Loads the pads status in the related variable of this service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the group\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWeatherStationsConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWeatherStationsConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:145\n                            \n                        \n\n\n                \n                    \n                            Define the IDs of the alarms that the component should listen to\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:57\n                            \n                        \n\n                \n                    \n                        Flag that indicates if the configuration was initialized or if it was not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:18\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:30\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:27\n                            \n                        \n\n                \n                    \n                        Set of Marker icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            markerImageUnreliableSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:39\n                            \n                        \n\n                \n                    \n                        Set of Marker Unreliable icons for the stations in the map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:51\n                            \n                        \n\n                \n                    \n                        Stores the response of the pads status request to the websver \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            padsStatusAvailable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:54\n                            \n                        \n\n                \n                    \n                        Variable to check if pads status is available \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:21\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:33\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherMapName\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : WeatherSettings.mapKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:48\n                            \n                        \n\n                \n                    \n                        Key to retrieve the JSON with coordinates to draw the Weather Map \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherStationsConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:45\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm Ids of the Weather Stations, indexed by placemark *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherSummaryConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmConfig[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:42\n                            \n                        \n\n                \n                    \n                        Alarms Ids for the weather summary *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:24\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather.service.ts:36\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../shared/alarm/alarm.component';\nimport { AlarmService } from '../data/alarm.service';\nimport { Alarm } from '../data/alarm';\nimport { AlarmConfig } from '../data/alarm-config';\nimport { Assets } from '../settings';\nimport { HttpClientService } from '../data/http-client.service';\nimport { BackendUrls, WeatherSettings } from '../settings';\n\n/**\n* Service that stores and handles all configuration needed by the components of the {@link WeatherModule}\n*/\n@Injectable()\nexport class WeatherService {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Marker icons for the stations in the map */\n  public markerImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Marker Unreliable icons for the stations in the map */\n  public markerImageUnreliableSet: AlarmImageSet;\n\n  /** Alarms Ids for the weather summary **/\n  public weatherSummaryConfig: AlarmConfig[];\n\n  /** Dictionary of Alarm Ids of the Weather Stations, indexed by placemark **/\n  public weatherStationsConfig: AlarmConfig[];\n\n  /** Key to retrieve the JSON with coordinates to draw the Weather Map */\n  public weatherMapName = WeatherSettings.mapKey;\n\n  /** Stores the response of the pads status request to the websver */\n  public padsStatus = null;\n\n  /** Variable to check if pads status is available */\n  public padsStatusAvailable = new BehaviorSubject(false);\n\n  /** Flag that indicates if the configuration was initialized or if it was not */\n  private _initialized = false;\n\n  /**\n   * Instantiates the service\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {HttpClientService} httpClient Service used to perform HTTP requests\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private httpClient: HttpClientService\n  ) {}\n\n  /**\n  * Initializes the Service and getting configuration from Webserver\n  */\n  initialize() {\n    if (this._initialized === false) {\n      this.loadWeatherStationsConfig();\n      this.loadImages();\n      this.loadPadsStatus('');\n      this._initialized = true;\n    }\n  }\n\n  /**\n  * Returns the instance of the {@link Alarm}\n  * @param {AlarmConfig} config the corresponding AlarmConfig from where to get the type\n  * @returns {string} the type of the {@link Alarm} associated to the given {@link AlarmConfig}\n  */\n  getIconSet(config: AlarmConfig, reliable: boolean): AlarmImageSet {\n    if (!config) {\n      return null;\n    }\n    const type = config.type;\n    if (reliable) {\n      if (config.type === 'humidity') {\n        return this.humidityImageSet;\n      } else if (config.type === 'temperature') {\n        return this.tempImageSet;\n      } else if (config.type === 'windspeed') {\n        return this.windsImageSet;\n      }\n    } else {\n      if (config.type === 'humidity') {\n        return this.humidityImageUnreliableSet;\n      } else if (config.type === 'temperature') {\n        return this.tempImageUnreliableSet;\n      } else if (config.type === 'windspeed') {\n        return this.windsImageUnreliableSet;\n      }\n    }\n  }\n\n  /**\n  * Requests data for the weather station map\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getMapData(): Observable {\n    const url = BackendUrls.FILES_JSON + this.weatherMapName;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Requests data for the pads status, to know if each one is in use or not, in order to to locate an antenna\n  * @param {string} group the group\n  * @returns {Observable} observable of the data in a JSON\n  */\n  getPadsStatus(group: string): Observable {\n    const url = BackendUrls.PADS_STATUS + group;\n    return this.httpClient.get(url);\n  }\n\n  /**\n  * Loads the pads status in the related variable of this service\n  * @param {string} group the group\n  */\n  loadPadsStatus(group: string) {\n    this.getPadsStatus(group).subscribe(\n      (response) => {\n        this.padsStatusAvailable.next(false);\n        this.padsStatus = response;\n        this.padsStatusAvailable.next(true);\n    });\n  }\n\n  /**\n  * Define the IDs of the alarms that the component should listen to\n  */\n  loadWeatherStationsConfig() {\n    this.httpClient.get(BackendUrls.WEATHER_VIEW).subscribe((response) => {\n      this.weatherStationsConfig = response as AlarmConfig[];\n    });\n    this.httpClient.get(BackendUrls.WEATHER_SUMMARY).subscribe((response) => {\n      this.weatherSummaryConfig = response as AlarmConfig[];\n    });\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  loadImages() {\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'humidity-valid-clear.svg',\n      set_low: Assets.ICONS + 'humidity-valid-low.svg',\n      set_medium: Assets.ICONS + 'humidity-valid-low.svg',\n      set_high: Assets.ICONS + 'humidity-valid-critical.svg',\n      set_critical: Assets.ICONS + 'humidity-valid-critical.svg',\n      unknown: Assets.ICONS + 'humidity-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'humidity-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'humidity-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temperature-valid-clear.svg',\n      set_low: Assets.ICONS + 'temperature-valid-low.svg',\n      set_medium: Assets.ICONS + 'temperature-valid-low.svg',\n      set_high: Assets.ICONS + 'temperature-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temperature-valid-critical.svg',\n      unknown: Assets.ICONS + 'temperature-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'temperature-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'temperature-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_speed-clear-valid.svg',\n      set_low: Assets.ICONS + 'wind_speed-others-valid-low.svg',\n      set_medium: Assets.ICONS + 'wind_speed-others-valid-low.svg',\n      set_high: Assets.ICONS + 'wind_speed-critical-valid.svg',\n      set_critical: Assets.ICONS + 'wind_speed-critical-valid.svg',\n      unknown: Assets.ICONS + 'wind_speed-clear-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'wind_speed-clear-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'wind_speed-clear-valid.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'humidity-invalid-clear.svg',\n      set_low: Assets.ICONS + 'humidity-invalid-low.svg',\n      set_medium: Assets.ICONS + 'humidity-invalid-low.svg',\n      set_high: Assets.ICONS + 'humidity-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'humidity-invalid-critical.svg',\n      unknown: Assets.ICONS + 'humidity-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'humidity-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'humidity-valid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temperature-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temperature-invalid-low.svg',\n      set_medium: Assets.ICONS + 'temperature-invalid-low.svg',\n      set_high: Assets.ICONS + 'temperature-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temperature-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temperature-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'temperature-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'temperature-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_speed-clear-invalid.svg',\n      set_low: Assets.ICONS + 'wind_speed-others-invalid-low.svg',\n      set_medium: Assets.ICONS + 'wind_speed-others-invalid-low.svg',\n      set_high: Assets.ICONS + 'wind_speed-critical-invalid.svg',\n      set_critical: Assets.ICONS + 'wind_speed-critical-invalid.svg',\n      unknown: Assets.ICONS + 'wind_speed-clear-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'wind_speed-clear-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'wind_speed-clear-valid.svg',\n    });\n\n    /** Set of Marker icons */\n    this.markerImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_station-valid-clear.svg',\n      set_low: Assets.ICONS + 'weather_station-valid-low.svg',\n      set_medium: Assets.ICONS + 'weather_station-valid-low.svg',\n      set_high: Assets.ICONS + 'weather_station-valid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_station-valid-critical.svg',\n      unknown: Assets.ICONS + 'weather_station-valid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_station-valid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_station-valid-clear.svg',\n    });\n\n    /** Set of Marker Unreliable icons */\n    this.markerImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'weather_station-invalid-clear.svg',\n      set_low: Assets.ICONS + 'weather_station-invalid-low.svg',\n      set_medium: Assets.ICONS + 'weather_station-invalid-low.svg',\n      set_high: Assets.ICONS + 'weather_station-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'weather_station-invalid-critical.svg',\n      unknown: Assets.ICONS + 'weather_station-invalid-unknown.svg',\n      maintenance: Assets.ICONS + 'weather_station-invalid-maintenance.svg',\n      shelved: Assets.ICONS + 'weather_station-valid-clear.svg',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSidebarComponent.html":{"url":"components/WeatherSidebarComponent.html","title":"component - WeatherSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-sidebar/weather-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component used to display Weather Alarms in an interactive sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-sidebar\n            \n\n            \n                styleUrls\n                ./weather-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyAntennas\n                            \n                            \n                                getAntennas\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                            \n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                panelClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, clipboardService: ClipboardService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        clipboardService\n                                                  \n                                                        \n                                                                    ClipboardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to copy text to clipboard\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to notify user actions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedStation\n                    \n                \n                \n                    \n                        Type :     AlarmConfig\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:19\n                            \n                        \n                \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        panelClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:22\n                            \n                        \n                \n                    \n                        Event emitted to notify when an weather station is selected \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ncopyAntennas(stationConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Copy list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the data was copied to the clipboard, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAntennas\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAntennas(stationConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Return list of antennas associated to the given weather station\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    a list with the name of nearby antennas\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(stationConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:88\n                            \n                        \n\n\n                \n                    \n                            Indicates if the weather station is selected or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the alarm is selected or false if it is not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\nInitializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(stationConfig: AlarmConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Action performed when the weather station is clicked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        stationConfig\n                                                        \n                                                                    AlarmConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                configuration of the clicked weather station\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openSnackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenSnackBar(message: string, action: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Triggers the snackBar during 20 seconds and show the information specified\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the snackbar\n\n                                                        \n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message to show in the button of the snackbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:33\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:35\n                            \n                        \n\n                \n                    \n                        Service used to notify user actions\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-sidebar/weather-sidebar.component.ts:32\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { ClipboardService } from 'ngx-clipboard';\nimport { AlarmService } from '../../data/alarm.service';\nimport { AlarmConfig } from '../../data/alarm-config';\nimport { WeatherService } from '../weather.service';\n\n/**\n* Component used to display Weather Alarms in an interactive sidebar\n*/\n@Component({\n  selector: 'app-weather-sidebar',\n  templateUrl: './weather-sidebar.component.html',\n  styleUrls: ['./weather-sidebar.component.scss']\n})\nexport class WeatherSidebarComponent implements OnInit {\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedStation: AlarmConfig = null;\n\n  /** Event emitted to notify when an weather station is selected */\n  @Output() panelClicked = new EventEmitter();\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n  * @param {ClipboardService} clipboardService Service used to copy text to clipboard\n  * @param {MatSnackBar} snackBar Service used to notify user actions\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private clipboardService: ClipboardService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  * Initializes the {@link WeatherService} if not already initialized\n  */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n  * Copy list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {boolean} true if the data was copied to the clipboard, false if not\n  */\n  copyAntennas(stationConfig: AlarmConfig): boolean {\n    const antennas = this.getAntennas(stationConfig);\n    const result = antennas.join(',');\n    const status = this.clipboardService.copyFromContent(result);\n    let message = '';\n    if (status) {\n      message = 'Antennas copied to clipboard';\n    } else {\n      message = 'ERROR: Antennas were not copied!';\n    }\n    this.openSnackBar(message, 'Done');\n    return status;\n  }\n\n  /**\n  * Return list of antennas associated to the given weather station\n  * @param {string} station the ID of the weather station\n  * @returns {string[]} a list with the name of nearby antennas\n  */\n  getAntennas(stationConfig: AlarmConfig): string[] {\n    const response = [];\n    if ( this.weatherService.padsStatus && stationConfig.group !== '' ) {\n        const pads = this.weatherService.padsStatus[stationConfig.group];\n        for (const pad_name in pads) {\n            if (pads[pad_name]) {\n                response.push(pads[pad_name]);\n            }\n        }\n    }\n    return response.sort();\n  }\n\n  /**\n  * Indicates if the weather station is selected or not\n  * @param {AlarmConfig} stationConfig configuration of the weather station\n  * @return  {boolean} true if the alarm is selected or false if it is not\n  */\n  isSelected(stationConfig: AlarmConfig): boolean {\n    return this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark);\n  }\n\n  /**\n  * Action performed when the weather station is clicked\n  * @param {AlarmConfig} stationConfig configuration of the clicked weather station\n  */\n  onClick(stationConfig: AlarmConfig) {\n    if ( this.selectedStation && (this.selectedStation.placemark === stationConfig.placemark) ) {\n      this.selectedStation = null;\n    } else {\n      this.selectedStation = stationConfig;\n    }\n    this.panelClicked.emit(this.selectedStation);\n  }\n\n  /**\n   * Triggers the snackBar during 20 seconds and show the information specified\n   * @param {string} message Message to show in the snackbar\n   * @param {string} action Message to show in the button of the snackbar\n   */\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 5000,\n      panelClass: ['snackbar']\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    WEATHER STATIONS\n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n              \n                \n                  \n                \n              \n              \n                \n              \n            \n            \n              \n                \n                  \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n          \n             Nearby Antennas \n            \n               &nbsp;  Copy antennas \n            \n          \n          \n            \n               {{antenna}} \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./weather-sidebar.component.scss\n                \n                .weather-sidebar-card {\n  padding: 0 12px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n\n  .weather-sidebar-title {\n    padding: 12px 0;\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n  }\n\n  .weather-sidebar-content {\n    padding: 12px 0;\n    height: 100%;\n    overflow-y: auto;\n\n    .mat-expansion-panel {\n      background: transparent;\n      margin: 10px 0px;\n      border-radius: 4px;\n      box-shadow: none;\n\n        td {\n          padding: 5px;\n          height: 40px;\n\n          &.station {\n            padding-left: 0;\n            font-weight: bold;\n            height: 30px;\n            width: fit-content;\n            align: right;\n          }\n        }\n        .icon {\n          padding-left: 20px;\n          font-weight: bold;\n          height: 30px;\n          width: fit-content;\n          align: right;\n        }\n        .text {\n          padding-left: 0;\n          height: 30px;\n          width: fit-content;\n          align: right;\n        }\n        .status {\n          padding-left: 20px;\n        }\n        .buttons {\n          width: 100%;\n        }\n    }\n\n    app-weather-station-sidebar {\n      width: 100%;\n    }\n\n    .weather-sidebar-header {\n      padding-left: 0px;\n      position: relative;\n\n      &.mat-expanded {\n      }\n\n      &:hover {\n        background: transparent;\n      }\n    }\n\n    .antennas-list-line {\n      margin-bottom: 0.2rem;\n    }\n\n    .antennas-list-header {\n      height: 37.27px;\n      vertical-align: middle;\n      padding-left: 10px;\n      padding-right: 10px;\n\n      .antennas-title {\n        line-height: 40px;\n        font-weight: bold;\n      }\n\n      .copy-antennas-button {\n        padding-left: 5px;\n        padding-right: 5px;\n      }\n    }\n\n    .antennas-list {\n      max-height: 200px;\n      margin-top: 10px;\n      overflow-y: auto;\n      border-width: 1px;\n      border-style: solid;\n      border-radius: 4px;\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      WEATHER STATIONS                                                                                                                                                                                                                                                                                                                                                                                                                                                           Nearby Antennas                               Copy antennas                                                            {{antenna}}                                           '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherStationSidebarComponent.html":{"url":"components/WeatherStationSidebarComponent.html","title":"component - WeatherStationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherStationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display an item containing a weather station summary in the interactive Sidebar\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-station-sidebar\n            \n\n            \n                styleUrls\n                ./weather-station-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-station-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAlarm\n                            \n                            \n                                stationConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the configuration needed by the component\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedAlarm\n                    \n                \n                \n                    \n                        Type :     AlarmConfig\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:20\n                            \n                        \n                \n                    \n                        Selected weather station config object, null if it is nothing selected \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        stationConfig\n                    \n                \n                \n                    \n                        Type :     AlarmConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:17\n                            \n                        \n                \n                    \n                        Weather station config object \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Returns the corresponding highlighted class when the component is selected\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the highlighted class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Executed after the component is instantiated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:29\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts:28\n                            \n                        \n\n                \n                    \n                        Service used to get the configuration needed by the component\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { AlarmService } from '../../data/alarm.service';\nimport { WeatherService } from '../weather.service';\nimport { AlarmConfig } from '../../data/alarm-config';\n\n/**\n * Component to display an item containing a weather station summary in the interactive Sidebar\n */\n@Component({\n  selector: 'app-weather-station-sidebar',\n  templateUrl: './weather-station-sidebar.component.html',\n  styleUrls: ['./weather-station-sidebar.component.scss']\n})\nexport class WeatherStationSidebarComponent implements OnInit {\n\n  /** Weather station config object */\n  @Input() stationConfig: AlarmConfig;\n\n  /** Selected weather station config object, null if it is nothing selected */\n  @Input() selectedAlarm: AlarmConfig = null;\n\n  /**\n  * Builds an instance of the component\n  * @param {WeatherService} weatherService Service used to get the configuration needed by the component\n  * @param {AlarmService} alarmService Service used to get the Alarms\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n  ) { }\n\n  /**\n  * Executed after the component is instantiated.\n  */\n  ngOnInit() { }\n\n  /**\n  * Returns the corresponding highlighted class when the component is selected\n  * @returns {string} the highlighted class\n  */\n  getClass(): string {\n    if (this.selectedAlarm && (this.selectedAlarm.alarm_id === this.stationConfig.alarm_id)) {\n      return 'highlighted';\n    }\n    return '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./weather-station-sidebar.component.scss\n                \n                .weather-station-sidebar {\n    height: 60px;\n    line-height: 20px;\n    width: 100%;\n    padding-right: 50px;\n    border-radius: 4px;\n    position: absolute;\n    top:0;\n    left:0;\n\n    .weather-icons {\n      line-height: initial;\n      margin: 14px 0;\n    }\n\n    .icon {\n      padding: 0 10px;\n      width: fit-content;\n    }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherStationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                ./weather-summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmService\n                            \n                            \n                                    Public\n                                weatherService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:18\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to retrieve and handle weather configuration data\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Initiates the component, initializes the WeatherService if not already initialized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \nredirect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Redirect to the Weather View\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlarmService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:28\n                            \n                        \n\n                \n                    \n                        Service used to get the Alarms\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weatherService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WeatherService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:27\n                            \n                        \n\n                \n                    \n                        Service used to retrieve and handle weather configuration data\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RoutingService } from '../../app-routing/routing.service';\nimport { AlarmComponent } from '../../shared/alarm/alarm.component';\nimport { WeatherService } from '../weather.service';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\nimport { AlarmConfig } from '../../data/alarm-config';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.scss']\n})\nexport class WeatherSummaryComponent implements OnInit {\n\n  /**\n   * Builds an instance of the component\n   * @param {WeatherService} weatherService Service used to retrieve and handle weather configuration data\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    public weatherService: WeatherService,\n    public alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Initiates the component, initializes the {@link WeatherService} if not already initialized\n   */\n  ngOnInit() {\n    this.weatherService.initialize();\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n\n  /**\n   * Redirect to the Weather View\n   */\n  redirect() {\n    this.routing.goToWeather();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./weather-summary.component.scss\n                \n                .ias {\n\n  &.content {\n    cursor: pointer;\n  }\n\n  .container {\n    margin: 0;\n    padding: 0;\n\n    .item {\n      border-right-width: 1px;\n      border-right-style: solid;\n\n      &.no-border {\n        border: solid;\n        border-width: 0;\n      }\n\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/actions/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                ./wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDisabled\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:16\n                            \n                        \n                \n                    \n                        Url of the wiki documentation page\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Defines whether or not the button is disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the button is disabled, false if not.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/actions/wiki-button/wiki-button.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Handle click on wiki button, it opens the url in another window\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n  /**\n   * Defines whether or not the button is disabled\n   * @returns {boolean} true if the button is disabled, false if not.\n   */\n  isDisabled(): boolean {\n    return !this.url;\n  }\n\n\n  /**\n  * Handle click on wiki button, it opens the url in another window\n  */\n  onClick() {\n    if (!this.url.match(/^https?:\\/\\//i)) {\n      this.url = 'http://' + this.url;\n    }\n    window.open(this.url, '_blank');\n  }\n}\n\n    \n\n    \n        \n   -->\n  \n  \n      \n  \n  \n      \n  \n\n\n    \n\n    \n                \n                    ./wiki-button.component.css\n                \n                .wiki-button {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 1px;\n  margin: 0px 4px;\n  border-radius: 24px;\n  min-width: 1px;\n  width: 32px;\n  height: 32px;\n}\n\n.wiki-button-icon {\n  width: 18px;\n  margin: auto;\n}\n\n.mat-flat-button {\n  line-height: 28px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                      '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckComponent', 'selector': 'app-ack'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmCardComponent', 'selector': 'app-alarm-card'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AlarmHeaderComponent', 'selector': 'app-alarm-header'},{'name': 'AlarmInfoComponent', 'selector': 'app-alarm-info'},{'name': 'AlarmLabelComponent', 'selector': 'app-alarm-label'},{'name': 'AlarmTileComponent', 'selector': 'app-alarm-tile'},{'name': 'AlarmTooltipComponent', 'selector': 'app-alarm-tooltip'},{'name': 'AntennaMarkerComponent', 'selector': 'app-antenna-marker'},{'name': 'AntennasComponent', 'selector': 'app-antennas'},{'name': 'AntennasMapComponent', 'selector': 'app-antennas-map'},{'name': 'AntennasSidebarComponent', 'selector': 'app-antennas-sidebar'},{'name': 'AntennasSummaryComponent', 'selector': 'app-antennas-summary'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonsComponent', 'selector': 'app-buttons'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'MaterialButtonsColorsComponent', 'selector': 'app-material-buttons-colors'},{'name': 'MaterialCardSampleComponent', 'selector': 'app-material-sample-card'},{'name': 'MaterialColorsComponent', 'selector': 'app-material-colors'},{'name': 'MaterialSandboxComponent', 'selector': 'app-material-sandbox'},{'name': 'MaterialToggleColorsComponent', 'selector': 'app-material-toggle-colors'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'SandboxAlarmComponent', 'selector': 'app-sandbox-alarm'},{'name': 'SandboxAlarmLabelComponent', 'selector': 'app-sandbox-alarm-label'},{'name': 'SandboxAlarmTileComponent', 'selector': 'app-sandbox-alarm-tile'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveComponent', 'selector': 'app-shelve'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherBackupWsMarkerComponent', 'selector': 'app-weather-backup-ws-marker'},{'name': 'WeatherComponent', 'selector': 'app-weather'},{'name': 'WeatherDataMarkerComponent', 'selector': 'app-weather-data-marker'},{'name': 'WeatherMapComponent', 'selector': 'app-weather-map'},{'name': 'WeatherPrimaryWsConnectorComponent', 'selector': 'app-weather-primary-ws-connector'},{'name': 'WeatherPrimaryWsMarkerComponent', 'selector': 'app-weather-primary-ws-marker'},{'name': 'WeatherSidebarComponent', 'selector': 'app-weather-sidebar'},{'name': 'WeatherStationSidebarComponent', 'selector': 'app-weather-station-sidebar'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/actions/ack-button/ack-button.component.ts\n            \n            component\n            AckButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            component\n            AckTreeComponent\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            class\n            AlarmItemFlatNode\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/ack-tree.component.ts\n            \n            class\n            AlarmItemNode\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            variable\n            expectedTreeData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack-tree/fixtures.ts\n            \n            variable\n            mockAlarmData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/actions/ack/ack.component.ts\n            \n            component\n            AckComponent\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                src/app/actions/buttons/buttons.component.ts\n            \n            component\n            ButtonsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/actions/shelve-button/shelve-button.component.ts\n            \n            component\n            ShelveButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            component\n            ShelveComponent\n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                src/app/actions/shelve/shelve.component.ts\n            \n            interface\n            TimeoutOption\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/actions/sidenav.service.ts\n            \n            injectable\n            SidenavService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/actions/wiki-button/wiki-button.component.ts\n            \n            component\n            WikiButtonComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map-markers/antenna-marker/antenna-marker.component.ts\n            \n            component\n            AntennaMarkerComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-map/antennas-map.component.ts\n            \n            component\n            AntennasMapComponent\n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-sidebar/antennas-sidebar.component.ts\n            \n            component\n            AntennasSidebarComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas-summary/antennas-summary.component.ts\n            \n            component\n            AntennasSummaryComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas.service.ts\n            \n            injectable\n            AntennasService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/antennas/antennas/antennas.component.ts\n            \n            component\n            AntennasComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            variable\n            mockAlarms\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            variable\n            mockAntennasConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            variable\n            mockDevicesConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            variable\n            mockImagesSets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            variable\n            mockImagesUnreliableSets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/antennas/tests_fixtures.ts\n            \n            variable\n            mockSummaryConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app-routing/routing.service.ts\n            \n            injectable\n            RoutingService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/auth/auth-login.guard.ts\n            \n            guard\n            AuthLoginGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/data/alarm-config.ts\n            \n            class\n            AlarmConfig\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            class\n            AlarmSounds\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/data/alarm.service.ts\n            \n            injectable\n            AlarmService\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/data/alarm.ts\n            \n            class\n            Alarm\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/data/cdb.service.ts\n            \n            injectable\n            CdbService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/http-client.service.ts\n            \n            injectable\n            HttpClientService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/data/iasio.ts\n            \n            class\n            Iasio\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data/user.service.ts\n            \n            interface\n            User\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/health/health-summary/health-summary.component.ts\n            \n            component\n            HealthSummaryComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/map/fixtures.ts\n            \n            variable\n            Map\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/map/map.service.ts\n            \n            injectable\n            MapService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/map/map/map.component.ts\n            \n            component\n            MapComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            component\n            MaterialButtonsColorsComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            component\n            MaterialCardSampleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            component\n            MaterialColorsComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            component\n            MaterialSandboxComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            component\n            MaterialToggleColorsComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            component\n            SandboxAlarmComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            component\n            SandboxAlarmLabelComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/material-sandbox/material-sandbox.components.ts\n            \n            component\n            SandboxAlarmTileComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/overview/overview-card/overview-card.component.ts\n            \n            component\n            OverviewCardComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/overview/overview/overview.component.ts\n            \n            component\n            OverviewComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            variable\n            AntennasSettings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            variable\n            Assets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            variable\n            BackendUrls\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            variable\n            Locale\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            variable\n            StorageItems\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            variable\n            Streams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            variable\n            WeatherSettings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-card/alarm-card.component.ts\n            \n            component\n            AlarmCardComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-card/fixtures.ts\n            \n            variable\n            MockAlarms\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/alarm-header.component.ts\n            \n            component\n            AlarmHeaderComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-header/fixtures.ts\n            \n            variable\n            MockAlarms\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-info/alarm-info.component.ts\n            \n            component\n            AlarmInfoComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/alarm-label.component.ts\n            \n            component\n            AlarmLabelComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/fixtures.ts\n            \n            variable\n            expectedClassesWhenHiddenText\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/fixtures.ts\n            \n            variable\n            expectedClassesWhenShowText\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-label/fixtures.ts\n            \n            variable\n            MockAlarms\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/alarm-tile.component.ts\n            \n            component\n            AlarmTileComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/fixtures.ts\n            \n            variable\n            MockAlarms\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/fixtures.ts\n            \n            variable\n            MockImageSet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tile/fixtures.ts\n            \n            variable\n            MockImageUnreliableSet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm-tooltip/alarm-tooltip.component.ts\n            \n            component\n            AlarmTooltipComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            component\n            AlarmComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/alarm.component.ts\n            \n            class\n            AlarmImageSet\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            variable\n            MockAlarms\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            variable\n            MockImageSet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/alarm/fixtures.ts\n            \n            variable\n            MockImageUnreliableSet\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/status-view/status-view.component.ts\n            \n            component\n            StatusViewComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/tabular/legend/legend.component.ts\n            \n            component\n            LegendComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            variable\n            ChangedAlarm2\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            variable\n            ChangedAlarm5\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            variable\n            ExpectedFilteredTableRows\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            variable\n            ExpectedReducedTableRows\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            variable\n            ExpectedReducedTableRowsAfterChange\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            variable\n            ExpectedTableRows\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            variable\n            MockAlarms\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            variable\n            MockAlarmsToDisplay\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/fixtures.ts\n            \n            variable\n            MockIasios\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/tabular/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                100 %\n                (34/34)\n            \n        \n        \n            \n                \n                src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            component\n            TabularViewComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            variable\n            alarm_types\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            variable\n            mockAlarms\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            variable\n            mockAntennas\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            variable\n            mockImagesSets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            variable\n            mockPadsStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            variable\n            mockWeatherStationsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/test_fixtures.ts\n            \n            variable\n            mockWeatherSummaryConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-backup-ws-marker/weather-backup-ws-marker.component.ts\n            \n            component\n            WeatherBackupWsMarkerComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-data-marker/weather-data-marker.component.ts\n            \n            component\n            WeatherDataMarkerComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-connector/weather-primary-ws-connector.component.ts\n            \n            component\n            WeatherPrimaryWsConnectorComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map-markers/weather-primary-ws-marker/weather-primary-ws-marker.component.ts\n            \n            component\n            WeatherPrimaryWsMarkerComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-map/weather-map.component.ts\n            \n            component\n            WeatherMapComponent\n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                src/app/weather/weather-sidebar/weather-sidebar.component.ts\n            \n            component\n            WeatherSidebarComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/weather/weather-station-sidebar/weather-station-sidebar.component.ts\n            \n            component\n            WeatherStationSidebarComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/weather/weather-summary/weather-summary.component.ts\n            \n            component\n            WeatherSummaryComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/weather/weather.service.ts\n            \n            injectable\n            WeatherService\n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                src/app/weather/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.docker.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 7.2.3\n        \n            @angular/cdk : ^7.3.0\n        \n            @angular/common : 7.2.3\n        \n            @angular/compiler : 7.2.3\n        \n            @angular/core : 7.2.3\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : 7.2.3\n        \n            @angular/http : 7.2.3\n        \n            @angular/material : ^7.3.0\n        \n            @angular/platform-browser : 7.2.3\n        \n            @angular/platform-browser-dynamic : 7.2.3\n        \n            @angular/platform-server : 7.2.3\n        \n            @angular/router : 7.2.3\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.2\n        \n            bootstrap : ^4.2.1\n        \n            core-js : ^2.6.3\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.24.0\n        \n            ngx-clipboard : ^11.1.9\n        \n            ngx-spinner : ^7.0.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.4.0\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 malfunctioning\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AntennasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialSandboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionsModule\n\n\n\ncluster_ActionsModule_declarations\n\n\n\ncluster_ActionsModule_imports\n\n\n\ncluster_ActionsModule_exports\n\n\n\ncluster_ActionsModule_providers\n\n\n\ncluster_AntennasModule\n\n\n\ncluster_AntennasModule_declarations\n\n\n\ncluster_AntennasModule_imports\n\n\n\ncluster_AntennasModule_exports\n\n\n\ncluster_AntennasModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_declarations\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_providers\n\n\n\ncluster_MaterialSandboxModule\n\n\n\ncluster_MaterialSandboxModule_declarations\n\n\n\ncluster_MaterialSandboxModule_exports\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\ncluster_WeatherModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nActionsModule\n\nActionsModule\n\nActionsModule -->\n\nAckButtonComponent->ActionsModule\n\n\n\n\n\nAckComponent\n\nAckComponent\n\nActionsModule -->\n\nAckComponent->ActionsModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nActionsModule -->\n\nAckTreeComponent->ActionsModule\n\n\n\n\n\nButtonsComponent\n\nButtonsComponent\n\nActionsModule -->\n\nButtonsComponent->ActionsModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nActionsModule -->\n\nShelveButtonComponent->ActionsModule\n\n\n\n\n\nShelveComponent\n\nShelveComponent\n\nActionsModule -->\n\nShelveComponent->ActionsModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nActionsModule -->\n\nWikiButtonComponent->ActionsModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nActionsModule->AckButtonComponent \n\n\n\n\n\nAckComponent \n\nAckComponent \n\nAckComponent  -->\n\nActionsModule->AckComponent \n\n\n\n\n\nButtonsComponent \n\nButtonsComponent \n\nButtonsComponent  -->\n\nActionsModule->ButtonsComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nActionsModule->ShelveButtonComponent \n\n\n\n\n\nShelveComponent \n\nShelveComponent \n\nShelveComponent  -->\n\nActionsModule->ShelveComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nActionsModule->WikiButtonComponent \n\n\n\n\n\nAntennasModule\n\nAntennasModule\n\nAntennasModule -->\n\nActionsModule->AntennasModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nActionsModule->TabularModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionsModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nActionsModule->WeatherModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nActionsModule -->\n\nDataModule->ActionsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nDataModule->SharedModule\n\n\n\nAntennasModule -->\n\nDataModule->AntennasModule\n\n\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nActionsModule -->\n\nIasMaterialModule->ActionsModule\n\n\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\nAntennasModule -->\n\nIasMaterialModule->AntennasModule\n\n\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nIasMaterialModule->AppRoutingModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nIasMaterialModule->AuthModule\n\n\n\nHealthModule -->\n\nIasMaterialModule->HealthModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\nWeatherModule -->\n\nIasMaterialModule->WeatherModule\n\n\n\n\n\nMaterialSandboxModule\n\nMaterialSandboxModule\n\nMaterialSandboxModule -->\n\nIasMaterialModule->MaterialSandboxModule\n\n\n\nActionsModule -->\n\nSharedModule->ActionsModule\n\n\n\nAntennasModule -->\n\nSharedModule->AntennasModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\nMaterialSandboxModule -->\n\nSharedModule->MaterialSandboxModule\n\n\n\n\n\nAlarmCardComponent \n\nAlarmCardComponent \n\nAlarmCardComponent  -->\n\nSharedModule->AlarmCardComponent \n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nAlarmHeaderComponent \n\nAlarmHeaderComponent \n\nAlarmHeaderComponent  -->\n\nSharedModule->AlarmHeaderComponent \n\n\n\n\n\nAlarmInfoComponent \n\nAlarmInfoComponent \n\nAlarmInfoComponent  -->\n\nSharedModule->AlarmInfoComponent \n\n\n\n\n\nAlarmLabelComponent \n\nAlarmLabelComponent \n\nAlarmLabelComponent  -->\n\nSharedModule->AlarmLabelComponent \n\n\n\n\n\nAlarmTileComponent \n\nAlarmTileComponent \n\nAlarmTileComponent  -->\n\nSharedModule->AlarmTileComponent \n\n\n\n\n\nStatusViewComponent \n\nStatusViewComponent \n\nStatusViewComponent  -->\n\nSharedModule->StatusViewComponent \n\n\n\n\n\nSidenavService\n\nSidenavService\n\nActionsModule -->\n\nSidenavService->ActionsModule\n\n\n\n\n\nAntennaMarkerComponent\n\nAntennaMarkerComponent\n\nAntennasModule -->\n\nAntennaMarkerComponent->AntennasModule\n\n\n\n\n\nAntennasComponent\n\nAntennasComponent\n\nAntennasModule -->\n\nAntennasComponent->AntennasModule\n\n\n\n\n\nAntennasMapComponent\n\nAntennasMapComponent\n\nAntennasModule -->\n\nAntennasMapComponent->AntennasModule\n\n\n\n\n\nAntennasSidebarComponent\n\nAntennasSidebarComponent\n\nAntennasModule -->\n\nAntennasSidebarComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent\n\nAntennasSummaryComponent\n\nAntennasModule -->\n\nAntennasSummaryComponent->AntennasModule\n\n\n\n\n\nAntennasSummaryComponent \n\nAntennasSummaryComponent \n\nAntennasSummaryComponent  -->\n\nAntennasModule->AntennasSummaryComponent \n\n\n\nAppModule -->\n\nAntennasModule->AppModule\n\n\n\nOverviewModule -->\n\nAntennasModule->OverviewModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAntennasModule -->\n\nMapModule->AntennasModule\n\n\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\nWeatherModule -->\n\nMapModule->WeatherModule\n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nMapModule->MapComponent \n\n\n\nAntennasModule -->\n\nTabularModule->AntennasModule\n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTableComponent \n\nTableComponent \n\nTableComponent  -->\n\nTabularModule->TableComponent \n\n\n\n\n\nAntennasService\n\nAntennasService\n\nAntennasModule -->\n\nAntennasService->AntennasModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nMaterialSandboxComponent\n\nMaterialSandboxComponent\n\nAppRoutingModule -->\n\nMaterialSandboxComponent->AppRoutingModule\n\n\n\nAppRoutingModule -->\n\nMaterialSandboxModule->AppRoutingModule\n\n\n\n\n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent \n\nMaterialButtonsColorsComponent  -->\n\nMaterialSandboxModule->MaterialButtonsColorsComponent \n\n\n\n\n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent \n\nMaterialCardSampleComponent  -->\n\nMaterialSandboxModule->MaterialCardSampleComponent \n\n\n\n\n\nMaterialColorsComponent \n\nMaterialColorsComponent \n\nMaterialColorsComponent  -->\n\nMaterialSandboxModule->MaterialColorsComponent \n\n\n\n\n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent \n\nMaterialToggleColorsComponent  -->\n\nMaterialSandboxModule->MaterialToggleColorsComponent \n\n\n\n\n\nSandboxAlarmComponent \n\nSandboxAlarmComponent \n\nSandboxAlarmComponent  -->\n\nMaterialSandboxModule->SandboxAlarmComponent \n\n\n\n\n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent \n\nSandboxAlarmLabelComponent  -->\n\nMaterialSandboxModule->SandboxAlarmLabelComponent \n\n\n\n\n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent \n\nSandboxAlarmTileComponent  -->\n\nMaterialSandboxModule->SandboxAlarmTileComponent \n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppRoutingModule -->\n\nRoutingService->AppRoutingModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nUserService\n\nUserService\n\nDataModule -->\n\nUserService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nMapModule -->\n\nMapComponent->MapModule\n\n\n\n\n\nMapService\n\nMapService\n\nMapModule -->\n\nMapService->MapModule\n\n\n\n\n\nMaterialButtonsColorsComponent\n\nMaterialButtonsColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialButtonsColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialCardSampleComponent\n\nMaterialCardSampleComponent\n\nMaterialSandboxModule -->\n\nMaterialCardSampleComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialColorsComponent\n\nMaterialColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialColorsComponent->MaterialSandboxModule\n\n\n\n\n\nMaterialToggleColorsComponent\n\nMaterialToggleColorsComponent\n\nMaterialSandboxModule -->\n\nMaterialToggleColorsComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmComponent\n\nSandboxAlarmComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmLabelComponent\n\nSandboxAlarmLabelComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmLabelComponent->MaterialSandboxModule\n\n\n\n\n\nSandboxAlarmTileComponent\n\nSandboxAlarmTileComponent\n\nMaterialSandboxModule -->\n\nSandboxAlarmTileComponent->MaterialSandboxModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAlarmCardComponent\n\nAlarmCardComponent\n\nSharedModule -->\n\nAlarmCardComponent->SharedModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nAlarmHeaderComponent\n\nAlarmHeaderComponent\n\nSharedModule -->\n\nAlarmHeaderComponent->SharedModule\n\n\n\n\n\nAlarmInfoComponent\n\nAlarmInfoComponent\n\nSharedModule -->\n\nAlarmInfoComponent->SharedModule\n\n\n\n\n\nAlarmLabelComponent\n\nAlarmLabelComponent\n\nSharedModule -->\n\nAlarmLabelComponent->SharedModule\n\n\n\n\n\nAlarmTileComponent\n\nAlarmTileComponent\n\nSharedModule -->\n\nAlarmTileComponent->SharedModule\n\n\n\n\n\nAlarmTooltipComponent\n\nAlarmTooltipComponent\n\nSharedModule -->\n\nAlarmTooltipComponent->SharedModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nSharedModule -->\n\nStatusViewComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTabularModule -->\n\nTableComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherBackupWsMarkerComponent\n\nWeatherBackupWsMarkerComponent\n\nWeatherModule -->\n\nWeatherBackupWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nWeatherModule -->\n\nWeatherComponent->WeatherModule\n\n\n\n\n\nWeatherDataMarkerComponent\n\nWeatherDataMarkerComponent\n\nWeatherModule -->\n\nWeatherDataMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherMapComponent\n\nWeatherMapComponent\n\nWeatherModule -->\n\nWeatherMapComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherPrimaryWsConnectorComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsConnectorComponent->WeatherModule\n\n\n\n\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherPrimaryWsMarkerComponent\n\nWeatherModule -->\n\nWeatherPrimaryWsMarkerComponent->WeatherModule\n\n\n\n\n\nWeatherSidebarComponent\n\nWeatherSidebarComponent\n\nWeatherModule -->\n\nWeatherSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherStationSidebarComponent\n\nWeatherStationSidebarComponent\n\nWeatherModule -->\n\nWeatherStationSidebarComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherService\n\nWeatherService\n\nWeatherModule -->\n\nWeatherService->WeatherModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    46 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
