var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.036,1,0.815]],["body/components/AckButtonComponent.html",[0,0.069,1,1.355,2,0.236,3,0.175,4,0.988,5,1.055,6,0.924,7,0.146,8,3.857,9,4.725,10,2.243,11,0.323,12,1.735,13,1.105,14,3.421,15,2.917,16,3.07,17,3.021,18,4.069,19,1.183,20,1.348,21,1.055,22,1.753,23,1.53,24,1.294,25,1.183,26,3.419,27,1.183,28,3.419,29,0.405,30,1.106,31,2.163,32,0.992,33,1.881,34,5.634,35,1.099,36,5.152,37,1.45,38,3.886,39,2.504,40,3.898,41,1.022,42,1.87,43,1.95,44,5.275,45,4.764,46,0.778,47,4.596,48,1.351,49,1.624,50,1.106,51,0.027,52,0.809,53,0.882,54,1.106,55,1.657,56,1.676,57,2.49,58,2.281,59,2.791,60,0.963,61,2.84,62,3.358,63,2.023,64,2.893,65,2.49,66,2.893,67,0.877,68,1.032,69,3.358,70,3.419,71,3.886,72,3.358,73,2.559,74,3.419,75,1.766,76,3.07,77,2.84,78,1.597,79,0.924,80,1.766,81,4.596,82,0.528,83,0.3,84,1.724,85,1.87,86,1.128,87,1.106,88,2.243,89,2.498,90,1.383,91,1.128,92,0.205,93,0.012,94,0.963,95,2.84,96,2.186,97,2.84,98,3.358,99,3.358,100,1.055,101,4.596,102,3.358,103,2.84,104,2.84,105,2.84,106,1.055,107,3.358,108,0.609,109,1.444,110,1.444,111,1.351,112,1.77,113,1.055,114,1.444,115,1.444,116,0.754,117,1.055,118,0.754,119,1.055,120,0.808,121,1.055,122,0.808,123,0.988,124,1.444,125,0.808,126,1.055,127,0.808,128,0.808,129,1.055,130,0.754,131,1.055,132,0.808,133,0.963,134,0.808,135,0.754,136,0.754,137,1.444,138,0.704,139,0.924,140,0.808,141,0.988,142,0.808,143,0.988,144,1.055,145,0.017,146,0.017]],["title/components/AckModalComponent.html",[0,0.036,87,0.815]],["body/components/AckModalComponent.html",[0,0.064,1,0.578,2,0.169,3,0.125,4,0.707,5,0.755,6,0.662,7,0.105,8,3.922,11,0.396,12,1.277,13,1.098,15,2.012,17,3.22,18,3.633,19,0.93,20,1.118,21,0.755,22,1.673,23,1.461,24,1.289,25,0.93,27,0.93,29,0.29,30,0.869,31,1.622,32,0.992,33,1.953,35,1.215,37,1.243,39,2.231,41,0.656,43,1.851,46,0.774,49,1.598,50,1.045,51,0.027,52,0.743,53,0.915,54,1.045,55,1.707,56,0.994,59,2.933,60,1.217,63,1.734,67,1.005,68,1.381,73,2.012,78,1.719,79,1.195,82,0.505,83,0.215,84,1.235,85,1.339,86,0.807,87,1.162,88,4.314,90,0.99,91,0.807,92,0.147,93,0.009,94,1.14,96,1.144,100,1.518,108,0.436,109,1.136,110,1.136,111,1.063,112,1.518,113,0.755,114,1.136,115,1.136,116,0.54,117,0.755,118,0.54,119,0.755,120,0.578,121,0.755,122,0.578,123,0.707,124,1.136,125,0.578,126,0.755,127,0.578,128,0.578,129,0.755,130,0.54,131,0.755,132,0.578,133,0.757,134,0.578,135,0.54,136,0.54,137,1.136,138,0.504,139,0.662,140,0.578,141,0.707,142,0.578,143,1.063,144,0.755,145,0.013,146,0.013,147,1.788,148,2.404,149,3.056,150,3.056,151,4.772,152,4.83,153,3.86,154,4.83,155,4.83,156,3.614,157,4.83,158,4.047,159,4.084,160,4.83,161,3.614,162,2.033,163,4.6,164,5.023,165,2.783,166,4.379,167,4.084,168,3.614,169,0.994,170,2.637,171,3.673,172,2.324,173,2.933,174,2.793,175,2.414,176,1.598,177,2.231,178,2.689,179,2.418,180,2.195,181,3.466,182,2.033,183,2.404,184,3.233,185,2.325,186,0.869,187,2.404,188,3.459,189,3.614,190,2.404,191,2.588,192,2.195,193,2.689,194,3.056,195,3.056,196,2.414,197,3.056,198,2.033,199,2.414,200,0.99,201,2.404,202,2.404,203,3.056,204,1.214,205,1.389,206,2.404,207,1.719,208,5.023,209,2.689,210,2.404,211,1.298,212,2.297,213,3.226,214,3.614,215,2.404,216,2.012,217,3.593,218,2.404,219,2.033,220,3.056,221,4.084,222,2.404,223,3.459,224,3.614,225,2.033,226,1.46,227,1.46,228,1.606,229,2.033,230,2.033,231,2.033,232,1.144,233,2.033,234,2.404,235,2.404,236,2.033,237,2.033,238,3.056,239,3.673,240,3.614,241,2.033,242,3.056,243,3.614,244,4.084,245,3.633,246,3.056,247,3.614,248,2.033,249,2.033,250,3.614,251,2.404,252,1.856,253,3.614,254,2.404,255,2.404,256,2.414,257,2.404,258,4.83,259,2.404,260,3.593,261,0.99,262,2.404,263,2.404,264,3.056,265,1.606,266,2.012,267,2.033,268,2.012,269,3.056,270,2.689,271,3.614,272,3.056]],["title/classes/Alarm.html",[32,0.487,93,0.012]],["body/classes/Alarm.html",[2,0.168,3,0.125,7,0.104,11,0.339,13,0.875,17,3.048,24,1.06,29,0.289,30,0.868,32,1.006,35,1.06,41,0.435,46,0.81,49,1.817,50,1.043,51,0.027,52,0.622,53,1.059,54,1.043,56,1.817,58,1.732,60,1.439,64,1.852,65,1.06,67,1.092,79,1.776,80,1.386,92,0.295,93,0.021,94,1.139,100,1.996,106,1.515,133,1.39,136,1.427,145,0.013,146,0.013,172,2.639,185,1.853,186,1.396,196,1.601,200,2.692,207,2.682,211,1.295,212,2.294,223,3.629,232,1.14,252,1.987,256,1.601,261,2.13,268,2.879,273,1.783,274,3.3,275,4.906,276,3.195,277,4.595,278,4.767,279,4.595,280,3.607,281,4.823,282,4.823,283,4.823,284,4.823,285,4.823,286,3.607,287,4.042,288,2.409,289,3.607,290,1.133,291,1.331,292,1.557,293,3.778,294,1.852,295,0.928,296,2.397,297,2.397,298,3.588,299,1.951,300,3.3,301,2.397,302,3.523,303,2.008,304,3.607,305,2.294,306,2.397,307,2.397,308,2.683,309,2.397,310,2.397,311,2.132,312,1.986,313,2.397,314,2.397,315,2.19,316,1.785,317,1.386,318,2.397,319,3.607,320,2.397,321,2.683,322,2.294,323,2.409,324,2.397,325,4.098,326,5.654,327,3.141,328,2.397,329,2.397,330,2.19,331,2.397,332,2.397,333,3.607,334,2.397,335,2.19,336,2.397,337,2.397,338,1.601,339,2.027,340,2.397,341,4.336,342,4.336,343,2.027,344,2.008,345,2.027,346,2.409,347,1.06,348,2.008,349,1.456,350,2.027,351,1.601,352,1.06,353,1.601,354,3.05,355,1.06,356,1.601,357,1.231,358,1.231,359,1.231,360,1.231,361,1.601,362,2.397,363,2.397,364,2.397,365,2.397,366,2.397,367,2.397,368,2.397,369,2.397,370,2.397,371,2.397,372,2.027,373,2.027,374,1.601,375,2.397,376,2.397,377,2.397,378,2.397,379,2.397,380,2.397,381,2.397,382,2.397,383,2.397,384,2.397,385,2.397,386,2.397,387,3.607,388,2.397,389,3.607,390,3.607,391,3.05,392,2.397,393,2.397,394,2.397,395,2.397,396,2.397,397,2.397,398,4.078]],["title/components/AlarmComponent.html",[0,0.036,118,0.761]],["body/components/AlarmComponent.html",[0,0.07,1,0.796,2,0.232,3,0.173,4,0.973,5,1.04,6,0.911,7,0.144,11,0.232,12,0.973,13,1.216,19,1.171,20,1.338,21,1.04,22,1.75,23,1.527,24,1.015,25,1.171,27,1.171,29,0.4,32,0.993,33,2.273,35,0.888,37,1.441,39,2.331,41,0.943,46,0.732,51,0.027,52,0.871,53,0.875,56,1.615,57,2.011,60,1.362,63,1.189,65,2.011,67,1.037,68,0.744,79,1.767,82,0.407,83,0.296,87,0.796,91,1.112,92,0.278,93,0.019,94,0.694,96,1.574,106,1.04,108,0.6,109,1.43,110,1.43,111,1.338,112,1.759,113,1.04,114,1.43,115,1.43,116,0.744,117,1.04,118,1.258,119,1.04,120,0.796,121,1.04,122,0.796,123,0.973,124,1.43,125,0.796,126,1.04,127,0.796,128,0.796,129,1.04,130,0.744,131,1.04,132,0.796,133,1.173,134,0.796,135,0.744,136,1.168,137,1.43,138,0.694,139,0.911,140,0.796,141,0.973,142,0.796,143,0.973,144,1.04,145,0.017,146,0.017,169,1.252,186,1.095,204,2.204,211,1.189,252,1.272,288,2.211,290,1.04,291,0.852,292,1.189,293,3.158,294,1.7,295,0.852,305,1.574,312,1.874,315,2.763,316,1.874,317,2.152,347,2.011,352,2.011,355,2.011,357,2.337,358,2.337,359,2.337,360,2.337,361,2.211,399,2.462,400,3.848,401,2.533,402,2.299,403,3.158,404,3.848,405,3.848,406,4.735,407,5.77,408,4.397,409,4.55,410,2.533,411,3.31,412,3.115,413,3.31,414,3.31,415,3.385,416,3.31,417,3.039,418,2.462,419,2.799,420,2.799,421,3.848,422,2.799,423,2.799,424,2.799,425,2.211,426,2.799,427,4.397,428,2.799,429,2.799,430,2.799,431,2.799,432,2.799,433,4.964,434,2.799,435,2.799,436,2.799,437,2.799,438,2.799,439,2.799,440,2.799,441,2.799,442,2.799,443,2.799]],["title/classes/AlarmImageSet.html",[93,0.012,412,1.741]],["body/classes/AlarmImageSet.html",[0,0.064,2,0.235,3,0.175,7,0.146,11,0.322,13,1.244,19,0.863,20,1.181,22,0.863,23,0.753,25,0.863,27,0.863,29,0.405,30,1.104,32,0.998,33,2.492,37,0.863,39,2.164,41,0.833,46,0.778,50,0.807,51,0.027,52,0.752,53,1.084,54,0.807,56,1.716,57,1.482,60,1.457,63,1.648,65,1.482,67,1.014,79,1.873,82,0.411,83,0.3,91,1.126,92,0.28,93,0.021,94,0.703,96,1.595,106,1.054,118,0.753,133,1.276,136,0.753,145,0.017,146,0.017,169,0.923,186,0.807,204,2.302,211,1.648,252,1.288,288,3.066,290,1.442,291,1.181,292,1.648,293,3.581,294,2.357,295,1.181,305,1.595,312,1.381,315,2.036,316,2.508,317,1.764,347,2.692,352,2.692,355,1.482,357,3.127,358,3.127,359,3.127,360,3.127,361,2.239,399,2.494,400,2.835,401,1.867,402,2.314,403,3.179,404,2.835,405,2.835,406,2.835,407,5.843,408,2.835,410,1.867,412,3.127,415,2.494,417,2.239,418,3.415,419,3.882,420,2.835,421,3.882,422,2.835,423,2.835,424,2.835,425,2.239,426,2.835,427,4.427,428,2.835,429,2.835,430,2.835,431,2.835,432,2.835,433,4.987,434,2.835,435,2.835,436,2.835,437,2.835,438,2.835,439,2.835,440,2.835,441,2.835,442,2.835,443,2.835,444,4.591,445,3.353,446,3.353,447,3.353,448,3.353,449,3.353,450,3.353,451,3.353]],["title/classes/AlarmItemFlatNode.html",[93,0.012,452,2.264]],["body/classes/AlarmItemFlatNode.html",[0,0.058,2,0.177,3,0.195,6,1.779,7,0.163,8,3.003,11,0.177,13,0.81,17,1.199,19,0.649,20,0.964,22,0.649,23,0.566,24,1.031,25,0.649,27,0.649,29,0.304,30,0.901,32,0.912,37,0.649,39,1.439,43,1.554,46,0.539,48,0.741,51,0.027,52,0.641,53,0.832,55,0.741,56,1.523,57,1.115,58,1.345,60,1.107,67,1.025,68,0.841,79,1.361,80,2.312,82,0.527,83,0.335,90,1.038,91,0.847,92,0.273,93,0.018,94,1.283,100,1.997,106,1.85,116,0.566,145,0.021,146,0.014,169,0.694,173,2.274,174,1.295,176,1.975,181,3.538,185,2.128,186,1.075,191,1.199,200,2.59,205,0.969,207,2.912,209,4.119,211,0.905,212,2.634,216,2.085,217,1.876,232,2.125,252,1.439,261,1.038,290,1.177,291,1.548,294,1.295,308,2.786,322,2.513,323,2.984,327,1.531,452,4.348,453,3.303,454,1.876,455,4.682,456,4.555,457,5.96,458,4.555,459,5.624,460,2.521,461,2.521,462,2.521,463,3.778,464,3.167,465,2.132,466,1.876,467,3.167,468,2.132,469,3.167,470,3.167,471,1.876,472,2.132,473,2.352,474,1.295,475,1.199,476,3.829,477,2.132,478,3.003,479,3.303,480,2.132,481,2.132,482,2.132,483,2.132,484,2.534,485,2.132,486,2.132,487,3.829,488,4.182,489,2.786,490,1.876,491,1.684,492,2.132,493,3.778,494,2.132,495,1.876,496,2.132,497,2.132,498,2.132,499,2.132,500,2.132,501,2.132,502,2.132,503,2.132,504,1.876,505,2.132,506,2.132,507,2.132,508,2.132,509,1.684,510,3.167,511,2.132,512,2.132,513,3.167,514,2.132,515,2.132,516,2.132,517,1.876,518,2.132,519,2.132,520,2.132,521,1.684,522,1.876,523,2.132,524,3.167,525,1.531,526,2.132,527,2.132,528,3.003,529,2.132,530,2.132,531,2.132,532,2.132,533,2.132,534,2.786,535,3.167,536,2.132,537,2.786,538,2.132,539,2.132,540,2.132,541,1.531,542,1.876,543,1.684,544,1.876,545,3.167,546,2.132,547,3.167,548,2.132,549,2.132,550,1.876,551,3.167,552,2.132,553,3.778,554,4.468,555,2.132,556,4.182,557,1.876,558,2.132,559,3.167,560,2.132,561,2.132,562,3.167,563,2.132,564,1.876,565,4.98,566,2.132,567,3.167,568,2.132,569,2.132,570,2.132,571,3.167,572,2.132,573,2.132,574,2.786,575,5.177,576,2.132,577,4.182,578,2.132,579,3.778,580,1.876,581,2.132,582,3.167,583,3.167,584,2.132,585,2.132,586,2.132,587,1.531,588,2.132,589,2.132,590,2.132,591,2.132,592,2.132,593,2.132,594,2.132,595,2.132,596,2.132,597,2.132,598,2.132,599,2.132]],["title/classes/AlarmItemNode.html",[93,0.012,476,2.264]],["body/classes/AlarmItemNode.html",[0,0.058,2,0.179,3,0.197,6,1.782,7,0.164,8,2.73,11,0.179,13,0.815,17,1.212,19,0.656,20,0.971,22,0.656,23,0.572,24,1.036,25,0.656,27,0.656,29,0.308,30,0.908,32,0.922,37,0.656,39,1.45,43,1.561,46,0.456,48,0.749,51,0.027,52,0.645,53,0.756,55,0.749,56,1.529,57,1.126,58,1.355,60,1.112,67,1.027,68,0.848,79,1.368,80,2.27,82,0.528,83,0.338,90,1.049,91,0.856,92,0.275,93,0.018,94,1.286,100,2.001,106,1.807,116,0.572,145,0.021,146,0.014,169,0.701,173,2.292,174,1.308,176,1.668,181,3.546,185,2.21,186,1.081,191,1.212,200,2.528,205,0.979,207,2.81,209,4.566,211,0.915,212,2.644,216,2.101,217,1.895,232,2.138,252,1.45,261,1.049,290,1.186,291,1.553,294,1.308,308,2.808,322,2.524,323,3.003,327,1.547,452,4.326,453,3.003,454,1.895,455,4.488,456,4.566,457,5.96,458,3.948,459,5.476,463,3.802,464,3.192,465,2.154,466,1.895,467,3.192,468,2.154,469,3.192,470,3.192,471,1.895,472,2.154,473,2.364,474,1.308,475,1.212,476,4.1,477,2.154,478,3.018,479,3.32,480,2.154,481,2.154,482,2.154,483,2.154,484,2.543,485,2.154,486,2.154,487,3.842,488,4.203,489,2.808,490,1.895,491,1.702,492,2.154,493,3.802,494,2.154,495,1.895,496,2.154,497,2.154,498,2.154,499,2.154,500,2.154,501,2.154,502,2.154,503,2.154,504,1.895,505,2.154,506,2.154,507,2.154,508,2.154,509,1.702,510,3.192,511,2.154,512,2.154,513,3.192,514,2.154,515,2.154,516,2.154,517,1.895,518,2.154,519,2.154,520,2.154,521,1.702,522,1.895,523,2.154,524,3.192,525,1.547,526,2.154,527,2.154,528,3.018,529,2.154,530,2.154,531,2.154,532,2.154,533,2.154,534,2.808,535,3.192,536,2.154,537,2.808,538,2.154,539,2.154,540,2.154,541,1.547,542,1.895,543,1.702,544,1.895,545,3.192,546,2.154,547,3.192,548,2.154,549,2.154,550,1.895,551,3.192,552,2.154,553,3.802,554,4.488,555,2.154,556,4.203,557,1.895,558,2.154,559,3.192,560,2.154,561,2.154,562,3.192,563,2.154,564,1.895,565,4.995,566,2.154,567,3.192,568,2.154,569,2.154,570,2.154,571,3.192,572,2.154,573,2.154,574,2.808,575,5.19,576,2.154,577,4.203,578,2.154,579,3.802,580,1.895,581,2.154,582,3.192,583,3.192,584,2.154,585,2.154,586,2.154,587,1.547,588,2.154,589,2.154,590,2.154,591,2.154,592,2.154,593,2.154,594,2.154,595,2.154,596,2.154,597,2.154,598,2.154,599,2.154,600,2.548,601,2.548]],["title/injectables/AlarmService.html",[43,0.997,48,0.997]],["body/injectables/AlarmService.html",[2,0.139,3,0.103,7,0.086,11,0.403,13,0.913,15,1.735,16,1.324,17,2.506,24,0.608,29,0.465,30,0.75,31,1.593,32,1.006,33,2.138,35,1.065,40,3.919,41,0.565,43,0.916,46,0.78,48,1.132,49,1.201,50,1.382,51,0.027,52,0.806,53,0.886,54,1.382,55,1.817,56,1.611,58,1.892,60,0.914,63,1.567,64,3.057,65,2.097,67,1.052,68,1.261,73,1.735,78,2.256,79,1.638,80,0.762,82,0.514,83,0.177,91,0.666,92,0.121,93,0.007,94,1.281,96,0.943,100,1.976,133,1.281,136,0.98,145,0.012,146,0.012,153,1.892,165,2.412,169,0.857,172,2.247,173,1.892,174,3.007,175,2.081,176,2.226,180,1.204,181,1.735,184,3.198,185,2.349,186,0.75,188,4.166,191,2.595,192,1.892,204,0.666,207,1.831,208,2.635,211,1.382,212,2.256,213,2.572,216,3.26,223,4.589,228,1.324,261,1.585,274,3.615,291,1.478,294,2.882,299,1.119,300,2.881,302,3.313,303,2.144,305,0.943,311,2.226,312,1.797,317,1.48,322,2.076,330,3.488,335,1.892,349,1.204,374,2.081,473,0.943,474,1.018,475,0.943,484,1.702,487,3.168,491,2.081,521,2.915,525,1.892,541,2.65,602,1.676,603,5.429,604,3.746,605,4.857,606,4.364,607,4.364,608,4.364,609,5.953,610,3.116,611,3.116,612,4.364,613,4.364,614,3.116,615,3.116,616,3.116,617,3.116,618,4.364,619,4.364,620,3.116,621,4.364,622,1.983,623,2.882,624,3.116,625,3.556,626,3.116,627,1.983,628,5.456,629,3.116,630,1.983,631,1.983,632,2.318,633,5.036,634,3.116,635,3.116,636,3.116,637,1.983,638,2.915,639,3.69,640,3.116,641,1.983,642,1.983,643,3.116,644,3.116,645,1.983,646,3.116,647,2.635,648,3.69,649,1.983,650,3.116,651,4.364,652,1.983,653,3.246,654,3.116,655,1.983,656,2.635,657,3.256,658,3.116,659,1.983,660,1.983,661,3.746,662,1.983,663,2.318,664,3.116,665,1.983,666,1.983,667,3.116,668,1.983,669,3.529,670,2.635,671,1.983,672,2.318,673,1.983,674,3.85,675,1.983,676,4.011,677,4.011,678,1.676,679,1.983,680,1.983,681,1.204,682,1.676,683,1.475,684,1.475,685,1.983,686,1.983,687,1.983,688,1.676,689,1.983,690,1.983,691,1.983,692,3.116,693,1.983,694,1.983,695,1.983,696,4.364,697,3.116,698,1.983,699,3.116,700,1.983,701,1.983,702,1.983,703,1.983,704,1.983,705,1.983,706,3.116,707,1.983,708,1.983,709,1.983,710,1.983,711,1.983,712,1.983,713,3.85,714,3.116,715,1.983,716,1.983,717,1.983,718,1.983,719,3.116,720,1.983,721,1.983,722,1.676,723,1.983,724,1.983,725,1.983,726,1.983,727,3.116,728,3.85,729,1.983,730,3.116,731,1.983,732,1.983,733,1.983,734,1.983,735,3.116,736,1.983,737,1.676,738,1.676,739,3.85,740,3.116,741,1.676,742,1.676,743,1.676,744,1.983,745,1.983,746,1.676,747,1.676,748,1.676,749,3.116,750,1.983,751,1.983,752,3.116,753,3.85,754,1.983,755,1.983,756,1.983,757,1.983,758,1.983,759,1.324,760,1.983]],["title/components/AppComponent.html",[0,0.036,120,0.815]],["body/components/AppComponent.html",[0,0.069,1,0.886,2,0.259,3,0.192,4,1.083,5,1.158,6,1.014,7,0.16,11,0.344,12,1.083,13,0.887,19,1.259,20,1.413,21,1.158,22,1.771,23,1.546,24,1.072,25,1.259,27,1.259,29,0.445,30,1.177,31,1.237,32,0.899,35,0.955,37,1.506,41,0.887,42,2.051,43,1.95,46,0.756,49,1.676,50,0.886,51,0.027,52,0.788,53,0.924,54,0.886,55,1.72,60,1.025,66,2.512,67,0.911,68,0.828,75,1.88,78,2.612,79,1.676,82,0.437,83,0.329,87,0.886,90,1.517,92,0.225,93,0.013,94,0.772,106,1.537,108,0.668,109,1.537,110,1.537,111,1.438,112,1.838,113,1.158,114,1.537,115,1.537,116,0.828,117,1.158,118,0.828,119,1.158,120,1.408,121,1.158,122,0.886,123,1.083,124,1.537,125,0.886,126,1.158,127,0.886,128,1.465,129,1.158,130,0.828,131,1.158,132,0.886,133,1.025,134,0.886,135,0.828,136,0.828,137,1.537,138,0.772,139,1.511,140,0.886,141,1.083,142,0.886,143,1.083,144,1.158,145,0.018,146,0.018,169,1.61,185,1.88,200,2.262,312,2.014,401,3.258,458,3.639,587,2.971,761,3.115,762,4.657,763,4.181,764,4.137,765,4.892,766,4.892,767,6.26,768,5.851,769,6.631,770,5.851,771,3.684,772,3.684,773,3.684,774,4.892,775,5.851,776,5.851,777,3.684,778,4.892,779,3.684,780,5.851,781,5.851,782,3.553,783,3.684,784,3.684,785,5.492,786,4.892,787,4.892]],["title/modules/AppModule.html",[788,0.761,789,2.264]],["body/modules/AppModule.html",[0,0.06,2,0.282,3,0.209,7,0.175,51,0.027,82,0.628,83,0.359,84,2.059,85,2.232,86,2.03,92,0.349,93,0.015,100,1.26,108,0.727,120,1.639,128,1.244,130,1.161,138,1.199,139,1.103,145,0.019,146,0.019,177,2.199,179,2.232,186,0.964,226,2.435,227,2.435,299,1.44,763,3.453,788,1.286,789,4.679,790,2.53,791,3.39,792,3.39,793,3.39,794,3.39,795,3.048,796,3.567,797,3.048,798,3.891,799,2.832,800,3.891,801,3.567,802,2.459,803,1.907,804,1.772,805,4.009,806,5.17,807,2.459,808,5.17,809,4.372,810,2.678,811,2.459,812,5.723,813,4.372,814,3.39,815,4.009,816,3.475,817,2.678,818,3.846,819,4.009,820,4.372,821,4.372,822,4.372,823,5.17,824,4.009,825,2.435,826,2.678,827,2.678,828,3.39,829,4.009,830,2.435,831,4.009,832,3.39,833,4.009,834,4.009,835,2.678,836,3.39,837,4.009,838,4.009,839,5.112,840,4.009,841,4.009,842,4.009,843,4.009,844,4.009,845,4.009,846,4.009]],["title/injectables/CdbService.html",[48,0.997,165,1.498]],["body/injectables/CdbService.html",[0,0.045,2,0.215,3,0.16,7,0.134,11,0.416,13,0.783,14,2.621,29,0.37,30,1.038,31,1.03,32,0.929,33,1.793,35,0.842,41,0.783,46,0.795,48,1.468,49,1.374,50,1.374,51,0.027,52,0.717,53,1.045,54,1.201,55,1.827,58,1.55,60,1.397,63,1.55,65,2.395,66,2.782,67,1.056,78,2.716,79,1.674,82,0.544,83,0.274,92,0.187,93,0.011,94,0.904,100,1.356,145,0.016,146,0.016,158,3.21,165,1.908,169,1.187,174,3.442,176,2.746,181,2.403,184,2.403,188,2.882,192,2.621,204,2.149,205,2.082,291,1.285,295,1.111,298,2.282,299,2.482,300,1.862,302,2.621,303,2.403,311,2.395,322,1.459,325,1.862,330,2.621,374,2.882,473,1.459,474,1.575,475,1.459,484,2.887,487,2.049,604,4.93,623,3.19,625,3.29,670,3.649,672,3.21,678,2.594,681,1.862,682,2.594,684,2.282,737,5.008,738,5.008,747,4.582,748,4.582,782,1.862,847,2.594,848,5.522,849,5.418,850,5.418,851,4.582,852,5.418,853,5.418,854,5.418,855,5.418,856,4.316,857,5.418,858,5.418,859,3.067,860,4.316,861,4.316,862,3.067,863,2.882,864,4.07,865,5.71,866,3.067,867,4.316,868,3.067,869,3.067,870,3.067,871,4.316,872,4.316,873,3.067,874,3.649,875,3.067,876,2.782,877,3.067,878,3.649,879,4.316,880,4.316,881,3.067,882,2.216,883,5.418,884,3.067,885,3.067,886,3.067,887,4.316,888,3.067,889,3.067,890,3.067,891,2.282,892,3.067,893,3.067,894,3.067,895,3.067,896,3.067,897,4.316,898,3.067,899,3.067,900,3.067,901,3.067,902,3.067,903,3.067,904,3.067,905,3.067,906,3.067,907,3.067,908,3.067,909,3.067,910,4.316,911,3.067,912,3.067]],["title/modules/DataModule.html",[788,0.761,795,1.612]],["body/modules/DataModule.html",[2,0.338,3,0.251,7,0.209,11,0.338,43,1.972,51,0.027,55,1.703,82,0.606,83,0.43,86,1.615,92,0.354,93,0.017,108,0.873,145,0.021,146,0.021,165,2.964,177,2.388,186,1.157,295,1.491,418,4.309,484,2.56,623,3.443,625,2.921,684,3.579,788,1.449,790,2.56,795,3.32,802,2.755,803,2.288,804,2.127,807,2.288,811,2.755,913,4.068,914,4.068,915,3.443,916,4.811,917,3.225,918,4.811,919,4.811,920,4.811]],["title/classes/DisplayedAlarm.html",[93,0.012,921,2.264]],["body/classes/DisplayedAlarm.html",[2,0.312,3,0.13,7,0.109,11,0.467,24,1.238,29,0.302,30,0.895,31,2.016,32,1.017,35,0.726,41,0.453,46,0.798,49,1.874,50,1.266,51,0.027,52,0.821,53,0.962,54,1.266,60,1.479,67,1.089,68,0.998,75,1.708,79,1.651,80,1.892,82,0.223,92,0.153,93,0.018,94,1.198,100,1.734,106,0.785,133,1.156,135,1.106,136,1.438,145,0.014,146,0.014,170,3.567,172,2.585,176,1.644,184,2.741,200,2.354,204,2.197,205,2.121,207,1.769,220,3.146,252,0.96,268,2.071,274,2.259,276,2.528,290,1.169,291,0.957,292,2.109,302,3.197,305,1.188,311,1.964,316,1.532,317,2.196,325,2.699,326,4.967,330,2.699,338,1.669,339,2.113,348,1.391,356,2.968,402,2.908,403,3.197,410,3.27,557,1.859,722,3.146,863,3.686,876,1.91,882,2.282,921,2.485,922,5.563,923,2.113,924,4.923,925,4.923,926,4.923,927,4.444,928,5.519,929,4.923,930,3.72,931,3.72,932,2.499,933,3.72,934,2.499,935,2.499,936,6.2,937,2.499,938,3.146,939,3.146,940,3.72,941,5.365,942,2.499,943,4.967,944,3.662,945,2.499,946,2.499,947,2.499,948,2.499,949,2.499,950,2.499,951,2.499,952,2.499,953,2.499,954,2.499,955,2.499,956,2.499,957,2.499,958,2.499,959,2.499,960,2.499,961,2.499,962,2.499,963,2.499,964,2.499,965,3.72,966,2.767,967,4.923,968,4.444,969,4.444,970,2.499,971,2.499,972,2.499,973,2.499,974,2.499,975,2.499,976,4.923,977,2.499,978,2.499,979,2.499,980,2.499,981,2.499,982,2.499,983,2.499,984,2.499,985,2.499,986,2.499,987,2.499,988,3.72,989,2.499,990,2.499,991,2.499,992,2.499,993,2.499,994,2.499,995,2.499,996,2.499,997,2.499,998,2.113,999,2.113,1000,2.113,1001,2.113,1002,4.923,1003,2.113,1004,2.113,1005,2.499,1006,2.499,1007,2.499,1008,2.499]],["title/modules/HealthModule.html",[788,0.761,796,1.887]],["body/modules/HealthModule.html",[0,0.061,2,0.337,3,0.25,7,0.209,11,0.337,51,0.027,82,0.606,83,0.429,86,1.61,92,0.393,93,0.017,108,0.87,122,1.678,123,1.825,145,0.021,146,0.021,177,1.842,186,1.153,295,1.488,299,2.076,410,3.218,788,1.447,790,2.743,795,3.187,796,3.87,799,2.961,802,2.749,803,2.28,804,2.119,807,2.28,811,2.749,827,3.202,830,2.911,917,3.218,1009,4.054,1010,4.054,1011,4.794,1012,4.054,1013,4.794,1014,3.566,1015,4.054]],["title/components/HealthSummaryComponent.html",[0,0.036,122,0.815]],["body/components/HealthSummaryComponent.html",[0,0.068,1,0.704,2,0.206,3,0.153,4,0.861,5,0.92,6,0.806,7,0.127,11,0.342,12,0.861,13,1.058,19,1.075,20,1.253,21,0.92,22,1.723,23,1.504,24,0.95,25,1.075,27,1.075,29,0.354,30,1.005,31,1.884,32,0.979,33,2.325,35,0.815,37,1.366,41,0.758,42,1.63,43,1.935,46,0.782,49,1.339,50,1.005,51,0.027,52,0.762,53,1.01,54,1.005,55,1.561,58,1.5,60,1.286,67,0.826,68,1.192,75,2.039,82,0.537,83,0.262,87,0.704,90,1.206,91,0.983,92,0.179,93,0.011,94,1.02,96,1.393,108,0.531,109,1.312,110,1.312,111,1.228,112,1.668,113,0.92,114,1.312,115,1.312,116,0.658,117,0.92,118,0.938,119,0.92,120,0.704,121,0.92,122,1.277,123,1.904,124,1.312,125,0.704,126,0.92,127,0.704,128,0.704,129,0.92,130,0.658,131,0.92,132,0.704,133,1.112,134,0.704,135,0.658,136,0.658,137,1.312,138,0.614,139,0.806,140,0.704,141,1.431,142,0.704,143,0.861,144,0.92,145,0.015,146,0.015,172,2.528,199,4.1,211,1.5,290,1.312,291,1.366,292,1.5,295,1.075,299,2.015,311,1.846,312,1.72,316,1.72,317,2.307,347,1.846,352,1.846,355,2.152,357,2.144,358,2.144,359,2.144,360,2.144,401,3.417,412,3.208,473,1.393,474,1.504,475,1.393,661,3.107,688,4.488,759,2.789,816,3.223,876,2.144,882,2.995,915,2.881,1014,4.77,1016,5.422,1017,2.178,1018,3.107,1019,3.621,1020,3.531,1021,3.531,1022,3.531,1023,3.948,1024,5.307,1025,5.307,1026,5.307,1027,3.531,1028,3.948,1029,3.531,1030,3.948,1031,3.531,1032,3.248,1033,2.928,1034,3.531,1035,3.531,1036,2.928,1037,2.325,1038,3.107,1039,3.531,1040,3.107,1041,3.531,1042,2.928,1043,3.107,1044,3.107,1045,2.928,1046,2.476,1047,2.476,1048,3.948,1049,3.107,1050,2.476,1051,2.476,1052,2.178,1053,2.476,1054,2.476,1055,1.956,1056,2.928,1057,2.178,1058,2.178,1059,4.176,1060,2.928,1061,2.178,1062,2.476,1063,2.928,1064,5.631,1065,6.66,1066,4.488,1067,5.19,1068,3.531,1069,3.531,1070,2.928,1071,2.476]],["title/injectables/HttpClientService.html",[48,0.997,623,1.741]],["body/injectables/HttpClientService.html",[2,0.268,3,0.199,7,0.166,11,0.432,29,0.46,31,1.875,35,1.32,41,1.013,46,0.763,48,1.642,50,1.52,51,0.027,52,0.907,53,1.063,54,1.52,55,1.471,56,1.376,58,1.796,59,3.037,63,1.796,67,1.038,82,0.499,83,0.341,92,0.233,93,0.014,94,1.324,100,1.863,145,0.019,146,0.019,181,2.785,191,2.379,204,2.312,245,4.221,268,2.785,291,1.526,322,2.82,403,2.313,484,3.021,509,2.545,537,4.41,623,2.568,625,3.6,648,5.525,653,4.41,813,5.013,814,4.229,1072,5.446,1073,3.222,1074,5.641,1075,5.001,1076,5.001,1077,5.001,1078,5.929,1079,5.929,1080,3.81,1081,3.81,1082,5.001,1083,3.81,1084,5.001,1085,3.81,1086,5.001,1087,3.81,1088,5.584,1089,5.001,1090,5.001,1091,3.81,1092,5.001,1093,3.81,1094,6.157,1095,3.81,1096,3.81,1097,3.81,1098,3.81,1099,6.534,1100,4.41,1101,5.929,1102,3.81,1103,3.81,1104,3.81,1105,3.81]],["title/modules/IasMaterialModule.html",[788,0.761,797,1.612]],["body/modules/IasMaterialModule.html",[0,0.06,2,0.328,3,0.243,7,0.203,11,0.328,51,0.027,82,0.629,83,0.417,92,0.347,93,0.017,145,0.021,146,0.021,179,2.597,471,3.47,478,3.452,479,3.797,587,2.832,788,1.378,790,2.062,797,2.704,811,2.704,825,2.832,1106,4.664,1107,4.664,1108,4.229,1109,6.132,1110,4.664,1111,6.132,1112,4.664,1113,6.132,1114,4.664,1115,6.132,1116,4.664,1117,6.132,1118,4.664,1119,6.132,1120,4.664,1121,6.132,1122,4.664,1123,6.132,1124,4.664,1125,6.132,1126,4.664,1127,6.132,1128,4.664,1129,6.132,1130,4.664,1131,6.132,1132,6.132,1133,4.664,1134,6.132,1135,4.664]],["title/classes/Iasio.html",[93,0.012,864,2.058]],["body/classes/Iasio.html",[2,0.272,3,0.202,7,0.169,11,0.446,29,0.468,30,1.217,32,0.857,35,1.239,41,0.703,46,0.792,49,1.55,50,1.355,51,0.027,52,0.808,53,1.116,54,1.355,56,1.914,58,1.817,60,1.421,64,2.598,67,1.032,80,1.49,92,0.237,93,0.023,94,1.251,100,1.876,106,1.59,145,0.019,146,0.019,200,2.55,204,1.699,205,1.944,207,1.844,211,1.817,212,2.839,232,1.844,256,2.59,279,5.369,288,3.379,290,1.59,291,1.449,292,2.022,293,3.76,294,2.598,295,1.302,300,3.072,315,2.355,321,3.764,322,2.839,323,3.379,335,3.072,361,2.59,372,3.279,373,3.279,374,2.59,410,2.817,863,3.379,864,4.264,891,4.723,1136,3.279,1137,5.632,1138,5.632,1139,5.369,1140,5.369,1141,5.369,1142,5.06,1143,5.06,1144,5.06,1145,3.878,1146,5.06,1147,4.278,1148,3.878,1149,3.878,1150,5.06,1151,3.878,1152,5.06,1153,3.878,1154,3.878,1155,3.878,1156,3.878,1157,3.878,1158,3.878,1159,3.878,1160,3.878,1161,3.878,1162,3.878]],["title/components/LegendComponent.html",[0,0.036,125,0.815]],["body/components/LegendComponent.html",[0,0.072,1,1.039,2,0.303,3,0.225,4,1.27,5,1.357,6,1.188,7,0.188,11,0.303,12,1.27,19,1.395,20,1.525,21,1.357,22,1.8,23,1.572,24,1.156,25,1.395,27,1.395,29,0.521,32,0.778,35,1.058,37,1.599,41,1.075,46,0.654,51,0.026,52,0.778,67,0.672,68,0.97,75,2.083,82,0.386,83,0.386,87,1.039,92,0.264,93,0.016,108,1.161,109,1.703,110,1.703,111,1.594,112,1.952,113,1.357,114,1.703,115,1.703,116,0.97,117,1.357,118,0.97,119,1.357,120,1.039,121,1.357,122,1.039,123,1.27,124,1.703,125,1.495,126,1.357,127,1.039,128,1.039,129,1.357,130,0.97,131,1.357,132,1.039,133,1.136,134,1.039,135,0.97,136,0.97,137,1.703,138,0.905,139,1.188,140,1.039,141,1.27,142,1.039,143,1.27,144,1.357,145,0.02,146,0.02,169,1.492,276,3.191,290,1.703,292,1.946,316,2.559,317,2.388,347,2.396,352,2.396,355,2.747,356,4.15,402,2.396,1163,3.652,1164,4.319,1165,5.421,1166,4.319,1167,4.319,1168,4.319,1169,4.319,1170,5.421]],["title/components/OverviewCardComponent.html",[0,0.036,127,0.815]],["body/components/OverviewCardComponent.html",[0,0.071,1,1.05,2,0.307,3,0.228,4,1.283,5,1.371,6,1.201,7,0.19,11,0.307,12,1.283,19,1.404,20,1.532,21,1.371,22,1.802,23,1.573,24,1.162,25,1.404,27,1.404,29,0.527,35,1.065,37,1.605,41,1.08,46,0.659,51,0.026,52,0.783,67,0.679,68,0.98,82,0.39,83,0.39,87,1.05,92,0.267,93,0.016,108,0.792,109,1.714,110,1.714,111,1.604,112,1.96,113,1.371,114,1.714,115,1.714,116,0.98,117,1.371,118,0.98,119,1.371,120,1.05,121,1.371,122,1.05,123,1.283,124,1.714,125,1.05,126,1.371,127,1.5,128,1.63,129,1.371,130,0.98,131,1.371,132,1.05,133,1.143,134,1.05,135,0.98,136,0.98,137,1.714,138,0.914,139,1.201,140,1.05,141,1.283,142,1.05,143,1.283,144,1.371,145,0.02,146,0.02,169,1.501,290,1.714,292,1.959,312,2.247,1018,4.059,1171,5.034,1172,4.428,1173,3.69,1174,4.614,1175,6.237,1176,3.644,1177,4.614,1178,5.457,1179,5.457,1180,4.364,1181,4.364]],["title/components/OverviewComponent.html",[0,0.036,130,0.761]],["body/components/OverviewComponent.html",[0,0.072,1,1.047,2,0.306,3,0.227,4,1.279,5,1.367,6,1.197,7,0.189,11,0.306,12,1.279,19,1.402,20,1.53,21,1.367,22,1.802,23,1.573,24,1.16,25,1.402,27,1.402,29,0.525,35,1.063,37,1.603,41,1.078,46,0.657,51,0.026,52,0.782,67,0.677,68,0.977,82,0.389,83,0.389,87,1.047,92,0.266,93,0.016,108,0.789,109,1.711,110,1.711,111,1.601,112,1.957,113,1.367,114,1.711,115,1.711,116,0.977,117,1.367,118,0.977,119,1.367,120,1.047,121,1.367,122,1.047,123,1.748,124,1.711,125,1.047,126,1.367,127,1.047,128,1.43,129,1.367,130,1.4,131,1.367,132,1.047,133,1.141,134,1.047,135,0.977,136,0.977,137,1.711,138,0.912,139,1.197,140,1.047,141,1.748,142,1.047,143,1.279,144,1.367,145,0.02,146,0.02,169,1.498,290,1.711,292,1.955,295,1.402,299,1.955,473,2.59,543,3.637,762,4.051,1030,4.051,1032,3.468,1182,3.679,1183,4.605,1184,5.446,1185,5.446,1186,4.351,1187,4.351,1188,5.446,1189,5.446,1190,5.446]],["title/modules/OverviewModule.html",[788,0.761,798,2.058]],["body/modules/OverviewModule.html",[0,0.057,2,0.308,3,0.229,7,0.191,11,0.308,46,0.661,51,0.027,82,0.614,83,0.393,86,1.475,92,0.382,93,0.016,108,0.797,127,1.66,128,1.547,130,1.55,145,0.02,146,0.02,177,1.688,186,1.057,295,1.41,299,1.577,303,3.05,410,3.05,632,4.075,782,3.796,788,1.474,790,2.639,795,3.12,796,3.652,797,3.12,798,4.279,799,2.9,801,3.652,802,2.606,803,2.089,804,1.941,807,2.089,811,2.606,825,2.667,826,2.933,827,2.933,828,3.714,830,2.667,832,3.714,917,3.05,1172,3.267,1191,3.714,1192,3.714,1193,4.392,1194,3.714,1195,4.392,1196,5.478,1197,4.632,1198,4.392,1199,4.392]],["title/injectables/RoutingService.html",[48,0.997,915,1.741]],["body/injectables/RoutingService.html",[2,0.328,3,0.244,7,0.203,11,0.431,13,1.032,29,0.564,35,1.11,41,0.847,46,0.687,48,1.804,49,1.285,50,1.369,51,0.027,52,0.817,53,0.957,54,1.369,55,1.878,60,1.338,67,0.727,68,1.049,73,2.6,79,1.757,82,0.509,83,0.418,92,0.285,93,0.017,94,1.192,138,1.338,145,0.021,146,0.021,169,1.565,184,3.167,204,2.236,266,3.167,292,2.043,478,3.455,509,3.119,534,3.474,541,2.836,816,2.836,817,3.119,882,3.461,915,2.921,1200,3.949,1201,5.689,1202,4.811,1203,5.689,1204,5.689,1205,4.67,1206,6.853,1207,4.67,1208,5.689,1209,4.67,1210,4.75,1211,4.67,1212,4.67,1213,3.949,1214,4.67]],["title/modules/SharedModule.html",[788,0.761,799,1.498]],["body/modules/SharedModule.html",[0,0.067,1,1.637,2,0.279,3,0.207,7,0.173,9,2.957,11,0.279,12,1.512,13,0.933,17,2.866,24,1.112,32,0.738,51,0.027,82,0.614,83,0.355,86,1.335,87,1.653,88,2.655,89,3.824,92,0.368,93,0.014,108,0.721,116,1.529,118,1.543,132,1.637,133,1.339,134,1.653,142,1.637,143,1.169,145,0.019,146,0.019,177,1.527,179,2.213,186,0.956,191,2.445,226,2.413,227,2.413,295,1.323,299,1.427,453,2.655,788,1.436,790,2.519,797,3.041,799,3.121,802,2.445,803,1.89,804,1.757,807,1.89,811,2.445,820,4.347,821,4.347,822,4.347,825,2.413,826,2.655,917,2.862,1215,3.361,1216,3.361,1217,3.974,1218,3.361,1219,3.974,1220,4.347,1221,5.141,1222,5.141,1223,5.141,1224,4.347,1225,5.699,1226,3.974,1227,3.974,1228,2.957,1229,2.655,1230,2.957]],["title/components/ShelveButtonComponent.html",[0,0.036,132,0.815]],["body/components/ShelveButtonComponent.html",[0,0.069,1,0.792,2,0.231,3,0.172,4,0.968,5,1.034,6,0.906,7,0.143,10,2.198,11,0.318,12,1.886,13,1.098,14,3.392,15,2.887,16,3.028,18,4.045,19,1.167,20,1.334,21,1.034,22,1.748,23,1.526,24,1.012,25,1.167,26,3.372,27,1.167,28,3.372,29,0.397,30,1.09,31,2.034,32,0.985,33,1.862,35,1.09,36,5.121,37,1.438,38,3.833,39,2.495,40,3.857,41,1.013,42,1.833,43,1.944,44,5.246,45,4.724,46,0.749,48,1.333,49,1.612,50,1.09,51,0.027,52,0.802,53,0.872,54,1.09,55,1.643,56,1.666,57,2.004,58,2.27,59,2.753,60,1.228,61,2.783,63,2.006,64,2.869,65,2.469,66,2.869,67,1.02,68,1.018,70,3.372,71,3.833,73,2.524,74,3.372,75,1.742,76,3.028,77,3.833,82,0.524,83,0.294,84,1.69,85,1.833,86,1.105,87,0.792,89,2.449,90,1.355,91,1.105,92,0.201,93,0.012,94,0.95,95,2.783,96,2.466,97,2.783,100,1.034,103,2.783,104,2.783,105,2.783,106,1.034,108,0.597,109,1.424,110,1.424,111,1.333,112,1.755,113,1.034,114,1.424,115,1.424,116,0.739,117,1.034,118,0.739,119,1.034,120,0.792,121,1.034,122,0.792,123,0.968,124,1.424,125,0.792,126,1.034,127,0.792,128,0.792,129,1.034,130,0.739,131,1.034,132,1.344,133,1.429,134,1.09,135,0.739,136,0.739,137,1.424,138,0.69,139,0.906,140,0.792,141,0.968,142,0.792,143,0.968,144,1.034,145,0.017,146,0.017,232,1.566,260,4.156,287,3.857,402,2.469,425,2.198,1228,4.702,1229,2.198,1231,4.702,1232,5.586,1233,3.292,1234,3.833,1235,4.533,1236,3.292,1237,3.292,1238,3.292,1239,4.533,1240,3.292,1241,3.292,1242,4.533,1243,4.533]],["title/components/ShelveModalComponent.html",[0,0.036,134,0.815]],["body/components/ShelveModalComponent.html",[0,0.06,1,0.609,2,0.178,3,0.132,4,0.745,5,0.796,6,0.697,7,0.11,11,0.403,12,1.688,13,1.07,17,2.805,18,3.704,19,0.967,20,1.153,21,0.796,22,1.687,23,1.473,24,0.874,25,0.967,27,0.967,29,0.306,30,0.904,31,1.664,32,0.987,33,1.608,35,1.151,37,1.275,39,2.266,41,0.682,43,1.828,46,0.781,49,1.58,50,0.904,51,0.027,52,0.711,53,0.834,54,0.904,55,1.734,56,1.364,57,1.661,59,3.009,60,1.109,67,1.047,68,1.29,73,2.092,80,1.721,82,0.513,83,0.226,84,1.3,85,1.41,86,0.85,87,0.609,90,1.043,91,0.85,92,0.155,93,0.009,94,1.162,96,1.204,106,1.407,108,0.459,109,1.181,110,1.181,111,1.105,112,1.557,113,0.796,114,1.181,115,1.181,116,0.569,117,0.796,118,0.569,119,0.796,120,0.609,121,0.796,122,0.609,123,0.745,124,1.181,125,0.609,126,0.796,127,0.609,128,0.609,129,0.796,130,0.569,131,0.796,132,0.609,133,1.414,134,1.192,135,0.569,136,1.006,137,1.181,138,0.531,139,0.697,140,0.609,141,0.745,142,0.609,143,1.105,144,0.796,145,0.014,146,0.014,147,1.884,149,3.177,150,3.177,151,4.854,153,3.956,158,4.125,159,4.191,162,2.141,163,4.689,164,5.093,165,2.812,166,4.476,167,4.191,169,1.034,170,2.72,171,3.788,172,2.48,173,3.009,174,2.545,175,2.509,176,1.661,177,2.266,178,2.795,179,2.494,180,2.282,182,2.141,184,3.088,185,1.444,188,3.31,191,2.805,192,2.282,193,2.795,194,3.177,195,3.177,196,2.509,197,3.177,198,2.141,200,2.284,203,3.177,204,1.262,205,1.444,211,1.349,212,2.357,213,3.31,219,3.177,221,4.191,223,3.536,225,2.141,226,1.538,227,1.538,228,1.691,229,2.141,230,2.141,231,2.141,232,1.787,233,2.141,236,3.177,237,2.141,238,3.177,239,2.141,241,3.177,242,3.177,244,4.191,245,3.704,246,3.177,248,2.141,249,2.141,260,3.687,264,3.177,265,1.691,266,2.092,267,2.141,269,3.177,270,2.795,272,3.177,287,4.481,398,2.141,402,2.191,425,2.992,528,2.282,541,2.282,604,3.687,656,3.177,966,3.687,1037,2.759,1147,3.177,1176,2.509,1229,4.287,1231,4.775,1234,4.191,1244,2.532,1245,4.956,1246,5.546,1247,3.757,1248,4.956,1249,3.757,1250,2.532,1251,3.757,1252,3.757,1253,2.532,1254,2.532,1255,2.532,1256,3.757,1257,2.532,1258,2.532,1259,2.532,1260,2.532,1261,2.532,1262,2.532,1263,2.532,1264,2.532,1265,3.757,1266,2.532,1267,3.757,1268,3.757,1269,3.757,1270,2.532]],["title/components/StatusViewComponent.html",[0,0.036,135,0.761]],["body/components/StatusViewComponent.html",[0,0.069,1,0.762,2,0.222,3,0.165,4,0.932,5,0.995,6,0.872,7,0.138,11,0.31,12,0.932,13,0.801,19,1.136,20,1.308,21,0.995,22,1.74,23,1.519,24,0.991,25,1.136,27,1.136,29,0.382,30,1.062,31,2.009,32,0.913,35,1.072,37,1.414,39,2.3,41,0.922,46,0.799,49,1.215,50,0.762,51,0.027,52,0.729,53,0.743,54,0.762,56,1.398,60,1.333,67,1.043,68,0.712,70,3.284,78,1.507,79,1.512,80,1.952,82,0.395,83,0.283,87,0.762,91,1.064,92,0.193,93,0.023,94,0.664,100,1.727,106,1.596,108,0.575,109,1.387,110,1.387,111,1.298,112,1.727,113,0.995,114,1.387,115,1.387,116,0.712,117,0.995,118,0.712,119,0.995,120,0.762,121,0.995,122,0.762,123,0.932,124,1.387,125,0.762,126,0.995,127,0.762,128,0.762,129,0.995,130,0.712,131,0.995,132,0.762,133,0.925,134,0.762,135,1.235,136,1.475,137,1.387,138,0.664,139,0.872,140,0.762,141,0.932,142,0.762,143,0.932,144,0.995,145,0.016,146,0.016,169,1.215,185,2.3,200,2.092,245,2.948,261,1.305,295,1.54,305,1.507,312,2.464,315,2.681,316,2.263,317,1.952,344,1.764,347,1.4,352,1.4,355,1.4,762,3.284,943,5.692,1032,2.458,1037,2.458,1040,3.284,1174,3.733,1176,2.948,1183,3.733,1271,5.295,1272,4.658,1273,2.357,1274,3.733,1275,3.733,1276,5.984,1277,5.496,1278,5.496,1279,4.415,1280,4.415,1281,4.415,1282,3.168,1283,3.168,1284,6.442,1285,3.168,1286,5.496,1287,4.415,1288,3.168,1289,5.496,1290,3.168,1291,4.415,1292,4.415,1293,4.415,1294,3.168,1295,3.168,1296,3.168,1297,4.415,1298,6.14,1299,3.168,1300,3.168,1301,3.168,1302,4.415,1303,4.415,1304,3.168,1305,3.168,1306,3.168,1307,6.14,1308,6.361,1309,4.415,1310,5.081,1311,3.168,1312,3.168,1313,3.168]],["title/modules/TabularModule.html",[788,0.761,800,2.058]],["body/modules/TabularModule.html",[0,0.059,2,0.323,3,0.24,7,0.2,11,0.323,51,0.027,63,2.025,75,2.167,82,0.611,83,0.412,86,1.545,92,0.388,93,0.017,108,0.835,125,1.596,135,1.524,136,1.034,138,1.454,139,1.266,145,0.021,146,0.021,177,1.768,186,1.107,295,1.451,299,1.652,788,1.427,790,2.695,797,3.156,799,2.933,800,4.255,802,2.682,803,2.189,804,2.034,807,2.189,811,2.682,825,2.795,826,3.074,830,2.795,835,3.074,836,4.768,917,3.139,1032,3.139,1224,4.768,1272,3.423,1314,3.891,1315,3.891,1316,4.602,1317,3.891,1318,4.602,1319,4.602]],["title/components/TabularViewComponent.html",[0,0.036,138,0.71]],["body/components/TabularViewComponent.html",[0,0.065,1,0.449,2,0.209,3,0.097,4,0.549,5,0.587,6,0.514,7,0.081,11,0.424,12,0.549,13,0.766,14,1.805,19,0.765,20,0.953,21,0.587,22,1.6,23,1.397,24,0.723,25,0.765,27,0.765,29,0.226,30,0.715,31,2.105,32,0.953,33,2.297,35,0.58,37,1.086,39,1.978,41,0.539,42,1.04,43,1.843,46,0.81,48,0.549,49,1.696,50,0.891,51,0.027,52,0.79,53,1.037,54,0.891,55,1.443,56,1.162,58,0.671,60,1.395,65,1.866,67,0.99,68,1.103,74,2.212,75,2.526,76,3.078,78,2.74,79,1.613,80,2.053,82,0.505,83,0.167,87,0.449,90,0.769,91,0.627,92,0.114,93,0.007,94,0.966,100,1.81,106,1.618,108,0.339,109,0.934,110,0.934,111,0.874,112,1.326,113,0.587,114,0.934,115,0.934,116,0.42,117,0.587,118,0.42,119,0.587,120,0.449,121,0.587,122,0.449,123,0.549,124,0.934,125,0.449,126,0.587,127,0.449,128,0.449,129,0.587,130,0.42,131,0.587,132,0.449,133,0.623,134,0.449,135,0.42,136,1.156,137,0.934,138,0.885,139,1.47,140,0.449,141,0.549,142,0.449,143,0.549,144,0.587,145,0.011,146,0.014,153,1.805,165,2.792,169,0.818,170,2.981,172,0.769,175,1.986,176,1.866,178,2.212,180,1.805,185,1.142,191,2.008,200,1.898,204,1.935,211,1.068,213,3.678,228,1.248,232,0.889,252,1.142,256,1.986,261,1.525,265,1.986,266,1.655,270,2.212,274,2.563,276,2.168,291,1.263,293,1.805,295,0.481,299,1.516,302,1.805,305,0.889,311,2.362,312,1.224,317,2.535,322,1.761,325,2.981,327,1.805,330,1.805,338,1.248,344,1.655,391,2.514,402,1.866,466,1.39,473,0.889,474,0.959,475,0.889,484,2.434,504,3.83,517,1.39,521,2.82,522,1.39,525,1.805,528,1.805,587,2.799,638,1.248,653,2.212,657,3.57,672,2.212,759,2.82,816,2.799,817,1.248,835,4.356,848,2.514,851,3.57,863,1.986,874,2.514,876,2.898,878,2.514,882,3.444,921,3.769,939,4.772,941,2.514,1019,2.755,1023,3.14,1028,3.14,1032,1.655,1037,3.066,1043,2.212,1044,2.212,1048,3.83,1049,3.651,1052,1.39,1057,1.39,1058,1.39,1061,1.39,1074,2.514,1100,2.212,1176,1.986,1210,2.212,1273,1.39,1274,1.58,1275,2.514,1320,4.852,1321,2.973,1322,4.151,1323,3.703,1324,1.868,1325,2.973,1326,4.222,1327,4.222,1328,4.909,1329,4.222,1330,4.222,1331,5.148,1332,4.222,1333,4.518,1334,2.973,1335,2.973,1336,4.222,1337,4.222,1338,4.222,1339,4.222,1340,1.868,1341,2.973,1342,1.868,1343,2.973,1344,2.973,1345,1.868,1346,2.212,1347,1.868,1348,1.868,1349,2.973,1350,1.868,1351,1.868,1352,3.703,1353,1.868,1354,2.973,1355,1.868,1356,4.609,1357,4.222,1358,2.973,1359,2.973,1360,2.973,1361,1.868,1362,1.868,1363,1.868,1364,4.609,1365,1.868,1366,1.868,1367,1.868,1368,3.703,1369,2.973,1370,2.973,1371,2.973,1372,2.973,1373,2.973,1374,1.868,1375,2.973,1376,1.868,1377,2.212,1378,2.973,1379,1.868,1380,3.703,1381,1.868,1382,2.212,1383,5.148,1384,2.973,1385,3.703,1386,1.868,1387,4.909,1388,1.868,1389,1.868,1390,1.868,1391,1.868,1392,1.868,1393,1.868,1394,1.868,1395,1.58,1396,1.868,1397,1.868,1398,1.248,1399,1.868,1400,1.868,1401,1.868,1402,1.868,1403,1.868,1404,1.868,1405,1.868,1406,1.868,1407,1.868,1408,1.868,1409,1.868,1410,1.868,1411,1.868,1412,2.973,1413,4.609,1414,1.868,1415,1.868,1416,1.868,1417,1.868,1418,1.868,1419,1.868,1420,1.868,1421,2.973,1422,1.868,1423,1.868,1424,1.868,1425,1.868,1426,1.868,1427,1.868,1428,1.868,1429,1.868,1430,1.868,1431,3.703,1432,2.973,1433,1.868,1434,2.973,1435,3.703,1436,3.703,1437,1.868,1438,1.868,1439,1.868,1440,1.868,1441,3.703,1442,1.868,1443,2.973,1444,2.973,1445,2.973]],["title/modules/WeatherModule.html",[788,0.761,801,1.887]],["body/modules/WeatherModule.html",[0,0.061,2,0.337,3,0.25,7,0.209,11,0.337,51,0.027,63,2.076,82,0.606,83,0.429,86,1.61,92,0.393,93,0.017,108,0.87,140,1.678,141,1.825,145,0.021,146,0.021,177,1.842,186,1.153,295,1.488,782,3.51,788,1.447,790,2.743,795,3.187,799,2.961,801,3.87,802,2.749,803,2.28,804,2.119,807,2.28,811,2.749,827,3.202,830,2.911,917,3.218,1015,4.054,1446,4.054,1447,4.054,1448,4.794,1449,4.054,1450,4.794,1451,3.566]],["title/components/WeatherSummaryComponent.html",[0,0.036,140,0.815]],["body/components/WeatherSummaryComponent.html",[0,0.065,1,0.522,2,0.152,3,0.113,4,0.638,5,0.682,6,0.597,7,0.094,11,0.286,12,0.638,13,0.948,19,0.86,20,1.049,21,0.682,22,1.645,23,1.436,24,0.796,25,0.86,27,0.86,29,0.262,30,0.804,31,1.662,32,0.977,33,2.453,35,0.652,37,1.179,41,0.606,42,1.208,43,1.832,46,0.786,49,1.122,50,0.804,51,0.027,52,0.658,53,1.058,54,0.804,55,1.347,58,1.877,60,1.305,67,0.713,68,1.029,75,1.761,82,0.487,83,0.194,87,0.522,90,0.893,91,0.729,92,0.133,93,0.008,94,0.854,108,0.394,109,1.05,110,1.05,111,0.983,112,1.44,113,0.682,114,1.05,115,1.05,116,0.487,117,0.682,118,0.751,119,0.682,120,0.522,121,0.682,122,0.522,123,0.638,124,1.05,125,0.522,126,0.682,127,0.522,128,0.522,129,0.682,130,0.487,131,0.682,132,0.522,133,1.178,134,0.522,135,0.487,136,0.487,137,1.05,138,0.455,139,0.597,140,1.102,141,1.763,142,0.522,143,0.638,144,0.682,145,0.012,146,0.012,172,2.729,199,4.427,211,1.2,290,1.05,291,1.447,292,1.2,295,0.86,311,1.478,312,1.377,316,2.152,317,2.488,347,2.31,352,2.31,355,2.55,357,2.684,358,2.684,359,2.684,360,2.684,401,3.625,412,3.415,473,1.032,474,1.114,475,1.032,661,3.408,759,2.233,816,2.782,876,1.717,882,2.684,915,2.541,1017,1.614,1018,2.487,1019,3.033,1020,2.827,1021,2.827,1022,2.827,1023,3.408,1027,2.827,1028,3.408,1029,1.835,1030,3.408,1031,2.827,1032,2.91,1034,2.827,1035,2.827,1037,1.861,1038,2.487,1039,2.827,1040,2.487,1041,2.827,1043,2.487,1044,2.487,1046,1.835,1047,1.835,1048,3.408,1049,2.487,1050,1.835,1051,1.835,1052,1.614,1053,1.835,1054,1.835,1055,1.449,1057,1.614,1058,1.614,1061,1.614,1062,3.448,1064,5.866,1066,5.145,1067,5.604,1068,4.42,1069,4.42,1071,1.835,1177,2.827,1451,4.817,1452,5.476,1453,4.581,1454,4.581,1455,4.581,1456,4.581,1457,4.581,1458,4.581,1459,4.581,1460,4.581,1461,4.581,1462,4.581,1463,4.581,1464,4.581,1465,4.581,1466,3.343,1467,2.17,1468,3.343,1469,2.17,1470,2.17,1471,2.17,1472,2.17,1473,6.162,1474,2.17,1475,2.17,1476,6.162,1477,2.17,1478,2.17,1479,6.084,1480,6.084,1481,2.17,1482,2.17,1483,2.17,1484,3.343,1485,2.17,1486,3.343,1487,2.17,1488,3.343,1489,2.17,1490,3.343,1491,4.078,1492,3.343,1493,3.343,1494,4.078,1495,2.17,1496,2.17,1497,6.344,1498,2.17,1499,6.344,1500,2.17,1501,6.344,1502,2.17,1503,2.17,1504,2.17]],["title/components/WikiButtonComponent.html",[0,0.036,142,0.815]],["body/components/WikiButtonComponent.html",[0,0.071,1,1.019,2,0.297,3,0.221,4,1.245,5,1.331,6,1.165,7,0.184,10,2.828,11,0.297,12,1.871,13,0.971,14,3.251,15,2.981,16,3.576,19,1.378,20,1.511,21,1.331,22,1.797,23,1.569,24,1.146,25,1.378,26,3.983,27,1.378,28,3.983,29,0.511,32,0.769,35,1.045,37,1.588,39,2.371,41,1.065,46,0.709,51,0.026,52,0.769,53,0.712,60,1.122,67,0.659,68,0.951,82,0.379,83,0.379,87,1.019,92,0.259,93,0.015,108,0.768,109,1.682,110,1.682,111,1.574,112,1.938,113,1.331,114,1.682,115,1.682,116,0.951,117,1.331,118,0.951,119,1.331,120,1.019,121,1.331,122,1.019,123,1.245,124,1.682,125,1.019,126,1.331,127,1.019,128,1.019,129,1.331,130,0.951,131,1.331,132,1.019,133,1.122,134,1.019,135,0.951,136,0.951,137,1.682,138,0.887,139,1.165,140,1.019,141,1.245,142,1.484,143,2.009,144,1.331,145,0.02,146,0.02,169,1.473,204,2.137,205,2.371,266,2.981,290,1.682,292,1.923,1230,4.589,1505,5.217,1506,5.354,1507,5.354,1508,4.235,1509,4.235]],["title/coverage.html",[1510,3.911]],["body/coverage.html",[0,0.072,1,0.963,7,0.174,8,3.798,9,2.977,10,3.819,32,0.574,43,1.177,48,1.776,51,0.026,53,0.673,66,3.555,75,1.538,87,0.963,88,2.673,93,0.023,116,0.899,118,0.899,120,0.963,122,0.963,125,0.963,127,0.963,130,0.899,132,0.963,134,0.963,135,0.899,138,0.838,140,0.963,142,0.963,145,0.019,146,0.019,147,3.841,165,1.769,205,1.538,273,2.977,291,1.03,298,2.977,399,3.841,412,2.055,452,2.673,453,3.819,454,4.253,476,2.673,602,3.383,623,2.055,669,2.977,681,3.136,683,2.977,761,3.383,818,2.977,835,2.673,847,3.383,864,2.43,915,2.055,921,2.673,922,3.383,923,3.383,1014,2.977,1016,3.383,1017,3.841,1055,2.673,1072,3.383,1073,3.383,1136,3.383,1163,3.383,1171,3.383,1172,2.977,1173,3.383,1182,3.383,1200,3.383,1228,2.977,1229,2.673,1230,2.977,1231,3.841,1271,3.383,1272,2.977,1273,3.841,1320,4.847,1398,2.673,1451,2.977,1452,3.383,1505,3.383,1510,3.383,1511,3.383,1512,7.135,1513,5.717,1514,5.164,1515,5.164,1516,6.254,1517,6.254,1518,4.001,1519,5.288,1520,6.924,1521,3.383,1522,4.001,1523,4.001,1524,5.164,1525,4.001,1526,4.834,1527,4.366,1528,3.383,1529,3.383,1530,5.415,1531,3.383,1532,3.383,1533,3.383,1534,3.383,1535,4.001,1536,4.001,1537,3.383,1538,3.383,1539,4.001]],["title/dependencies.html",[186,0.981,1540,2.831]],["body/dependencies.html",[51,0.027,83,0.447,84,2.566,85,2.782,86,1.99,145,0.022,146,0.022,179,2.782,186,1.202,226,3.034,227,3.034,300,3.034,475,2.818,676,4.225,677,4.225,807,2.377,809,5.341,810,3.958,817,3.337,1395,4.225,1541,4.997,1542,6.96,1543,4.997,1544,5.925,1545,4.997,1546,4.997,1547,4.997,1548,4.225,1549,4.997,1550,4.997,1551,4.997,1552,4.997,1553,4.997,1554,4.997,1555,4.997,1556,4.997,1557,4.997,1558,4.997,1559,4.997,1560,4.997,1561,4.997,1562,4.997,1563,5.925,1564,4.225,1565,4.997,1566,4.997]],["title/miscellaneous/enumerations.html",[1567,1.891,1568,3.447]],["body/miscellaneous/enumerations.html",[29,0.613,32,0.729,51,0.022,65,2.244,79,1.958,145,0.022,146,0.022,172,2.618,185,2.443,196,3.391,252,2.443,261,2.618,268,3.33,273,3.776,276,2.607,305,2.845,316,2.09,343,4.293,344,3.33,345,4.293,346,3.995,347,2.244,348,3.33,349,3.083,350,4.293,351,3.391,352,2.244,353,3.391,354,5.377,355,2.244,356,3.391,357,2.607,358,2.607,359,2.607,360,2.607,1567,3.391,1568,4.293,1569,6.359]],["title/index.html",[29,0.342,638,1.891,1346,2.106]],["body/index.html",[0,0.064,3,0.238,7,0.199,13,1.102,23,1.026,51,0.021,52,0.656,63,1.64,84,3.445,145,0.021,146,0.021,205,2.435,212,2.172,216,2.542,266,2.542,290,2.044,291,1.175,299,2.276,303,3.528,311,2.019,335,2.773,353,3.05,402,2.801,415,3.397,417,3.748,478,3.848,489,4.519,543,3.05,632,3.397,663,3.397,681,2.773,742,4.745,764,3.861,804,2.019,876,2.345,1108,3.397,1202,3.861,1377,4.839,1382,3.397,1398,3.05,1548,4.745,1570,4.567,1571,6.075,1572,6.337,1573,4.745,1574,4.567,1575,5.612,1576,3.861,1577,4.567,1578,4.567,1579,4.567,1580,4.567,1581,4.567,1582,4.567,1583,4.567,1584,4.567,1585,4.567,1586,5.6,1587,3.861,1588,3.861,1589,4.567,1590,5.612,1591,6.505,1592,6.075,1593,5.612,1594,4.567,1595,4.567,1596,3.861,1597,4.567,1598,5.773,1599,4.567,1600,4.567,1601,4.567,1602,4.567,1603,4.567,1604,3.861,1605,4.567,1606,4.567,1607,4.567,1608,4.567,1609,4.567,1610,4.567,1611,4.567,1612,3.861,1613,5.612,1614,5.612,1615,4.567,1616,6.337,1617,4.567,1618,4.567,1619,4.567,1620,4.567,1621,4.567]],["title/license.html",[638,1.891,1346,2.106,1622,2.394]],["body/license.html",[3,0.319,4,0.85,7,0.18,13,1.172,15,1.609,33,2.32,46,0.583,49,1.645,50,0.695,51,0.015,54,1.162,56,1.598,57,2.467,64,2.481,93,0.01,111,0.85,145,0.015,146,0.015,153,2.934,170,3.39,176,2.467,177,2.298,180,2.934,185,1.11,192,1.755,193,2.149,205,2.027,207,2.298,252,1.59,261,1.703,265,3.227,268,2.303,276,1.484,291,1.243,295,0.744,303,3.56,311,1.277,321,4.806,335,3.781,338,1.93,344,1.609,346,4.085,348,2.303,349,1.755,351,3.523,402,1.277,403,1.755,417,2.763,479,3.227,484,2.332,490,2.149,491,4.085,495,3.077,525,1.755,542,2.149,544,3.077,550,2.149,564,3.077,574,2.149,580,3.594,663,4.7,741,2.443,743,2.443,746,2.443,763,4.439,782,2.512,938,2.443,944,2.149,966,2.149,1037,2.303,1038,4.152,1100,3.077,1108,2.149,1197,4.46,1210,2.149,1220,2.443,1322,3.498,1511,2.443,1564,2.443,1573,5.875,1586,4.46,1587,2.443,1588,4.72,1596,5.905,1598,2.443,1604,5.407,1622,5.802,1623,6.787,1624,6.227,1625,2.889,1626,2.889,1627,4.137,1628,4.832,1629,4.137,1630,5.275,1631,5.275,1632,5.275,1633,2.889,1634,2.889,1635,2.889,1636,4.137,1637,2.889,1638,2.889,1639,2.889,1640,5.275,1641,6.117,1642,4.137,1643,2.889,1644,4.832,1645,4.137,1646,4.137,1647,2.889,1648,6.318,1649,5.582,1650,6.861,1651,2.889,1652,6.808,1653,4.137,1654,4.832,1655,4.137,1656,2.889,1657,2.889,1658,4.832,1659,2.889,1660,4.832,1661,4.137,1662,4.137,1663,4.137,1664,2.889,1665,4.137,1666,4.137,1667,2.889,1668,2.889,1669,2.889,1670,5.808,1671,6.318,1672,2.889,1673,2.889,1674,2.889,1675,4.832,1676,5.98,1677,4.137,1678,2.889,1679,2.889,1680,2.889,1681,2.889,1682,2.889,1683,2.889,1684,2.889,1685,2.889,1686,2.889,1687,2.889,1688,5.582,1689,2.889,1690,5.808,1691,4.832,1692,2.889,1693,2.889,1694,2.889,1695,2.889,1696,2.889,1697,2.889,1698,2.889,1699,2.889,1700,2.889,1701,2.889,1702,4.137,1703,4.832,1704,4.832,1705,5.808,1706,5.582,1707,2.889,1708,4.137,1709,2.889,1710,2.889,1711,2.889,1712,2.889,1713,2.889,1714,2.889,1715,2.889,1716,4.832,1717,4.137,1718,4.137,1719,4.137,1720,4.137,1721,2.889,1722,4.137,1723,2.889,1724,2.889,1725,2.889,1726,2.889,1727,2.889,1728,2.889,1729,2.889,1730,4.137,1731,2.889,1732,4.137,1733,2.889,1734,4.137,1735,5.275,1736,2.889,1737,2.889,1738,2.443,1739,2.889,1740,2.889,1741,2.889,1742,2.889,1743,2.889,1744,2.889,1745,4.137,1746,2.889,1747,2.889,1748,2.889,1749,2.889,1750,2.889,1751,2.889,1752,2.889,1753,2.889]],["title/modules.html",[788,1.039]],["body/modules.html",[51,0.023,145,0.023,146,0.023,788,1.184,789,3.52,795,2.507,796,2.934,797,2.507,798,3.2,799,2.33,800,3.2,801,2.934,810,4.61,1382,3.92,1754,6.902,1755,6.902,1756,6.947,1757,5.27]],["title/overview.html",[128,1.113]],["body/overview.html",[0,0.041,1,1.555,43,1.654,48,1.137,51,0.027,86,1.298,87,1.555,92,0.236,93,0.014,108,0.701,116,1.452,118,1.452,120,1.555,122,1.555,125,1.353,127,1.555,128,0.93,130,1.452,132,1.555,134,1.555,135,1.263,138,1.354,140,1.555,142,1.555,145,0.019,146,0.019,165,2.486,177,1.486,186,0.93,348,2.153,351,2.583,623,2.888,788,1.135,789,4.645,790,1.709,791,3.27,792,3.27,793,3.27,794,3.27,795,3.257,796,3.751,797,3.018,798,4.223,799,3.125,800,4.157,801,3.751,802,2.402,803,1.839,804,1.709,913,3.27,914,3.27,915,2.888,1003,3.27,1009,3.27,1010,3.27,1012,3.27,1191,3.27,1192,3.27,1194,3.27,1215,3.27,1216,3.27,1218,3.27,1314,3.27,1315,3.27,1317,3.27,1446,3.27,1447,3.27,1449,3.27,1758,3.27]],["title/miscellaneous/variables.html",[66,2.093,1567,1.891]],["body/miscellaneous/variables.html",[11,0.48,13,0.615,23,0.601,24,1.319,29,0.198,30,0.394,32,1.006,46,0.198,51,0.027,53,0.952,56,1.629,57,1.183,63,0.961,64,0.842,66,1.741,75,1.028,76,1.787,78,2.849,79,1.88,80,2.656,106,1.742,133,1.404,145,0.01,146,0.01,172,2.765,174,2.375,186,1.602,199,2.614,204,1.448,216,0.913,252,2.481,261,2.669,274,4.044,275,5.631,276,3.427,277,5.631,278,5.631,291,1.661,316,1.905,317,2.326,325,2.059,327,1.625,344,2.834,346,3.517,347,1.906,348,3.253,349,3.991,352,1.906,353,2.265,355,0.725,357,1.374,358,1.374,359,1.374,360,1.374,401,1.888,412,1.374,456,1.219,484,1.183,528,1.625,603,2.263,605,2.867,625,2.376,639,2.263,647,3.912,669,3.207,681,3.435,683,2.522,763,1.095,810,1.095,818,2.522,839,2.263,864,0.996,876,0.842,882,0.842,891,4.857,944,1.219,998,2.867,999,2.867,1000,2.867,1001,2.867,1004,2.263,1055,2.614,1139,5.521,1140,5.521,1141,5.521,1213,1.386,1320,1.219,1333,1.386,1377,3.786,1398,2.265,1519,1.386,1521,2.867,1526,1.386,1527,3.912,1528,2.867,1529,2.867,1530,1.386,1531,2.867,1532,2.867,1533,2.867,1534,2.867,1537,1.386,1538,1.386,1567,1.095,1576,2.263,1612,3.912,1738,1.386,1758,2.263,1759,5.266,1760,4.312,1761,1.639,1762,1.639,1763,1.639,1764,1.639,1765,1.639,1766,1.639,1767,1.639,1768,1.639,1769,1.639,1770,1.639,1771,1.639,1772,1.639,1773,1.639,1774,1.639,1775,2.676,1776,1.639,1777,2.676,1778,6.834,1779,1.639,1780,1.639,1781,2.676,1782,1.639,1783,2.676,1784,1.639,1785,1.639,1786,1.639,1787,1.639,1788,2.676,1789,1.639,1790,1.639,1791,2.676,1792,1.639,1793,2.676,1794,1.639,1795,2.676,1796,1.639,1797,2.676,1798,1.639,1799,2.676,1800,1.639,1801,2.676,1802,1.639,1803,2.676,1804,1.639,1805,2.676,1806,1.639,1807,2.676,1808,1.639,1809,2.676,1810,1.639,1811,1.639,1812,1.639,1813,2.676,1814,1.639,1815,2.676,1816,3.391,1817,6.955,1818,3.391,1819,3.391,1820,3.391,1821,3.391,1822,3.391,1823,3.391,1824,3.391,1825,3.391,1826,3.391,1827,3.391,1828,3.391,1829,3.391,1830,3.391,1831,3.391,1832,3.391,1833,3.391,1834,3.391,1835,3.391,1836,3.391,1837,1.639,1838,1.639,1839,3.391,1840,3.391,1841,3.391,1842,4.312,1843,1.639,1844,2.676,1845,1.639,1846,1.639,1847,1.639,1848,1.639,1849,1.639,1850,1.639,1851,1.639,1852,1.639,1853,1.639,1854,1.639,1855,1.639,1856,1.639,1857,1.639,1858,1.639,1859,3.913,1860,4.626,1861,3.391,1862,1.639,1863,1.639,1864,1.639,1865,1.639,1866,1.639,1867,1.639,1868,1.639,1869,2.676,1870,1.639,1871,1.639,1872,1.639,1873,1.639,1874,1.639,1875,1.639,1876,1.639,1877,1.639,1878,1.639,1879,2.676,1880,2.676,1881,2.676,1882,2.676,1883,1.639,1884,1.639,1885,1.639,1886,3.391,1887,3.391,1888,3.391,1889,3.391,1890,3.391,1891,3.391,1892,3.391,1893,1.639]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":252,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["0000",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06:34:00",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":261,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["1.1.8",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1574,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":758,"title":{},"body":{"injectables/AlarmService.html":{}}}],["10/10",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":754,"title":{},"body":{"injectables/AlarmService.html":{}}}],["11",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11/11",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1004,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["1267252440000",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14/14",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1758,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":1005,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["16/16",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1006,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["18",{"_index":1007,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["19",{"_index":1008,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["19/19",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":344,"title":{},"body":{"classes/Alarm.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":724,"title":{},"body":{"injectables/AlarmService.html":{}}}],["2007",{"_index":1627,"title":{},"body":{"license.html":{}}}],["201",{"_index":720,"title":{},"body":{"injectables/AlarmService.html":{}}}],["2010",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23/23",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26/26",{"_index":1523,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":1625,"title":{},"body":{"license.html":{}}}],["3",{"_index":346,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":348,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.1",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["41",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4d0",{"_index":1728,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":1729,"title":{},"body":{"license.html":{}}}],["5",{"_index":349,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":351,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["6.0.0",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["6.0.4",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":353,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["7/7",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1003,"title":{},"body":{"classes/DisplayedAlarm.html":{},"overview.html":{}}}],["8/8",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["9650",{"_index":1313,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["_",{"_index":534,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_alarm",{"_index":924,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["_descript",{"_index":925,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["_nodedata",{"_index":535,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":536,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":539,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_setfilteractiv",{"_index":1326,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["_url",{"_index":926,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["accept",{"_index":1751,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":338,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["accompani",{"_index":1706,"title":{},"body":{"license.html":{}}}],["accord",{"_index":220,"title":{},"body":{"components/AckModalComponent.html":{},"classes/DisplayedAlarm.html":{}}}],["ack",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackfromselect",{"_index":155,"title":{},"body":{"components/AckModalComponent.html":{}}}],["acklist",{"_index":486,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ackmod",{"_index":101,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["ackmodal.componentinstance.alarm",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["ackmodalcompon",{"_index":87,"title":{"components/AckModalComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acknowledg",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"modules/SharedModule.html":{},"components/ShelveModalComponent.html":{}}}],["acknowledgealarm",{"_index":610,"title":{},"body":{"injectables/AlarmService.html":{}}}],["acknowledgealarms(alarms_id",{"_index":626,"title":{},"body":{"injectables/AlarmService.html":{}}}],["acksuccess",{"_index":156,"title":{},"body":{"components/AckModalComponent.html":{}}}],["acksuccessful(alarm",{"_index":189,"title":{},"body":{"components/AckModalComponent.html":{}}}],["acktreecompon",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":191,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/HttpClientService.html":{},"modules/SharedModule.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["activ",{"_index":1356,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["activatedrout",{"_index":1339,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["activemod",{"_index":151,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["actual_compon",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["add",{"_index":656,"title":{},"body":{"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{}}}],["addit",{"_index":1644,"title":{},"body":{"license.html":{}}}],["address",{"_index":1740,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":1323,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm",{"_index":32,"title":{"classes/Alarm.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["alarm'},{'nam",{"_index":119,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm(alarm",{"_index":970,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ack",{"_index":988,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.acknowledg",{"_index":715,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm.asalarm(obj",{"_index":727,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm.component.css",{"_index":404,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.html",{"_index":405,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.core_timestamp",{"_index":396,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.depend",{"_index":548,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies.length",{"_index":546,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.descript",{"_index":1445,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.getvalidityasstr",{"_index":987,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.getvalueasstring().split('_",{"_index":984,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.mod",{"_index":391,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["alarm.nam",{"_index":1443,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.servic",{"_index":918,"title":{},"body":{"modules/DataModule.html":{}}}],["alarm.shelv",{"_index":722,"title":{},"body":{"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{}}}],["alarm.state_change_timestamp",{"_index":341,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.t",{"_index":923,"title":{},"body":{"classes/DisplayedAlarm.html":{},"coverage.html":{}}}],["alarm.timestamp",{"_index":1444,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.ts:105",{"_index":942,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:12",{"_index":934,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:15",{"_index":931,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:150",{"_index":937,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:31",{"_index":949,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:38",{"_index":947,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:43",{"_index":953,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:48",{"_index":951,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:53",{"_index":957,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:58",{"_index":955,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:64",{"_index":959,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:69",{"_index":961,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:77",{"_index":962,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:86",{"_index":964,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:9",{"_index":932,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:94",{"_index":945,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.unshelv",{"_index":725,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm.valu",{"_index":393,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm/alarm.compon",{"_index":1227,"title":{},"body":{"modules/SharedModule.html":{}}}],["alarm?.core_id",{"_index":264,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["alarm_id",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveButtonComponent.html":{}}}],["alarmchangestream",{"_index":606,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarmcompon",{"_index":118,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmcoreid",{"_index":865,"title":{},"body":{"injectables/CdbService.html":{}}}],["alarmid",{"_index":688,"title":{},"body":{"injectables/AlarmService.html":{},"components/HealthSummaryComponent.html":{}}}],["alarmimageset",{"_index":412,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarmitemflatnod",{"_index":452,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":476,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":589,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarms_d",{"_index":1531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarms_id",{"_index":628,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarmservic",{"_index":43,"title":{"injectables/AlarmService.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservicesubscript",{"_index":1023,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["alarmsiasiosdata",{"_index":899,"title":{},"body":{"injectables/CdbService.html":{}}}],["alarmsiasiosdata.foreach(iasio",{"_index":902,"title":{},"body":{"injectables/CdbService.html":{}}}],["alarmslist",{"_index":657,"title":{},"body":{"injectables/AlarmService.html":{},"components/TabularViewComponent.html":{}}}],["alarmstoack",{"_index":152,"title":{},"body":{"components/AckModalComponent.html":{}}}],["alarmstoackfromselect",{"_index":483,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":1276,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["allow",{"_index":1639,"title":{},"body":{"license.html":{}}}],["alreadi",{"_index":1721,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1665,"title":{},"body":{"license.html":{}}}],["angular",{"_index":478,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{},"injectables/RoutingService.html":{},"index.html":{}}}],["angular/anim",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collect",{"_index":466,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["angular/cdk/tre",{"_index":468,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":1595,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":807,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":814,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":226,"title":{},"body":{"components/AckModalComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1395,"title":{},"body":{"components/TabularViewComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1122,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":1126,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1133,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1124,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":1110,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":1130,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":1112,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":1114,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1128,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":1116,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":1118,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":1120,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1135,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":471,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":809,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":817,"title":{},"body":{"modules/AppModule.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"dependencies.html":{}}}],["antenna",{"_index":1188,"title":{},"body":{"components/OverviewComponent.html":{}}}],["api",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/ia",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/shelv",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/tickets/acknowledg",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/tickets/old_open_info",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":833,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":766,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":765,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":806,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":120,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1037,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["applic",{"_index":763,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["applicaiton",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":1101,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["applyfilt",{"_index":1334,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["applyfilter(filt",{"_index":1341,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["appmodul",{"_index":789,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":838,"title":{},"body":{"modules/AppModule.html":{}}}],["archiv",{"_index":1242,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["argument",{"_index":1678,"title":{},"body":{"license.html":{}}}],["array",{"_index":1368,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilt",{"_index":1432,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.indexof(this.filtervalueforsetalarm",{"_index":1434,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.splice(indexofset",{"_index":1442,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["artifact",{"_index":1607,"title":{},"body":{"index.html":{}}}],["asalarm",{"_index":280,"title":{},"body":{"classes/Alarm.html":{}}}],["asalarm(json",{"_index":319,"title":{},"body":{"classes/Alarm.html":{}}}],["asc",{"_index":1406,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["asiasio",{"_index":1142,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":1150,"title":{},"body":{"classes/Iasio.html":{}}}],["asset",{"_index":1055,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assets.icon",{"_index":1064,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["assets/img",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associ",{"_index":410,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"classes/Iasio.html":{},"modules/OverviewModule.html":{}}}],["asterisc",{"_index":1269,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["attribut",{"_index":293,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{}}}],["author",{"_index":1753,"title":{},"body":{"license.html":{}}}],["automat",{"_index":1602,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1382,"title":{},"body":{"components/TabularViewComponent.html":{},"index.html":{},"modules.html":{}}}],["b",{"_index":1688,"title":{},"body":{"license.html":{}}}],["backend",{"_index":639,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["backendurl",{"_index":683,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["backendurls.tickets_info",{"_index":716,"title":{},"body":{"injectables/AlarmService.html":{}}}],["base",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["be",{"_index":1673,"title":{},"body":{"license.html":{}}}],["becom",{"_index":1357,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["befor",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":474,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["behaviorsubject(fals",{"_index":672,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["behaviorsubject(tru",{"_index":667,"title":{},"body":{"injectables/AlarmService.html":{}}}],["below",{"_index":1646,"title":{},"body":{"license.html":{}}}],["bind",{"_index":1358,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["black",{"_index":1310,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["boolean",{"_index":200,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["bootstrap",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"modules/AppModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{}}}],["both",{"_index":1702,"title":{},"body":{"license.html":{}}}],["bound",{"_index":1674,"title":{},"body":{"license.html":{}}}],["branch",{"_index":1585,"title":{},"body":{"index.html":{}}}],["broadcastfactor",{"_index":748,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["brows",{"_index":1756,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":810,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browser/anim",{"_index":824,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":823,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":808,"title":{},"body":{"modules/AppModule.html":{}}}],["bti",{"_index":1222,"title":{},"body":{"modules/SharedModule.html":{}}}],["build",{"_index":290,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":552,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["button",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":1225,"title":{},"body":{"modules/SharedModule.html":{}}}],["button.component.css",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":1506,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:20",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":1508,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:25",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:30",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:42",{"_index":1237,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:46",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:50",{"_index":1233,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:54",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:62",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:65",{"_index":1236,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:72",{"_index":1238,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":1228,"title":{},"body":{"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":1230,"title":{},"body":{"modules/SharedModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["c",{"_index":1629,"title":{},"body":{"license.html":{}}}],["cach",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":966,"title":{},"body":{"classes/DisplayedAlarm.html":{},"components/ShelveModalComponent.html":{},"license.html":{}}}],["canacknowledg",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["cancel",{"_index":272,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["cansend",{"_index":1245,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["card",{"_index":1175,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card'},{'nam",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":1199,"title":{},"body":{"modules/OverviewModule.html":{}}}],["card.component.css",{"_index":1178,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.html",{"_index":1179,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":1173,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:12",{"_index":1180,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:18",{"_index":1181,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card/overview",{"_index":1172,"title":{},"body":{"components/OverviewCardComponent.html":{},"modules/OverviewModule.html":{},"coverage.html":{}}}],["catch",{"_index":745,"title":{},"body":{"injectables/AlarmService.html":{}}}],["cdb",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdb.servic",{"_index":919,"title":{},"body":{"modules/DataModule.html":{}}}],["cdb_ia",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdbapiurl",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdbservic",{"_index":165,"title":{"injectables/CdbService.html":{}},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cdbservicesubscript",{"_index":1327,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["center",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["cento",{"_index":1577,"title":{},"body":{"index.html":{}}}],["central",{"_index":1201,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":1744,"title":{},"body":{"license.html":{}}}],["chang",{"_index":311,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"index.html":{},"license.html":{}}}],["changealarm",{"_index":611,"title":{},"body":{"injectables/AlarmService.html":{}}}],["changealarms(ani",{"_index":629,"title":{},"body":{"injectables/AlarmService.html":{}}}],["channel",{"_index":677,"title":{},"body":{"injectables/AlarmService.html":{},"dependencies.html":{}}}],["check",{"_index":212,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"classes/Iasio.html":{},"components/ShelveModalComponent.html":{},"index.html":{}}}],["checkbox",{"_index":477,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":505,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":506,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["child",{"_index":217,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":209,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["choic",{"_index":1691,"title":{},"body":{"license.html":{}}}],["choos",{"_index":1745,"title":{},"body":{"license.html":{}}}],["class",{"_index":93,"title":{"classes/Alarm.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["class=\"sect",{"_index":271,"title":{},"body":{"components/AckModalComponent.html":{}}}],["classes.push('blink",{"_index":1306,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["classes.push('statu",{"_index":1298,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["clear",{"_index":316,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["clear.svg",{"_index":1066,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["clear_unreli",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":1572,"title":{},"body":{"index.html":{}}}],["click",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["client",{"_index":1075,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":684,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{}}}],["client.service.t",{"_index":1073,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:12",{"_index":1081,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:21",{"_index":1087,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:30",{"_index":1085,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:44",{"_index":1091,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:58",{"_index":1093,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:71",{"_index":1083,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["close",{"_index":196,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/ShelveModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_appmodul",{"_index":791,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":794,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":792,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":793,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":913,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":914,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_healthmodul",{"_index":1009,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_declar",{"_index":1010,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_export",{"_index":1012,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_import",{"_index":1011,"title":{},"body":{"modules/HealthModule.html":{}}}],["cluster_overviewmodul",{"_index":1191,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_declar",{"_index":1192,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_export",{"_index":1194,"title":{},"body":{"modules/OverviewModule.html":{},"overview.html":{}}}],["cluster_overviewmodule_import",{"_index":1193,"title":{},"body":{"modules/OverviewModule.html":{}}}],["cluster_sharedmodul",{"_index":1215,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1216,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1218,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1217,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tabularmodul",{"_index":1314,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_declar",{"_index":1315,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_export",{"_index":1317,"title":{},"body":{"modules/TabularModule.html":{},"overview.html":{}}}],["cluster_tabularmodule_import",{"_index":1316,"title":{},"body":{"modules/TabularModule.html":{}}}],["cluster_weathermodul",{"_index":1446,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":1447,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":1449,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":1448,"title":{},"body":{"modules/WeatherModule.html":{}}}],["code",{"_index":1604,"title":{},"body":{"index.html":{},"license.html":{}}}],["collectionview",{"_index":1396,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["color",{"_index":1307,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["column",{"_index":940,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["combin",{"_index":1652,"title":{},"body":{"license.html":{}}}],["commonmodul",{"_index":917,"title":{},"body":{"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["compar",{"_index":1375,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["comparecurrentandlastreceivedmessagetimestamp",{"_index":612,"title":{},"body":{"injectables/AlarmService.html":{}}}],["compat",{"_index":1564,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["complementari",{"_index":175,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["complet",{"_index":643,"title":{},"body":{"injectables/AlarmService.html":{}}}],["compodoc",{"_index":1619,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["comput",{"_index":1724,"title":{},"body":{"license.html":{}}}],["concern",{"_index":1742,"title":{},"body":{"license.html":{}}}],["condit",{"_index":1642,"title":{},"body":{"license.html":{}}}],["configur",{"_index":848,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["connect",{"_index":603,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["connectionpath",{"_index":706,"title":{},"body":{"injectables/AlarmService.html":{}}}],["connectionstatusstream",{"_index":607,"title":{},"body":{"injectables/AlarmService.html":{}}}],["consid",{"_index":1587,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.error('an",{"_index":1095,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.log('ack",{"_index":235,"title":{},"body":{"components/AckModalComponent.html":{}}}],["console.log('connect",{"_index":710,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('error",{"_index":246,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["console.log('notifi",{"_index":698,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('request",{"_index":703,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('shelv",{"_index":1262,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["console.log('unshelv",{"_index":1263,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["const",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(activemod",{"_index":162,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["constructor(alarm",{"_index":930,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["constructor(alarmservic",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["constructor(attribut",{"_index":288,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["constructor(cdbservic",{"_index":622,"title":{},"body":{"injectables/AlarmService.html":{}}}],["constructor(http",{"_index":1080,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["constructor(httpclientservic",{"_index":859,"title":{},"body":{"injectables/CdbService.html":{}}}],["constructor(priv",{"_index":509,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":1205,"title":{},"body":{"injectables/RoutingService.html":{}}}],["contain",{"_index":295,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["content",{"_index":537,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{}}}],["contract",{"_index":774,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":497,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["convert",{"_index":323,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":1671,"title":{},"body":{"license.html":{}}}],["copi",{"_index":321,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"license.html":{}}}],["copyright",{"_index":1628,"title":{},"body":{"license.html":{}}}],["core",{"_index":300,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":274,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["core_id'",{"_index":304,"title":{},"body":{"classes/Alarm.html":{}}}],["core_timestamp",{"_index":275,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/variables.html":{}}}],["coreid$1",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$11",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$12",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$13",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$14",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$15",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$2",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$21",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$22",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$23",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$24",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$25",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$3",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$31",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$32",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$33",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$34",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$35",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$4",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$40",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$41",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$42",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$43",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$44",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$45",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$46",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$47",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$48",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$49",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$5",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correspond",{"_index":335,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Iasio.html":{},"index.html":{},"license.html":{}}}],["coulmn",{"_index":1369,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["count",{"_index":258,"title":{},"body":{"components/AckModalComponent.html":{}}}],["cover",{"_index":1649,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":1510,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":211,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["critic",{"_index":998,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["critical.svg",{"_index":1067,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["critical_unreli",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crud",{"_index":1076,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["current",{"_index":415,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"index.html":{}}}],["custom",{"_index":1074,"title":{},"body":{"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["cycl",{"_index":636,"title":{},"body":{"injectables/AlarmService.html":{}}}],["d",{"_index":1715,"title":{},"body":{"license.html":{}}}],["dash",{"_index":1281,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":484,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["data).pip",{"_index":713,"title":{},"body":{"injectables/AlarmService.html":{}}}],["data.push(nod",{"_index":561,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data.tostringforfiltering().tolowercas",{"_index":1371,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["data/alarm",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/alarm.servic",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data/cdb.servic",{"_index":228,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["data/data.modul",{"_index":827,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{}}}],["data/display",{"_index":1397,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["data/http",{"_index":889,"title":{},"body":{"injectables/CdbService.html":{}}}],["data/iasio",{"_index":890,"title":{},"body":{"injectables/CdbService.html":{}}}],["data/routing.servic",{"_index":1054,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["data[0",{"_index":898,"title":{},"body":{"injectables/CdbService.html":{}}}],["data[1",{"_index":900,"title":{},"body":{"injectables/CdbService.html":{}}}],["databas",{"_index":374,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datafromcdb",{"_index":1423,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datafromcdb.descript",{"_index":1426,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datafromcdb.url",{"_index":1427,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datamodul",{"_index":795,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["datasourc",{"_index":504,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["datastr",{"_index":1370,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datastr.indexof(filt",{"_index":1373,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["date",{"_index":325,"title":{},"body":{"classes/Alarm.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["date()).gettim",{"_index":736,"title":{},"body":{"injectables/AlarmService.html":{}}}],["date(date.parse('27",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(t",{"_index":389,"title":{},"body":{"classes/Alarm.html":{}}}],["date).gettim",{"_index":674,"title":{},"body":{"injectables/AlarmService.html":{}}}],["date_format",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dateformat",{"_index":1328,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datepip",{"_index":818,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datepipe('en",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddthh:mm:ss",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deactiv",{"_index":1436,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["debug",{"_index":743,"title":{},"body":{"injectables/AlarmService.html":{},"license.html":{}}}],["decid",{"_index":1747,"title":{},"body":{"license.html":{}}}],["declar",{"_index":790,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":1384,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["deem",{"_index":1657,"title":{},"body":{"license.html":{}}}],["default",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["definealarmsandicon",{"_index":1026,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["definealarmsandimag",{"_index":1465,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["definit",{"_index":542,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["degrad",{"_index":350,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["delet",{"_index":653,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["delete(url",{"_index":1082,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":1097,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["depend",{"_index":186,"title":{"dependencies.html":{}},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["descend",{"_index":575,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":578,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":582,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":576,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":581,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["description(descript",{"_index":971,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["destroy",{"_index":1044,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["detail",{"_index":1739,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1600,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1576,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dictionari",{"_index":294,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"classes/Iasio.html":{}}}],["differ",{"_index":1738,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1606,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1609,"title":{},"body":{"index.html":{}}}],["disableacknowledg",{"_index":157,"title":{},"body":{"components/AckModalComponent.html":{}}}],["dispay",{"_index":1321,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["display",{"_index":402,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":1582,"title":{},"body":{"index.html":{}}}],["displayedalarm",{"_index":921,"title":{"classes/DisplayedAlarm.html":{}},"body":{"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[0",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[1",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[10",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[11",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[12",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[13",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[14",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[15",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[16",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[17",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[18",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[19",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[2",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[20",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[21",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[22",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[3",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[4",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[5",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[6",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[7",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[8",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[9",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedcolumn",{"_index":1329,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["dist",{"_index":1608,"title":{},"body":{"index.html":{}}}],["distinguish",{"_index":1743,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":1637,"title":{},"body":{"license.html":{}}}],["django",{"_index":676,"title":{},"body":{"injectables/AlarmService.html":{},"dependencies.html":{}}}],["doc_url",{"_index":1139,"title":{},"body":{"classes/Iasio.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":205,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/ShelveModalComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["done",{"_index":1251,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["doubl",{"_index":1146,"title":{},"body":{"classes/Iasio.html":{}}}],["dure",{"_index":1713,"title":{},"body":{"license.html":{}}}],["dynam",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":746,"title":{},"body":{"injectables/AlarmService.html":{},"license.html":{}}}],["e2",{"_index":1617,"title":{},"body":{"index.html":{}}}],["each",{"_index":1197,"title":{},"body":{"modules/OverviewModule.html":{},"license.html":{}}}],["effect",{"_index":1709,"title":{},"body":{"license.html":{}}}],["effort",{"_index":1682,"title":{},"body":{"license.html":{}}}],["element",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["enabl",{"_index":269,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["end",{"_index":1616,"title":{},"body":{"index.html":{}}}],["engin",{"_index":1712,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":1683,"title":{},"body":{"license.html":{}}}],["entrycompon",{"_index":1224,"title":{},"body":{"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["enum",{"_index":342,"title":{},"body":{"classes/Alarm.html":{}}}],["enumer",{"_index":1568,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":681,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.cdbapiurl",{"_index":883,"title":{},"body":{"injectables/CdbService.html":{}}}],["environment.websocketpath",{"_index":707,"title":{},"body":{"injectables/AlarmService.html":{}}}],["environments/environ",{"_index":682,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["error",{"_index":245,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{}}}],["etc",{"_index":1147,"title":{},"body":{"classes/Iasio.html":{},"components/ShelveModalComponent.html":{}}}],["evalu",{"_index":692,"title":{},"body":{"injectables/AlarmService.html":{}}}],["event",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":463,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["everyon",{"_index":1635,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":1223,"title":{},"body":{"modules/SharedModule.html":{}}}],["except",{"_index":741,"title":{},"body":{"injectables/AlarmService.html":{},"license.html":{}}}],["exclud",{"_index":1662,"title":{},"body":{"license.html":{}}}],["execut",{"_index":417,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"index.html":{},"license.html":{}}}],["expand",{"_index":458,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["expand/collaps",{"_index":498,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expect",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedfilteredtablerow",{"_index":1532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["expectedtablerow",{"_index":1533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["expectedtablerows[11",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[12",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[13",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[14",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[21",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[4",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["explain",{"_index":1733,"title":{},"body":{"license.html":{}}}],["export",{"_index":92,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extent",{"_index":1726,"title":{},"body":{"license.html":{}}}],["facil",{"_index":1676,"title":{},"body":{"license.html":{}}}],["factor",{"_index":872,"title":{},"body":{"injectables/CdbService.html":{}}}],["faith",{"_index":1681,"title":{},"body":{"license.html":{}}}],["fals",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["feb",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fewer",{"_index":1699,"title":{},"body":{"license.html":{}}}],["field",{"_index":213,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":882,"title":{},"body":{"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/variables.html":{}}}],["filter.replac",{"_index":1211,"title":{},"body":{"injectables/RoutingService.html":{}}}],["filter.split",{"_index":1433,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.tolowercas",{"_index":1438,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.trim",{"_index":1437,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtered_by_alarm",{"_index":880,"title":{},"body":{"injectables/CdbService.html":{}}}],["filterpred",{"_index":1330,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstr",{"_index":1331,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstring.tolowercase().split",{"_index":1372,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalu",{"_index":1413,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalue.replace('_",{"_index":1415,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalueforsetalarm",{"_index":1332,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["final",{"_index":195,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["find",{"_index":490,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["fix",{"_index":1213,"title":{},"body":{"injectables/RoutingService.html":{},"miscellaneous/variables.html":{}}}],["flag",{"_index":1611,"title":{},"body":{"index.html":{}}}],["flat",{"_index":455,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnod",{"_index":565,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":571,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":569,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":570,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":492,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":493,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":467,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":516,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["folder",{"_index":1589,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1588,"title":{},"body":{"index.html":{},"license.html":{}}}],["forkjoin",{"_index":886,"title":{},"body":{"injectables/CdbService.html":{}}}],["form",{"_index":153,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["format",{"_index":327,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["formbuild",{"_index":164,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["formcontrol",{"_index":225,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["formgroup",{"_index":221,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["formsmodul",{"_index":820,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["foundat",{"_index":1632,"title":{},"body":{"license.html":{}}}],["free",{"_index":1630,"title":{},"body":{"license.html":{}}}],["full",{"_index":842,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":180,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["further",{"_index":1620,"title":{},"body":{"index.html":{}}}],["futur",{"_index":1748,"title":{},"body":{"license.html":{}}}],["g",{"_index":1594,"title":{},"body":{"index.html":{}}}],["gener",{"_index":303,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"modules/OverviewModule.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":1346,"title":{"index.html":{},"license.html":{}},"body":{"components/TabularViewComponent.html":{}}}],["get(core_id",{"_index":640,"title":{},"body":{"injectables/AlarmService.html":{}}}],["get(url",{"_index":1084,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":1246,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["getalarm",{"_index":946,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getalarmdatafromcdbservic",{"_index":1335,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["getalarmdatafromcdbservice(core_id",{"_index":1344,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["getalarmdescript",{"_index":158,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{}}}],["getalarmdescription(alarmcoreid",{"_index":861,"title":{},"body":{"injectables/CdbService.html":{}}}],["getalarmlist",{"_index":613,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getalarmsiasiosdata",{"_index":855,"title":{},"body":{"injectables/CdbService.html":{}}}],["getalarmsinformationurl",{"_index":856,"title":{},"body":{"injectables/CdbService.html":{}}}],["getalarmsinformationurl(alarmcoreid",{"_index":867,"title":{},"body":{"injectables/CdbService.html":{}}}],["getalarmstatusord",{"_index":927,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getalarmstatusorder(valu",{"_index":935,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getalarmstatustagsstr",{"_index":928,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getalarmurl",{"_index":159,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["getbuttontooltiptext",{"_index":1232,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":531,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getconfigurationdata",{"_index":857,"title":{},"body":{"injectables/CdbService.html":{}}}],["getcontainerclass",{"_index":1277,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["getcoretimestampasd",{"_index":281,"title":{},"body":{"classes/Alarm.html":{}}}],["getdescript",{"_index":950,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getfilt",{"_index":1390,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["getimag",{"_index":406,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["getlevel",{"_index":526,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmissingack",{"_index":614,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getmissingacks(alarm_id",{"_index":644,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getmissingacksinfo",{"_index":160,"title":{},"body":{"components/AckModalComponent.html":{}}}],["getmod",{"_index":960,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getmodeasstr",{"_index":282,"title":{},"body":{"classes/Alarm.html":{}}}],["getnam",{"_index":958,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getrefreshrateparamet",{"_index":858,"title":{},"body":{"injectables/CdbService.html":{}}}],["getstatechangetimestampasd",{"_index":283,"title":{},"body":{"classes/Alarm.html":{}}}],["getstatu",{"_index":963,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getsymbolstyl",{"_index":1278,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["getter",{"_index":965,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["gettimestamp",{"_index":339,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{}}}],["gettogglestatu",{"_index":1393,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["gettreedatafromalarm(alarm",{"_index":540,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["geturl",{"_index":954,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getvalidityasstr",{"_index":284,"title":{},"body":{"classes/Alarm.html":{}}}],["getvalueasstr",{"_index":285,"title":{},"body":{"classes/Alarm.html":{}}}],["give",{"_index":1703,"title":{},"body":{"license.html":{}}}],["given",{"_index":525,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["global",{"_index":1062,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gmt",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gnu",{"_index":1623,"title":{},"body":{"license.html":{}}}],["go",{"_index":266,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["good",{"_index":1680,"title":{},"body":{"license.html":{}}}],["gototablefilteredbi",{"_index":1027,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1035,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["govern",{"_index":1651,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":1648,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1757,"title":{},"body":{"modules.html":{}}}],["group.github.io/ia",{"_index":1581,"title":{},"body":{"index.html":{}}}],["hammerj",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["handleerror",{"_index":1077,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1086,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["haschild",{"_index":533,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":538,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hastag",{"_index":1279,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["hastag(tag",{"_index":1287,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["header",{"_index":1100,"title":{},"body":{"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["health",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["health/health.modul",{"_index":828,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["healthmodul",{"_index":796,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["healthsummarycompon",{"_index":122,"title":{"components/HealthSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":489,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":742,"title":{},"body":{"injectables/AlarmService.html":{},"index.html":{}}}],["herein",{"_index":1647,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1309,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["high",{"_index":999,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["high_unreli",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":625,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"miscellaneous/variables.html":{}}}],["http://127.0.0.1:8000",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://127.0.0.1:8000/cdb",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1601,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":813,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientService.html":{}}}],["httpclientmodul",{"_index":812,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientservic",{"_index":623,"title":{"injectables/HttpClientService.html":{}},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"injectables/HttpClientService.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1094,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httpoption",{"_index":1099,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":1088,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":1634,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":1580,"title":{},"body":{"index.html":{}}}],["https://www.alma.cl",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpurl",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hum",{"_index":1497,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["humid",{"_index":1473,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["humidityalarm",{"_index":1453,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["humidityalarmid",{"_index":1454,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["humidityimageset",{"_index":1455,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["humidityimageunreliableset",{"_index":1456,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["ia",{"_index":299,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"index.html":{}}}],["ias_health",{"_index":1065,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["ias_typ",{"_index":1140,"title":{},"body":{"classes/Iasio.html":{},"miscellaneous/variables.html":{}}}],["iasalarmsiasio",{"_index":849,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasconfigur",{"_index":850,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasconfigurationdata",{"_index":897,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":851,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["iasdisplay",{"_index":1570,"title":{},"body":{"index.html":{}}}],["iasio",{"_index":864,"title":{"classes/Iasio.html":{}},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iasio(iasio",{"_index":904,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasioalarmsurl",{"_index":852,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasiourl",{"_index":853,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasmaterialmodul",{"_index":797,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":854,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":401,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/variables.html":{}}}],["iconset",{"_index":1024,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["iconunreliableset",{"_index":1025,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["id",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["identifi",{"_index":298,"title":{},"body":{"classes/Alarm.html":{},"injectables/CdbService.html":{},"coverage.html":{}}}],["imag",{"_index":407,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestous",{"_index":421,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.clear",{"_index":435,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.mainten",{"_index":432,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_crit",{"_index":443,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_high",{"_index":441,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_low",{"_index":437,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_medium",{"_index":439,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.shelv",{"_index":426,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.unknown",{"_index":429,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagesunreli",{"_index":408,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["implement",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":1633,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1666,"title":{},"body":{"license.html":{}}}],["incorpor",{"_index":1640,"title":{},"body":{"license.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexofset",{"_index":1441,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["indic",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inform",{"_index":176,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["init",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{}}}],["initi",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":874,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["inject",{"_index":48,"title":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{}},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":1697,"title":{},"body":{"license.html":{}}}],["input",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instal",{"_index":1586,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":1597,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":292,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":169,"title":{},"body":{"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instruct",{"_index":1575,"title":{},"body":{"index.html":{}}}],["integr",{"_index":781,"title":{},"body":{"components/AppComponent.html":{}}}],["interfac",{"_index":1654,"title":{},"body":{"license.html":{}}}],["intern",{"_index":933,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["internalobserv",{"_index":756,"title":{},"body":{"injectables/AlarmService.html":{}}}],["intervalobserv",{"_index":679,"title":{},"body":{"injectables/AlarmService.html":{}}}],["intervalobservable.create(1000",{"_index":757,"title":{},"body":{"injectables/AlarmService.html":{}}}],["invalid",{"_index":199,"title":{},"body":{"components/AckModalComponent.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/variables.html":{}}}],["invok",{"_index":1679,"title":{},"body":{"license.html":{}}}],["io_id",{"_index":891,"title":{},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"miscellaneous/variables.html":{}}}],["ionicon",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["iscompact",{"_index":767,"title":{},"body":{"components/AppComponent.html":{}}}],["isexpand",{"_index":529,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isol",{"_index":1664,"title":{},"body":{"license.html":{}}}],["isubscript",{"_index":1048,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["isvalidalarm",{"_index":286,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidalarm(json",{"_index":333,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidiasio",{"_index":1143,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":1152,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":456,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/variables.html":{}}}],["item.icon",{"_index":786,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":787,"title":{},"body":{"components/AppComponent.html":{}}}],["itself",{"_index":171,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["join",{"_index":976,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["jqueri",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":322,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{}}}],["json.hasownproperty('ack",{"_index":369,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_id",{"_index":363,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_timestamp",{"_index":366,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('depend",{"_index":371,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('doc_url",{"_index":1157,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":1156,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":1154,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('mod",{"_index":365,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('running_id",{"_index":364,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('shelv",{"_index":370,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('short_desc",{"_index":1155,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('state_change_timestamp",{"_index":367,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valid",{"_index":368,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valu",{"_index":362,"title":{},"body":{"classes/Alarm.html":{}}}],["json['ack",{"_index":383,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_id",{"_index":377,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_timestamp",{"_index":380,"title":{},"body":{"classes/Alarm.html":{}}}],["json['depend",{"_index":385,"title":{},"body":{"classes/Alarm.html":{}}}],["json['doc_url",{"_index":1162,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":1161,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":1159,"title":{},"body":{"classes/Iasio.html":{}}}],["json['mod",{"_index":379,"title":{},"body":{"classes/Alarm.html":{}}}],["json['running_id",{"_index":378,"title":{},"body":{"classes/Alarm.html":{}}}],["json['shelv",{"_index":384,"title":{},"body":{"classes/Alarm.html":{}}}],["json['short_desc",{"_index":1160,"title":{},"body":{"classes/Iasio.html":{}}}],["json['state_change_timestamp",{"_index":381,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valid",{"_index":382,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valu",{"_index":376,"title":{},"body":{"classes/Alarm.html":{}}}],["june",{"_index":1626,"title":{},"body":{"license.html":{}}}],["k",{"_index":553,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["karma",{"_index":1615,"title":{},"body":{"index.html":{}}}],["keep",{"_index":494,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["key",{"_index":256,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{}}}],["keyword",{"_index":1380,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["languag",{"_index":778,"title":{},"body":{"components/AppComponent.html":{}}}],["last",{"_index":330,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{}}}],["lastreceivedmessagetimestamp",{"_index":608,"title":{},"body":{"injectables/AlarmService.html":{}}}],["later",{"_index":564,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1694,"title":{},"body":{"license.html":{}}}],["legend",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":126,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":1168,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.css,legend.component.scss",{"_index":1164,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1165,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.scss",{"_index":1169,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":1319,"title":{},"body":{"modules/TabularModule.html":{}}}],["legendcompon",{"_index":125,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":1701,"title":{},"body":{"license.html":{}}}],["lesser",{"_index":1624,"title":{},"body":{"license.html":{}}}],["level",{"_index":459,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":104,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["librari",{"_index":1596,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":1622,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":635,"title":{},"body":{"injectables/AlarmService.html":{}}}],["limit",{"_index":1692,"title":{},"body":{"license.html":{}}}],["line",{"_index":1700,"title":{},"body":{"license.html":{}}}],["link",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["linux",{"_index":1578,"title":{},"body":{"index.html":{}}}],["list",{"_index":185,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":1034,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["liter",{"_index":670,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["load",{"_index":178,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["loadalarm",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["loadtabl",{"_index":1336,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["local",{"_index":1398,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locale.date_format",{"_index":1402,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locale.timezon",{"_index":1404,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locat",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":1001,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["low_unreli",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["macro",{"_index":1696,"title":{},"body":{"license.html":{}}}],["made",{"_index":193,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"license.html":{}}}],["main",{"_index":762,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewComponent.html":{},"components/StatusViewComponent.html":{}}}],["maint.svg",{"_index":1069,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["mainten",{"_index":347,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["maintenance_unreli",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":1653,"title":{},"body":{"license.html":{}}}],["manag",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["manner",{"_index":1719,"title":{},"body":{"license.html":{}}}],["map",{"_index":487,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["marker",{"_index":400,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["master",{"_index":1584,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":1121,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":1125,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":1132,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":479,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{},"license.html":{}}}],["material.modul",{"_index":826,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["material.module.t",{"_index":1107,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":825,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{}}}],["maticonmodul",{"_index":1123,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matinputmodul",{"_index":1109,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":1129,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1111,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1113,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenavmodul",{"_index":1127,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1115,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsort",{"_index":1383,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["matsortmodul",{"_index":1117,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattabl",{"_index":1387,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattabledatasourc",{"_index":1364,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattablemodul",{"_index":1119,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1134,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":470,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":518,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":469,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":511,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":1131,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max_seconds_without_messag",{"_index":749,"title":{},"body":{"injectables/AlarmService.html":{}}}],["mean",{"_index":1661,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1687,"title":{},"body":{"license.html":{}}}],["meant",{"_index":1221,"title":{},"body":{"modules/SharedModule.html":{}}}],["mechan",{"_index":1720,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1000,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["medium_unreli",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mention",{"_index":224,"title":{},"body":{"components/AckModalComponent.html":{}}}],["menu",{"_index":780,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":223,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["millisecondsdelta",{"_index":753,"title":{},"body":{"injectables/AlarmService.html":{}}}],["minim",{"_index":1660,"title":{},"body":{"license.html":{}}}],["miscellan",{"_index":1567,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":208,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{}}}],["missedack",{"_index":154,"title":{},"body":{"components/AckModalComponent.html":{}}}],["mm",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mock",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockalarm",{"_index":1527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockiasio",{"_index":1534,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockimageset",{"_index":1528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockimageunreliableset",{"_index":1529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal'},{'nam",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["modal.compon",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{}}}],["modal.component.css",{"_index":229,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.css,ack",{"_index":148,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.css,shelv",{"_index":1244,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.html",{"_index":150,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.scss",{"_index":149,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.t",{"_index":147,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:102",{"_index":183,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:107",{"_index":1260,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:123",{"_index":215,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:131",{"_index":1250,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:132",{"_index":201,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:139",{"_index":1254,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:140",{"_index":202,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:147",{"_index":198,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.ts:155",{"_index":1253,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:156",{"_index":206,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:23",{"_index":182,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.ts:28",{"_index":219,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.ts:33",{"_index":222,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:38",{"_index":168,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:39",{"_index":1261,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:49",{"_index":218,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:50",{"_index":1255,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:60",{"_index":210,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:61",{"_index":1257,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:72",{"_index":190,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:73",{"_index":1259,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:80",{"_index":187,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:84",{"_index":1258,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal/ack",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["modal/shelv",{"_index":1229,"title":{},"body":{"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"coverage.html":{}}}],["modalservic",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":276,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"components/LegendComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":418,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"modules/DataModule.html":{}}}],["modif",{"_index":1675,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":491,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"license.html":{}}}],["modul",{"_index":788,"title":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":1137,"title":{},"body":{"classes/Iasio.html":{}}}],["more",{"_index":543,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/OverviewComponent.html":{},"index.html":{}}}],["multipl",{"_index":508,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["multipli",{"_index":871,"title":{},"body":{"injectables/CdbService.html":{}}}],["name",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["navig",{"_index":1202,"title":{},"body":{"injectables/RoutingService.html":{},"index.html":{}}}],["nbsp",{"_index":1509,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["necessari",{"_index":1727,"title":{},"body":{"license.html":{}}}],["need",{"_index":944,"title":{},"body":{"classes/DisplayedAlarm.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":488,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":496,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["network",{"_index":1190,"title":{},"body":{"components/OverviewComponent.html":{}}}],["new",{"_index":291,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"modules/AppModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1337,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["ngbactivemod",{"_index":163,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["ngbmodal",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngbmodul",{"_index":819,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodule.forroot",{"_index":845,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":811,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/IasMaterialModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["ngondestroy",{"_index":1028,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["ngoninit",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":227,"title":{},"body":{"components/AckModalComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":822,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ngxspinnerservic",{"_index":167,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["noalarmstoack",{"_index":250,"title":{},"body":{"components/AckModalComponent.html":{}}}],["node",{"_index":457,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":559,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":530,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":556,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":527,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":1590,"title":{},"body":{"index.html":{}}}],["non",{"_index":633,"title":{},"body":{"injectables/AlarmService.html":{}}}],["none",{"_index":1689,"title":{},"body":{"license.html":{}}}],["normal",{"_index":502,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["noselecteddescendants(nod",{"_index":585,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":632,"title":{},"body":{"injectables/AlarmService.html":{},"modules/OverviewModule.html":{},"index.html":{}}}],["notic",{"_index":1705,"title":{},"body":{"license.html":{}}}],["notif",{"_index":661,"title":{},"body":{"injectables/AlarmService.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["notifi",{"_index":878,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["now",{"_index":752,"title":{},"body":{"injectables/AlarmService.html":{}}}],["npm",{"_index":1591,"title":{},"body":{"index.html":{}}}],["null",{"_index":232,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["number",{"_index":207,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"license.html":{}}}],["numer",{"_index":1693,"title":{},"body":{"license.html":{}}}],["obj",{"_index":651,"title":{},"body":{"injectables/AlarmService.html":{}}}],["object",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":361,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["object.entries(respons",{"_index":257,"title":{},"body":{"components/AckModalComponent.html":{}}}],["object.keys(this.alarmservice.alarms).map(function(key",{"_index":1422,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["observ",{"_index":473,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["observableforkjoin",{"_index":887,"title":{},"body":{"injectables/CdbService.html":{}}}],["occur",{"_index":1096,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["ofobserv",{"_index":472,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":532,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["old",{"_index":646,"title":{},"body":{"injectables/AlarmService.html":{}}}],["on",{"_index":544,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["on/off",{"_index":1354,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["onclick",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["onclick(ev",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ondestroy",{"_index":1019,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["open",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["oper",{"_index":268,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":305,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.mainten",{"_index":430,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["operationalmode.shuttedown",{"_index":431,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["operationalmode.unknown",{"_index":428,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["operationalmode[this.mod",{"_index":392,"title":{},"body":{"classes/Alarm.html":{}}}],["option",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["order",{"_index":941,"title":{},"body":{"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{}}}],["ot",{"_index":1343,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["otherwis",{"_index":1655,"title":{},"body":{"license.html":{}}}],["out",{"_index":804,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":464,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["overview",{"_index":128,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":131,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.component.css",{"_index":1184,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview.component.html",{"_index":1185,"title":{},"body":{"components/OverviewComponent.html":{}}}],["overview/overview.compon",{"_index":1198,"title":{},"body":{"modules/OverviewModule.html":{}}}],["overview/overview.modul",{"_index":829,"title":{},"body":{"modules/AppModule.html":{}}}],["overview/overview/overview.compon",{"_index":837,"title":{},"body":{"modules/AppModule.html":{}}}],["overviewcardcompon",{"_index":127,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":130,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewmodul",{"_index":798,"title":{"modules/OverviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["packag",{"_index":1540,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1507,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["par",{"_index":739,"title":{},"body":{"injectables/AlarmService.html":{}}}],["param",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["paramet",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["parent",{"_index":308,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["pars['broadcastfactor",{"_index":751,"title":{},"body":{"injectables/AlarmService.html":{}}}],["pars['refreshr",{"_index":750,"title":{},"body":{"injectables/AlarmService.html":{}}}],["part",{"_index":580,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":1659,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1210,"title":{},"body":{"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["path",{"_index":839,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":841,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":696,"title":{},"body":{"injectables/AlarmService.html":{}}}],["payload.data",{"_index":701,"title":{},"body":{"injectables/AlarmService.html":{}}}],["perform",{"_index":192,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{},"license.html":{}}}],["period",{"_index":731,"title":{},"body":{"injectables/AlarmService.html":{}}}],["perman",{"_index":1752,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":1645,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1636,"title":{},"body":{"license.html":{}}}],["pk",{"_index":372,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["place",{"_index":938,"title":{},"body":{"classes/DisplayedAlarm.html":{},"license.html":{}}}],["pleas",{"_index":1583,"title":{},"body":{"index.html":{}}}],["point",{"_index":1138,"title":{},"body":{"classes/Iasio.html":{}}}],["popper.j",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":1663,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":354,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["post",{"_index":1078,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":1090,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["power",{"_index":1189,"title":{},"body":{"components/OverviewComponent.html":{}}}],["present",{"_index":1722,"title":{},"body":{"license.html":{}}}],["primari",{"_index":373,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["prioriti",{"_index":936,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["priorities.indexof(prior",{"_index":1002,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["privat",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["problem",{"_index":1741,"title":{},"body":{"license.html":{}}}],["process",{"_index":1291,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["prod",{"_index":1610,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1658,"title":{},"body":{"license.html":{}}}],["product",{"_index":1612,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["program",{"_index":1668,"title":{},"body":{"license.html":{}}}],["project",{"_index":1571,"title":{},"body":{"index.html":{}}}],["promin",{"_index":1704,"title":{},"body":{"license.html":{}}}],["promis",{"_index":1089,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":1098,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["properli",{"_index":1725,"title":{},"body":{"license.html":{}}}],["properti",{"_index":30,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/variables.html":{}}}],["protractor",{"_index":1618,"title":{},"body":{"index.html":{}}}],["provid",{"_index":177,"title":{},"body":{"components/AckModalComponent.html":{},"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"components/ShelveModalComponent.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"license.html":{},"overview.html":{}}}],["proxi",{"_index":1746,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":1750,"title":{},"body":{"license.html":{}}}],["public",{"_index":33,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["publish",{"_index":1735,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":403,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":1292,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1079,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["put(url",{"_index":1092,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["rate",{"_index":738,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["re",{"_index":895,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":821,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["read",{"_index":521,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/TabularViewComponent.html":{}}}],["readalarmmessag",{"_index":615,"title":{},"body":{"injectables/AlarmService.html":{}}}],["readalarmmessage(act",{"_index":650,"title":{},"body":{"injectables/AlarmService.html":{}}}],["readalarmmessageslist",{"_index":616,"title":{},"body":{"injectables/AlarmService.html":{}}}],["readalarmmessageslist(alarmslist",{"_index":654,"title":{},"body":{"injectables/AlarmService.html":{}}}],["readm",{"_index":1621,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["recombin",{"_index":1717,"title":{},"body":{"license.html":{}}}],["record",{"_index":563,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":500,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":1268,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["redirect",{"_index":1030,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["redirectto",{"_index":840,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":170,"title":{},"body":{"components/AckModalComponent.html":{},"classes/DisplayedAlarm.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["refresh",{"_index":737,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["refreshr",{"_index":747,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["registri",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registries/unshelv",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relat",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["releas",{"_index":1579,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":356,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"components/LegendComponent.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":1718,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1603,"title":{},"body":{"index.html":{}}}],["remain",{"_index":1686,"title":{},"body":{"license.html":{}}}],["repetit",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repres",{"_index":315,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/StatusViewComponent.html":{}}}],["represent",{"_index":326,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{}}}],["reproduc",{"_index":1669,"title":{},"body":{"license.html":{}}}],["request",{"_index":174,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{},"miscellaneous/variables.html":{}}}],["requir",{"_index":1108,"title":{},"body":{"modules/IasMaterialModule.html":{},"index.html":{},"license.html":{}}}],["res[0",{"_index":893,"title":{},"body":{"injectables/CdbService.html":{}}}],["reset",{"_index":803,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["respect",{"_index":1468,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["respons",{"_index":188,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{}}}],["response['statu",{"_index":719,"title":{},"body":{"injectables/AlarmService.html":{}}}],["restrict",{"_index":1710,"title":{},"body":{"license.html":{}}}],["result",{"_index":145,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":1352,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["retun",{"_index":524,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":1174,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":1711,"title":{},"body":{"license.html":{}}}],["review",{"_index":634,"title":{},"body":{"injectables/AlarmService.html":{}}}],["revis",{"_index":1734,"title":{},"body":{"license.html":{}}}],["root",{"_index":764,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["root'},{'nam",{"_index":121,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":816,"title":{},"body":{"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["router",{"_index":1206,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routermodul",{"_index":815,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":844,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.servic",{"_index":920,"title":{},"body":{"modules/DataModule.html":{}}}],["routingservic",{"_index":915,"title":{"injectables/RoutingService.html":{}},"body":{"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["row",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1598,"title":{},"body":{"index.html":{},"license.html":{}}}],["running_id",{"_index":277,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":475,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"dependencies.html":{}}}],["rxjs/observable/intervalobserv",{"_index":680,"title":{},"body":{"injectables/AlarmService.html":{}}}],["rxjs/oper",{"_index":678,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["rxjs/rx",{"_index":888,"title":{},"body":{"injectables/CdbService.html":{}}}],["s",{"_index":262,"title":{},"body":{"components/AckModalComponent.html":{}}}],["same",{"_index":495,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["scaffold",{"_index":1605,"title":{},"body":{"index.html":{}}}],["search",{"_index":1289,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["section",{"_index":1670,"title":{},"body":{"license.html":{}}}],["select",{"_index":181,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{}}}],["select/deselect",{"_index":588,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":597,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":482,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel",{"_index":465,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":507,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["self",{"_index":1420,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["self.alarmservice.alarms[key",{"_index":1425,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["self.getalarmdatafromcdbservice(self.alarmservice.alarms[key].core_id",{"_index":1424,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["send",{"_index":173,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{}}}],["sendsuccess",{"_index":1247,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["sendsuccessful(alarm",{"_index":1256,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["sent",{"_index":1252,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["separ",{"_index":1040,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["serv",{"_index":1599,"title":{},"body":{"index.html":{}}}],["server",{"_index":1548,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["servic",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["set",{"_index":317,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/variables.html":{}}}],["set_crit",{"_index":360,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set_high",{"_index":359,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set_low",{"_index":357,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set_medium",{"_index":358,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["setalarm(alarm",{"_index":948,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["setdescription(descript",{"_index":952,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["seturl(url",{"_index":956,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["shall",{"_index":1749,"title":{},"body":{"license.html":{}}}],["share",{"_index":1220,"title":{},"body":{"modules/SharedModule.html":{},"license.html":{}}}],["shared/alarm/alarm.compon",{"_index":1053,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["shared/shared.modul",{"_index":830,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{}}}],["sharedmodul",{"_index":799,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["shelv",{"_index":133,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["shelve/unshelv",{"_index":1234,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["shelve_api",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shelvealarm",{"_index":617,"title":{},"body":{"injectables/AlarmService.html":{}}}],["shelvealarm(alarm_id",{"_index":658,"title":{},"body":{"injectables/AlarmService.html":{}}}],["shelvebuttoncompon",{"_index":132,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":1249,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["shelved_unreli",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shelvemod",{"_index":1239,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["shelvemodal.componentinstance.alarm",{"_index":1241,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["shelvemodalcompon",{"_index":134,"title":{"components/ShelveModalComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["short",{"_index":863,"title":{},"body":{"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{}}}],["short_desc",{"_index":1141,"title":{},"body":{"classes/Iasio.html":{},"miscellaneous/variables.html":{}}}],["show",{"_index":1176,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["shutteddown",{"_index":1170,"title":{},"body":{"components/LegendComponent.html":{}}}],["shuttedown",{"_index":345,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":1730,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":775,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenav",{"_index":776,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenavitem",{"_index":768,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":1736,"title":{},"body":{"license.html":{}}}],["singl",{"_index":1731,"title":{},"body":{"license.html":{}}}],["size",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["slide",{"_index":1359,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["small",{"_index":1695,"title":{},"body":{"license.html":{}}}],["softwar",{"_index":1631,"title":{},"body":{"license.html":{}}}],["sort",{"_index":939,"title":{},"body":{"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"modules/DataModule.html":{},"classes/DisplayedAlarm.html":{},"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/OverviewModule.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1039,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["special",{"_index":1031,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["specif",{"_index":1183,"title":{},"body":{"components/OverviewComponent.html":{},"components/StatusViewComponent.html":{}}}],["specifi",{"_index":1038,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"license.html":{}}}],["speed",{"_index":1480,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["spinner",{"_index":179,"title":{},"body":{"components/AckModalComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules/SharedModule.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":166,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["spirit",{"_index":1737,"title":{},"body":{"license.html":{}}}],["src/.../alarm.t",{"_index":1569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fixtures.t",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.t",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":761,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":783,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":777,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":779,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":771,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":772,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":773,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":805,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/data/alarm.service.t",{"_index":602,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{}}}],["src/app/data/alarm.service.ts:108",{"_index":637,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:122",{"_index":641,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:132",{"_index":627,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:154",{"_index":645,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:170",{"_index":659,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:193",{"_index":665,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:217",{"_index":642,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:229",{"_index":652,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:23",{"_index":675,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:244",{"_index":655,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:257",{"_index":662,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:269",{"_index":666,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:278",{"_index":631,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:29",{"_index":673,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:305",{"_index":660,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:34",{"_index":671,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:40",{"_index":668,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:46",{"_index":624,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:72",{"_index":630,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.service.ts:81",{"_index":649,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/data/alarm.t",{"_index":273,"title":{},"body":{"classes/Alarm.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/alarm.ts:110",{"_index":320,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:135",{"_index":340,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:144",{"_index":329,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:157",{"_index":318,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:167",{"_index":328,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:176",{"_index":332,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:185",{"_index":331,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:194",{"_index":324,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:209",{"_index":336,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:219",{"_index":337,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:43",{"_index":314,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:46",{"_index":297,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:49",{"_index":307,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:52",{"_index":306,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:55",{"_index":313,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:58",{"_index":301,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:61",{"_index":310,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:64",{"_index":296,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:67",{"_index":309,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:70",{"_index":289,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/alarm.ts:88",{"_index":334,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/data/cdb.service.t",{"_index":847,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/data/cdb.service.ts:103",{"_index":862,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:115",{"_index":868,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:19",{"_index":885,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:22",{"_index":884,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:25",{"_index":881,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:30",{"_index":877,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:35",{"_index":875,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:40",{"_index":860,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:54",{"_index":873,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:74",{"_index":869,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:82",{"_index":866,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/cdb.service.ts:91",{"_index":870,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/data/data.module.t",{"_index":916,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/display",{"_index":922,"title":{},"body":{"classes/DisplayedAlarm.html":{},"coverage.html":{}}}],["src/app/data/http",{"_index":1072,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/data/iasio.t",{"_index":1136,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/data/iasio.ts:10",{"_index":1149,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:13",{"_index":1145,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:16",{"_index":1144,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:34",{"_index":1153,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:50",{"_index":1151,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/iasio.ts:7",{"_index":1148,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/data/routing.service.t",{"_index":1200,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/data/routing.service.ts:20",{"_index":1209,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/data/routing.service.ts:8",{"_index":1207,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/health/health",{"_index":1016,"title":{},"body":{"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["src/app/health/health.module.t",{"_index":1013,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/app/ia",{"_index":1106,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["src/app/overview/overview",{"_index":1171,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.module.t",{"_index":1195,"title":{},"body":{"modules/OverviewModule.html":{}}}],["src/app/overview/overview/overview.component.t",{"_index":1182,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview/overview.component.ts:11",{"_index":1186,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview/overview.component.ts:17",{"_index":1187,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/settings.t",{"_index":1519,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/ack",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.t",{"_index":399,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/shared/alarm/alarm.component.ts:12",{"_index":449,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:15",{"_index":450,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:18",{"_index":448,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:21",{"_index":447,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:24",{"_index":451,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:27",{"_index":446,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:30",{"_index":444,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/alarm.component.ts:56",{"_index":411,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:61",{"_index":413,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:66",{"_index":409,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:76",{"_index":416,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:82",{"_index":414,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/shared/alarm/alarm.component.ts:9",{"_index":445,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/shared/alarm/fixtures.t",{"_index":1526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/shared.module.t",{"_index":1219,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/shelv",{"_index":1231,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"coverage.html":{}}}],["src/app/shared/wiki",{"_index":1505,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.t",{"_index":1163,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/tabular/legend/legend.component.ts:11",{"_index":1166,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/legend/legend.component.ts:17",{"_index":1167,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/tabular/statu",{"_index":1271,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular/tabular",{"_index":1320,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/tabular/tabular.module.t",{"_index":1318,"title":{},"body":{"modules/TabularModule.html":{}}}],["src/app/weather/weath",{"_index":1452,"title":{},"body":{"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":1450,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/environments/environment.prod.t",{"_index":1537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1538,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssuccesfulli",{"_index":194,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["start",{"_index":638,"title":{"index.html":{},"license.html":{}},"body":{"injectables/AlarmService.html":{},"components/TabularViewComponent.html":{}}}],["startlastreceivedmessagetimestampcheck",{"_index":618,"title":{},"body":{"injectables/AlarmService.html":{}}}],["startup",{"_index":343,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":312,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["state_change_timestamp",{"_index":278,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1511,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":279,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["statu",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":419,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["statusviewcompon",{"_index":135,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":1684,"title":{},"body":{"license.html":{}}}],["storageitem",{"_index":1521,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":876,"title":{},"body":{"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":669,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["streamnam",{"_index":697,"title":{},"body":{"injectables/AlarmService.html":{}}}],["string",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["structur",{"_index":550,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["style",{"_index":1284,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":551,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subclass",{"_index":1656,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":759,"title":{},"body":{"injectables/AlarmService.html":{},"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subscribe((data",{"_index":896,"title":{},"body":{"injectables/CdbService.html":{}}}],["subscript",{"_index":1049,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subscriptionlik",{"_index":1052,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subsystem",{"_index":1177,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["subtre",{"_index":499,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["success",{"_index":236,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["sucessfulli",{"_index":197,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["such",{"_index":1690,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":1592,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":1716,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1018,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/OverviewCardComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summari",{"_index":1020,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary'},{'nam",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["summary.compon",{"_index":1015,"title":{},"body":{"modules/HealthModule.html":{},"modules/WeatherModule.html":{}}}],["summary.component.css",{"_index":1021,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.html",{"_index":1022,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.t",{"_index":1017,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["summary.component.ts:100",{"_index":1036,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:104",{"_index":1467,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:187",{"_index":1469,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:20",{"_index":1050,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:23",{"_index":1051,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:26",{"_index":1046,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:29",{"_index":1047,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:32",{"_index":1029,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:35",{"_index":1482,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:38",{"_index":1472,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:41",{"_index":1475,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:44",{"_index":1478,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:47",{"_index":1474,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:48",{"_index":1045,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:50",{"_index":1477,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:53",{"_index":1481,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:56",{"_index":1466,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:60",{"_index":1042,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:67",{"_index":1033,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["summary.component.ts:72",{"_index":1471,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary.component.ts:97",{"_index":1470,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["summary/health",{"_index":1014,"title":{},"body":{"modules/HealthModule.html":{},"components/HealthSummaryComponent.html":{},"coverage.html":{}}}],["summary/weath",{"_index":1451,"title":{},"body":{"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{}}}],["supplement",{"_index":1643,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":1677,"title":{},"body":{"license.html":{}}}],["support",{"_index":1754,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1755,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1360,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["symbol",{"_index":1286,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["system",{"_index":782,"title":{},"body":{"components/AppComponent.html":{},"injectables/CdbService.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"license.html":{}}}],["tabl",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table'",{"_index":1349,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":1204,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":1208,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":139,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":843,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular",{"_index":834,"title":{},"body":{"modules/AppModule.html":{}}}],["tabular/tabular.modul",{"_index":831,"title":{},"body":{"modules/AppModule.html":{}}}],["tabularmodul",{"_index":800,"title":{"modules/TabularModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"modules.html":{},"overview.html":{}}}],["tabularviewcompon",{"_index":138,"title":{"components/TabularViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":943,"title":{},"body":{"classes/DisplayedAlarm.html":{},"components/StatusViewComponent.html":{}}}],["tags.join",{"_index":997,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.length",{"_index":1294,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["tags.push('ack",{"_index":995,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push('shelv",{"_index":996,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(alarm.getmodeasstr",{"_index":991,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(ord",{"_index":990,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(prior",{"_index":993,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(valid",{"_index":994,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(valu",{"_index":992,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["taken",{"_index":1707,"title":{},"body":{"license.html":{}}}],["target",{"_index":648,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/HttpClientService.html":{}}}],["temp",{"_index":1499,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["tempalarm",{"_index":1457,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["tempalarmid",{"_index":1458,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["temperatur",{"_index":1476,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["tempimageset",{"_index":1459,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["tempimageunreliableset",{"_index":1460,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":1698,"title":{},"body":{"license.html":{}}}],["term",{"_index":1641,"title":{},"body":{"license.html":{}}}],["test",{"_index":1377,"title":{},"body":{"components/TabularViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":260,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["textfield",{"_index":1378,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this._alarm",{"_index":967,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._alarm.core_id",{"_index":973,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._alarm.getmodeasstr",{"_index":974,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._alarm.timestamp",{"_index":975,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._descript",{"_index":968,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._setfilteractiv",{"_index":1435,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this._url",{"_index":969,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.ack",{"_index":390,"title":{},"body":{"classes/Alarm.html":{}}}],["this.acklist",{"_index":595,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":598,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acksuccessful(respons",{"_index":243,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.activemodal.clos",{"_index":237,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.alarm",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.alarm.ack",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.alarm.core_id",{"_index":241,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.alarm.mod",{"_index":427,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.alarm.shelv",{"_index":425,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.alarm.valid",{"_index":423,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.alarm.valu",{"_index":433,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.alarmchangestream.next(ani",{"_index":687,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarmid",{"_index":1059,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarms.hasownproperty(core_id",{"_index":732,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms[alarm.core_id",{"_index":728,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms[core_id",{"_index":711,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms[core_id]['valid",{"_index":733,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarmservice.acknowledgealarm",{"_index":240,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.alarmservice.alarmchangestream.subscribe(notif",{"_index":1058,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.get(notif",{"_index":1491,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.alarmservice.get(this.alarmid",{"_index":1060,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.alarmservice.get(this.humidityalarmid",{"_index":1485,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.get(this.tempalarmid",{"_index":1487,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.get(this.windsalarmid",{"_index":1489,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.alarmservice.getmissingacks(this.alarm.core_id).subscrib",{"_index":255,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.alarmservice.initi",{"_index":784,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.shelvealarm",{"_index":1266,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":1270,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.alarmservicesubscript",{"_index":1057,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.alarmservicesubscription.unsubscrib",{"_index":1061,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.alarmslist",{"_index":1421,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmstoack",{"_index":247,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.alarmstoack.length",{"_index":251,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":599,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmtag",{"_index":1296,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmtags.indexof(tag",{"_index":1312,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmtags.push(tag",{"_index":1295,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.applyfilter(filtervalu",{"_index":1416,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.buildfiletree(this.gettreedatafromalarm(this.selectedalarm",{"_index":523,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":560,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledg",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":1265,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.cdbservice.getalarmdescription(core_id",{"_index":1429,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.cdbservice.getalarmdescription(this.alarm.core_id",{"_index":248,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.cdbservice.getalarmsinformationurl(core_id",{"_index":1430,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.cdbservice.getalarmsinformationurl(this.alarm.core_id",{"_index":249,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.cdbservice.getrefreshrateparamet",{"_index":744,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.cdbservice.iasdataavailable.subscrib",{"_index":1410,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.cdbservice.initi",{"_index":694,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.cdbservicesubscript",{"_index":1409,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.cdbservicesubscription.unsubscrib",{"_index":1419,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.changealarms('al",{"_index":730,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.changealarms(alarm.core_id",{"_index":729,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":593,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":586,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":579,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":591,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscribe(data",{"_index":519,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":596,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":592,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":584,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":590,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.comparecurrentandlastreceivedmessagetimestamp",{"_index":760,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.connect",{"_index":689,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.connectionstatusstream.next(fals",{"_index":755,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.connectionstatusstream.next(tru",{"_index":691,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.connectionstatusstream.subscrib",{"_index":685,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.core_timestamp",{"_index":397,"title":{},"body":{"classes/Alarm.html":{}}}],["this.datasourc",{"_index":517,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.data",{"_index":522,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.filt",{"_index":1439,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.filterpred",{"_index":1407,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.sort",{"_index":1417,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.dateformat",{"_index":1401,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.definealarmsandicon",{"_index":1056,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.definealarmsandimag",{"_index":1483,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.descendantsallselected(nod",{"_index":583,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.descript",{"_index":979,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.filterpred",{"_index":1408,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstr",{"_index":1431,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstring.split",{"_index":1440,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":572,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.form",{"_index":230,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.form.get('message').value).subscrib",{"_index":242,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.form.valid",{"_index":239,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.formbuilder.group",{"_index":231,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.get(alarm_id",{"_index":721,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.get(id",{"_index":714,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.getalarmlist",{"_index":693,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.getalarmsiasiosdata().pipe(map((r",{"_index":894,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getalarmstatusorder(valu",{"_index":989,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.getalarmstatustagsstr",{"_index":977,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.getchildren",{"_index":514,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().pipe(map((r",{"_index":892,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getlevel",{"_index":512,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmissingacksinfo",{"_index":234,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.getstatechangetimestampasd",{"_index":386,"title":{},"body":{"classes/Alarm.html":{}}}],["this.hastag('ack",{"_index":1305,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('clear",{"_index":1302,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('mainten",{"_index":1299,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('set",{"_index":1303,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('shelv",{"_index":1297,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('shuttedown",{"_index":1300,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('unknown",{"_index":1301,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('unreli",{"_index":1304,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.http.delete(url",{"_index":1105,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(url",{"_index":1102,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(url",{"_index":1103,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.put(url",{"_index":1104,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclientservice.get(this.iasioalarmsurl",{"_index":907,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":906,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(url).pip",{"_index":717,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.httpclientservice.post(backendurls.shelve_api",{"_index":718,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.httpclientservice.put(backendurls.tickets_multiple_ack",{"_index":712,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.httpclientservice.put(backendurls.unshelve_api",{"_index":723,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.humidityalarm",{"_index":1484,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.humidityalarmid",{"_index":1492,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.humidityimageset",{"_index":1496,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.humidityimageunreliableset",{"_index":1502,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.iasalarmsiasio",{"_index":910,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasalarmsiasios[alarmcoreid].doc_url",{"_index":912,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasalarmsiasios[alarmcoreid].short_desc",{"_index":911,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasalarmsiasios[iasio.io_id",{"_index":903,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfigur",{"_index":901,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['broadcast_factor",{"_index":909,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['refresh_r",{"_index":908,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.getvalu",{"_index":1428,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.iasdataavailable.next(tru",{"_index":905,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(valu",{"_index":1411,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.iasiourl",{"_index":879,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1063,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.iconunreliableset",{"_index":1070,"title":{},"body":{"components/HealthSummaryComponent.html":{}}}],["this.imag",{"_index":422,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.imagesunreli",{"_index":424,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.imagesunreliable.unknown",{"_index":420,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.iscompact",{"_index":785,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isexpand",{"_index":513,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isvalidalarm(json",{"_index":375,"title":{},"body":{"classes/Alarm.html":{}}}],["this.isvalidiasio(json",{"_index":1158,"title":{},"body":{"classes/Iasio.html":{}}}],["this.lastreceivedmessagetimestamp",{"_index":735,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.loadalarm",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.loadt",{"_index":1412,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.missedack",{"_index":254,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.missedacks.push(text",{"_index":263,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.mod",{"_index":981,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.modalservice.open(ackmodalcompon",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.modalservice.open(shelvemodalcompon",{"_index":1240,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.nam",{"_index":980,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.nestednodemap.get(nod",{"_index":567,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":568,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":566,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":573,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.readalarmmessage(payload.act",{"_index":700,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.readalarmmessageslist(payload.data",{"_index":704,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.route.snapshot.parammap.get('filt",{"_index":1414,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.router.navigate(['/tabular",{"_index":1214,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1071,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["this.sendsuccessful(respons",{"_index":1267,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.shelv",{"_index":398,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveModalComponent.html":{}}}],["this.sort",{"_index":1418,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.sort.sort",{"_index":1405,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.spinnerservice.hid",{"_index":244,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.spinnerservice.show",{"_index":238,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.startlastreceivedmessagetimestampcheck",{"_index":705,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.state_change_timestamp",{"_index":388,"title":{},"body":{"classes/Alarm.html":{}}}],["this.statu",{"_index":978,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.tempalarm",{"_index":1486,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.tempalarmid",{"_index":1493,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.tempimageset",{"_index":1498,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.tempimageunreliableset",{"_index":1503,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.timestamp",{"_index":982,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.timezon",{"_index":1403,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.treecontrol",{"_index":515,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":577,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":510,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.triggeralarmsnonvalidconnectionst",{"_index":686,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.unshelv",{"_index":1264,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.updateacklist",{"_index":520,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.updatelastreceivedmessagetimestamp",{"_index":699,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.value.tostring().split",{"_index":1293,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.websocketbridge.connect(connectionpath",{"_index":708,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.demultiplex(streams.alarm",{"_index":695,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.demultiplex(streams.upd",{"_index":702,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.listen(connectionpath",{"_index":709,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.socket.addeventlisten",{"_index":690,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.stream(streams.updates).send",{"_index":726,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.windsalarm",{"_index":1488,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.windsalarmid",{"_index":1490,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.windsimageset",{"_index":1500,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["this.windsimageunreliableset",{"_index":1504,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["thorugh",{"_index":1203,"title":{},"body":{"injectables/RoutingService.html":{}}}],["through",{"_index":184,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{}}}],["ticket",{"_index":647,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["tickets_info",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tickets_multiple_ack",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":265,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["timestamp",{"_index":302,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{}}}],["timezon",{"_index":1333,"title":{},"body":{"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["titl",{"_index":769,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":541,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{}}}],["togeth",{"_index":1708,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":587,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/TabularViewComponent.html":{}}}],["togglefilteronlysetalarm",{"_index":1338,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["toggleshelveunshelv",{"_index":1248,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["togglesidenav",{"_index":770,"title":{},"body":{"components/AppComponent.html":{}}}],["togglestatu",{"_index":1392,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["token",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tooltip",{"_index":1235,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["tostringforfilt",{"_index":929,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["transform",{"_index":562,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":117,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":1226,"title":{},"body":{"modules/SharedModule.html":{}}}],["tree.component.html",{"_index":480,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":481,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":454,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":600,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":601,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":461,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":462,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":460,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":453,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["tree_data",{"_index":545,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[alarm.core_id",{"_index":547,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[alarm.core_id].push(item",{"_index":549,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":501,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treedata",{"_index":485,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":503,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":740,"title":{},"body":{"injectables/AlarmService.html":{}}}],["trigger",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["triggeralarmsnonvalidconnectionst",{"_index":619,"title":{},"body":{"injectables/AlarmService.html":{}}}],["true",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":387,"title":{},"body":{"classes/Alarm.html":{}}}],["type",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":558,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unarch",{"_index":1243,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["uncombin",{"_index":1732,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":557,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/DisplayedAlarm.html":{}}}],["under",{"_index":663,"title":{},"body":{"injectables/AlarmService.html":{},"index.html":{},"license.html":{}}}],["unit",{"_index":1613,"title":{},"body":{"index.html":{}}}],["unkn.svg",{"_index":1068,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["unknown",{"_index":352,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["unknown_unreli",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unreli",{"_index":355,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/StatusViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["unshelv",{"_index":287,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["unshelve_api",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unshelvealarm",{"_index":620,"title":{},"body":{"injectables/AlarmService.html":{}}}],["unshelvealarms(alarms_id",{"_index":664,"title":{},"body":{"injectables/AlarmService.html":{}}}],["unsubscrib",{"_index":1043,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["updat",{"_index":216,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["updateacklist",{"_index":594,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updatealarmstoack",{"_index":161,"title":{},"body":{"components/AckModalComponent.html":{}}}],["updatealarmstoack(ev",{"_index":214,"title":{},"body":{"components/AckModalComponent.html":{}}}],["updatelastreceivedmessagetimestamp",{"_index":621,"title":{},"body":{"injectables/AlarmService.html":{}}}],["url",{"_index":204,"title":{},"body":{"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["url(url",{"_index":972,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["us",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/HealthSummaryComponent.html":{},"injectables/RoutingService.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":1322,"title":{},"body":{"components/TabularViewComponent.html":{},"license.html":{}}}],["user'",{"_index":1723,"title":{},"body":{"license.html":{}}}],["usevalu",{"_index":846,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":1667,"title":{},"body":{"license.html":{}}}],["v",{"_index":554,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":172,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["validators.requir",{"_index":233,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["validform",{"_index":253,"title":{},"body":{"components/AckModalComponent.html":{}}}],["validity.unreli",{"_index":734,"title":{},"body":{"injectables/AlarmService.html":{}}}],["validity[this.valid",{"_index":395,"title":{},"body":{"classes/Alarm.html":{}}}],["valu",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/RoutingService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.clear",{"_index":434,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value.length",{"_index":259,"title":{},"body":{"components/AckModalComponent.html":{}}}],["value.set_crit",{"_index":442,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value.set_high",{"_index":440,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value.set_low",{"_index":436,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value.set_medium",{"_index":438,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value[k",{"_index":555,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["value[this.valu",{"_index":394,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tag",{"_index":983,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["value_tags[0",{"_index":985,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["value_tags[1",{"_index":986,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["var",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":66,"title":{"miscellaneous/variables.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":1638,"title":{},"body":{"license.html":{}}}],["version",{"_index":1573,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1614,"title":{},"body":{"index.html":{}}}],["view",{"_index":1032,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/OverviewComponent.html":{},"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["view'},{'nam",{"_index":137,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":836,"title":{},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{}}}],["view.component.css",{"_index":1274,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.css,tabular",{"_index":1324,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.html",{"_index":1275,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.scss",{"_index":1325,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.t",{"_index":1273,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:109",{"_index":1351,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:117",{"_index":1288,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:135",{"_index":1348,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:143",{"_index":1350,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:152",{"_index":1347,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:17",{"_index":1282,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:171",{"_index":1345,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:189",{"_index":1342,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:207",{"_index":1353,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:22",{"_index":1280,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:232",{"_index":1391,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:240",{"_index":1394,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:26",{"_index":1388,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:29",{"_index":1386,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:32",{"_index":1290,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:37",{"_index":1355,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:40",{"_index":1376,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:45",{"_index":1367,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:47",{"_index":1283,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:48",{"_index":1366,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:51",{"_index":1389,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:54",{"_index":1379,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:57",{"_index":1365,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:60",{"_index":1361,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:63",{"_index":1363,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:69",{"_index":1381,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:72",{"_index":1362,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:78",{"_index":1374,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:85",{"_index":1285,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:88",{"_index":1340,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view/fixtures.t",{"_index":1530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["view/statu",{"_index":1272,"title":{},"body":{"components/StatusViewComponent.html":{},"modules/TabularModule.html":{},"coverage.html":{}}}],["view/tabular",{"_index":835,"title":{},"body":{"modules/AppModule.html":{},"modules/TabularModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":1385,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewchild(matsort",{"_index":1400,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewchild(matt",{"_index":1399,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["visibl",{"_index":1308,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["void",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather",{"_index":141,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather/weather.modul",{"_index":832,"title":{},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{}}}],["weathermodul",{"_index":801,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OverviewModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weathersummarycompon",{"_index":140,"title":{"components/WeatherSummaryComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"modules/WeatherModule.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["webserv",{"_index":604,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{}}}],["websocket",{"_index":605,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["websocketbridg",{"_index":609,"title":{},"body":{"injectables/AlarmService.html":{}}}],["websocketpath",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weith",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["well",{"_index":1714,"title":{},"body":{"license.html":{}}}],["wether",{"_index":528,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["whatev",{"_index":1685,"title":{},"body":{"license.html":{}}}],["whether",{"_index":574,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["white",{"_index":1311,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["wiki",{"_index":143,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wiki&nbsp",{"_index":267,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["wikibuttoncompon",{"_index":142,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/HealthSummaryComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"modules/SharedModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WeatherSummaryComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wikipag",{"_index":203,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["wind",{"_index":1479,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["wind_",{"_index":1501,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["windsalarm",{"_index":1461,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["windsalarmid",{"_index":1462,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["windsimageset",{"_index":1463,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["windsimageunreliableset",{"_index":1464,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["windspe",{"_index":1495,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["without",{"_index":1672,"title":{},"body":{"license.html":{}}}],["word",{"_index":1041,"title":{},"body":{"components/HealthSummaryComponent.html":{},"components/WeatherSummaryComponent.html":{}}}],["work",{"_index":1650,"title":{},"body":{"license.html":{}}}],["worth",{"_index":1196,"title":{},"body":{"modules/OverviewModule.html":{}}}],["write",{"_index":270,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["wrong",{"_index":1212,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":1494,"title":{},"body":{"components/WeatherSummaryComponent.html":{}}}],["ws://127.0.0.1:8000/stream",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yum",{"_index":1593,"title":{},"body":{"index.html":{}}}],["yyyi",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.j",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":802,"title":{},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules/HealthModule.html":{},"modules/OverviewModule.html":{},"modules/SharedModule.html":{},"modules/TabularModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarm\n                            \n                            \n                                    Public\n                                canAcknowledge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm_id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ack-button/ack-button.component.ts:30\n                            \n                        \n\n                \n                    \n                            The \"constructor\", injects the AlarmService and the {@link modalService}\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get the alarm object based on the input id\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Modal Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm_id\n                    \n                    \n                        Id of the alarm to be acknowledged\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/ack-button/ack-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-button/ack-button.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Get the alarm object related with the alarm id received as input using the\nAlarmService. Initialize the private variables of this component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-button/ack-button.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            On init the component initialize the private variables using the method\n{@link loadAlarm}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-button/ack-button.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Handle click on table rows, it triggers the ack modal\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-button/ack-button.component.ts:25\n                            \n                        \n\n                \n                    \n                        Alarm object related with the alarm id received as input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canAcknowledge:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-button/ack-button.component.ts:30\n                            \n                        \n\n                \n                    \n                        Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AckModalComponent } from '../ack-modal/ack-modal.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit {\n\n  /**\n   * Id of the alarm to be acknowledged\n   */\n  @Input() alarm_id: string;\n\n  /**\n   * Alarm object related with the alarm id received as input\n   */\n  private alarm: Alarm;\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   */\n  public canAcknowledge = false;\n\n  /**\n   * The \"constructor\", injects the {@link AlarmService} and the {@link modalService}\n   * @param {AlarmService} alarmService Service to get the alarm object based on the input id\n   * @param {ModalService} modalService Service to manage the Modal Component\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private modalService: NgbModal\n  ) { }\n\n  /**\n   * On init the component initialize the private variables using the method\n   * {@link loadAlarm}\n   */\n  ngOnInit() {\n    this.loadAlarm();\n  }\n\n  /**\n   * Get the alarm object related with the alarm id received as input using the\n   * AlarmService. Initialize the private variables of this component.\n   */\n  loadAlarm() {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.canAcknowledge = !this.alarm.ack;\n  }\n\n  /**\n  * Handle click on table rows, it triggers the ack modal\n  */\n  onClick(event) {\n    const ackModal = this.modalService.open(AckModalComponent,\n      { size: 'lg', centered: true }\n    );\n    ackModal.componentInstance.alarm = this.alarm;\n    return ackModal;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AckModalComponent.html":{"url":"components/AckModalComponent.html","title":"component - AckModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/ack-modal/ack-modal.component.ts\n\n\n    \n        Description\n    \n    \n        Modal used to acknowledge alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-modal\n            \n\n            \n                styleUrls\n                ack-modal.component.css,ack-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ack-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                            \n                                alarmsToAck\n                            \n                            \n                                form\n                            \n                            \n                                    Public\n                                missedAcks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ackFromSelection\n                            \n                            \n                                acknowledge\n                            \n                            \n                                ackSuccessful\n                            \n                            \n                                disableAcknowledgment\n                            \n                            \n                                getAlarmDescription\n                            \n                            \n                                getAlarmUrl\n                            \n                            \n                                getMissingAcksInfo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAlarmsToAck\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal, formBuilder: FormBuilder, alarmService: AlarmService, cdbService: CdbService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/ack-modal/ack-modal.component.ts:38\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to itself\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        cdbService\n                                                  \n                                                        \n                                                                    CdbService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get complementary alarm information\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Selected alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ackFromSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \nackFromSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Ack request through the related AlarmService method using a list of dependencies\nfrom the selected alarms\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Send the acknowledge request through the method provided by the AlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ackSuccessful\n                            \n                            \n                        \n                    \n                \n                \n                    \nackSuccessful(alarms: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Actions performed when the acknowledge is made ssuccesfully.\nFinally the modal is closed.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarms\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of sucessfully acknowledged alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableAcknowledgment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableAcknowledgment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Method to invalidate ack action\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmDescription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Get the alarm description through the method provided by the CdbService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    description of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Get the link to the wikipage of the alarm through the method provided by the CdbService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    URL for of the documentation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMissingAcksInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMissingAcksInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:156\n                            \n                        \n\n\n                \n                    \n                            Get the number of missed acknowledgements of the alarm and its children\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Create the form and check the validity of the form input fields\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAlarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAlarmsToAck(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Update the list of alarms to ack from the selection on the child component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:49\n                            \n                        \n\n                \n                    \n                        Reference to itself\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsToAck:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:28\n                            \n                        \n\n                \n                    \n                        List of alarms to ack according to selection from child component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:33\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            missedAcks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        missedAcks:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-modal/ack-modal.component.ts:38\n                            \n                        \n\n                \n                    \n                        List of messages to mention the alarms with missed acknowledgments\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlarmService } from '../../data/alarm.service';\nimport { CdbService } from '../../data/cdb.service';\nimport { Alarm } from '../../data/alarm';\n\n\n/**\n * Modal used to acknowledge alarms\n */\n@Component({\n  selector: 'app-ack-modal',\n  templateUrl: './ack-modal.component.html',\n  styleUrls: ['./ack-modal.component.css', './ack-modal.component.scss']\n})\nexport class AckModalComponent implements OnInit {\n\n  /**\n   * Selected alarm\n   */\n  @Input() alarm;\n\n  /**\n   * List of alarms to ack according to selection from child component\n   */\n  alarmsToAck: string[] = [];\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * List of messages to mention the alarms with missed acknowledgments\n  */\n  public missedAcks: string[] = [];\n\n  /**\n   * Instantiates the component\n   * @param {ActiveModal} activeModal Reference to itself\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    public activeModal: NgbActiveModal,\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private cdbService: CdbService,\n    private spinnerService: NgxSpinnerService,\n  ) {\n  }\n\n  /**\n   * Create the form and check the validity of the form input fields\n   */\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      message: [null, [Validators.required]]\n    });\n    this.getMissingAcksInfo();\n  }\n\n  /**\n   * Actions performed when the acknowledge is made ssuccesfully.\n   * Finally the modal is closed.\n   * @param alarms list of sucessfully acknowledged alarms\n   */\n  ackSuccessful(alarms: any): void {\n    console.log('Ack successful for alarms: ', alarms);\n    this.activeModal.close();\n  }\n\n  /**\n   * Send the acknowledge request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  acknowledge(): void {\n    this.spinnerService.show();\n    if (this.form.valid) {\n      this.alarmService.acknowledgeAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.ackSuccessful(response);\n            this.spinnerService.hide();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.spinnerService.hide();\n            return error;\n          }\n        );\n    }\n  }\n\n  /**\n   * Ack request through the related {@link AlarmService} method using a list of dependencies\n   * from the selected alarms\n   */\n  ackFromSelection(): void {\n    this.spinnerService.show();\n    if (this.form.valid) {\n      this.alarmService.acknowledgeAlarms(\n        this.alarmsToAck, this.form.get('message').value).subscribe(\n          (response) => {\n            this.ackSuccessful(response);\n            this.spinnerService.hide();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.spinnerService.hide();\n            return error;\n          }\n        );\n    }\n  }\n\n  /**\n   * Update the list of alarms to ack from the selection on the child component\n   */\n  updateAlarmsToAck(event): void {\n    this.alarmsToAck = event;\n  }\n\n\n  /**\n   * Get the alarm description through the method provided by the {@link CdbService}\n   * @returns {string} description of the {@link Alarm}\n   */\n  getAlarmDescription() {\n    return this.cdbService.getAlarmDescription(this.alarm.core_id);\n  }\n\n  /**\n   * Get the link to the wikipage of the alarm through the method provided by the {@link CdbService}\n   * @returns {string} URL for of the documentation of the {@link Alarm}\n   */\n  getAlarmUrl() {\n    return this.cdbService.getAlarmsInformationUrl(this.alarm.core_id);\n  }\n\n  /**\n  * Method to invalidate ack action\n  */\n  disableAcknowledgment() {\n    const noAlarmsToAck = (this.alarmsToAck.length === 0);\n    const validForm = this.form.valid;\n    return (noAlarmsToAck || !validForm);\n  }\n\n  /**\n  * Get the number of missed acknowledgements of the alarm and its children\n  */\n  getMissingAcksInfo(): void {\n    if (this.alarm) {\n      this.missedAcks = [];\n      this.alarmService.getMissingAcks(this.alarm.core_id).subscribe(\n        (response) => {\n          for (const [key, value] of Object.entries(response)) {\n            const count = value.length;\n            if (count > 0) {\n              let text = key + ' has ' + count + ' missed acknowledgement';\n              if (count > 1) {\n                text += 's';\n              }\n              this.missedAcks.push(text);\n            }\n          }\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  {{alarm?.core_id}}\n  \n    &times;\n  \n\n\n\n  \n    \n      {{ getAlarmDescription() }} \n      \n        \n           Go to wiki&nbsp;\n        \n      \n    \n    \n       Action from the operator \n      \n      \n        * The acknowledge button will be enabled after writing the message and the selection of the related alarms\n      \n    \n    \n       Select alarms for acknowledgment \n      \n    \n     0\" class=\"section missed-acks\">\n       Missed acknowledgments \n      \n        \n          {{text}}\n        \n      \n    \n  \n  \n    Cancel\n    Acknowledge\n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{alarm?.core_id}}      ×              {{ getAlarmDescription() }}                          Go to wiki                              Action from the operator                     * The acknowledge button will be enabled after writing the message and the selection of the related alarms                     Select alarms for acknowledgment                0\" class=\"section missed-acks\">       Missed acknowledgments                         {{text}}                          Cancel    Acknowledge  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarm.html":{"url":"classes/Alarm.html","title":"class - Alarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Alarm objects\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ack\n                            \n                            \n                                core_id\n                            \n                            \n                                core_timestamp\n                            \n                            \n                                dependencies\n                            \n                            \n                                mode\n                            \n                            \n                                running_id\n                            \n                            \n                                shelved\n                            \n                            \n                                state_change_timestamp\n                            \n                            \n                                validity\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledge\n                            \n                            \n                                    Static\n                                asAlarm\n                            \n                            \n                                getCoreTimestampAsDate\n                            \n                            \n                                getModeAsString\n                            \n                            \n                                getStateChangeTimestampAsDate\n                            \n                            \n                                getValidityAsString\n                            \n                            \n                                getValueAsString\n                            \n                            \n                                    Static\n                                isValidAlarm\n                            \n                            \n                                shelve\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/alarm.ts:70\n                            \n                        \n\n                \n                    \n                            Builds a new Alarm instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ack:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:64\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:46\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:58\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm was generated by the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dependencies:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:70\n                            \n                        \n\n                \n                    \n                        List of core_id's of dependent alarms *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     OperationalMode\n\n                    \n                \n                    \n                        \n                            Type :     OperationalMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:52\n                            \n                        \n\n                \n                    \n                        Operational mode of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        running_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:49\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm and its parents in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:67\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state_change_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state_change_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:61\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm changed the state or the mode \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validity:     Validity\n\n                    \n                \n                    \n                        \n                            Type :     Validity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:55\n                            \n                        \n\n                \n                    \n                        Validity of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     Value\n\n                    \n                \n                    \n                        \n                            Type :     Value\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.ts:43\n                            \n                        \n\n                \n                    \n                        Value that represents the state of the Alarm.\nCan be either 0 (CLEARED) or 1 (SET)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:157\n                            \n                        \n\n\n                \n                    \n                            Acknowledges the Alarm and returns the acknowledge status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the acknowledgement status\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:110\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCoreTimestampAsDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCoreTimestampAsDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:194\n                            \n                        \n\n\n                \n                    \n                            Returns a Date representation of the core_timestamp of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    a date format representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getModeAsString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetModeAsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:167\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the operational mode of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    a string representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStateChangeTimestampAsDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStateChangeTimestampAsDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:144\n                            \n                        \n\n\n                \n                    \n                            Returns a Date representation of the timestamp of the last change of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    a date format representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidityAsString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidityAsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:185\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the validity of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    a string representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValueAsString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValueAsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:176\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the value of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    a string representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:88\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Alarm object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:209\n                            \n                        \n\n\n                \n                    \n                            Shelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving message\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.ts:219\n                            \n                        \n\n\n                \n                    \n                            Unshelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving status\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timestamp\n                    \n                \n\n                \n                    \n                        gettimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/alarm.ts:135\n                                \n                            \n                    \n                        \n                                Returns a Date representation of the {@link Alarm.state_change_timestamp}\nattribute\n\n\n                                \n                                \n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        export enum OperationalMode {\n  startup = 0,\n  initialization = 1,\n  closing = 2,\n  shuttedown = 3,\n  maintenance = 4,\n  operational = 5,\n  degraded = 6,\n  unknown = 7,\n}\n\n/**\n* List of the possible Validity values\n*/\nexport enum Validity {\n  unreliable = 0,\n  reliable = 1\n}\n\n/**\n* List of the possible Values of an Alarm\n*/\nexport enum Value {\n  cleared = 0,\n  set_low = 1,\n  set_medium = 2,\n  set_high = 3,\n  set_critical = 4,\n}\n\n/**\n* Class to define Alarm objects\n*/\nexport class Alarm {\n\n  /**\n  * Value that represents the state of the {@link Alarm}.\n  * Can be either 0 (CLEARED) or 1 (SET)\n  */\n  value: Value;\n\n  /** Id used to identify the {@link Alarm} in the IAS Core */\n  core_id: string;\n\n  /** Id used to identify the {@link Alarm} and its parents in the IAS Core */\n  running_id: string;\n\n  /** Operational mode of the {@link Alarm} */\n  mode: OperationalMode;\n\n  /** Validity of the {@link Alarm} */\n  validity: Validity;\n\n  /** Timestamp at which the {@link Alarm} was generated by the IAS Core */\n  core_timestamp: number;\n\n  /** Timestamp at which the {@link Alarm} changed the state or the mode */\n  state_change_timestamp: number;\n\n  /** Acknowledgement status */\n  ack: boolean;\n\n  /** Acknowledgement status */\n  shelved: boolean;\n\n  /** List of core_id's of dependent alarms **/\n  dependencies: string[];\n\n  /**\n  * Builds a new Alarm instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Alarm object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Alarm}, false if not\n  */\n  static isValidAlarm(json: any): boolean {\n    return (\n      json.hasOwnProperty('value') &&\n      json.hasOwnProperty('core_id') &&\n      json.hasOwnProperty('running_id') &&\n      json.hasOwnProperty('mode') &&\n      json.hasOwnProperty('core_timestamp') &&\n      // json.hasOwnProperty('state_change_timestamp') &&\n      json.hasOwnProperty('validity') &&\n      json.hasOwnProperty('ack') &&\n      json.hasOwnProperty('shelved') &&\n      json.hasOwnProperty('dependencies')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Alarm}\n  *\n  * @param {any} json the object to convert to an Alarm\n  * @param {number} pk the primary key of the Alarm in the database\n  * @returns {Alarm} the object as an {@link Alarm} instance\n  */\n  static asAlarm(json: any): Alarm {\n    if (!this.isValidAlarm(json)) {\n      return null;\n    }\n    const value = json['value'];\n    const core_id = json['core_id'];\n    const running_id = json['running_id'];\n    const mode = json['mode'];\n    const core_timestamp = json['core_timestamp'];\n    const state_change_timestamp = json['state_change_timestamp'];\n    const validity = json['validity'];\n    const ack = json['ack'];\n    const shelved = json['shelved'];\n    const dependencies = json['dependencies'];\n    return new Alarm({ value, core_id, running_id, mode, core_timestamp,\n      state_change_timestamp, validity, ack, shelved, dependencies });\n  }\n\n  /**\n  * Returns a Date representation of the {@link Alarm.state_change_timestamp}\n  * attribute\n  *\n  * @returns {Date} a date format representation of the Alarm\n  * state_change_timestamp\n  */\n  get timestamp(): Date {\n    return this.getStateChangeTimestampAsDate();\n  }\n\n  /**\n  * Returns a Date representation of the timestamp of the last change of the Alarm\n  *\n  * @returns {Date} a date format representation of the {@link Alarm.state_change_timestamp} attribute\n  */\n  getStateChangeTimestampAsDate(): Date {\n    const ts = this.state_change_timestamp;\n    const date: Date = new Date(ts);\n    return date;\n  }\n\n  /**\n  * Acknowledges the {@link Alarm} and returns the acknowledge status\n  *\n  * @param {message} string string message of the acknowledgement\n  *\n  * @returns {boolean} a the acknowledgement status\n  */\n  acknowledge(): boolean {\n    this.ack = true;\n    return this.ack;\n  }\n\n  /**\n  * Returns a string representation of the operational mode of the Alarm\n  *\n  * @returns {string} a string representation of the {@link Alarm.mode} attribute\n  */\n  getModeAsString(): string {\n    return OperationalMode[this.mode];\n  }\n\n  /**\n  * Returns a string representation of the value of the Alarm\n  *\n  * @returns {string} a string representation of the {@link Alarm.value} attribute\n  */\n  getValueAsString(): string {\n    return Value[this.value];\n  }\n\n  /**\n  * Returns a string representation of the validity of the Alarm\n  *\n  * @returns {string} a string representation of the {@link Alarm.mode} attribute\n  */\n  getValidityAsString(): string {\n    return Validity[this.validity];\n  }\n\n  /**\n  * Returns a Date representation of the core_timestamp of the Alarm\n  *\n  * @returns {Date} a date format representation of the {@link Alarm.core_timestamp} attribute\n  */\n  getCoreTimestampAsDate(): Date {\n\n    const ts = this.core_timestamp;\n    const date: Date = new Date(ts);\n\n    return date;\n  }\n\n  /**\n  * Shelves the {@link Alarm} and returns the shelve status\n  *\n  * @param {message} string string message of the shelving\n  *\n  * @returns {boolean} a the shelving message\n  */\n  shelve(): boolean {\n    this.shelved = true;\n    return this.shelved;\n  }\n\n  /**\n  * Unshelves the {@link Alarm} and returns the shelve status\n  *\n  * @returns {boolean} a the shelving status\n  */\n  unshelve(): boolean {\n    this.shelved = false;\n    return this.shelved;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                alarm.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImage\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:66\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:66\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n   /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.css']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the URL of the current image to use depending on the Alarm status\n  */\n  getImage(): string {\n    if (!this.alarm) {\n      return this.imagesUnreliable.unknown;\n    }\n    let imagesToUse = this.images;\n    if (this.alarm.validity === 0) {\n      imagesToUse = this.imagesUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      return imagesToUse.shelved;\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      return imagesToUse.unknown;\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      return imagesToUse.maintenance;\n    } else if (this.alarm.value === Value.cleared) {\n      return imagesToUse.clear;\n    } else if (this.alarm.value === Value.set_low) {\n      return imagesToUse.set_low;\n    } else if (this.alarm.value === Value.set_medium) {\n      return imagesToUse.set_medium;\n    } else if (this.alarm.value === Value.set_high) {\n      return imagesToUse.set_high;\n    } else if (this.alarm.value === Value.set_critical) {\n      return imagesToUse.set_critical;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:9\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:27\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:21\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:18\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:15\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/alarm/alarm.component.ts:24\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../../data/alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n   /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.css']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the URL of the current image to use depending on the Alarm status\n  */\n  getImage(): string {\n    if (!this.alarm) {\n      return this.imagesUnreliable.unknown;\n    }\n    let imagesToUse = this.images;\n    if (this.alarm.validity === 0) {\n      imagesToUse = this.imagesUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      return imagesToUse.shelved;\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      return imagesToUse.unknown;\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      return imagesToUse.maintenance;\n    } else if (this.alarm.value === Value.cleared) {\n      return imagesToUse.clear;\n    } else if (this.alarm.value === Value.set_low) {\n      return imagesToUse.set_low;\n    } else if (this.alarm.value === Value.set_medium) {\n      return imagesToUse.set_medium;\n    } else if (this.alarm.value === Value.set_high) {\n      return imagesToUse.set_high;\n    } else if (this.alarm.value === Value.set_critical) {\n      return imagesToUse.set_critical;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** Tree data with dependencies for the selected alarm **/\n  treeData = {};\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n  }\n\n  /**\n   * Creates the component and builds the tree reading the data from the alarm\n   */\n  ngOnInit() {\n    this.dataSource.data = this.buildFileTree(this.getTreeDataFromAlarm(this.selectedAlarm), 0);\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeDataFromAlarm(alarm: Alarm) {\n     // TODO: Update definition for alarms with more than one dependency level\n     const tree_data = {};\n     if (alarm.dependencies.length === 0) {\n       tree_data[alarm.core_id] = null;\n     } else {\n       tree_data[alarm.core_id] = [];\n       for (const item of alarm.dependencies) {\n         tree_data[alarm.core_id].push(item);\n       }\n     }\n     return tree_data;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    if (this.descendantsAllSelected(node)) {\n      this.checklistSelection.select(node);\n    }\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    if (!result) {\n      this.checklistSelection.deselect(node);\n    }\n    return !result;\n  }\n\n  /** Toggle the alarm item selection. Select/deselect all the descendants node */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** Tree data with dependencies for the selected alarm **/\n  treeData = {};\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n  }\n\n  /**\n   * Creates the component and builds the tree reading the data from the alarm\n   */\n  ngOnInit() {\n    this.dataSource.data = this.buildFileTree(this.getTreeDataFromAlarm(this.selectedAlarm), 0);\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeDataFromAlarm(alarm: Alarm) {\n     // TODO: Update definition for alarms with more than one dependency level\n     const tree_data = {};\n     if (alarm.dependencies.length === 0) {\n       tree_data[alarm.core_id] = null;\n     } else {\n       tree_data[alarm.core_id] = [];\n       for (const item of alarm.dependencies) {\n         tree_data[alarm.core_id].push(item);\n       }\n     }\n     return tree_data;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    if (this.descendantsAllSelected(node)) {\n      this.checklistSelection.select(node);\n    }\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    if (!result) {\n      this.checklistSelection.deselect(node);\n    }\n    return !result;\n  }\n\n  /** Toggle the alarm item selection. Select/deselect all the descendants node */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlarmService.html":{"url":"injectables/AlarmService.html","title":"injectable - AlarmService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AlarmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/alarm.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that connects and receives Alarm messages from the\nIAS Webserver through Websockets\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmChangeStream\n                            \n                            \n                                    Public\n                                alarms\n                            \n                            \n                                    Public\n                                connectionStatusStream\n                            \n                            \n                                    Public\n                                lastReceivedMessageTimestamp\n                            \n                            \n                                    Private\n                                webSocketBridge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledgeAlarms\n                            \n                            \n                                changeAlarms\n                            \n                            \n                                compareCurrentAndLastReceivedMessageTimestamp\n                            \n                            \n                                connect\n                            \n                            \n                                get\n                            \n                            \n                                getAlarmList\n                            \n                            \n                                getMissingAcks\n                            \n                            \n                                initialize\n                            \n                            \n                                readAlarmMessage\n                            \n                            \n                                readAlarmMessagesList\n                            \n                            \n                                shelveAlarm\n                            \n                            \n                                startLastReceivedMessageTimestampCheck\n                            \n                            \n                                triggerAlarmsNonValidConnectionState\n                            \n                            \n                                unshelveAlarms\n                            \n                            \n                                updateLastReceivedMessageTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cdbService: CdbService, httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/alarm.service.ts:46\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cdbService\n                                                  \n                                                        \n                                                                    CdbService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get complementary alarm information\n\n                                                        \n                                                \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledgeAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledgeAlarms(alarms_ids: , message: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            Acknowledges a list of Alarms with a message\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarms_ids\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                message of the acknowledgement\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    response of the HTTP request of the acknowledge\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeAlarms(any: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Sends an Alarm change event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        any\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the core_id of the updated alarm,\nor 'all' if all were updated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareCurrentAndLastReceivedMessageTimestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompareCurrentAndLastReceivedMessageTimestamp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:278\n                            \n                        \n\n\n                \n                    \n                            Method to check the last received message timestamp\nNote: If non-valid, the connection state is non-valid\nTODO: Review the life cycle of the connection status.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:108\n                            \n                        \n\n\n                \n                    \n                            Start connection to the backend through websockets\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(core_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Returns an Alarm object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                core_id of the Alarm to return\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    Alarm object corresponding to the given core_id\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:217\n                            \n                        \n\n\n                \n                    \n                            Get the complete list of alarms from the webserver database\n through the websocket\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMissingAcks\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMissingAcks(alarm_id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:154\n                            \n                        \n\n\n                \n                    \n                            Get information about old tickets related to a target alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                id of the target alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    response of the HTTP request with a dictionary with information about missing acks\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Start connection to the backend through websockets\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readAlarmMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadAlarmMessage(action: , obj: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:229\n                            \n                        \n\n\n                \n                    \n                            Reads an alarm message from the Core and modify the service alarms list\ndepending on the action value.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                create, update or delete\n\n                                                        \n                                                \n                                                \n                                                        obj\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readAlarmMessagesList\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadAlarmMessagesList(alarmsList: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:244\n                            \n                        \n\n\n                \n                    \n                            Reads a list of alarm messages form the Core and add them to the\nservice alarms list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmsList\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of dictionaries with values for alarm fields (as generic objects)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelveAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelveAlarm(alarm_id: , message: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:170\n                            \n                        \n\n\n                \n                    \n                            Shelves and Alarm with a message\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                message of the shelving\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    response of the HTTP request of the shelve\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startLastReceivedMessageTimestampCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartLastReceivedMessageTimestampCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:305\n                            \n                        \n\n\n                \n                    \n                            Method to update the last received message timestamp\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    for notifications to check the last received message\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            triggerAlarmsNonValidConnectionState\n                            \n                            \n                        \n                    \n                \n                \n                    \ntriggerAlarmsNonValidConnectionState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:257\n                            \n                        \n\n\n                \n                    \n                            Set selected state to alarms under an non-valid connection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelveAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelveAlarms(alarms_ids: , message: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:193\n                            \n                        \n\n\n                \n                    \n                            Shelves and Alarm with a message\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarms_ids\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                message of the shelving\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    response of the HTTP request of the shelve\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLastReceivedMessageTimestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateLastReceivedMessageTimestamp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:269\n                            \n                        \n\n\n                \n                    \n                            Method to update the last received message timestamp\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmChangeStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmChangeStream:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:40\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe dictionary of Alarm objects\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:34\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm objects, indexed by their core_ids\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionStatusStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectionStatusStream:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:29\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe status of the service connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastReceivedMessageTimestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastReceivedMessageTimestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (new Date).getTime()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:23\n                            \n                        \n\n                \n                    \n                        Timestamp related with the last received message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webSocketBridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        webSocketBridge:     WebSocketBridge\n\n                    \n                \n                    \n                        \n                            Type :     WebSocketBridge\n\n                        \n                    \n                    \n                        \n                            Default value : new WebSocketBridge()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/alarm.service.ts:46\n                            \n                        \n\n                \n                    \n                        Django Channels WebsocketBridge,\nused to connect to Django Channels through Websockets\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable ,  BehaviorSubject } from 'rxjs';\nimport { IntervalObservable } from 'rxjs/observable/IntervalObservable';\nimport { WebSocketBridge } from 'django-channels';\nimport { environment } from '../../environments/environment';\nimport { Alarm, OperationalMode, Validity } from '../data/alarm';\nimport { BackendUrls, Streams } from '../settings';\nimport { CdbService } from '../data/cdb.service';\nimport { HttpClientService } from './http-client.service';\n\n\n/**\n* Service that connects and receives {@link Alarm} messages from the\n* IAS Webserver through Websockets\n*/\n@Injectable()\nexport class AlarmService {\n\n  /**\n  * Timestamp related with the last received message\n  */\n  public lastReceivedMessageTimestamp: number = (new Date).getTime();\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public connectionStatusStream = new BehaviorSubject(false);\n\n  /**\n  * Dictionary of {@link Alarm} objects, indexed by their core_ids\n  */\n  public alarms: {[core_id: string]: Alarm } = {};\n\n  /**\n  * Stream of notifications of changes in\n  * the dictionary of {@link Alarm} objects\n  */\n  public alarmChangeStream = new BehaviorSubject(true);\n\n  /**\n  * Django Channels WebsocketBridge,\n  * used to connect to Django Channels through Websockets\n  */\n  private webSocketBridge: WebSocketBridge = new WebSocketBridge();\n\n  /**\n   * Instantiates the service\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private cdbService: CdbService,\n    private httpClientService: HttpClientService,\n  ) {\n    this.connectionStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.triggerAlarmsNonValidConnectionState();\n        }\n      }\n    );\n  }\n\n  /**\n  * Sends an {@link Alarm} change event\n  *\n  * @param {Any} any the core_id of the updated alarm,\n  * or 'all' if all were updated\n  */\n  changeAlarms(any) {\n    this.alarmChangeStream.next(any);\n  }\n\n  /******* SERVICE INITIALIZATION *******/\n\n  /**\n  * Start connection to the backend through websockets\n  */\n  initialize() {\n    const alarmId = 1;\n    this.connect();\n    this.webSocketBridge.socket.addEventListener(\n      'open', () => {\n        this.connectionStatusStream.next(true);\n        /* TODO: Evaluate function for webserver requests */\n        this.getAlarmList();\n        this.cdbService.initialize();\n      }\n    );\n    this.webSocketBridge.demultiplex(Streams.ALARMS, (payload, streamName) => {\n      // console.log('notify ', payload);\n      this.updateLastReceivedMessageTimestamp();\n      this.readAlarmMessage(payload.action, payload.data);\n    });\n    this.webSocketBridge.demultiplex(Streams.UPDATES, (payload, streamName) => {\n      // console.log('request', payload);\n      this.updateLastReceivedMessageTimestamp();\n      this.readAlarmMessagesList(payload.data);\n    });\n    this.startLastReceivedMessageTimestampCheck();\n  }\n\n   /**\n   *  Start connection to the backend through websockets\n   */\n  connect() {\n    const connectionPath = environment.websocketPath;\n    this.webSocketBridge.connect(connectionPath);\n    this.webSocketBridge.listen(connectionPath);\n    console.log('Connected to webserver at: ' + connectionPath);\n  }\n\n  /******* ALARM HANDLING *******/\n\n  /**\n   * Returns an Alarm object\n   * @param core_id core_id of the Alarm to return\n   * @returns {Alarm} Alarm object corresponding to the given core_id\n   */\n  get(core_id: string): Alarm {\n    return this.alarms[core_id] as Alarm;\n  }\n\n  /**\n   * Acknowledges a list of Alarms with a message\n   * @param alarms list of ids of the alarms to acknowledge\n   * @param message message of the acknowledgement\n   * @returns {json} response of the HTTP request of the acknowledge\n   */\n  acknowledgeAlarms(alarms_ids, message) {\n    const data = {\n      'alarms_ids': alarms_ids,\n      'message': message,\n    };\n    return this.httpClientService.put(BackendUrls.TICKETS_MULTIPLE_ACK, data).pipe(\n    map(\n      (response) => {\n        for (const id of alarms_ids) {\n          const alarm = this.get(id);\n          alarm.acknowledge();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Get information about old tickets related to a target alarm\n   * @param alarm_id id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getMissingAcks(alarm_id) {\n    const url = BackendUrls.TICKETS_INFO + '?alarm_id=' + alarm_id;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and Alarm with a message\n   * @param alarms id of the alarm to shelve\n   * @param message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  shelveAlarm(alarm_id, message) {\n    const data = {\n      'alarm_id': alarm_id,\n      'message': message,\n    };\n    return this.httpClientService.post(BackendUrls.SHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 201) {\n          const alarm = this.get(alarm_id);\n          alarm.shelve();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and Alarm with a message\n   * @param alarms id of the alarm to shelve\n   * @param message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  unshelveAlarms(alarms_ids, message) {\n    const data = {\n      'alarms_ids': alarms_ids,\n    };\n    return this.httpClientService.put(BackendUrls.UNSHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 200) {\n          for (const id of alarms_ids) {\n            const alarm = this.get(id);\n            alarm.unshelve();\n          }\n        }\n        return response;\n      }\n    ));\n  }\n\n  /******* HANDLING OF ALARM MESSAGES FROM THE CORE *******/\n\n  /**\n  * Get the complete list of alarms from the webserver database\n   * through the websocket\n   */\n  getAlarmList() {\n    this.webSocketBridge.stream(Streams.UPDATES).send({\n      'action': 'list'\n    });\n  }\n\n  /**\n   * Reads an alarm message from the Core and modify the service alarms list\n   * depending on the action value.\n   * @param action create, update or delete\n   * @param alarm dictionary with values for alarm fields (as generic object)\n   */\n  readAlarmMessage(action, obj) {\n    const alarm = Alarm.asAlarm(obj);\n    if ( action === 'create' || action === 'update' ) {\n      this.alarms[alarm.core_id] = alarm;\n    } else if ( action === 'delete') {\n      delete this.alarms[alarm.core_id];\n    }\n    this.changeAlarms(alarm.core_id);\n  }\n\n  /**\n   * Reads a list of alarm messages form the Core and add them to the\n   * service alarms list\n   * @param alarmsList list of dictionaries with values for alarm fields (as generic objects)\n   */\n  readAlarmMessagesList(alarmsList) {\n    for (const obj of alarmsList) {\n      const alarm = Alarm.asAlarm(obj);\n      this.alarms[alarm.core_id] = alarm;\n    }\n    this.changeAlarms('all');\n  }\n\n  /******* PERIODIC CHECK OF VALIDITY OF ALARMS *******/\n\n  /**\n   * Set selected state to alarms under an non-valid connection\n   */\n  triggerAlarmsNonValidConnectionState() {\n    for (const core_id in this.alarms) {\n      if (this.alarms.hasOwnProperty(core_id)) {\n        this.alarms[core_id]['validity'] = Validity.unreliable;\n      }\n    }\n    this.changeAlarms('all');\n  }\n\n  /**\n   * Method to update the last received message timestamp\n   */\n  updateLastReceivedMessageTimestamp() {\n    this.lastReceivedMessageTimestamp = (new Date()).getTime();\n  }\n\n  /**\n   * Method to check the last received message timestamp\n   * Note: If non-valid, the connection state is non-valid\n   * TODO: Review the life cycle of the connection status.\n   */\n  compareCurrentAndLastReceivedMessageTimestamp() {\n\n    /* Refresh rate parameters */\n    let pars;\n\n    /* TODO: Evaluate try exception. Here for debug options. */\n    try {\n      pars = this.cdbService.getRefreshRateParameters();\n    } catch (e) {\n      pars = {'refreshRate': 5, 'broadcastFactor': 1};\n    }\n\n    const MAX_SECONDS_WITHOUT_MESSAGES = pars['refreshRate'] * pars['broadcastFactor'] + 1;\n\n    const now = (new Date).getTime();\n    let millisecondsDelta;\n\n    millisecondsDelta = now - this.lastReceivedMessageTimestamp;\n    if (millisecondsDelta >= 1000 * MAX_SECONDS_WITHOUT_MESSAGES ) {\n      this.connectionStatusStream.next(false);\n    }\n  }\n\n  /**\n   * Method to update the last received message timestamp\n   * @returns {InternalObservable} for notifications to check the last received message\n   */\n  startLastReceivedMessageTimestampCheck() {\n    return IntervalObservable.create(1000 * 10)\n      .subscribe(() => {\n      this.compareCurrentAndLastReceivedMessageTimestamp();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCompacted\n                            \n                            \n                                sidenavItems\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Instantiates the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { title: 'Overview', link: '/overview', icon: 'language'},\n    { title: 'Table', link: '/tabular', icon: 'list'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Sidebar Menu of the application \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmService } from './data/alarm.service';\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isCompacted = true;\n\n  /** Sidebar Menu of the application */\n  sidenavItems = [\n    { title: 'Overview', link: '/overview', icon: 'language'},\n    { title: 'Table', link: '/tabular', icon: 'list'}\n  ];\n\n  /**\n   * Instantiates the service\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   */\n  constructor(\n    private alarmService: AlarmService\n  ) {}\n\n  /**\n   * Instantiates the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isCompacted = !this.isCompacted;\n    return this.isCompacted;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n       Integrated Alarm System \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          \n            {{ item.icon }}\n            {{ item.title }} \n          \n        \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                     Integrated Alarm System                                                                                                             {{ item.icon }}            {{ item.title }}                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    OverviewModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TabularModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { APP_BASE_HREF } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { DataModule } from './data/data.module';\nimport { HealthModule } from './health/health.module';\nimport { OverviewModule } from './overview/overview.module';\nimport { SharedModule } from './shared/shared.module';\nimport { TabularModule } from './tabular/tabular.module';\nimport { WeatherModule } from './weather/weather.module';\nimport { AppComponent } from './app.component';\nimport { TabularViewComponent } from './tabular/tabular-view/tabular-view.component';\nimport { OverviewComponent } from './overview/overview/overview.component';\n\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'overview', component: OverviewComponent },\n  { path: 'tabular', component: TabularViewComponent },\n  { path: 'tabular/:filter', component: TabularViewComponent },\n];\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    NgbModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    IasMaterialModule,\n    NgxSpinnerModule,\n    DataModule,\n    HealthModule,\n    OverviewModule,\n    SharedModule,\n    TabularModule,\n    WeatherModule,\n  ],\n  providers: [\n    HttpClient,\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasAlarmsIasios\n                            \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasioAlarmsUrl\n                            \n                            \n                                iasioUrl\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmDescription\n                            \n                            \n                                getAlarmsIasiosData\n                            \n                            \n                                getAlarmsInformationUrl\n                            \n                            \n                                getConfigurationData\n                            \n                            \n                                getRefreshRateParameters\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/cdb.service.ts:40\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmDescription(alarmCoreId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Get short description from Iasios information for a selected alarm id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alarmCoreId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the description of the IASIO\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmsIasiosData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmsIasiosData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Get information of Iasios from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    last change timestamp of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmsInformationUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmsInformationUrl(alarmCoreId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:115\n                            \n                        \n\n\n                \n                    \n                            Get link with documentation about the alarms\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alarmCoreId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the documentation URL\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    URL to request the IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRefreshRateParameters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRefreshRateParameters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Get refresh rate parameters from IAS configuration data\nThese are refresh rate value and related multiplier factor\n\n\n                            \n                            \n                            \n                                Returns :     { 'refreshRate': any; 'broadcastFactor': any; }\n\n                            \n                                \n                                    contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasAlarmsIasios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasAlarmsIasios:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:35\n                            \n                        \n\n                \n                    \n                        Variable to store alarm type iasios information data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:30\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:40\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasioAlarmsUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasioAlarmsUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : this.iasioUrl + '/filtered_by_alarm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:25\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for requests of IASIOS filtered by Alarms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasioUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasioUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.cdbApiUrl + '/iasio'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:22\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IASIO requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.cdbApiUrl + '/ias'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/cdb.service.ts:19\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {forkJoin as observableForkJoin,  BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Rx';\nimport { environment } from '../../environments/environment';\nimport { HttpClientService } from '../data/http-client.service';\nimport { Iasio } from '../data/iasio';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = environment.cdbApiUrl + '/ias';\n\n  /** IAS Webserver URL for IASIO requests */\n  iasioUrl = environment.cdbApiUrl + '/iasio';\n\n  /** IAS Webserver URL for requests of IASIOS filtered by Alarms */\n  iasioAlarmsUrl = this.iasioUrl + '/filtered_by_alarm';\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Variable to store alarm type iasios information data\n  */\n  iasAlarmsIasios: {[io_id: string]: Iasio } = {};\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return observableForkJoin(\n      this.getConfigurationData().pipe(map((res: Response) => res[0])),\n      this.getAlarmsIasiosData().pipe(map((res: Response) => res)),\n    )\n    .subscribe((data: any[]) => {\n      const iasConfigurationData = data[0];\n      const alarmsIasiosData = data[1];\n      this.iasConfiguration = iasConfigurationData;\n      alarmsIasiosData.forEach(iasio => {\n        this.iasAlarmsIasios[iasio.io_id] = new Iasio(iasio);\n      });\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {string} URL to request the IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get information of Iasios from the IAS Webserver\n  * @returns {Date} last change timestamp of the {@link Alarm}\n  */\n  getAlarmsIasiosData() {\n    return this.httpClientService.get(this.iasioAlarmsUrl);\n  }\n\n  /**\n  * Get refresh rate parameters from IAS configuration data\n  * These are refresh rate value and related multiplier factor\n  * @returns {json} contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n  */\n  getRefreshRateParameters() {\n    return {\n      'refreshRate': this.iasConfiguration['refresh_rate'],\n      'broadcastFactor': this.iasConfiguration['broadcast_factor']\n    };\n  }\n\n  /**\n  * Get short description from Iasios information for a selected alarm id\n  * @param {string} alarmCoreID Alarm identifier for the alarm in the core system\n  * @returns {string} the description of the IASIO\n  */\n  getAlarmDescription(alarmCoreId: string): string {\n    if (alarmCoreId in this.iasAlarmsIasios) {\n      return this.iasAlarmsIasios[alarmCoreId].short_desc;\n    } else {\n      return '';\n    }\n  }\n\n  /**\n  * Get link with documentation about the alarms\n  * @returns {string} the documentation URL\n  */\n  getAlarmsInformationUrl(alarmCoreId: string): string {\n    if (alarmCoreId in this.iasAlarmsIasios) {\n      return this.iasAlarmsIasios[alarmCoreId].doc_url;\n    } else {\n      return '';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAlarmService\n\nAlarmService\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the services and data models\n\n            \n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AlarmService\n                            \n                            \n                                     CdbService\n                            \n                            \n                                     HttpClientService\n                            \n                            \n                                     RoutingService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlarmService } from './alarm.service';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\nimport { RoutingService } from './routing.service';\n\n/**\n* This module contains all the services and data models\n*/\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    AlarmService,\n    CdbService,\n    HttpClientService,\n    RoutingService,\n  ]\n})\nexport class DataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayedAlarm.html":{"url":"classes/DisplayedAlarm.html","title":"class - DisplayedAlarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayedAlarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/displayed-alarm.ts\n        \n\n            \n                Description\n            \n            \n                Class that stores Alarm information for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _alarm\n                            \n                            \n                                    Private\n                                _description\n                            \n                            \n                                    Private\n                                _url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmStatusOrder\n                            \n                            \n                                getAlarmStatusTagsString\n                            \n                            \n                                toStringForFiltering\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alarm: Alarm, description: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/displayed-alarm.ts:15\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm\n                                                  \n                                                        \n                                                                    Alarm\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                the alarm to display\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                description of the alarm to display\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                url with documentation of the alarm to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/displayed-alarm.ts:9\n                            \n                        \n\n                \n                    \n                        Internal reference to the Alarm to display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/displayed-alarm.ts:12\n                            \n                        \n\n                \n                    \n                        The short description associated to the Alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/displayed-alarm.ts:15\n                            \n                        \n\n                \n                    \n                        The url for the documentation associated to the Alarm\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmStatusOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmStatusOrder(value: string, priority: string, validity: string, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/displayed-alarm.ts:150\n                            \n                        \n\n\n                \n                    \n                            Returns a string with a number that defines the place where the Alarm should be displayed on the Table according to the\nsorting by \"Status\" column\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the value of the {\n\n                                                        \n                                                \n                                                \n                                                        priority\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the priority of the {\n\n                                                        \n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the validity of the {\n\n                                                        \n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ack status of the {\n\n                                                        \n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    order for the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmStatusTagsString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmStatusTagsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/displayed-alarm.ts:105\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    tags of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toStringForFiltering\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoStringForFiltering()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/displayed-alarm.ts:94\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the Alarm for filtering purposes\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    info of the {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:38\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n                \n                    \n                        setalarm(alarm: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:31\n                                \n                            \n                    \n                        \n                                Sets the reference to the Alarm to display\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            alarm\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:48\n                                \n                            \n                    \n                        \n                                Returns the short description of the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n                \n                    \n                        setdescription(description: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:43\n                                \n                            \n                    \n                        \n                                Reference to the short description associated to the Alarm\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            description\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:58\n                                \n                            \n                    \n                        \n                                Returns the url of the documentation for the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n                \n                    \n                        seturl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:53\n                                \n                            \n                    \n                        \n                                Reference to the url associated to the Alarm\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:64\n                                \n                            \n                    \n                        \n                                Returns the core_id of the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n\n                \n                    \n                        getmode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:69\n                                \n                            \n                    \n                        \n                                Returns the operational mode of the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timestamp\n                    \n                \n\n                \n                    \n                        gettimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:77\n                                \n                            \n                    \n                        \n                                Returns the last change timestamp of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n\n                \n                    \n                        getstatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/displayed-alarm.ts:86\n                                \n                            \n                    \n                        \n                                Getter that returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent. Calls getAlarmStatusTagsString()\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Alarm, OperationalMode, Validity, Value } from './alarm';\n\n/**\n* Class that stores Alarm information for displaying purposes\n*/\nexport class DisplayedAlarm {\n\n  /** Internal reference to the {@link Alarm} to display*/\n  private _alarm: Alarm;\n\n  /** The short description associated to the {@link Alarm}*/\n  private _description: string;\n\n  /** The url for the documentation associated to the {@link Alarm}*/\n  private _url: string;\n\n  /**\n  * Builds a new instance\n  *\n  * @param {Alarm} alarm the alarm to display\n  * @param {string} description description of the alarm to display\n  * @param {string} url url with documentation of the alarm to display\n  */\n  constructor(alarm: Alarm, description: string, url: string) {\n    this._alarm = alarm;\n    this._description = description;\n    this._url = url;\n  }\n\n  /** Sets the reference to the {@link Alarm} to display*/\n  set alarm(alarm: Alarm) {\n    this._alarm = alarm;\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this._alarm;\n  }\n\n  /** Reference to the short description associated to the {@link Alarm}*/\n  set description(description: string) {\n    this._description = description;\n  }\n\n  /** Returns the short description of the {@link Alarm}*/\n  get description(): string {\n    return this._description;\n  }\n\n  /** Reference to the url associated to the {@link Alarm}*/\n  set url(url: string) {\n    this._url = url;\n  }\n\n  /** Returns the url of the documentation for the {@link Alarm}*/\n  get url(): string {\n    return this._url;\n  }\n\n  /**\n  * Returns the core_id of the {@link Alarm}*/\n  get name(): string {\n    return this._alarm.core_id;\n  }\n\n  /** Returns the operational mode of the {@link Alarm}*/\n  get mode(): string {\n    return this._alarm.getModeAsString();\n  }\n\n  /**\n  * Returns the last change timestamp of the {@link Alarm}\n  * @returns {Date} last change timestamp of the {@link Alarm}\n  */\n  get timestamp(): Date {\n    return this._alarm.timestamp;\n  }\n\n  /**\n  * Getter that returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}. Calls getAlarmStatusTagsString()\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  get status(): string {\n    return this.getAlarmStatusTagsString();\n  }\n\n  /**\n  * Returns a string representation of the {@link Alarm} for filtering purposes\n  * @returns {string} info of the {@link Alarm} for filtering purposes, joined by \" \"\n  */\n  toStringForFiltering(): string {\n    return [\n      this.status, this.description, this.name, this.mode, this.timestamp\n    ].join(' ');\n  }\n\n  /**\n  * Returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  getAlarmStatusTagsString(): string {\n    const alarm = this._alarm;\n    const shelved = alarm.shelved;\n    const value_tags = alarm.getValueAsString().split('_');\n    let value = value_tags[0];\n    let priority = value_tags[1];\n    let validity = alarm.getValidityAsString();\n    let ack = alarm.ack;\n\n    if (shelved) {\n      value = 'cleared';\n      priority = '';\n      validity = 'reliable';\n      ack = true;\n    }\n\n    const order = this.getAlarmStatusOrder(value, priority, validity, ack, shelved);\n\n    const tags = [];\n    tags.push(order);\n    tags.push(alarm.getModeAsString());\n    tags.push(value);\n    if (priority !== undefined) {\n      tags.push(priority);\n    }\n    tags.push(validity);\n    if (alarm.ack) {\n      tags.push('ack');\n    }\n    if (alarm.shelved) {\n      tags.push('shelved');\n    }\n    return tags.join('-');\n  }\n\n  /**\n  * Returns a string with a number that defines the place where the {@link Alarm} should be displayed on the Table according to the\n  * sorting by \"Status\" column\n  *\n  * @param {string} value string representation of the value of the {@link Alarm}\n  * @param {string} priority string representation of the priority of the {@link Alarm}\n  * @param {string} validity string representation of the validity of the {@link Alarm}\n  * @param {boolean} ack the ack status of the {@link Alarm}\n  * @returns {string} order for the {@link Alarm} in the Table\n  */\n  getAlarmStatusOrder(\n    value: string, priority: string, validity: string, ack: boolean, shelved: boolean): string {\n    let order = 0;\n    const priorities = ['critical', 'high', 'medium', 'low'];\n\n    // SET:\n    if (value === 'set') {\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = priorities.indexOf(priority);\n        } else {\n          order = 4 + priorities.indexOf(priority);\n        }\n      } else {\n        if (ack === false) {\n          order = 8 + priorities.indexOf(priority);\n        } else {\n          order = 12 + priorities.indexOf(priority);\n        }\n      }\n    } else {\n    // CLEARED:\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = 16;\n        } else {\n          order = 17;\n        }\n      } else {\n        if (ack === false) {\n          order = 18;\n        } else {\n          order = 19;\n        }\n      }\n    }\n    if (order \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n  Modules\n  HealthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_imports\n\n\n\ncluster_HealthModule_exports\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/health/health.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the components associated to the health of the IAS\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HealthSummaryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    HealthSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { HealthSummaryComponent } from './health-summary/health-summary.component';\n\n/**\n* This module contains the components associated to the health of the IAS\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    SharedModule\n  ],\n  declarations: [\n    HealthSummaryComponent\n  ],\n  exports: [\n    HealthSummaryComponent\n  ]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HealthSummaryComponent.html":{"url":"components/HealthSummaryComponent.html","title":"component - HealthSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HealthSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/health/health-summary/health-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-health-summary\n            \n\n            \n                styleUrls\n                health-summary.component.css\n            \n\n\n\n            \n                templateUrl\n                ./health-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Private\n                                alarmServiceSubscription\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/health/health-summary/health-summary.component.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from  AlarmService when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:26\n                            \n                        \n\n                \n                    \n                        Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:29\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:32\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:20\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/health/health-summary/health-summary.component.ts:23\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { RoutingService } from '../../data/routing.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-health-summary',\n  templateUrl: './health-summary.component.html',\n  styleUrls: ['./health-summary.component.css']\n})\nexport class HealthSummaryComponent implements OnInit, OnDestroy {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** Alarm */\n  public alarm: Alarm;\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private alarmServiceSubscription: ISubscription;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndIcons();\n    this.alarmServiceSubscription = this.alarmService.alarmChangeStream.subscribe(notification => {\n      if (notification === 'all' || notification === this.alarmId) {\n        this.alarm = this.alarmService.get(this.alarmId);\n      }\n    });\n  }\n\n  /**\n  * Unsubscribes from  {@link AlarmService} when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.alarmServiceSubscription.unsubscribe();\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n    this.alarmId = 'IAS-Health-Global';\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-valid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_medium: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_high: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-valid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-valid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-invalid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_medium: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_high: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-invalid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              IAS HEALTH\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    IAS HEALTH                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HealthSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/http-client.service.ts:12\n                            \n                        \n\n                \n                    \n                            The \"constructor\" \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:21\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/http-client.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /** The \"constructor\" */\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param url target url\n  */\n  get(url) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.get(url, httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param url target url\n  * @param data json with data\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(url, data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param url target url\n  * @param data json with data\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.put(url, data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param url target url with the selected object id\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.delete(url, httpOptions);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  IasMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for the required Angular Material components\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatToolbarModule\n  ],\n  exports: [\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatToolbarModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/data/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                legend.component.css,legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/legend/legend.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/legend/legend.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css', './legend.component.scss']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n        \n           set reliable\n        \n        \n           set unreliable\n        \n      \n\n      \n        \n           cleared reliable\n        \n        \n           cleared unreliable\n        \n      \n\n    \n    \n\n      \n        \n           unknown mode\n        \n        \n           maintenance -or- shutteddown mode\n        \n      \n\n    \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               set reliable                           set unreliable                                       cleared reliable                           cleared unreliable                                               unknown mode                           maintenance -or- shutteddown mode                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                overview-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.css']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                overview.component.css\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         ANTENNAS \n          \n          \n      \n      \n         POWER \n          \n          \n      \n      \n         OBSERVATIONS \n          \n          \n      \n    \n    \n      \n         WEATHER \n          \n        \n          \n        \n      \n    \n    \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n      \n         NETWORK \n          \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     ANTENNAS                                          POWER                                          OBSERVATIONS                                                  WEATHER                                                                  IAS HEALTH                                                          NETWORK                                 '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewModule.html":{"url":"modules/OverviewModule.html","title":"module - OverviewModule","body":"\n                   \n\n\n\n\n  Modules\n  OverviewModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_imports\n\n\n\ncluster_OverviewModule_exports\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains the general components associated to the overview.\nIt is worth noting that the overview of each system is defined in the module of the system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                OverviewCardComponent\n                            \n                            \n                                OverviewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    HealthModule\n                            \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    OverviewCardComponent\n                            \n                            \n                                    OverviewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { DataModule } from '../data/data.module';\nimport { HealthModule } from '../health/health.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherModule } from '../weather/weather.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\n\n/**\n* This module contains the general components associated to the overview.\n* It is worth noting that the overview of each system is defined in the module of the system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    DataModule,\n    HealthModule,\n    SharedModule,\n    WeatherModule,\n  ],\n  declarations: [\n    OverviewComponent,\n    OverviewCardComponent,\n  ],\n  exports: [\n    OverviewComponent,\n    OverviewCardComponent\n  ]\n})\nexport class OverviewModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/data/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TabularViewComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TabularViewComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TabularViewComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TabularViewComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAckButtonComponent->SharedModule\n\n\n\n\n\nAckModalComponent\n\nAckModalComponent\n\nSharedModule -->\n\nAckModalComponent->SharedModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nSharedModule -->\n\nAckTreeComponent->SharedModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nSharedModule -->\n\nShelveButtonComponent->SharedModule\n\n\n\n\n\nShelveModalComponent\n\nShelveModalComponent\n\nSharedModule -->\n\nShelveModalComponent->SharedModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nSharedModule -->\n\nWikiButtonComponent->SharedModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nSharedModule->AckButtonComponent \n\n\n\n\n\nAckModalComponent \n\nAckModalComponent \n\nAckModalComponent  -->\n\nSharedModule->AckModalComponent \n\n\n\n\n\nAckTreeComponent \n\nAckTreeComponent \n\nAckTreeComponent  -->\n\nSharedModule->AckTreeComponent \n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nSharedModule->ShelveButtonComponent \n\n\n\n\n\nShelveModalComponent \n\nShelveModalComponent \n\nShelveModalComponent  -->\n\nSharedModule->ShelveModalComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nSharedModule->WikiButtonComponent \n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the shared components, that are meant to be used bty the other modules.\nFor example:\n\nAcknowledge and shelve components\nAcknowledge, shelve and action buttons\nAlarm components\n\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AckButtonComponent\n                            \n                            \n                                AckModalComponent\n                            \n                            \n                                AckTreeComponent\n                            \n                            \n                                AlarmComponent\n                            \n                            \n                                ShelveButtonComponent\n                            \n                            \n                                ShelveModalComponent\n                            \n                            \n                                WikiButtonComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AckModalComponent\n                            \n                            \n                                AlarmComponent\n                            \n                            \n                                ShelveModalComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AckButtonComponent\n                            \n                            \n                                    AckModalComponent\n                            \n                            \n                                    AckTreeComponent\n                            \n                            \n                                    AlarmComponent\n                            \n                            \n                                    ShelveButtonComponent\n                            \n                            \n                                    ShelveModalComponent\n                            \n                            \n                                    WikiButtonComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { AckModalComponent } from './ack-modal/ack-modal.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { ShelveModalComponent } from './shelve-modal/shelve-modal.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\n\n/**\n* This module contains all the shared components, that are meant to be used bty the other modules.\n* For example:\n * - Acknowledge and shelve components\n * - Acknowledge, shelve and action buttons\n * - Alarm components\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IasMaterialModule,\n  ],\n  declarations: [\n    AckButtonComponent,\n    AlarmComponent,\n    AckModalComponent,\n    AckTreeComponent,\n    ShelveButtonComponent,\n    ShelveModalComponent,\n    WikiButtonComponent,\n  ],\n  exports: [\n    AckButtonComponent,\n    AlarmComponent,\n    AckModalComponent,\n    AckTreeComponent,\n    ShelveButtonComponent,\n    ShelveModalComponent,\n    WikiButtonComponent,\n  ],\n  entryComponents: [\n    AckModalComponent,\n    AlarmComponent,\n    ShelveModalComponent,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                loadAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm_id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/shelve-button/shelve-button.component.ts:25\n                            \n                        \n\n                \n                    \n                            The \"constructor\", injects the AlarmService and the {@link modalService}\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get the alarm object based on the input id\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Modal Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm_id\n                    \n                    \n                        Id of the alarm to be shelved\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/shelve-button/shelve-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-button/shelve-button.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-button/shelve-button.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Get the alarm object related with the alarm id received as input using the\nAlarmService. Initialize the private variables of this component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-button/shelve-button.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            On init the component initialize the private variables using the method\n{@link loadAlarm}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-button/shelve-button.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Handle click on table rows, it triggers the shelve modal\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/shelve-button/shelve-button.component.ts:25\n                            \n                        \n\n                \n                    \n                        Alarm object related with the alarm id received as input\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ShelveModalComponent } from '../shelve-modal/shelve-modal.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit {\n\n  /**\n   * Id of the alarm to be shelved\n   */\n  @Input() alarm_id: string;\n\n  /**\n   * Alarm object related with the alarm id received as input\n   */\n  public alarm: Alarm;\n\n\n  /**\n   * The \"constructor\", injects the {@link AlarmService} and the {@link modalService}\n   * @param {AlarmService} alarmService Service to get the alarm object based on the input id\n   * @param {ModalService} modalService Service to manage the Modal Component\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private modalService: NgbModal\n  ) { }\n\n  /**\n   * On init the component initialize the private variables using the method\n   * {@link loadAlarm}\n   */\n  ngOnInit() {\n    this.loadAlarm();\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Get the alarm object related with the alarm id received as input using the\n   * AlarmService. Initialize the private variables of this component.\n   */\n  loadAlarm() {\n    this.alarm = this.alarmService.get(this.alarm_id);\n  }\n\n  /**\n  * Handle click on table rows, it triggers the shelve modal\n  */\n  onClick(event) {\n    const shelveModal = this.modalService.open(ShelveModalComponent,\n      { size: 'lg', centered: true }\n    );\n    shelveModal.componentInstance.alarm = this.alarm;\n    return shelveModal;\n  }\n}\n\n    \n\n    \n        \n    \n    \n      archive\n    \n    \n      unarchive\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              archive              unarchive    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveModalComponent.html":{"url":"components/ShelveModalComponent.html","title":"component - ShelveModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/shelve-modal/shelve-modal.component.ts\n\n\n    \n        Description\n    \n    \n        Modal used to acknowledge alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-modal\n            \n\n            \n                styleUrls\n                shelve-modal.component.css,shelve-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shelve-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSend\n                            \n                            \n                                getActionButtonText\n                            \n                            \n                                getAlarmDescription\n                            \n                            \n                                getAlarmUrl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendSuccessful\n                            \n                            \n                                shelve\n                            \n                            \n                                toggleShelveUnshelve\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal, formBuilder: FormBuilder, alarmService: AlarmService, cdbService: CdbService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to itself\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        cdbService\n                                                  \n                                                        \n                                                                    CdbService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get complementary alarm information\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object to be shelved/unshelved\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canSend\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanSend()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the action can be sent, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionButtonText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionButtonText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the action button, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmDescription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Get the alarm description through the method provided by the CdbService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    description of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Get the link to the wikipage of the alarm through the method provided by the CdbService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    URL for of the documentation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Create the form and check the validity of the form input fields\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendSuccessful\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendSuccessful(alarms: any, shelve: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Actions performed when the acknowledge is made ssuccesfully.\nFinally the modal is closed.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarms\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of sucessfully acknowledged alarms\n\n                                                        \n                                                \n                                                \n                                                        shelve\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the shelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleShelveUnshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleShelveUnshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Send the shelve/unshelve request through the method provided by the AlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the unshelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to itself\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/shelve-modal/shelve-modal.component.ts:28\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlarmService } from '../../data/alarm.service';\nimport { CdbService } from '../../data/cdb.service';\nimport { Alarm } from '../../data/alarm';\n\n\n/**\n * Modal used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve-modal',\n  templateUrl: './shelve-modal.component.html',\n  styleUrls: ['./shelve-modal.component.css', './shelve-modal.component.scss']\n})\nexport class ShelveModalComponent implements OnInit {\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  @Input() alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n   * Instantiates the component\n   * @param {ActiveModal} activeModal Reference to itself\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    public activeModal: NgbActiveModal,\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private cdbService: CdbService,\n    private spinnerService: NgxSpinnerService,\n  ) {\n  }\n\n  /**\n   * Create the form and check the validity of the form input fields\n   */\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      message: [null, [Validators.required]]\n    });\n  }\n\n  /**\n   * Actions performed when the acknowledge is made ssuccesfully.\n   * Finally the modal is closed.\n   * @param alarms list of sucessfully acknowledged alarms\n   */\n  sendSuccessful(alarms: any, shelve: boolean): void {\n    if (shelve) {\n      console.log('Shelved successful for alarms: ', alarms);\n    } else {\n      console.log('Unshelved successful for alarms: ', alarms);\n    }\n    this.activeModal.close();\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve() {\n    this.spinnerService.show();\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(\n        this.alarm.core_id, this.form.get('message').value).subscribe(\n          (response) => {\n            this.sendSuccessful(response, true);\n            this.spinnerService.hide();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.spinnerService.hide();\n            return error;\n          }\n        );\n    } else {\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve() {\n    this.spinnerService.show();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.sendSuccessful(response, false);\n            this.spinnerService.hide();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.spinnerService.hide();\n            return error;\n          }\n        );\n    } else {\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} true if the action can be sent, false if not\n   */\n  canSend(): boolean {\n    return this.alarm.shelved || this.form.valid;\n  }\n\n  /**\n   * Get the alarm description through the method provided by the {@link CdbService}\n   * @returns {string} description of the {@link Alarm}\n   */\n  getAlarmDescription() {\n    return this.cdbService.getAlarmDescription(this.alarm.core_id);\n  }\n\n  /**\n   * Get the link to the wikipage of the alarm through the method provided by the {@link CdbService}\n   * @returns {string} URL for of the documentation of the {@link Alarm}\n   */\n  getAlarmUrl() {\n    return this.cdbService.getAlarmsInformationUrl(this.alarm.core_id);\n  }\n\n  /**\n   * Returns the text to display in the action button, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n}\n\n    \n\n    \n        \n  {{alarm?.core_id}}\n  \n    &times;\n  \n\n\n\n  \n    \n      {{ getAlarmDescription() }} \n      \n        \n          Go to wiki&nbsp;\n        \n      \n    \n    \n      \n      \n        \n        \n          * The shelve button will be enabled after writing the message\n        \n      \n    \n  \n  \n    Cancel\n    {{ getActionButtonText() }}\n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{alarm?.core_id}}      ×              {{ getAlarmDescription() }}                         Go to wiki                                                             * The shelve button will be enabled after writing the message                          Cancel    {{ getActionButtonText() }}  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getContainerClasses\n                            \n                            \n                                getSymbolStyle\n                            \n                            \n                                    Private\n                                hasTag\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/status-view/status-view.component.ts:22\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/tabular/status-view/status-view.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getContainerClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetContainerClasses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/status-view/status-view.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Return the list of classes that define the main style of the status container\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    list of container classes to apply the style to the component\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSymbolStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSymbolStyle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/status-view/status-view.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Return the status symbol style used to represent if the alarm is SET or\nCLEARED\n\n\n                            \n                            \n                            \n                                Returns :     object\n\n                            \n                                \n                                    the style for the symbol\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasTag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasTag(tag: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/status-view/status-view.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Method to search if the component contains an specific tag\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                String of the searched tag\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it has the tag, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/status-view/status-view.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the {@link alarmTags}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/status-view/status-view.component.ts:22\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { OperationalMode } from '../../data/alarm';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Dash-separated string with the tags that define the state of an alarm\n   */\n  @Input() value: string;\n\n  /**\n   * List of tags that define the state of an alarm\n   */\n  private alarmTags = [];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    const tags = this.value.toString().split('-');\n    if (tags.length >= 2) {\n        for (const tag of this.value.toString().split('-')) {\n          this.alarmTags.push(tag);\n        }\n    } else {\n        this.alarmTags = [];\n    }\n  }\n\n  /**\n  * Return the list of classes that define the main style of the status container\n  * @returns {any} list of container classes to apply the style to the component\n  */\n  getContainerClasses(): any {\n    const classes = ['alarm-status'];\n\n    if (this.hasTag('shelved')) {\n      classes.push('status-cleared');\n      return classes;\n    }\n\n    if (this.hasTag('maintenance') || this.hasTag('shuttedown')) {\n      classes.push('status-maintenance');\n    } else if (this.hasTag('unknown')) {\n      classes.push('status-unknown');\n    } else {\n      if (this.hasTag('cleared')) {\n        classes.push('status-cleared');\n      } else if (this.hasTag('set')) {\n        classes.push('status-set');\n      } else {\n        classes.push('status-error');\n      }\n    }\n\n    if (this.hasTag('unreliable')) {\n      classes.push('status-unreliable');\n    }\n\n    if (!this.hasTag('ack')) {\n      classes.push('blink');\n    }\n\n    return classes;\n  }\n\n  /**\n  * Return the status symbol style used to represent if the alarm is SET or\n  * CLEARED\n  * @returns {object} the style for the symbol\n  */\n  getSymbolStyle(): object {\n\n    let color: string;\n    let visibility: string;\n\n    if (this.hasTag('shelved')) {\n      visibility = 'hidden';\n      color = 'black';\n    } else if (this.hasTag('set')) {\n      visibility = 'visible';\n      color = 'white';\n    } else if (this.hasTag('cleared')) {\n      visibility = 'hidden';\n      color = 'black';\n    } else {\n      visibility = 'visible';\n      color = 'black';  // error\n    }\n\n    const style = {\n      'visibility': visibility,\n      'color': color\n    };\n\n    return style;\n  }\n\n  /**\n   * Method to search if the component contains an specific tag\n   * @param {string} tag String of the searched tag\n   * @returns {boolean} true if it has the tag, false if not\n   */\n  private hasTag(tag): boolean {\n    return this.alarmTags.indexOf(tag) > -1 ? true : false;\n  }\n\n}\n\n    \n\n    \n        \n   &#9650; \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   ▲ '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabularModule.html":{"url":"modules/TabularModule.html","title":"module - TabularModule","body":"\n                   \n\n\n\n\n  Modules\n  TabularModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_imports\n\n\n\ncluster_TabularModule_exports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nTabularModule -->\n\nStatusViewComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabular/tabular.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Table view\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LegendComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                            \n                                TabularViewComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IasMaterialModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TabularViewComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IasMaterialModule } from '../ias-material/ias-material.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { LegendComponent } from './legend/legend.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\n\n/**\n* This module contains all the components related to the Table view\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    IasMaterialModule,\n    SharedModule\n  ],\n  declarations: [\n    LegendComponent,\n    StatusViewComponent,\n    TabularViewComponent,\n  ],\n  exports: [\n    TabularViewComponent,\n  ],\n  entryComponents: [\n    StatusViewComponent,\n  ]\n})\nexport class TabularModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabularViewComponent.html":{"url":"components/TabularViewComponent.html","title":"component - TabularViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabularViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular/tabular-view/tabular-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component that dispays all the Alarms in a table\nThe user can change the default sorting by clicking on the headers and filter\nby typing in an input field\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabular-view\n            \n\n            \n                styleUrls\n                tabular-view.component.css,tabular-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabular-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _setFilterActivated\n                            \n                            \n                                    Private\n                                alarmServiceSubscription\n                            \n                            \n                                    Public\n                                alarmsList\n                            \n                            \n                                    Private\n                                cdbServiceSubscription\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Private\n                                dateFormat\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                filterPredicate\n                            \n                            \n                                    Public\n                                filterString\n                            \n                            \n                                    Private\n                                filterValueForSetAlarms\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                            \n                                    Private\n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                getAlarmDataFromCdbService\n                            \n                            \n                                loadTable\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFilterOnlySetAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, cdbService: CdbService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular/tabular-view/tabular-view.component.ts:88\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        cdbService\n                                                  \n                                                        \n                                                                    CdbService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get complementary alarm information\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization\nof this component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:189\n                            \n                        \n\n\n                \n                    \n                            Applies the filter ot the Table\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmDataFromCdbService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmDataFromCdbService(core_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:171\n                            \n                        \n\n\n                \n                    \n                            Gets data (short description and url) from the CdbService\nfor a given Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the core_id of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { description: any; url: any; }\n\n                            \n                                \n                                    A JSON with 2 key: description and url\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTable\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadTable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Loads the table with data from CdbService and AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Applies the table's default sorting after its initialization \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from CdbService and AlarmService\nwhen the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Create the table when the component is initializated\nSubscribes to IAS configuration information from the CdbService\nSubscribes to new alarms from the AlarmService\nRetrieves filter values passed by the URL and applies them to the table\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFilterOnlySetAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFilterOnlySetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:207\n                            \n                        \n\n\n                \n                    \n                            Toggle the filtering for only set Alarm objects ON/OFF\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _setFilterActivated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _setFilterActivated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:37\n                            \n                        \n\n                \n                    \n                        Defines wether the filter for only SET Alarm is activated or not.\nWhen the user writes either \"set\", \" set\" or \"set \" this field becomes true\nIf the user deletes \"set\" from the input field then this field becomes false\nThis attribute is binded to the state of the toggle slide switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:60\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsList:     DisplayedAlarm[]\n\n                    \n                \n                    \n                        \n                            Type :     DisplayedAlarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:72\n                            \n                        \n\n                \n                    \n                        List of DisplayedAlarm objects \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cdbServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdbServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:63\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     MatTableDataSource\n\n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:57\n                            \n                        \n\n                \n                    \n                        DataSource of the Table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['status', 'name',  'mode', 'timestamp', 'description', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:45\n                            \n                        \n\n                \n                    \n                        Array that defines which coulmns are going to be displayed and in which order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterPredicate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPredicate:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: DisplayedAlarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:78\n                            \n                        \n\n                \n                    \n                        Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterString:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:40\n                            \n                        \n\n                \n                    \n                        String that stores the test input in the filter textfield \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterValueForSetAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterValueForSetAlarms:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'set'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:54\n                            \n                        \n\n                \n                    \n                        String to define the keyword to filter SET Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:69\n                            \n                        \n\n                \n                    \n                        Subscription to be notified when there is data available from the\nIAS Table in the  CdbService\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        Reference to the MatSort, the component that defines the sorting of the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        table:     MatTable\n\n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the MatTable, the component that defines the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timezone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timezone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:51\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:232\n                                \n                            \n                    \n                        \n                                Returns the filters applied to the Table\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        toggleStatus\n                    \n                \n\n                \n                    \n                        gettoggleStatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular/tabular-view/tabular-view.component.ts:240\n                                \n                            \n                    \n                        \n                                Returns the status of the Toggle for the filtering of set Alarms\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Injectable, OnInit, ViewChild, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Observable ,  BehaviorSubject ,  SubscriptionLike as ISubscription } from 'rxjs';\nimport { MatTableDataSource, MatSort, MatSortable, MatTable } from '@angular/material';\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { ActivatedRoute } from '@angular/router';\nimport { Alarm, OperationalMode, Validity } from '../../data/alarm';\nimport { DisplayedAlarm } from '../../data/displayed-alarm';\nimport { AlarmService } from '../../data/alarm.service';\nimport { CdbService } from '../../data/cdb.service';\nimport { Locale } from '../../settings';\n\n/**\n* Component that dispays all the Alarms in a table\n*\n* The user can change the default sorting by clicking on the headers and filter\n* by typing in an input field\n*/\n@Component({\n  selector: 'app-tabular-view',\n  templateUrl: './tabular-view.component.html',\n  styleUrls: ['./tabular-view.component.css', './tabular-view.component.scss']\n})\nexport class TabularViewComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  /** Reference to the MatTable, the component that defines the table */\n  @ViewChild(MatTable) table: MatTable;\n\n  /** Reference to the MatSort, the component that defines the sorting of the table */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n  * Defines wether the filter for only SET {@link Alarm} is activated or not.\n  * When the user writes either \"set\", \" set\" or \"set \" this field becomes true\n  * If the user deletes \"set\" from the input field then this field becomes false\n  * This attribute is binded to the state of the toggle slide switch\n  */\n  public _setFilterActivated = false;\n\n  /** String that stores the test input in the filter textfield */\n  public filterString = '';\n\n  /**\n  * Array that defines which coulmns are going to be displayed and in which order\n  */\n  public displayedColumns = ['status', 'name',  'mode', 'timestamp', 'description', 'actions'];\n\n  /** String to store the formatting of dates, read form the settings */\n  private dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  private timezone: string;\n\n  /** String to define the keyword to filter SET {@link Alarm} */\n  private filterValueForSetAlarms = 'set';\n\n  /** DataSource of the Table */\n  public dataSource: MatTableDataSource;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private alarmServiceSubscription: ISubscription;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private cdbServiceSubscription: ISubscription;\n\n  /**\n  * Subscription to be notified when there is data available from the\n  * IAS Table in the  {@link CdbService}\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /** List of {@link DisplayedAlarm} objects */\n  public alarmsList: DisplayedAlarm[] = [];\n\n  /**\n  * Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n  * @returns {boolean} true if the row matches the filter, false if not\n  */\n  public filterPredicate: (\n    (data: DisplayedAlarm, filterString: string) => boolean) = (data: DisplayedAlarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Instantiates the service\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {Route} route Reference to the url that triggered the initialization\n   * of this component\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private cdbService: CdbService,\n    private route: ActivatedRoute\n  ) {}\n\n  /**\n   * Create the table when the component is initializated\n   * Subscribes to IAS configuration information from the {@link CdbService}\n   * Subscribes to new alarms from the {@link AlarmService}\n   * Retrieves filter values passed by the URL and applies them to the table\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n    this.sort.sort( {\n      id: 'status',\n      start: 'asc'\n    });\n    this.dataSource = new MatTableDataSource();\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.cdbServiceSubscription = this.cdbService.iasDataAvailable.subscribe(\n      value => {\n        this.iasDataAvailable.next(value);\n        this.loadTable();\n      }\n    );\n    this.alarmServiceSubscription = this.alarmService.alarmChangeStream.subscribe(notification => {\n      this.loadTable();\n    });\n    let filterValue = this.route.snapshot.paramMap.get('filter');\n    if (filterValue && filterValue !== '') {\n      filterValue = filterValue.replace('_', ' ');\n      this.applyFilter(filterValue);\n    }\n  }\n\n  /** Applies the table's default sorting after its initialization */\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n  * Unsubscribes from {@link CdbService} and {@link AlarmService}\n  * when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.cdbServiceSubscription.unsubscribe();\n    this.alarmServiceSubscription.unsubscribe();\n  }\n\n\n  /**\n  * Loads the table with data from {@link CdbService} and {@link AlarmService}\n  */\n  loadTable() {\n    const self = this;\n    this.alarmsList = Object.keys(this.alarmService.alarms).map(function(key) {\n      const dataFromCdb = self.getAlarmDataFromCdbService(self.alarmService.alarms[key].core_id);\n      return new DisplayedAlarm(\n        self.alarmService.alarms[key],\n        dataFromCdb.description,\n        dataFromCdb.url\n      );\n    });\n    this.dataSource.data = this.alarmsList;\n  }\n\n  /**\n  * Gets data (short description and url) from the {@link CdbService}\n  * for a given {@link Alarm}\n  * @param {string} core_id the core_id of the {@link Alarm} for which to retriev info,\n  * @returns {JSON} A JSON with 2 key: description and url\n  */\n  getAlarmDataFromCdbService(core_id: string) {\n    if (this.iasDataAvailable.getValue() === true) {\n      return {\n        description: this.cdbService.getAlarmDescription(core_id),\n        url: this.cdbService.getAlarmsInformationUrl(core_id)\n      };\n    } else {\n      return {\n        description: '',\n        url: ''\n      };\n    }\n  }\n\n  /**\n  * Applies the filter ot the Table\n  * @param {string} filterValue the string containing keywords for filtering\n  */\n  applyFilter(filter: string) {\n    this.filterString = filter;\n    const arrayOfFilters = filter.split(' ');\n    // If \"set\" IS in the array, then it is activated\n    if (arrayOfFilters.indexOf(this.filterValueForSetAlarms) >= 0 ) {\n      this._setFilterActivated = true;\n\n    } else { // If \"set\" NOT in the field, then it is deactivated\n      this._setFilterActivated = false;\n    }\n    filter = filter.trim();\n    filter = filter.toLowerCase();\n    this.dataSource.filter = filter;\n  }\n\n  /**\n  * Toggle the filtering for only set {@link Alarm} objects ON/OFF\n  */\n  toggleFilterOnlySetAlarm() {\n    if (this.filterString == null) {\n      this.filterString = '';\n    }\n    const arrayOfFilters = this.filterString.split(' ');\n    const indexOfSet = arrayOfFilters.indexOf(this.filterValueForSetAlarms);\n\n    // If activated then should deactivate:\n    if (this._setFilterActivated) {\n      if ( indexOfSet >= 0 ) {\n        arrayOfFilters.splice(indexOfSet, 1);\n      }\n    } else { // If deactivated then should activate:\n      if ( indexOfSet \n    \n\n    \n        \n\n  \n    \n        \n          Alarms\n        \n        \n        \n    \n  \n  \n\n    \n\n    \n      All / Set only\n     -->\n\n    \n      \n        \n          \n        \n      \n      \n        \n           -->\n           Show only set alarms\n            \n            \n          \n        \n      \n    \n\n    \n\n      \n      \n        \n           Status \n        \n        \n          \n        \n      \n\n      \n      \n        \n           Alarm Name \n        \n         {{alarm.name}} \n      \n\n      \n      \n        \n           Mode \n        \n         {{alarm.mode}} \n      \n\n      \n      \n        \n           Last Change Time \n        \n         {{ alarm.timestamp | date: dateFormat: timezone }} \n      \n\n      \n      \n        \n           Description \n        \n         {{alarm.description}} \n      \n\n      \n      \n        \n           Actions \n        \n        \n          \n          \n          \n        \n      \n\n      \n      \n    \n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Alarms                                              All / Set only     -->                                                                   -->           Show only set alarms                                                                                       Status                                                                        Alarm Name                  {{alarm.name}}                                      Mode                  {{alarm.mode}}                                      Last Change Time                  {{ alarm.timestamp | date: dateFormat: timezone }}                                      Description                  {{alarm.description}}                                      Actions                                                                                 '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabularViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module contains all the components related to the Weather system\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeatherSummaryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DataModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WeatherSummaryComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataModule } from '../data/data.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { WeatherSummaryComponent } from './weather-summary/weather-summary.component';\n\n/**\n* This module contains all the components related to the Weather system\n*/\n@NgModule({\n  imports: [\n    CommonModule,\n    DataModule,\n    SharedModule,\n  ],\n  declarations: [\n    WeatherSummaryComponent,\n  ],\n  exports: [\n    WeatherSummaryComponent,\n  ]\n})\nexport class WeatherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherSummaryComponent.html":{"url":"components/WeatherSummaryComponent.html","title":"component - WeatherSummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherSummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-summary/weather-summary.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-summary\n            \n\n            \n                styleUrls\n                weather-summary.component.css\n            \n\n\n\n            \n                templateUrl\n                ./weather-summary.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarmServiceSubscription\n                            \n                            \n                                    Public\n                                humidityAlarm\n                            \n                            \n                                    Public\n                                humidityAlarmId\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                tempAlarm\n                            \n                            \n                                    Public\n                                tempAlarmId\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                windsAlarm\n                            \n                            \n                                    Public\n                                windsAlarmId\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-summary/weather-summary.component.ts:56\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:187\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from  AlarmService when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:56\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityAlarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:38\n                            \n                        \n\n                \n                    \n                        Humidity Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:47\n                            \n                        \n\n                \n                    \n                        ID of the Humidity Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:20\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:29\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempAlarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:41\n                            \n                        \n\n                \n                    \n                        Temperature Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:50\n                            \n                        \n\n                \n                    \n                        ID of the Temperature Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:23\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:32\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsAlarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:44\n                            \n                        \n\n                \n                    \n                        Wind Speed Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:53\n                            \n                        \n\n                \n                    \n                        Wind ID of the Speed Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:26\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-summary/weather-summary.component.ts:35\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { RoutingService } from '../../data/routing.service';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../../shared/alarm/alarm.component';\nimport { AlarmService } from '../../data/alarm.service';\nimport { Alarm } from '../../data/alarm';\nimport { Assets } from '../../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-weather-summary',\n  templateUrl: './weather-summary.component.html',\n  styleUrls: ['./weather-summary.component.css']\n})\nexport class WeatherSummaryComponent implements OnInit, OnDestroy {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Humidity Alarm */\n  public humidityAlarm: Alarm;\n\n  /** Temperature Alarm */\n  public tempAlarm: Alarm;\n\n  /** Wind Speed Alarm */\n  public windsAlarm: Alarm;\n\n  /** ID of the Humidity Alarm */\n  public humidityAlarmId: string;\n\n  /** ID of the Temperature Alarm */\n  public tempAlarmId: string;\n\n  /** Wind ID of the Speed Alarm */\n  public windsAlarmId: string;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private alarmServiceSubscription: ISubscription;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.alarmServiceSubscription = this.alarmService.alarmChangeStream.subscribe(notification => {\n      if (notification === 'all') {\n        this.humidityAlarm = this.alarmService.get(this.humidityAlarmId);\n        this.tempAlarm = this.alarmService.get(this.tempAlarmId);\n        this.windsAlarm = this.alarmService.get(this.windsAlarmId);\n\n      } else {\n        if (notification === this.windsAlarmId) {\n          this.windsAlarm = this.alarmService.get(notification);\n        }\n        if (notification === this.humidityAlarmId) {\n          this.humidityAlarm = this.alarmService.get(notification);\n        }\n        if (notification === this.tempAlarmId) {\n          this.tempAlarm = this.alarmService.get(notification);\n        }\n      }\n    });\n  }\n\n  /**\n  * Unsubscribes from  {@link AlarmService} when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.alarmServiceSubscription.unsubscribe();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n    this.humidityAlarmId = 'WS-Humidity-Global';\n    this.tempAlarmId = 'WS-Temperature-Global';\n    this.windsAlarmId = 'WS-WindSpeed-Global';\n\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-critical.svg',\n      set_medium: Assets.ICONS + 'hum-valid-critical.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-critical.svg',\n      set_medium: Assets.ICONS + 'temp-valid-critical.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-invalid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-invalid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              WIND SPEED\n              \n                \n              \n          \n      \n      \n          \n              HUMIDITY\n              \n                \n              \n              \n                  \n               -->\n          \n      \n      \n          \n              TEMPERATURE\n              \n                \n              \n          \n      \n    \n  \n  \n      \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    WIND SPEED                                                                                          HUMIDITY                                                                                           -->                                              TEMPERATURE                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherSummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n     Go to wiki &nbsp;\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Go to wiki    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HealthSummaryComponent', 'selector': 'app-health-summary'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WeatherSummaryComponent', 'selector': 'app-weather-summary'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/data/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    src/app/data/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    src/app/data/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/data/displayed-alarm.ts\n            \n            \n                class\n            \n            \n                DisplayedAlarm\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/data/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/data/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/health/health-summary/health-summary.component.ts\n            \n            \n                component\n            \n            \n                HealthSummaryComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/overview/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/overview/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/shared/ack-modal/ack-modal.component.ts\n            \n            \n                component\n            \n            \n                AckModalComponent\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                    src/app/shared/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                    src/app/shared/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/shared/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shared/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/shared/shelve-modal/shelve-modal.component.ts\n            \n            \n                component\n            \n            \n                ShelveModalComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/shared/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/tabular/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/tabular/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                alarms_date\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                datepipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-summary/weather-summary.component.ts\n            \n            \n                component\n            \n            \n                WeatherSummaryComponent\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.4\n        \n            @angular/cdk : ^6.2.1\n        \n            @angular/common : 6.0.4\n        \n            @angular/compiler : 6.0.4\n        \n            @angular/core : 6.0.4\n        \n            @angular/forms : 6.0.4\n        \n            @angular/http : 6.0.4\n        \n            @angular/material : ^6.2.1\n        \n            @angular/platform-browser : 6.0.4\n        \n            @angular/platform-browser-dynamic : 6.0.4\n        \n            @angular/platform-server : 6.0.4\n        \n            @angular/router : 6.0.4\n        \n            @ng-bootstrap/ng-bootstrap : ^2.1.0\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.7\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            ngx-spinner : ^6.0.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/data/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value: 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value: 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: 7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabularModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_declarations\n\n\n\ncluster_HealthModule_exports\n\n\n\ncluster_OverviewModule\n\n\n\ncluster_OverviewModule_declarations\n\n\n\ncluster_OverviewModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TabularModule\n\n\n\ncluster_TabularModule_declarations\n\n\n\ncluster_TabularModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nDataModule->HealthModule\n\n\n\n\n\nOverviewModule\n\nOverviewModule\n\nOverviewModule -->\n\nDataModule->OverviewModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nDataModule->WeatherModule\n\n\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nOverviewModule -->\n\nHealthModule->OverviewModule\n\n\n\n\n\nHealthSummaryComponent \n\nHealthSummaryComponent \n\nHealthSummaryComponent  -->\n\nHealthModule->HealthSummaryComponent \n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\nOverviewModule -->\n\nIasMaterialModule->OverviewModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nIasMaterialModule->SharedModule\n\n\n\n\n\nTabularModule\n\nTabularModule\n\nTabularModule -->\n\nIasMaterialModule->TabularModule\n\n\n\nAppModule -->\n\nOverviewModule->AppModule\n\n\n\n\n\nOverviewCardComponent \n\nOverviewCardComponent \n\nOverviewCardComponent  -->\n\nOverviewModule->OverviewCardComponent \n\n\n\n\n\nOverviewComponent \n\nOverviewComponent \n\nOverviewComponent  -->\n\nOverviewModule->OverviewComponent \n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nHealthModule -->\n\nSharedModule->HealthModule\n\n\n\nOverviewModule -->\n\nSharedModule->OverviewModule\n\n\n\nTabularModule -->\n\nSharedModule->TabularModule\n\n\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nAckButtonComponent \n\nAckButtonComponent \n\nAckButtonComponent  -->\n\nSharedModule->AckButtonComponent \n\n\n\n\n\nAckModalComponent \n\nAckModalComponent \n\nAckModalComponent  -->\n\nSharedModule->AckModalComponent \n\n\n\n\n\nAckTreeComponent \n\nAckTreeComponent \n\nAckTreeComponent  -->\n\nSharedModule->AckTreeComponent \n\n\n\n\n\nAlarmComponent \n\nAlarmComponent \n\nAlarmComponent  -->\n\nSharedModule->AlarmComponent \n\n\n\n\n\nShelveButtonComponent \n\nShelveButtonComponent \n\nShelveButtonComponent  -->\n\nSharedModule->ShelveButtonComponent \n\n\n\n\n\nShelveModalComponent \n\nShelveModalComponent \n\nShelveModalComponent  -->\n\nSharedModule->ShelveModalComponent \n\n\n\n\n\nWikiButtonComponent \n\nWikiButtonComponent \n\nWikiButtonComponent  -->\n\nSharedModule->WikiButtonComponent \n\n\n\nAppModule -->\n\nTabularModule->AppModule\n\n\n\n\n\nTabularViewComponent \n\nTabularViewComponent \n\nTabularViewComponent  -->\n\nTabularModule->TabularViewComponent \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\nOverviewModule -->\n\nWeatherModule->OverviewModule\n\n\n\n\n\nWeatherSummaryComponent \n\nWeatherSummaryComponent \n\nWeatherSummaryComponent  -->\n\nWeatherModule->WeatherSummaryComponent \n\n\n\n\n\nAlarmService\n\nAlarmService\n\nDataModule -->\n\nAlarmService->DataModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nDataModule -->\n\nCdbService->DataModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nDataModule -->\n\nHttpClientService->DataModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nDataModule -->\n\nRoutingService->DataModule\n\n\n\n\n\nHealthSummaryComponent\n\nHealthSummaryComponent\n\nHealthModule -->\n\nHealthSummaryComponent->HealthModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nOverviewModule -->\n\nOverviewCardComponent->OverviewModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nOverviewModule -->\n\nOverviewComponent->OverviewModule\n\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\nSharedModule -->\n\nAckButtonComponent->SharedModule\n\n\n\n\n\nAckModalComponent\n\nAckModalComponent\n\nSharedModule -->\n\nAckModalComponent->SharedModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nSharedModule -->\n\nAckTreeComponent->SharedModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nSharedModule -->\n\nAlarmComponent->SharedModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nSharedModule -->\n\nShelveButtonComponent->SharedModule\n\n\n\n\n\nShelveModalComponent\n\nShelveModalComponent\n\nSharedModule -->\n\nShelveModalComponent->SharedModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nSharedModule -->\n\nWikiButtonComponent->SharedModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nTabularModule -->\n\nLegendComponent->TabularModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nTabularModule -->\n\nStatusViewComponent->TabularModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nTabularModule -->\n\nTabularViewComponent->TabularModule\n\n\n\n\n\nWeatherSummaryComponent\n\nWeatherSummaryComponent\n\nWeatherModule -->\n\nWeatherSummaryComponent->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            8 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        15 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alarms_date   (src/.../fixtures.ts)\n                        \n                        \n                            Assets   (src/.../settings.ts)\n                        \n                        \n                            BackendUrls   (src/.../settings.ts)\n                        \n                        \n                            datepipe   (src/.../fixtures.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            ExpectedFilteredTableRows   (src/.../fixtures.ts)\n                        \n                        \n                            ExpectedTableRows   (src/.../fixtures.ts)\n                        \n                        \n                            Locale   (src/.../settings.ts)\n                        \n                        \n                            MockAlarms   (src/.../fixtures.ts)\n                        \n                        \n                            MockAlarms   (src/.../fixtures.ts)\n                        \n                        \n                            MockIasios   (src/.../fixtures.ts)\n                        \n                        \n                            MockImageSet   (src/.../fixtures.ts)\n                        \n                        \n                            MockImageUnreliableSet   (src/.../fixtures.ts)\n                        \n                        \n                            StorageItems   (src/.../settings.ts)\n                        \n                        \n                            Streams   (src/.../settings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tabular/tabular-view/fixtures.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alarms_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms_date:     \n\n                    \n                \n                    \n                        \n                            Default value : new Date(Date.parse('27 Feb 2010 06:34:00 GMT'))\n                        \n                    \n\n                \n                    \n                        Fixed date to use on the tests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepipe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datepipe:     \n\n                    \n                \n                    \n                        \n                            Default value : new DatePipe('en')\n                        \n                    \n\n                \n                    \n                        Object used to format the dates as needed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ExpectedFilteredTableRows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ExpectedFilteredTableRows:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ExpectedTableRows[4],\n  ExpectedTableRows[11],\n  ExpectedTableRows[12],\n  ExpectedTableRows[13],\n  ExpectedTableRows[14],\n  ExpectedTableRows[21],\n]\n                        \n                    \n\n                \n                    \n                        Set of the rows the that the test expects on the Table after the filter \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ExpectedTableRows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ExpectedTableRows:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  // SET VALID NOT-ACK\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[21]), 'Alarm 44 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[0]), 'Alarm 1 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[20]), 'Alarm 43 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[22]), 'Alarm 47 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[1]), 'Alarm 2 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[2]), 'Alarm 3 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[3]), 'Alarm 4 description', 'https://www.alma.cl/'),\n\n  // SET VALID ACK\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[5]), 'Alarm 11 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[6]), 'Alarm 12 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[7]), 'Alarm 13 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[8]), 'Alarm 14 description', 'https://www.alma.cl/'),\n\n  // SET INVALID NOT-ACK\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[10]), 'Alarm 21 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[11]), 'Alarm 22 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[12]), 'Alarm 23 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[13]), 'Alarm 24 description', 'https://www.alma.cl/'),\n\n  // SET INVALID ACK\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[15]), 'Alarm 31 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[16]), 'Alarm 32 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[17]), 'Alarm 33 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[18]), 'Alarm 34 description', 'https://www.alma.cl/'),\n\n  // CLEARED:\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[4]), 'Alarm 5 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[9]), 'Alarm 15 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[14]), 'Alarm 25 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[19]), 'Alarm 35 description', 'https://www.alma.cl/'),\n]\n                        \n                    \n\n                \n                    \n                        Set of the rows the that the test expects on the Table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MockAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockAlarms:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  // VALID NOT-ACK\n  {\n    'value': 4,\n    'core_id': 'coreid$1',\n    'running_id': 'coreid$1',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'coreid$2',\n    'running_id': 'coreid$2',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'coreid$3',\n    'running_id': 'coreid$3',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'coreid$4',\n    'running_id': 'coreid$4',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'coreid$5',\n    'running_id': 'coreid$5',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n\n  // VALID ACK\n  {\n    'value': 4,\n    'core_id': 'coreid$11',\n    'running_id': 'coreid$11',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'coreid$12',\n    'running_id': 'coreid$12',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'coreid$13',\n    'running_id': 'coreid$13',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'coreid$14',\n    'running_id': 'coreid$14',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'coreid$15',\n    'running_id': 'coreid$15',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n\n  // INVALID NOT-ACK\n  {\n    'value': 4,\n    'core_id': 'coreid$21',\n    'running_id': 'coreid$21',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'coreid$22',\n    'running_id': 'coreid$22',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'coreid$23',\n    'running_id': 'coreid$23',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'coreid$24',\n    'running_id': 'coreid$24',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'coreid$25',\n    'running_id': 'coreid$25',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n\n  // INVALID ACK\n  {\n    'value': 4,\n    'core_id': 'coreid$31',\n    'running_id': 'coreid$31',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'coreid$32',\n    'running_id': 'coreid$32',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'coreid$33',\n    'running_id': 'coreid$33',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'coreid$34',\n    'running_id': 'coreid$34',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'coreid$35',\n    'running_id': 'coreid$35',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n\n  // Repetitions weith different modes:\n  {\n    'value': 4,\n    'core_id': 'coreid$43',\n    'running_id': 'coreid$43',\n    'mode': 3,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 4,\n    'core_id': 'coreid$44',\n    'running_id': 'coreid$44',\n    'mode': 4,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 4,\n    'core_id': 'coreid$47',\n    'running_id': 'coreid$47',\n    'mode': 7,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n]\n                        \n                    \n\n                \n                    \n                        Set of mock Alarms for the tests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MockIasios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockIasios:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n      io_id: 'coreid$1',\n      short_desc: 'Alarm 1 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$2',\n      short_desc: 'Alarm 2 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$3',\n      short_desc: 'Alarm 3 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$4',\n      short_desc: 'Alarm 4 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$5',\n      short_desc: 'Alarm 5 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$11',\n      short_desc: 'Alarm 11 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$12',\n      short_desc: 'Alarm 12 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$13',\n      short_desc: 'Alarm 13 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$14',\n      short_desc: 'Alarm 14 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$15',\n      short_desc: 'Alarm 15 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$21',\n      short_desc: 'Alarm 21 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$22',\n      short_desc: 'Alarm 22 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$23',\n      short_desc: 'Alarm 23 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$24',\n      short_desc: 'Alarm 24 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$25',\n      short_desc: 'Alarm 25 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$31',\n      short_desc: 'Alarm 31 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$32',\n      short_desc: 'Alarm 32 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$33',\n      short_desc: 'Alarm 33 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$34',\n      short_desc: 'Alarm 34 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$35',\n      short_desc: 'Alarm 35 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$40',\n      short_desc: 'Alarm 41 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$41',\n      short_desc: 'Alarm 41 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$42',\n      short_desc: 'Alarm 42 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$43',\n      short_desc: 'Alarm 43 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$44',\n      short_desc: 'Alarm 44 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$45',\n      short_desc: 'Alarm 45 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$46',\n      short_desc: 'Alarm 46 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$47',\n      short_desc: 'Alarm 47 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$48',\n      short_desc: 'Alarm 48 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$49',\n      short_desc: 'Alarm 49 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n\n]\n                        \n                    \n\n                \n                    \n                        Set of mock IASIOS for the tests \n\n                    \n                \n\n            \n        \n\n    src/app/settings.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Assets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Assets:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  ICONS: '/assets/img/',\n}\n                        \n                    \n\n                \n                    \n                        Set that defines the locations of assets in the applicaiton \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BackendUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BackendUrls:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  TOKEN: '/get-token/',\n  CDB: '/cdb-api/',\n  CDB_IAS: '/cdb-api/ias/',\n  TICKETS: '/tickets/',\n  TICKETS_MULTIPLE_ACK: '/tickets-api/tickets/acknowledge/',\n  TICKETS_INFO: '/tickets-api/tickets/old_open_info/',\n  SHELVE_API: '/tickets-api/shelve-registries/',\n  UNSHELVE_API: '/tickets-api/shelve-registries/unshelve/',\n}\n                        \n                    \n\n                \n                    \n                        Set of URLs used to request data from the Backend \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Locale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Locale:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  DATE_FORMAT: 'yyyy-MM-ddTHH:mm:ss',\n  TIMEZONE: '+0000',\n}\n                        \n                    \n\n                \n                    \n                        Set of properties to set the formatting of dates \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            StorageItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        StorageItems:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  TOKEN: 'token',\n}\n                        \n                    \n\n                \n                    \n                        Set of items to store in the browser cache \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Streams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Streams:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  ALARMS: 'alarms',\n  UPDATES: 'requests',\n}\n                        \n                    \n\n                \n                    \n                        Set of websocket streams from where the applications to receives data from the Backend \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n  /** Indicates wether the environment is production or development */\n  production: true,\n\n  /** Path for websocket connection */\n  websocketPath: '/stream',\n\n  /** Base URL for HTTP requests */\n  httpUrl: '',\n\n  /** URL for HTTP requests to the CDB app */\n  cdbApiUrl: '/cdb-api',\n}\n                        \n                    \n\n                \n                    \n                        Environment variables related to the production environment \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n  /** Indicates wether the environment is production or development */\n  production: false,\n\n  /** Path for websocket connection */\n  websocketPath: 'ws://127.0.0.1:8000/stream/',\n\n  /** Base URL for HTTP requests */\n  httpUrl: 'http://127.0.0.1:8000',\n\n  /** URL for HTTP requests to the CDB app */\n  cdbApiUrl: 'http://127.0.0.1:8000/cdb-api',\n}\n                        \n                    \n\n                \n                    \n                        Environment variables related to the production environment \n\n                    \n                \n\n            \n        \n\n    src/app/shared/alarm/fixtures.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MockAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockAlarms:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    'value': 4,\n    'core_id': 'critical',\n    'running_id': 'critical',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'high',\n    'running_id': 'high',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'medium',\n    'running_id': 'medium',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'low',\n    'running_id': 'low',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'clear',\n    'running_id': 'clear',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'unknown',\n    'running_id': 'unknown',\n    'mode': 7,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'maintenance',\n    'running_id': 'maintenance',\n    'mode': 4,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 4,\n    'core_id': 'critical_unreliable',\n    'running_id': 'critical_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'high_unreliable',\n    'running_id': 'high_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'medium_unreliable',\n    'running_id': 'medium_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'low_unreliable',\n    'running_id': 'low_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'clear_unreliable',\n    'running_id': 'clear_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'unknown_unreliable',\n    'running_id': 'unknown_unreliable',\n    'mode': 7,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'maintenance_unreliable',\n    'running_id': 'maintenance_unreliable',\n    'mode': 4,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  }\n]\n                        \n                    \n\n                \n                    \n                        Set of mock Alarms for the tests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MockImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockImageSet:     \n\n                    \n                \n                    \n                        \n                            Default value : new AlarmImageSet({\n  clear: 'clear',\n  set_low: 'low',\n  set_medium: 'medium',\n  set_high: 'high',\n  set_critical: 'critical',\n  unknown: 'unknown',\n  maintenance: 'maintenance',\n  shelved: 'shelved',\n})\n                        \n                    \n\n                \n                    \n                        Set of mock icons alarms for the tests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MockImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockImageUnreliableSet:     \n\n                    \n                \n                    \n                        \n                            Default value : new AlarmImageSet({\n  clear: 'clear_unreliable',\n  set_low: 'low_unreliable',\n  set_medium: 'medium_unreliable',\n  set_high: 'high_unreliable',\n  set_critical: 'critical_unreliable',\n  unknown: 'unknown_unreliable',\n  maintenance: 'maintenance_unreliable',\n  shelved: 'shelved_unreliable',\n})\n                        \n                    \n\n                \n                    \n                        Set of mock icons for unreliable alarms for the tests \n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
