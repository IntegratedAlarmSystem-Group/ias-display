var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AckButtonComponent.html",[0,0.066,1,0.656]],["body/components/AckButtonComponent.html",[0,0.129,1,1.106,2,0.295,3,0.218,4,0.864,5,0.934,6,0.797,7,0.181,8,3.589,9,4.466,10,2.175,11,0.398,12,1.596,13,0.909,14,3.209,15,2.727,16,2.935,17,2.988,18,3.453,19,0.992,20,1.123,21,0.934,22,1.434,23,1.21,24,0.984,25,0.992,26,3.295,27,0.992,28,3.295,29,0.256,30,0.912,31,1.872,32,0.75,33,1.668,34,5.462,35,0.845,36,4.924,37,1.202,38,3.776,39,2.211,40,3.729,41,0.766,42,1.785,43,1.645,44,5.033,45,4.576,46,0.547,47,4.507,48,1.165,49,1.362,50,0.912,51,0.031,52,0.549,53,0.645,54,0.912,55,1.528,56,1.403,57,2.261,58,1.997,59,2.648,60,0.765,61,2.798,62,3.34,63,2.088,64,2.671,65,2.261,66,2.671,67,0.618,68,0.837,69,3.34,70,3.295,71,3.776,72,3.34,73,2.409,74,3.295,75,1.723,76,2.935,77,2.798,78,1.501,79,0.797,80,1.593,81,4.507,82,0.646,83,0.378,84,1.633,85,1.785,86,1.633,87,0.912,88,2.175,89,2.441,90,1.18,91,0.256,92,0.015,93,0.765,94,2.798,95,2.025,96,2.798,97,3.34,98,3.34,99,0.934,100,4.507,101,3.34,102,2.798,103,2.798,104,2.798,105,0.934,106,3.34,107,0.797,108,1.261,109,1.261,110,1.165,111,1.528,112,0.934,113,1.261,114,1.261,115,0.62,116,0.934,117,0.62,118,0.934,119,0.676,120,0.934,121,0.676,122,0.62,123,0.797,124,1.261,125,0.676,126,0.934,127,0.676,128,0.992,129,0.934,130,0.676,131,0.676,132,0.797,133,0.797,134,0.934,135,0.676,136,0.765,137,0.676,138,0.62,139,0.62,140,1.261,141,0.62,142,0.864,143,0.676,144,0.864,145,0.934,146,0.021,147,0.021]],["title/components/AckModalComponent.html",[0,0.066,87,0.656]],["body/components/AckModalComponent.html",[0,0.122,1,0.494,2,0.216,3,0.159,4,0.631,5,0.683,6,0.583,7,0.132,8,3.652,11,0.485,12,1.202,13,0.906,15,1.93,17,3.173,18,3.116,19,0.794,20,0.945,21,0.683,22,1.376,23,1.161,24,0.982,25,0.794,27,0.794,29,0.187,30,0.731,31,1.436,32,0.749,33,1.734,35,0.93,37,1.045,39,1.991,41,0.506,43,1.57,46,0.545,49,1.345,50,0.87,51,0.031,52,0.509,53,0.671,54,0.87,55,1.576,56,0.862,59,2.789,60,0.957,63,1.815,67,0.704,68,1.103,73,1.93,78,1.622,79,1.026,82,0.621,83,0.276,84,1.194,85,1.305,86,1.194,87,0.961,88,4.048,90,0.862,91,0.187,92,0.011,93,0.901,95,1.097,99,1.328,107,0.583,108,1.01,109,1.01,110,0.934,111,1.328,112,0.683,113,1.01,114,1.01,115,0.453,116,0.683,117,0.453,118,0.683,119,0.494,120,0.683,121,0.494,122,0.453,123,0.583,124,1.01,125,0.494,126,0.683,127,0.494,128,0.794,129,0.683,130,0.494,131,0.494,132,0.583,133,0.583,134,0.683,135,0.494,136,0.613,137,0.494,138,0.453,139,0.453,140,1.01,141,0.453,142,0.631,143,0.494,144,0.934,145,0.683,146,0.016,147,0.016,148,1.784,149,2.441,150,3.025,151,3.025,152,4.598,153,4.747,154,3.599,155,4.747,156,4.747,157,3.61,158,4.747,159,3.877,160,3.977,161,4.747,162,3.61,163,2.045,164,4.444,165,4.821,166,2.513,167,4.245,168,3.977,169,3.61,170,0.862,171,2.524,172,3.599,173,2.098,174,2.789,175,2.594,176,2.351,177,1.495,178,3.31,179,2.639,180,2.524,181,2.121,182,3.212,183,2.045,184,2.441,185,3.012,186,2.068,187,1.18,188,2.441,189,3.299,190,3.61,191,2.441,192,2.594,193,2.121,194,2.639,195,3.025,196,3.025,197,2.351,198,3.025,199,2.045,200,2.351,201,0.933,202,2.441,203,2.441,204,3.025,205,1.092,206,1.276,207,2.441,208,1.622,209,4.821,210,2.639,211,2.441,212,1.18,213,2.133,214,3.091,215,3.61,216,2.441,217,1.93,218,3.47,219,2.441,220,2.045,221,3.025,222,3.977,223,2.441,224,3.299,225,3.61,226,2.045,227,1.59,228,1.59,229,1.434,230,2.045,231,2.045,232,2.045,233,1.097,234,2.045,235,2.441,236,2.441,237,2.045,238,2.045,239,3.025,240,3.599,241,3.61,242,2.045,243,3.025,244,3.61,245,3.977,246,3.454,247,3.025,248,3.61,249,2.045,250,2.045,251,3.61,252,2.441,253,1.677,254,3.61,255,2.441,256,2.441,257,2.351,258,2.441,259,4.747,260,2.441,261,3.47,262,0.933,263,2.441,264,2.441,265,3.025,266,1.59,267,1.93,268,2.045,269,1.93,270,3.025,271,2.639,272,3.61,273,3.025]],["title/classes/Alarm.html",[32,0.367,92,0.014]],["body/classes/Alarm.html",[2,0.215,3,0.159,7,0.132,11,0.419,13,0.734,17,3.018,24,0.82,29,0.187,30,0.73,32,0.758,35,0.82,41,0.342,46,0.568,49,1.515,50,0.869,51,0.031,52,0.432,53,0.768,54,0.869,56,1.515,58,1.551,60,1.116,64,1.764,65,1.009,67,0.759,79,1.484,80,1.275,91,0.363,92,0.025,93,0.9,99,1.713,105,1.327,122,0.985,136,1.082,139,1.137,146,0.016,147,0.016,173,2.359,186,1.677,187,1.841,197,1.588,201,2.403,208,2.465,212,1.179,213,2.132,224,3.453,233,1.096,253,1.789,257,1.588,262,1.936,269,2.707,274,1.782,275,3.115,276,4.719,277,2.938,278,4.442,279,4.596,280,4.442,281,3.607,282,4.745,283,4.745,284,4.745,285,4.745,286,4.745,287,3.607,288,3.876,289,2.349,290,3.607,291,1.009,292,1.114,293,1.403,294,3.53,295,1.764,296,1.275,297,2.438,298,2.438,299,3.468,300,3.115,301,2.438,302,3.309,303,2.119,304,3.607,305,2.132,306,2.438,307,2.438,308,2.637,309,2.438,310,2.438,311,1.964,312,1.814,313,2.438,314,2.438,315,2.119,316,1.641,317,1.275,318,2.438,319,3.607,320,2.438,321,2.637,322,2.132,323,2.349,324,2.438,325,3.802,326,5.375,327,2.975,328,2.438,329,2.438,330,2.119,331,2.438,332,2.438,333,3.607,334,2.438,335,2.119,336,2.438,337,2.438,338,1.588,339,2.043,340,2.438,341,4.293,342,4.293,343,2.043,344,1.764,345,2.043,346,2.349,347,1.009,348,1.928,349,1.432,350,2.043,351,1.588,352,1.009,353,1.588,354,3.022,355,1.009,356,1.588,357,1.192,358,1.192,359,1.192,360,1.192,361,1.588,362,2.438,363,2.438,364,2.438,365,2.438,366,2.438,367,2.438,368,2.438,369,2.438,370,2.438,371,2.438,372,2.043,373,2.043,374,1.588,375,2.438,376,2.438,377,2.438,378,2.438,379,2.438,380,2.438,381,2.438,382,2.438,383,2.438,384,2.438,385,2.438,386,2.438,387,3.607,388,2.438,389,3.607,390,3.607,391,3.022,392,2.438,393,2.438,394,2.438,395,2.438,396,2.438,397,2.438,398,3.975]],["title/components/AlarmComponent.html",[0,0.066,117,0.602]],["body/components/AlarmComponent.html",[0,0.131,1,0.667,2,0.291,3,0.215,4,0.852,5,0.922,6,0.787,7,0.179,11,0.291,12,0.922,13,0.994,19,0.983,20,1.115,21,0.922,22,1.432,23,1.208,24,0.784,25,0.983,27,0.983,29,0.252,32,0.75,33,1.991,35,0.691,37,1.195,39,2.068,41,0.711,46,0.517,51,0.031,52,0.588,53,0.641,56,1.355,57,1.849,60,1.06,63,1.259,65,1.849,67,0.723,68,0.612,79,1.474,82,0.506,83,0.373,87,0.667,91,0.342,92,0.022,93,0.56,95,1.481,105,0.922,107,0.787,108,1.249,109,1.249,110,1.155,111,1.52,112,0.922,113,1.249,114,1.249,115,0.612,116,0.922,117,1.009,118,0.922,119,0.667,120,0.922,121,0.667,122,0.612,123,0.787,124,1.249,125,0.667,126,0.922,127,0.667,128,0.983,129,0.922,130,0.667,131,0.667,132,0.787,133,0.787,134,0.922,135,0.667,136,0.922,137,0.667,138,0.612,139,0.941,140,1.249,141,0.612,142,0.852,143,0.667,144,0.852,145,0.922,146,0.02,147,0.02,170,1.066,187,1.46,205,1.905,212,1.077,253,1.164,289,2.146,291,0.922,292,0.725,293,1.077,294,2.977,295,1.611,296,1.164,305,1.481,312,1.707,315,2.624,316,1.707,317,1.919,347,1.849,352,1.849,355,1.849,357,2.184,358,2.184,359,2.184,360,2.184,361,2.146,399,2.409,400,3.742,401,2.387,402,2.098,403,2.977,404,3.742,405,3.742,406,4.551,407,5.471,408,4.245,409,4.466,410,2.909,411,3.295,412,2.863,413,3.295,414,3.295,415,3.265,416,3.295,417,2.909,418,2.761,419,2.761,420,2.761,421,3.742,422,2.761,423,2.761,424,2.761,425,2.146,426,2.761,427,4.245,428,2.761,429,2.761,430,2.761,431,2.761,432,2.761,433,4.757,434,2.761,435,2.761,436,2.761,437,2.761,438,2.761,439,2.761,440,2.761,441,2.761,442,2.761,443,2.761]],["title/classes/AlarmImageSet.html",[92,0.014,412,1.585]],["body/classes/AlarmImageSet.html",[0,0.12,2,0.295,3,0.218,7,0.181,11,0.398,13,1.015,19,0.735,20,0.992,22,0.735,23,0.621,25,0.735,27,0.735,29,0.256,30,0.913,32,0.754,33,2.168,37,0.735,39,1.931,41,0.633,46,0.547,50,0.677,51,0.031,52,0.513,53,0.783,54,0.677,56,1.434,57,1.384,60,1.128,63,1.724,65,1.384,67,0.709,79,1.556,82,0.511,83,0.378,91,0.345,92,0.025,93,0.568,95,1.502,105,0.935,117,0.621,136,0.998,139,0.621,146,0.021,147,0.021,170,0.798,187,1.092,205,1.984,212,1.474,253,1.181,289,2.937,291,1.262,292,0.992,293,1.474,294,3.352,295,2.205,296,1.593,305,1.502,312,1.277,315,1.964,316,2.247,317,1.593,347,2.434,352,2.434,355,1.384,357,2.875,358,2.875,359,2.875,360,2.875,361,2.177,399,2.443,400,2.8,401,1.786,402,2.113,403,2.998,404,2.8,405,2.8,406,2.8,407,5.536,408,2.8,410,2.177,412,2.875,415,2.443,417,2.177,418,3.778,419,3.778,420,2.8,421,3.778,422,2.8,423,2.8,424,2.8,425,2.177,426,2.8,427,4.276,428,2.8,429,2.8,430,2.8,431,2.8,432,2.8,433,4.78,434,2.8,435,2.8,436,2.8,437,2.8,438,2.8,439,2.8,440,2.8,441,2.8,442,2.8,443,2.8,444,4.509,445,3.342,446,3.342,447,3.342,448,3.342,449,3.342,450,3.342,451,3.342]],["title/classes/AlarmItemFlatNode.html",[92,0.014,452,2.11]],["body/classes/AlarmItemFlatNode.html",[0,0.111,2,0.226,3,0.244,6,1.485,7,0.203,8,2.852,11,0.226,13,0.683,17,1.251,19,0.563,20,0.822,22,0.563,23,0.475,24,0.799,25,0.563,27,0.563,29,0.196,30,0.756,32,0.699,37,0.563,39,1.32,43,1.335,46,0.39,48,0.661,51,0.031,52,0.444,53,0.614,55,0.716,56,1.288,57,1.059,58,1.221,60,0.877,67,0.717,68,0.694,79,1.159,80,2.058,82,0.647,83,0.423,90,0.904,91,0.338,92,0.022,93,1.005,99,1.713,105,1.597,115,0.475,146,0.025,147,0.017,170,0.611,174,2.195,175,1.251,177,1.828,182,3.273,186,1.906,187,1.443,192,1.251,201,2.318,206,0.904,208,2.659,210,3.943,212,0.836,213,2.423,217,1.997,218,1.87,233,1.983,253,1.32,262,0.978,291,1.045,292,1.282,295,1.251,308,2.731,322,2.32,323,2.875,327,1.503,452,4.077,453,3.162,454,1.87,455,4.519,456,4.326,457,5.64,458,4.326,459,5.349,460,2.558,461,2.558,462,2.558,463,3.699,464,3.13,465,2.143,466,1.87,467,3.13,468,2.143,469,3.13,470,3.13,471,1.87,472,2.143,473,2.181,474,1.251,475,1.149,476,3.627,477,2.143,478,2.852,479,3.162,480,2.143,481,2.143,482,2.143,483,2.143,484,2.503,485,2.143,486,2.143,487,3.627,488,4.068,489,2.731,490,1.87,491,1.666,492,2.143,493,3.699,494,2.143,495,1.87,496,2.143,497,2.143,498,2.143,499,2.143,500,2.143,501,2.143,502,2.143,503,2.143,504,1.87,505,2.143,506,2.143,507,2.143,508,2.143,509,1.666,510,3.13,511,2.143,512,2.143,513,3.13,514,2.143,515,2.143,516,2.143,517,1.87,518,2.143,519,2.143,520,2.143,521,1.666,522,1.87,523,2.143,524,3.13,525,1.503,526,2.143,527,2.143,528,2.852,529,2.143,530,2.143,531,2.143,532,2.143,533,2.143,534,2.731,535,3.13,536,2.143,537,2.433,538,2.143,539,2.143,540,2.143,541,1.503,542,1.87,543,1.666,544,1.87,545,3.13,546,2.143,547,3.13,548,2.143,549,2.143,550,1.87,551,3.13,552,2.143,553,3.699,554,4.327,555,2.143,556,4.068,557,1.87,558,2.143,559,3.13,560,2.143,561,2.143,562,3.13,563,2.143,564,1.87,565,4.784,566,2.143,567,3.13,568,2.143,569,2.143,570,2.143,571,3.13,572,2.143,573,2.143,574,2.731,575,4.958,576,2.143,577,4.068,578,2.143,579,3.699,580,1.87,581,2.143,582,3.13,583,3.13,584,2.143,585,2.143,586,2.143,587,1.503,588,2.143,589,2.143,590,2.143,591,2.143,592,2.143,593,2.143,594,2.143,595,2.143,596,2.143,597,2.143,598,2.143,599,2.143]],["title/classes/AlarmItemNode.html",[92,0.014,476,2.11]],["body/classes/AlarmItemNode.html",[0,0.111,2,0.228,3,0.245,6,1.488,7,0.204,8,2.608,11,0.228,13,0.687,17,1.263,19,0.568,20,0.828,22,0.568,23,0.48,24,0.802,25,0.568,27,0.568,29,0.198,30,0.762,32,0.706,37,0.568,39,1.33,43,1.341,46,0.332,48,0.668,51,0.031,52,0.446,53,0.561,55,0.723,56,1.292,57,1.069,58,1.23,60,0.881,67,0.718,68,0.699,79,1.164,80,2.023,82,0.648,83,0.426,90,0.913,91,0.34,92,0.022,93,1.007,99,1.716,105,1.563,115,0.48,146,0.026,147,0.017,170,0.617,174,2.211,175,1.263,177,1.558,182,3.279,186,1.974,187,1.451,192,1.263,201,2.267,206,0.913,208,2.573,210,4.336,212,0.844,213,2.432,217,2.011,218,1.888,233,1.995,253,1.33,262,0.987,291,1.053,292,1.285,295,1.263,308,2.751,322,2.33,323,2.891,327,1.518,452,4.058,453,2.891,454,1.888,455,4.344,456,4.336,457,5.639,458,3.79,459,5.22,463,3.72,464,3.153,465,2.164,466,1.888,467,3.153,468,2.164,469,3.153,470,3.153,471,1.888,472,2.164,473,2.192,474,1.263,475,1.161,476,3.863,477,2.164,478,2.866,479,3.176,480,2.164,481,2.164,482,2.164,483,2.164,484,2.51,485,2.164,486,2.164,487,3.638,488,4.087,489,2.751,490,1.888,491,1.682,492,2.164,493,3.72,494,2.164,495,1.888,496,2.164,497,2.164,498,2.164,499,2.164,500,2.164,501,2.164,502,2.164,503,2.164,504,1.888,505,2.164,506,2.164,507,2.164,508,2.164,509,1.682,510,3.153,511,2.164,512,2.164,513,3.153,514,2.164,515,2.164,516,2.164,517,1.888,518,2.164,519,2.164,520,2.164,521,1.682,522,1.888,523,2.164,524,3.153,525,1.518,526,2.164,527,2.164,528,2.866,529,2.164,530,2.164,531,2.164,532,2.164,533,2.164,534,2.751,535,3.153,536,2.164,537,2.451,538,2.164,539,2.164,540,2.164,541,1.518,542,1.888,543,1.682,544,1.888,545,3.153,546,2.164,547,3.153,548,2.164,549,2.164,550,1.888,551,3.153,552,2.164,553,3.72,554,4.344,555,2.164,556,4.087,557,1.888,558,2.164,559,3.153,560,2.164,561,2.164,562,3.153,563,2.164,564,1.888,565,4.797,566,2.164,567,3.153,568,2.164,569,2.164,570,2.164,571,3.153,572,2.164,573,2.164,574,2.751,575,4.97,576,2.164,577,4.087,578,2.164,579,3.72,580,1.888,581,2.164,582,3.153,583,3.153,584,2.164,585,2.164,586,2.164,587,1.518,588,2.164,589,2.164,590,2.164,591,2.164,592,2.164,593,2.164,594,2.164,595,2.164,596,2.164,597,2.164,598,2.164,599,2.164,600,2.583,601,2.583]],["title/injectables/AlarmService.html",[43,0.838,48,0.838]],["body/injectables/AlarmService.html",[2,0.18,3,0.133,7,0.11,11,0.493,13,0.765,15,1.681,16,1.325,17,2.522,24,0.487,29,0.294,30,0.637,31,1.415,32,0.759,33,1.887,35,0.824,40,3.77,41,0.441,43,0.813,46,0.549,48,0.994,49,1.033,50,1.131,51,0.031,52,0.55,53,0.652,54,1.131,55,1.671,56,1.357,58,1.686,60,0.735,63,1.654,64,2.823,65,1.937,67,0.734,68,1.015,73,1.681,78,2.102,79,1.378,80,0.719,82,0.632,83,0.23,91,0.156,92,0.009,93,1.004,95,0.914,99,1.698,122,0.584,136,1.004,139,0.804,146,0.014,147,0.014,154,1.848,166,2.206,170,0.751,173,2.036,174,1.848,175,2.781,176,2.048,177,2.048,181,1.195,182,1.681,185,2.985,186,2.089,187,1.028,189,3.923,192,2.605,193,1.848,205,0.615,208,1.728,209,2.635,212,1.257,213,2.102,214,2.504,217,3.039,224,4.284,229,1.195,262,1.47,275,3.391,292,1.229,295,2.674,300,2.749,302,3.13,303,2.259,305,0.914,311,2.048,312,1.654,317,1.359,322,1.944,330,3.282,335,1.848,349,1.195,374,2.048,473,0.914,474,0.995,475,0.914,484,1.728,487,3.047,491,2.048,521,2.818,525,1.848,541,2.542,602,1.705,603,5.182,604,3.616,605,4.68,606,4.327,607,4.327,608,4.327,609,5.772,610,3.145,611,3.145,612,4.327,613,4.327,614,3.145,615,3.145,616,3.145,617,3.145,618,4.327,619,4.327,620,3.145,621,4.327,622,2.034,623,2.674,624,3.145,625,3.341,626,3.145,627,2.034,628,5.327,629,3.145,630,2.034,631,2.034,632,2.635,633,4.946,634,3.145,635,3.145,636,3.145,637,2.034,638,2.818,639,3.625,640,3.145,641,2.034,642,2.034,643,3.145,644,3.145,645,2.034,646,3.145,647,2.635,648,3.625,649,2.034,650,3.145,651,4.327,652,2.034,653,3.163,654,3.145,655,2.034,656,2.635,657,3.222,658,3.145,659,2.034,660,2.034,661,3.616,662,2.034,663,2.299,664,3.145,665,2.034,666,2.034,667,3.145,668,2.034,669,3.42,670,2.635,671,2.034,672,2.299,673,2.034,674,3.845,675,2.034,676,3.92,677,3.92,678,1.705,679,2.034,680,2.034,681,1.195,682,1.705,683,1.487,684,1.487,685,2.034,686,2.034,687,2.034,688,1.705,689,2.034,690,2.034,691,2.034,692,3.145,693,2.034,694,2.034,695,2.034,696,4.327,697,3.145,698,2.034,699,3.145,700,2.034,701,2.034,702,2.034,703,2.034,704,2.034,705,2.034,706,3.145,707,2.034,708,2.034,709,2.034,710,2.034,711,2.034,712,2.034,713,3.845,714,3.145,715,2.034,716,2.034,717,2.034,718,2.034,719,3.145,720,2.034,721,2.034,722,1.705,723,2.034,724,2.034,725,2.034,726,2.034,727,3.145,728,3.845,729,2.034,730,3.145,731,2.034,732,2.034,733,2.034,734,2.034,735,3.145,736,2.034,737,1.705,738,1.705,739,3.845,740,3.145,741,1.705,742,1.705,743,1.705,744,2.034,745,2.034,746,1.705,747,1.705,748,1.705,749,3.145,750,2.034,751,2.034,752,3.145,753,3.845,754,2.034,755,2.034,756,2.034,757,2.034,758,2.034,759,1.325,760,2.034]],["title/components/AppComponent.html",[0,0.066,119,0.656]],["body/components/AppComponent.html",[0,0.129,1,0.738,2,0.322,3,0.238,4,0.942,5,1.02,6,0.87,7,0.198,11,0.422,12,1.02,13,0.739,19,1.051,20,1.173,21,1.02,22,1.448,23,1.222,24,0.824,25,1.051,27,1.051,29,0.279,30,0.967,31,1.102,32,0.682,35,0.739,37,1.244,41,0.67,42,1.948,43,1.644,46,0.532,49,1.402,50,0.738,51,0.031,52,0.536,53,0.674,54,0.738,55,1.582,60,0.811,66,2.336,67,0.64,68,0.677,75,1.826,78,2.394,79,1.402,82,0.541,83,0.413,87,0.738,90,1.288,91,0.279,92,0.016,93,0.619,105,1.336,107,0.87,108,1.336,109,1.336,110,1.235,111,1.582,112,1.02,113,1.336,114,1.336,115,0.677,116,1.02,117,0.677,118,1.02,119,1.145,120,1.02,121,0.738,122,0.677,123,0.87,124,1.336,125,0.738,126,1.02,127,0.738,128,1.326,129,1.02,130,0.738,131,0.738,132,0.87,133,0.87,134,1.02,135,0.738,136,0.811,137,0.738,138,0.677,139,0.677,140,1.336,141,0.677,142,1.378,143,0.738,144,0.942,145,1.02,146,0.022,147,0.022,170,1.35,186,1.688,201,2.037,312,1.826,401,3.023,458,3.492,587,2.806,761,3.053,762,4.404,763,3.923,764,4.002,765,4.777,766,4.777,767,6.025,768,5.655,769,6.357,770,5.655,771,3.644,772,3.644,773,3.644,774,4.777,775,5.655,776,5.655,777,3.644,778,4.777,779,3.644,780,5.655,781,5.655,782,4.134,783,3.644,784,3.644,785,3.644,786,3.644,787,4.777,788,4.777]],["title/modules/AppModule.html",[789,1.585,790,2.11]],["body/modules/AppModule.html",[0,0.112,1,1.193,2,0.298,3,0.22,7,0.183,9,2.465,18,1.982,24,0.793,43,1.524,51,0.031,82,0.76,83,0.382,84,1.649,85,1.803,86,2.682,87,1.256,88,2.196,89,3.317,90,1.192,91,0.393,92,0.015,99,0.944,107,0.805,115,1.094,117,1.094,119,1.289,121,1.193,122,0.843,123,1.083,125,1.193,127,1.193,128,1.207,130,1.219,131,1.193,132,1.083,133,1.083,135,1.193,136,0.771,137,1.239,138,1.137,139,0.626,141,1.137,142,1.173,143,1.193,144,0.872,146,0.021,147,0.021,166,2.44,178,3.222,180,1.982,187,1.102,227,2.196,228,2.196,229,1.982,453,2.196,623,2.882,625,1.982,684,2.465,763,2.955,789,2.507,790,4.409,791,3.748,792,2.826,793,2.826,794,2.826,795,2.826,796,2.826,797,3.463,798,2.882,799,3.801,800,2.826,801,2.465,802,3.373,803,4.537,804,4.537,805,3.801,806,4.537,807,3.801,808,2.196,809,3.801,810,5.127,811,3.801,812,2.826,813,3.373,814,3.012,815,2.196,816,3.317,817,3.373,818,4.537,819,4.537,820,4.537,821,4.537,822,3.373,823,2.826,824,3.373,825,2.465,826,3.373,827,2.465,828,4.537,829,2.465,830,3.373,831,3.373,832,2.465,833,3.373,834,2.465,835,3.373,836,5.127,837,2.465,838,3.373,839,2.196,840,2.465,841,2.465,842,2.465,843,3.373,844,3.373,845,4.795,846,3.373,847,3.373,848,3.373,849,3.373,850,3.373,851,3.373,852,3.373]],["title/injectables/CdbService.html",[48,0.838,166,1.342]],["body/injectables/CdbService.html",[0,0.087,2,0.272,3,0.201,7,0.167,11,0.506,13,0.659,14,2.503,29,0.235,30,0.862,31,0.93,32,0.704,33,1.598,35,0.659,41,0.598,46,0.558,48,1.264,49,1.167,50,1.122,51,0.031,52,0.491,53,0.758,54,0.989,55,1.676,58,1.393,60,1.086,63,1.628,65,2.185,66,2.581,67,0.736,78,2.49,79,1.403,82,0.666,83,0.348,91,0.235,92,0.014,93,0.724,99,1.192,122,1.228,146,0.019,147,0.019,159,3.114,166,1.764,170,1.017,175,3.143,177,2.48,182,2.277,185,2.277,189,2.774,193,2.503,205,1.862,206,1.865,292,1.076,296,1.505,299,2.248,300,1.807,302,2.503,303,2.503,311,2.185,322,1.382,325,1.807,330,2.503,374,2.774,473,1.382,474,1.504,475,1.382,484,2.819,487,2.003,604,4.65,623,2.93,625,3.255,670,3.569,672,3.114,678,2.577,681,1.807,682,2.577,684,2.248,737,4.803,738,4.803,747,4.421,748,4.421,782,2.248,853,2.577,854,5.257,855,5.277,856,5.277,857,4.421,858,5.277,859,5.277,860,5.277,861,5.277,862,4.26,863,5.277,864,5.277,865,3.076,866,4.26,867,4.26,868,3.076,869,2.774,870,3.792,871,5.541,872,3.076,873,4.26,874,3.076,875,3.076,876,3.076,877,4.26,878,4.26,879,3.076,880,3.569,881,3.076,882,2.581,883,3.076,884,3.569,885,4.26,886,4.26,887,3.076,888,2.084,889,5.277,890,3.076,891,3.076,892,3.076,893,4.26,894,3.076,895,2.248,896,3.076,897,3.076,898,3.076,899,3.076,900,3.076,901,4.26,902,3.076,903,3.076,904,3.076,905,3.076,906,3.076,907,3.076,908,3.076,909,3.076,910,3.076,911,3.076,912,3.076,913,3.076,914,4.26,915,3.076,916,3.076]],["title/classes/DisplayedAlarm.html",[92,0.014,917,2.11]],["body/classes/DisplayedAlarm.html",[2,0.388,3,0.165,7,0.138,11,0.563,24,0.946,29,0.194,30,0.752,31,1.757,32,0.766,35,0.574,41,0.356,46,0.561,49,1.558,50,1.042,51,0.031,52,0.558,53,0.702,54,1.042,60,1.145,67,0.757,68,0.816,75,1.679,79,1.387,80,1.709,82,0.287,91,0.194,92,0.021,93,0.943,99,1.504,105,0.709,136,0.913,138,0.898,139,1.145,146,0.017,147,0.017,171,3.346,173,2.315,177,1.537,185,2.584,201,2.123,205,1.902,206,1.9,208,1.668,221,3.111,253,0.896,269,1.984,275,2.181,277,2.365,291,1.039,292,0.817,293,1.862,302,3.024,305,1.139,311,1.819,316,1.419,317,1.963,325,2.581,326,4.772,330,2.581,338,1.651,339,2.125,348,1.355,356,2.861,402,2.617,403,3.024,410,3.709,557,1.854,722,3.111,869,3.502,882,1.816,888,2.148,917,2.418,918,5.296,919,2.125,920,4.835,921,4.835,922,4.835,923,4.393,924,5.377,925,4.835,926,3.713,927,3.713,928,2.536,929,3.713,930,2.536,931,2.536,932,5.987,933,2.536,934,3.111,935,3.111,936,3.713,937,5.123,938,2.536,939,4.772,940,3.535,941,2.536,942,2.536,943,2.536,944,2.536,945,2.536,946,2.536,947,2.536,948,2.536,949,2.536,950,2.536,951,2.536,952,2.536,953,2.536,954,2.536,955,2.536,956,2.536,957,2.536,958,2.536,959,2.536,960,2.536,961,3.713,962,2.714,963,4.835,964,4.393,965,4.393,966,2.536,967,2.536,968,2.536,969,2.536,970,2.536,971,2.536,972,4.835,973,2.536,974,2.536,975,2.536,976,2.536,977,2.536,978,2.536,979,2.536,980,2.536,981,2.536,982,2.536,983,2.536,984,3.713,985,2.536,986,2.536,987,2.536,988,2.536,989,2.536,990,2.536,991,2.536,992,2.536,993,2.536,994,2.125,995,2.125,996,2.125,997,2.125,998,4.835,999,2.536,1000,2.125,1001,2.536,1002,2.536,1003,2.536,1004,2.536]],["title/injectables/HttpClientService.html",[48,0.838,623,1.585]],["body/injectables/HttpClientService.html",[2,0.332,3,0.245,7,0.204,11,0.524,29,0.288,31,1.636,35,1.002,41,0.759,46,0.537,48,1.399,50,1.23,51,0.031,52,0.611,53,0.768,54,1.23,55,1.364,56,1.164,58,1.594,59,2.865,63,1.864,67,0.724,82,0.613,83,0.426,91,0.288,92,0.017,93,1.032,99,1.601,146,0.022,147,0.022,182,2.606,192,2.385,205,1.991,246,3.957,269,2.606,292,1.26,322,2.572,403,2.21,484,2.937,509,2.45,537,3.728,623,2.385,625,3.363,648,5.253,653,4.185,811,4.796,812,4.086,1005,5.182,1006,3.152,1007,5.355,1008,4.876,1009,4.876,1010,4.876,1011,5.725,1012,5.725,1013,3.762,1014,3.762,1015,4.876,1016,3.762,1017,4.876,1018,3.762,1019,4.876,1020,3.762,1021,5.411,1022,4.876,1023,4.876,1024,3.762,1025,4.876,1026,3.762,1027,5.931,1028,3.762,1029,3.762,1030,3.762,1031,3.762,1032,6.27,1033,4.185,1034,5.725,1035,3.762,1036,3.762,1037,3.762,1038,3.762]],["title/components/IasHealthOverviewComponent.html",[0,0.066,121,0.656]],["body/components/IasHealthOverviewComponent.html",[0,0.128,1,0.584,2,0.255,3,0.188,4,0.746,5,0.807,6,0.689,7,0.157,11,0.417,12,0.807,13,0.869,19,0.897,20,1.039,21,0.807,22,1.409,23,1.189,24,0.731,25,0.897,27,0.897,29,0.221,30,0.825,31,1.637,32,0.74,33,2.028,35,0.63,37,1.129,41,0.572,42,1.542,43,1.629,46,0.548,49,1.128,50,0.825,51,0.031,52,0.516,53,0.73,54,0.825,55,1.436,58,1.332,60,1.001,67,0.581,68,0.953,75,1.961,82,0.654,83,0.327,87,0.584,90,1.02,91,0.221,92,0.013,93,0.802,95,1.297,107,0.689,108,1.14,109,1.14,110,1.054,111,1.436,112,0.807,113,1.14,114,1.14,115,0.536,116,0.807,117,0.757,118,0.807,119,0.584,120,0.807,121,1.039,122,1.152,123,1.589,124,1.14,125,0.584,126,0.807,127,0.584,128,1.129,129,0.807,130,0.584,131,0.584,132,1.128,133,0.689,134,0.807,135,0.584,136,0.871,137,0.584,138,0.536,139,0.536,140,1.14,141,0.536,142,0.746,143,0.584,144,0.746,145,0.807,146,0.019,147,0.019,173,2.254,200,3.84,212,1.332,291,1.14,292,1.129,293,1.332,296,1.44,311,1.687,312,1.557,316,1.557,317,2.04,347,1.687,352,1.687,355,1.955,357,1.993,358,1.993,359,1.993,360,1.993,401,3.152,412,2.932,473,1.297,474,1.411,475,1.297,661,2.978,688,4.299,759,2.653,798,2.647,814,3.015,825,2.109,841,2.109,842,4.493,882,1.993,888,2.747,1039,4.493,1040,2.418,1041,2.978,1042,3.453,1043,3.414,1044,3.414,1045,3.751,1046,5.132,1047,5.132,1048,5.132,1049,3.414,1050,3.751,1051,4.075,1052,3.751,1053,3.414,1054,3.3,1055,2.886,1056,3.414,1057,3.414,1058,2.886,1059,2.178,1060,2.978,1061,3.414,1062,2.978,1063,3.414,1064,2.886,1065,2.978,1066,2.978,1067,2.886,1068,2.886,1069,2.886,1070,3.751,1071,2.978,1072,2.886,1073,2.886,1074,2.109,1075,1.879,1076,2.886,1077,2.109,1078,2.109,1079,4.075,1080,2.886,1081,2.109,1082,2.418,1083,2.886,1084,5.338,1085,6.372,1086,4.299,1087,4.94,1088,3.414,1089,3.414,1090,2.886,1091,2.418]],["title/modules/IasMaterialModule.html",[789,1.585,797,1.904]],["body/modules/IasMaterialModule.html",[0,0.112,2,0.4,3,0.295,7,0.246,11,0.4,51,0.031,82,0.759,83,0.512,91,0.419,92,0.02,146,0.025,147,0.025,180,2.659,471,3.308,478,3.217,479,3.566,587,2.659,789,2.879,791,3.308,797,3.217,809,4.587,823,3.792,1039,3.308,1092,4.526,1093,4.003,1094,5.887,1095,4.526,1096,5.887,1097,4.526,1098,5.887,1099,4.526,1100,5.887,1101,4.526,1102,5.887,1103,4.526,1104,5.887,1105,4.526,1106,5.887,1107,4.526,1108,5.887,1109,4.526,1110,5.887,1111,4.526,1112,5.887,1113,4.526,1114,5.887,1115,4.526,1116,5.887,1117,5.887,1118,4.526,1119,5.887,1120,4.526]],["title/classes/Iasio.html",[92,0.014,870,1.904]],["body/classes/Iasio.html",[2,0.338,3,0.249,7,0.208,11,0.539,29,0.293,30,0.997,32,0.652,35,0.944,41,0.536,46,0.556,49,1.302,50,1.104,51,0.031,52,0.548,53,0.804,54,1.104,56,1.587,58,1.611,60,1.102,64,2.41,67,0.72,80,1.351,91,0.293,92,0.028,93,0.978,99,1.611,105,1.379,146,0.023,147,0.023,201,2.278,205,1.49,206,1.741,208,1.718,212,1.611,213,2.588,233,1.718,257,2.49,280,5.113,289,3.209,291,1.379,292,1.2,293,1.782,294,3.502,295,2.41,296,1.741,300,2.895,315,2.246,321,3.602,322,2.588,323,3.209,335,2.895,361,2.49,372,3.203,373,3.203,374,2.49,410,3.209,869,3.209,870,3.938,895,4.462,1121,3.203,1122,5.453,1123,5.453,1124,5.113,1125,5.113,1126,5.113,1127,4.928,1128,4.928,1129,4.928,1130,3.823,1131,4.928,1132,4.129,1133,3.823,1134,3.823,1135,4.928,1136,3.823,1137,4.928,1138,3.823,1139,3.823,1140,3.823,1141,3.823,1142,3.823,1143,3.823,1144,3.823,1145,3.823,1146,3.823,1147,3.823]],["title/components/LegendComponent.html",[0,0.066,125,0.656]],["body/components/LegendComponent.html",[0,0.134,1,0.852,2,0.372,3,0.274,4,1.088,5,1.177,6,1.005,7,0.228,11,0.372,12,1.177,19,1.152,20,1.254,21,1.177,22,1.469,23,1.24,24,0.882,25,1.152,27,1.152,29,0.322,32,0.593,35,0.81,37,1.313,41,0.8,46,0.462,51,0.031,52,0.526,67,0.476,68,0.781,75,2.001,82,0.476,83,0.476,87,0.852,91,0.322,92,0.019,107,1.465,108,1.465,109,1.465,110,1.354,111,1.669,112,1.177,113,1.465,114,1.465,115,0.781,116,1.177,117,0.781,118,1.177,119,0.852,120,1.177,121,0.852,122,0.781,123,1.005,124,1.465,125,1.207,126,1.177,127,0.852,128,1.152,129,1.177,130,0.852,131,0.852,132,1.005,133,1.005,134,1.177,135,0.852,136,0.889,137,0.852,138,0.781,139,0.781,140,1.465,141,0.781,142,1.088,143,0.852,144,1.088,145,1.177,146,0.024,147,0.024,170,1.25,277,2.917,291,1.465,293,1.712,316,2.28,317,2.108,347,2.168,352,2.168,355,2.47,356,3.885,402,2.168,1148,3.525,1149,4.208,1150,5.236,1151,4.208,1152,4.208,1153,4.208,1154,4.208,1155,5.236]],["title/components/OverviewCardComponent.html",[0,0.066,127,0.656]],["body/components/OverviewCardComponent.html",[0,0.133,1,0.86,2,0.375,3,0.277,4,1.099,5,1.188,6,1.014,7,0.231,11,0.375,12,1.188,19,1.159,20,1.26,21,1.188,22,1.47,23,1.241,24,0.886,25,1.159,27,1.159,29,0.325,35,0.815,37,1.317,41,0.803,46,0.465,51,0.031,52,0.53,67,0.481,68,0.789,82,0.481,83,0.481,87,0.86,91,0.325,92,0.019,107,1.014,108,1.474,109,1.474,110,1.362,111,1.674,112,1.188,113,1.474,114,1.474,115,0.789,116,1.188,117,0.789,118,1.188,119,0.86,120,1.188,121,0.86,122,0.789,123,1.014,124,1.474,125,0.86,126,1.188,127,1.211,128,1.434,129,1.188,130,0.86,131,0.86,132,1.014,133,1.469,134,1.188,135,0.86,136,0.895,137,0.86,138,0.789,139,0.789,140,1.474,141,0.789,142,1.099,143,0.86,144,1.099,145,1.188,146,0.024,147,0.024,170,1.257,291,1.474,293,1.722,312,2.013,832,4.185,1041,3.85,1156,4.185,1157,3.559,1158,4.413,1159,3.43,1160,4.413,1161,5.267,1162,5.267,1163,4.248,1164,4.248]],["title/components/OverviewComponent.html",[0,0.066,130,0.656]],["body/components/OverviewComponent.html",[0,0.134,1,0.857,2,0.374,3,0.276,4,1.095,5,1.185,6,1.011,7,0.23,11,0.374,12,1.185,19,1.157,20,1.258,21,1.185,22,1.47,23,1.24,24,0.885,25,1.157,27,1.157,29,0.324,35,0.813,37,1.316,41,0.802,46,0.464,51,0.031,52,0.529,67,0.48,68,0.787,82,0.48,83,0.48,87,0.857,91,0.324,92,0.019,107,1.011,108,1.471,109,1.471,110,1.36,111,1.673,112,1.185,113,1.471,114,1.471,115,0.787,116,1.185,117,0.787,118,1.185,119,0.857,120,1.185,121,0.857,122,1.062,123,1.365,124,1.471,125,0.857,126,1.185,127,0.857,128,1.316,129,1.185,130,1.21,131,0.857,132,1.365,133,1.011,134,1.185,135,0.857,136,0.893,137,0.857,138,0.787,139,0.787,140,1.471,141,0.787,142,1.095,143,0.857,144,1.095,145,1.185,146,0.024,147,0.024,170,1.255,291,1.471,293,1.719,296,1.858,473,2.362,543,3.424,762,3.844,1043,4.405,1044,4.405,1052,3.844,1054,3.513,1165,3.549,1166,4.405,1167,4.236,1168,4.236,1169,5.258,1170,5.258,1171,5.258]],["title/components/OverviewWeatherCardContentComponent.html",[0,0.066,131,0.656]],["body/components/OverviewWeatherCardContentComponent.html",[0,0.121,1,0.429,2,0.187,3,0.138,4,0.548,5,0.593,6,0.506,7,0.115,11,0.349,12,0.593,13,0.778,19,0.715,20,0.869,21,0.593,22,1.345,23,1.135,24,0.611,25,0.715,27,0.715,29,0.162,30,0.657,31,1.442,32,0.737,33,2.131,35,0.502,37,0.973,41,0.456,42,1.134,43,1.542,46,0.55,49,0.942,50,0.657,51,0.031,52,0.445,53,0.761,54,0.657,55,1.237,58,1.644,60,1.013,67,0.501,68,0.821,75,1.691,82,0.593,83,0.24,87,0.429,90,0.749,91,0.162,92,0.009,93,0.67,107,0.506,108,0.909,109,0.909,110,0.84,111,1.237,112,0.593,113,0.909,114,0.909,115,0.394,116,0.593,117,0.603,118,0.593,119,0.429,120,0.593,121,0.429,122,0.394,123,0.506,124,0.909,125,0.429,126,0.593,127,0.429,128,1.188,129,0.593,130,0.429,131,0.895,132,1.581,133,1.575,134,0.593,135,0.429,136,0.917,137,0.429,138,0.394,139,0.394,140,0.909,141,0.394,142,0.548,143,0.429,144,0.548,145,0.593,146,0.015,147,0.015,173,2.42,200,4.123,212,1.062,291,0.909,292,1.188,293,1.062,296,1.148,311,1.345,312,1.241,316,1.922,317,2.188,347,2.082,352,2.082,355,2.292,357,2.46,358,2.46,359,2.46,360,2.46,401,3.327,412,3.107,473,0.953,474,1.037,475,0.953,537,2.115,661,3.233,759,2.115,798,2.332,814,2.599,825,1.551,834,4.526,841,1.551,882,1.588,888,2.46,1041,2.374,1042,2.885,1045,3.233,1049,2.721,1050,3.233,1052,3.233,1053,2.721,1054,2.955,1056,2.721,1057,2.721,1059,1.736,1060,2.374,1061,2.721,1062,2.374,1063,2.721,1065,2.374,1066,2.374,1070,3.233,1071,2.374,1074,1.551,1075,1.381,1077,1.551,1078,1.551,1081,1.551,1082,3.307,1084,5.544,1086,4.883,1087,5.305,1088,4.214,1089,4.214,1091,1.777,1156,4.526,1160,2.721,1172,1.777,1173,3.248,1174,3.248,1175,4.423,1176,4.423,1177,4.423,1178,4.423,1179,4.423,1180,4.423,1181,4.423,1182,4.423,1183,4.423,1184,4.423,1185,4.423,1186,4.423,1187,4.423,1188,3.248,1189,2.121,1190,3.248,1191,2.121,1192,2.121,1193,2.121,1194,2.121,1195,5.901,1196,2.121,1197,2.121,1198,2.121,1199,2.121,1200,5.901,1201,2.121,1202,2.121,1203,2.121,1204,2.121,1205,5.829,1206,5.829,1207,2.121,1208,2.121,1209,2.121,1210,2.121,1211,3.248,1212,2.121,1213,3.248,1214,2.121,1215,3.248,1216,2.121,1217,3.248,1218,3.947,1219,3.248,1220,3.248,1221,3.947,1222,2.121,1223,2.121,1224,6.07,1225,2.121,1226,6.07,1227,2.121,1228,6.07,1229,2.121,1230,2.121,1231,2.121]],["title/injectables/RoutingService.html",[48,0.838,798,1.585]],["body/injectables/RoutingService.html",[2,0.4,3,0.295,7,0.246,11,0.52,13,0.848,29,0.347,35,0.848,41,0.635,46,0.484,48,1.523,49,1.082,50,1.109,51,0.031,52,0.551,53,0.693,54,1.109,55,1.712,60,1.039,67,0.513,68,0.841,73,2.421,79,1.461,82,0.62,83,0.513,91,0.347,92,0.02,93,0.93,141,1.136,146,0.025,147,0.025,170,1.308,185,2.928,205,1.926,267,2.928,293,1.791,478,3.219,509,2.95,534,3.312,541,2.662,798,2.679,814,2.662,815,2.95,888,3.151,1232,3.796,1233,5.479,1234,4.59,1235,5.479,1236,5.479,1237,4.53,1238,6.545,1239,4.53,1240,5.479,1241,4.53,1242,4.473,1243,4.53,1244,4.53,1245,3.796,1246,4.53]],["title/components/ShelveButtonComponent.html",[0,0.066,135,0.656]],["body/components/ShelveButtonComponent.html",[0,0.129,1,0.664,2,0.29,3,0.214,4,0.848,5,0.917,6,0.783,7,0.178,10,2.135,11,0.393,12,1.725,13,0.904,14,3.184,15,2.701,16,2.898,18,3.434,19,0.979,20,1.112,21,0.917,22,1.431,23,1.208,24,0.782,25,0.979,26,3.253,27,0.979,28,3.253,29,0.251,30,0.901,31,1.768,32,0.745,33,1.652,35,0.839,36,4.897,37,1.193,38,3.729,39,2.203,40,3.694,41,0.76,42,1.752,43,1.64,44,5.009,45,4.541,46,0.528,48,1.151,49,1.353,50,0.901,51,0.031,52,0.545,53,0.639,54,0.901,55,1.516,56,1.395,57,1.843,58,1.988,59,2.615,60,0.962,61,2.746,63,2.072,64,2.651,65,2.244,66,2.651,67,0.713,68,0.826,70,3.253,71,3.729,73,2.379,74,3.253,75,1.701,76,2.898,77,3.729,82,0.642,83,0.371,84,1.603,85,1.752,86,1.603,87,0.664,89,2.396,90,1.158,91,0.251,92,0.015,93,0.756,94,2.746,95,2.27,96,2.746,99,0.917,102,2.746,103,2.746,104,2.746,105,0.917,107,0.783,108,1.245,109,1.245,110,1.151,111,1.516,112,0.917,113,1.245,114,1.245,115,0.609,116,0.917,117,0.609,118,0.917,119,0.664,120,0.917,121,0.664,122,0.609,123,0.783,124,1.245,125,0.664,126,0.917,127,0.664,128,0.979,129,0.917,130,0.664,131,0.664,132,0.783,133,0.783,134,0.917,135,1.097,136,1.108,137,0.901,138,0.609,139,0.609,140,1.245,141,0.609,142,0.848,143,0.664,144,0.848,145,0.917,146,0.02,147,0.02,233,1.473,261,3.962,288,3.694,402,2.244,425,2.135,839,2.135,840,4.447,1247,4.447,1248,5.42,1249,3.278,1250,3.729,1251,4.451,1252,3.278,1253,3.278,1254,3.278,1255,4.451,1256,3.278,1257,3.278,1258,4.451,1259,4.451]],["title/components/ShelveModalComponent.html",[0,0.066,137,0.656]],["body/components/ShelveModalComponent.html",[0,0.114,1,0.519,2,0.226,3,0.167,4,0.663,5,0.717,6,0.612,7,0.139,11,0.492,12,1.559,13,0.884,17,2.794,18,3.171,19,0.824,20,0.973,21,0.717,22,1.386,23,1.17,24,0.684,25,0.824,27,0.824,29,0.196,30,0.758,31,1.47,32,0.746,33,1.445,35,0.884,37,1.07,39,2.019,41,0.525,43,1.552,46,0.55,49,1.331,50,0.758,51,0.031,52,0.489,53,0.615,54,0.758,55,1.598,56,1.16,57,1.549,59,2.856,60,0.878,67,0.731,68,1.035,73,2,80,1.562,82,0.631,83,0.29,84,1.254,85,1.37,86,1.254,87,0.519,90,0.906,91,0.196,92,0.011,93,0.917,95,1.152,105,1.237,107,0.612,108,1.047,109,1.047,110,0.968,111,1.36,112,0.717,113,1.047,114,1.047,115,0.476,116,0.717,117,0.476,118,0.717,119,0.519,120,0.717,121,0.519,122,0.476,123,0.612,124,1.047,125,0.519,126,0.717,127,0.519,128,0.824,129,0.717,130,0.519,131,0.519,132,0.612,133,0.612,134,0.717,135,0.519,136,1.099,137,0.984,138,0.476,139,0.821,140,1.047,141,0.476,142,0.663,143,0.519,144,0.968,145,0.717,146,0.017,147,0.017,148,1.874,150,3.136,151,3.136,152,4.67,154,3.68,159,3.946,160,4.072,163,2.148,164,4.522,165,4.882,166,2.537,167,4.331,168,4.072,170,0.894,171,2.597,172,3.704,173,2.227,174,2.856,175,2.377,176,2.437,177,1.549,178,3.357,179,2.736,180,2.597,181,2.199,183,2.148,185,2.885,186,1.322,189,3.165,192,2.794,193,2.199,194,2.736,195,3.136,196,3.136,197,2.437,198,3.136,199,2.148,201,2.063,204,3.136,205,1.132,206,1.322,212,1.223,213,2.184,214,3.165,220,3.136,222,4.072,224,3.366,226,2.148,227,1.67,228,1.67,229,1.506,230,2.148,231,2.148,232,2.148,233,1.682,234,2.148,237,3.136,238,2.148,239,3.136,240,2.148,242,3.136,243,3.136,245,4.072,246,3.515,247,3.136,249,2.148,250,2.148,261,3.553,265,3.136,266,1.67,267,2,268,2.148,270,3.136,271,2.736,273,3.136,288,4.26,398,2.148,402,2.012,425,2.879,528,2.199,541,2.199,604,3.553,656,3.136,839,4.023,962,3.553,1059,2.598,1132,3.136,1159,2.437,1247,4.516,1250,4.072,1260,2.564,1261,4.86,1262,5.398,1263,3.743,1264,4.86,1265,3.743,1266,2.564,1267,3.743,1268,3.743,1269,2.564,1270,2.564,1271,2.564,1272,3.743,1273,2.564,1274,2.564,1275,2.564,1276,2.564,1277,2.564,1278,2.564,1279,2.564,1280,2.564,1281,3.743,1282,2.564,1283,3.743,1284,3.743,1285,3.743,1286,2.564]],["title/components/StatusViewComponent.html",[0,0.066,138,0.602]],["body/components/StatusViewComponent.html",[0,0.13,1,0.64,2,0.279,3,0.206,4,0.818,5,0.885,6,0.755,7,0.172,11,0.384,12,0.885,13,0.672,19,0.956,20,1.092,21,0.885,22,1.425,23,1.203,24,0.767,25,0.956,27,0.956,29,0.242,30,0.879,31,1.749,32,0.701,35,0.826,37,1.175,39,2.043,41,0.696,46,0.561,49,1.037,50,0.64,51,0.031,52,0.499,53,0.549,54,0.64,56,1.184,60,1.039,67,0.727,68,0.587,70,3.175,78,1.421,79,1.275,80,1.753,82,0.492,83,0.358,87,0.64,91,0.242,92,0.027,93,0.537,99,1.494,105,1.388,107,0.755,108,1.215,109,1.215,110,1.123,111,1.494,112,0.885,113,1.215,114,1.215,115,0.587,116,0.885,117,0.587,118,0.885,119,0.64,120,0.885,121,0.64,122,0.587,123,0.755,124,1.215,125,0.64,126,0.885,127,0.64,128,0.956,129,0.885,130,0.64,131,0.64,132,0.755,133,0.755,134,0.885,135,0.64,136,0.738,137,0.64,138,0.992,139,1.171,140,1.215,141,0.587,142,0.818,143,0.64,144,0.818,145,0.885,146,0.02,147,0.02,170,1.037,186,2.043,201,1.896,246,2.829,262,1.209,296,2.043,305,1.421,312,2.21,315,2.552,316,2.041,317,1.753,344,1.547,347,1.31,352,1.31,355,1.31,762,3.175,827,4.409,939,5.404,1054,2.552,1059,2.322,1062,3.175,1158,3.639,1159,2.829,1166,3.639,1287,5.054,1288,2.312,1289,3.639,1290,3.639,1291,5.782,1292,5.34,1293,5.34,1294,4.344,1295,4.344,1296,4.344,1297,3.163,1298,3.163,1299,6.192,1300,3.163,1301,5.34,1302,4.344,1303,3.163,1304,5.34,1305,3.163,1306,4.344,1307,4.344,1308,4.344,1309,3.163,1310,3.163,1311,3.163,1312,4.344,1313,5.922,1314,3.163,1315,3.163,1316,3.163,1317,4.344,1318,4.344,1319,3.163,1320,3.163,1321,3.163,1322,5.922,1323,6.12,1324,4.344,1325,4.961,1326,3.163,1327,3.163,1328,3.163]],["title/components/TabularViewComponent.html",[0,0.066,141,0.602]],["body/components/TabularViewComponent.html",[0,0.123,1,0.388,2,0.265,3,0.125,4,0.496,5,0.537,6,0.458,7,0.104,11,0.516,12,0.537,13,0.649,14,1.766,19,0.661,20,0.815,21,0.537,22,1.322,23,1.116,24,0.573,25,0.661,27,0.661,29,0.147,30,0.608,31,1.83,32,0.724,33,2.015,35,0.465,37,0.923,39,1.783,41,0.422,42,1.026,43,1.565,46,0.568,48,0.496,49,1.422,50,0.75,51,0.031,52,0.54,53,0.753,54,0.75,55,1.351,56,1.001,58,0.627,60,1.085,65,1.736,67,0.694,68,0.897,74,2.197,75,2.415,76,2.965,78,2.516,79,1.359,80,1.846,82,0.622,83,0.217,87,0.388,90,0.678,91,0.147,92,0.009,93,0.773,99,1.567,105,1.412,107,0.458,108,0.841,109,0.841,110,0.777,111,1.173,112,0.537,113,0.841,114,0.841,115,0.356,116,0.537,117,0.356,118,0.537,119,0.388,120,0.537,121,0.388,122,0.845,123,0.458,124,0.841,125,0.388,126,0.537,127,0.388,128,0.661,129,0.537,130,0.388,131,0.388,132,0.458,133,0.458,134,0.537,135,0.388,136,0.51,137,0.388,138,0.356,139,0.937,140,0.841,141,0.779,142,1.351,143,0.388,144,0.496,145,0.537,146,0.014,147,0.017,154,1.766,166,2.522,170,0.718,171,2.837,173,0.734,176,1.957,177,1.736,179,2.197,181,1.766,186,1.062,192,2.051,201,1.74,205,1.694,212,0.983,214,3.498,229,1.128,233,0.862,253,1.062,257,1.957,262,1.416,266,1.957,267,1.607,271,2.197,275,2.463,277,2.051,292,1.063,294,1.766,296,0.678,302,1.766,305,0.862,311,2.163,312,1.149,317,2.24,322,1.665,325,2.837,327,1.766,330,1.766,338,1.25,344,1.47,391,2.518,402,1.885,466,1.403,473,0.862,474,0.939,475,0.862,484,2.413,504,3.69,517,1.403,521,2.731,522,1.403,525,1.766,528,1.766,587,2.675,638,1.25,653,2.197,657,3.513,672,2.197,759,2.731,814,2.675,815,1.25,829,4.587,854,2.518,857,3.513,869,1.957,880,2.518,882,2.687,884,2.518,888,3.147,917,3.579,935,4.604,937,2.518,1007,2.518,1033,2.197,1042,2.709,1045,3.065,1050,3.065,1054,1.766,1059,2.871,1065,2.197,1066,2.197,1070,3.69,1071,3.53,1074,1.403,1077,1.403,1078,1.403,1081,1.403,1159,1.957,1242,2.197,1288,1.403,1289,1.608,1290,2.518,1329,4.587,1330,3.006,1331,4.046,1332,3.705,1333,1.919,1334,3.006,1335,4.193,1336,4.193,1337,4.829,1338,4.193,1339,4.193,1340,5.047,1341,4.193,1342,4.377,1343,3.006,1344,3.006,1345,4.193,1346,4.193,1347,4.193,1348,4.193,1349,1.919,1350,3.006,1351,1.919,1352,3.006,1353,3.006,1354,1.919,1355,2.197,1356,1.919,1357,1.919,1358,3.006,1359,1.919,1360,1.919,1361,3.705,1362,1.919,1363,3.006,1364,1.919,1365,4.553,1366,4.193,1367,3.006,1368,3.006,1369,3.006,1370,1.919,1371,1.919,1372,1.919,1373,4.553,1374,1.919,1375,1.919,1376,1.919,1377,3.705,1378,3.006,1379,3.006,1380,3.006,1381,3.006,1382,3.006,1383,1.919,1384,3.006,1385,1.919,1386,2.197,1387,3.006,1388,1.919,1389,3.705,1390,1.919,1391,2.197,1392,5.047,1393,3.006,1394,3.705,1395,1.919,1396,4.829,1397,1.919,1398,1.919,1399,1.919,1400,1.919,1401,1.919,1402,1.919,1403,1.919,1404,1.608,1405,1.919,1406,1.25,1407,1.919,1408,1.919,1409,1.919,1410,1.919,1411,1.919,1412,1.919,1413,1.919,1414,1.919,1415,1.919,1416,1.919,1417,1.919,1418,1.919,1419,1.919,1420,3.006,1421,4.553,1422,1.919,1423,1.919,1424,1.919,1425,1.919,1426,1.919,1427,1.919,1428,1.919,1429,3.006,1430,1.919,1431,1.919,1432,1.919,1433,1.919,1434,1.919,1435,1.919,1436,1.919,1437,1.919,1438,1.919,1439,3.705,1440,3.006,1441,1.919,1442,3.006,1443,3.705,1444,3.705,1445,1.919,1446,1.919,1447,1.919,1448,1.919,1449,3.705,1450,1.919,1451,3.006,1452,3.006,1453,3.006]],["title/components/WikiButtonComponent.html",[0,0.066,143,0.656]],["body/components/WikiButtonComponent.html",[0,0.132,1,0.837,2,0.365,3,0.27,4,1.069,5,1.156,6,0.987,7,0.224,10,2.692,11,0.365,12,1.708,13,0.801,14,3.042,15,2.768,16,3.372,19,1.139,20,1.244,21,1.156,22,1.467,23,1.238,24,0.875,25,1.139,26,3.785,27,1.139,28,3.785,29,0.316,32,0.586,35,0.801,37,1.304,39,2.094,41,0.793,46,0.499,51,0.031,52,0.521,53,0.523,60,0.879,67,0.468,68,0.768,82,0.468,83,0.468,87,0.837,91,0.316,92,0.018,107,0.987,108,1.449,109,1.449,110,1.339,111,1.658,112,1.156,113,1.449,114,1.449,115,0.768,116,1.156,117,0.768,118,1.156,119,0.837,120,1.156,121,0.837,122,0.768,123,0.987,124,1.449,125,0.837,126,1.156,127,0.837,128,1.139,129,1.156,130,0.837,131,0.837,132,0.987,133,0.987,134,1.156,135,0.837,136,0.879,137,0.837,138,0.768,139,0.768,140,1.449,141,0.768,142,1.069,143,1.2,144,1.688,145,1.156,146,0.024,147,0.024,170,1.236,205,1.846,206,2.094,267,2.768,291,1.449,293,1.693,837,4.333,1454,4.966,1455,5.178,1456,5.178,1457,4.133,1458,4.133]],["title/coverage.html",[1459,3.7]],["body/coverage.html",[0,0.135,1,0.792,7,0.212,8,3.528,9,2.862,10,3.591,32,0.443,43,1.012,48,1.503,51,0.031,53,0.495,66,3.233,75,1.496,87,0.792,88,2.549,92,0.027,115,0.727,117,0.727,119,0.792,121,0.792,123,1.194,125,0.792,127,0.792,130,0.792,131,0.792,132,1.194,133,1.194,135,0.792,137,0.792,138,0.727,141,0.727,143,0.792,146,0.023,147,0.023,148,3.657,166,1.621,206,1.383,274,2.862,292,0.861,299,2.862,399,3.657,412,1.914,452,2.549,453,3.591,454,4.031,476,2.549,602,3.28,623,1.914,669,2.862,681,2.939,683,2.862,761,3.28,798,1.914,816,2.862,827,2.862,829,2.862,832,2.862,834,2.862,837,2.862,839,2.549,840,2.862,842,2.862,853,3.28,870,2.3,917,2.549,918,3.28,919,3.28,1005,3.28,1006,3.28,1039,2.862,1040,3.28,1075,2.549,1121,3.28,1148,3.28,1156,3.657,1157,3.28,1165,3.28,1172,3.28,1232,3.28,1247,3.657,1287,3.28,1288,3.657,1329,4.564,1406,2.549,1454,3.28,1459,3.28,1460,3.28,1461,6.802,1462,6.005,1463,3.914,1464,3.914,1465,5.003,1466,6.005,1467,5.003,1468,5.514,1469,3.914,1470,4.62,1471,4.192,1472,6.611,1473,3.28,1474,3.28,1475,5.003,1476,3.914,1477,3.914,1478,5.031,1479,3.28,1480,5.145,1481,3.28,1482,3.28,1483,3.28,1484,3.28,1485,3.914,1486,3.28,1487,3.28,1488,3.914]],["title/dependencies.html",[187,1.273,1489,2.71]],["body/dependencies.html",[51,0.031,83,0.545,84,2.355,85,2.574,86,2.779,146,0.026,147,0.026,180,2.829,187,1.574,227,3.136,228,3.136,300,2.829,475,2.553,676,4.035,677,4.035,805,4.035,807,5.065,808,3.7,815,3.136,1404,4.035,1490,4.815,1491,6.638,1492,4.815,1493,5.682,1494,4.815,1495,4.815,1496,4.815,1497,4.035,1498,4.815,1499,4.815,1500,4.815,1501,4.815,1502,4.815,1503,4.815,1504,4.815,1505,4.815,1506,4.815,1507,4.815,1508,4.815,1509,4.815,1510,4.815,1511,4.815,1512,5.682,1513,4.035,1514,4.815,1515,4.815]],["title/miscellaneous/enumerations.html",[1516,1.765,1517,3.264]],["body/miscellaneous/enumerations.html",[29,0.374,32,0.553,51,0.026,65,2.022,79,1.619,146,0.026,147,0.026,173,2.324,186,2.149,197,3.181,253,2.149,262,2.324,269,3.063,274,3.571,277,2.389,305,2.575,316,1.867,343,4.092,344,2.802,345,4.092,346,3.732,347,2.022,348,3.063,349,2.87,350,4.092,351,3.181,352,2.022,353,3.181,354,5.095,355,2.022,356,3.181,357,2.389,358,2.389,359,2.389,360,2.389,1516,3.181,1517,4.092,1518,6.081]],["title/index.html",[29,0.207,638,1.765,1355,1.981]],["body/index.html",[0,0.12,3,0.29,7,0.241,13,0.903,23,0.824,51,0.025,52,0.446,63,1.697,84,3.138,122,1.129,146,0.025,147,0.025,206,2.147,213,1.995,217,2.373,267,2.373,291,1.743,292,0.977,303,3.571,311,1.838,335,2.608,353,2.891,402,2.516,415,3.245,417,3.524,478,3.571,489,4.268,543,2.891,632,3.72,663,3.245,681,2.608,742,4.534,764,3.72,801,3.245,882,2.171,1093,3.245,1234,3.72,1386,4.555,1391,3.245,1406,2.891,1497,4.534,1519,4.44,1520,5.838,1521,6.077,1522,4.534,1523,4.44,1524,5.412,1525,3.72,1526,4.44,1527,4.44,1528,4.44,1529,4.44,1530,4.44,1531,4.44,1532,4.44,1533,4.44,1534,4.44,1535,5.31,1536,3.72,1537,3.72,1538,4.44,1539,5.412,1540,6.231,1541,5.838,1542,5.412,1543,4.44,1544,4.44,1545,3.72,1546,4.44,1547,5.465,1548,4.44,1549,4.44,1550,4.44,1551,4.44,1552,4.44,1553,3.72,1554,4.44,1555,4.44,1556,4.44,1557,4.44,1558,4.44,1559,4.44,1560,4.44,1561,3.72,1562,5.412,1563,5.412,1564,4.44,1565,6.077,1566,4.44,1567,4.44,1568,4.44,1569,4.44,1570,4.44]],["title/license.html",[638,1.765,1355,1.981,1571,2.27]],["body/license.html",[3,0.385,4,0.752,7,0.222,13,0.961,15,1.554,33,2.031,46,0.419,49,1.381,50,0.589,51,0.019,54,0.96,56,1.345,57,2.247,64,2.32,92,0.013,110,0.752,146,0.019,147,0.019,154,2.787,171,3.189,177,2.247,178,3.4,181,2.787,186,1.028,193,1.709,194,2.126,206,1.82,208,2.131,253,1.448,262,1.566,266,3.089,269,2.19,277,1.422,292,1.044,296,1.028,303,3.617,311,1.204,321,4.542,335,3.529,338,1.894,344,1.422,346,3.848,348,2.19,349,1.709,351,3.354,402,1.204,403,1.709,417,2.668,479,3.089,484,2.314,490,2.126,491,3.848,495,2.995,525,1.709,542,2.126,544,2.995,550,2.126,564,2.995,574,2.126,580,3.467,663,4.45,741,2.437,743,2.437,746,2.437,763,4.154,782,2.995,934,2.437,940,2.126,962,2.126,1033,2.995,1059,2.19,1060,3.968,1093,2.126,1242,2.126,1331,3.433,1460,2.437,1513,2.437,1522,5.565,1535,4.314,1536,2.437,1537,4.548,1545,5.591,1547,2.437,1553,5.158,1571,5.502,1572,6.502,1573,6.007,1574,2.908,1575,2.908,1576,4.097,1577,4.743,1578,4.097,1579,5.15,1580,5.15,1581,5.15,1582,2.908,1583,2.908,1584,2.908,1585,4.097,1586,2.908,1587,2.908,1588,2.908,1589,5.15,1590,5.908,1591,4.097,1592,2.908,1593,4.743,1594,4.097,1595,4.097,1596,2.908,1597,6.088,1598,5.428,1599,6.567,1600,2.908,1601,6.52,1602,4.097,1603,4.743,1604,4.097,1605,2.908,1606,2.908,1607,4.743,1608,2.908,1609,4.743,1610,4.097,1611,4.097,1612,4.097,1613,2.908,1614,4.097,1615,4.097,1616,2.908,1617,2.908,1618,2.908,1619,5.632,1620,6.088,1621,2.908,1622,2.908,1623,2.908,1624,4.743,1625,5.787,1626,4.097,1627,2.908,1628,2.908,1629,2.908,1630,2.908,1631,2.908,1632,2.908,1633,2.908,1634,2.908,1635,2.908,1636,2.908,1637,5.428,1638,2.908,1639,5.632,1640,4.743,1641,2.908,1642,2.908,1643,2.908,1644,2.908,1645,2.908,1646,2.908,1647,2.908,1648,2.908,1649,2.908,1650,2.908,1651,4.097,1652,4.743,1653,4.743,1654,5.632,1655,5.15,1656,5.428,1657,2.908,1658,4.097,1659,2.908,1660,2.908,1661,2.908,1662,2.908,1663,2.908,1664,2.908,1665,2.908,1666,4.743,1667,4.097,1668,4.097,1669,4.097,1670,2.908,1671,4.097,1672,2.908,1673,4.097,1674,2.908,1675,2.908,1676,2.908,1677,2.908,1678,2.908,1679,2.908,1680,2.908,1681,4.097,1682,2.908,1683,4.097,1684,2.908,1685,4.097,1686,5.15,1687,2.908,1688,2.908,1689,2.437,1690,2.908,1691,2.908,1692,2.908,1693,2.908,1694,2.908,1695,2.908,1696,4.097,1697,2.908,1698,2.908,1699,2.908,1700,2.908,1701,2.908,1702,2.908,1703,2.908,1704,2.908]],["title/modules.html",[789,2.16]],["body/modules.html",[51,0.027,146,0.027,147,0.027,789,2.558,790,3.406,797,3.073,808,3.406,1391,3.823,1705,5.23,1706,5.23,1707,5.961,1708,5.23]],["title/overview.html",[128,0.972]],["body/overview.html",[0,0.092,1,1.186,43,1.515,48,1.157,51,0.031,86,2.189,87,1.186,91,0.343,92,0.02,107,1.068,115,1.088,117,1.088,119,1.301,121,1.186,125,1.186,127,1.186,128,0.985,130,1.186,131,1.186,135,1.186,137,1.186,138,1.088,141,1.088,143,1.186,146,0.025,147,0.025,166,2.426,178,2.629,187,1.463,344,2.189,348,2.392,351,2.914,623,2.865,789,2.66,790,4.456,791,3.272,792,3.75,793,3.75,794,3.75,795,3.75,796,3.75,797,3.442,798,2.865,799,4.556,800,3.75,801,3.272,1709,3.75]],["title/miscellaneous/variables.html",[66,1.905,1516,1.765]],["body/miscellaneous/variables.html",[11,0.578,13,0.528,23,0.506,24,1.003,29,0.13,30,0.343,32,0.758,46,0.15,51,0.031,53,0.697,56,1.372,57,1.128,63,1.041,64,0.829,66,1.67,75,1.041,76,1.774,78,2.61,79,1.563,80,2.338,105,1.514,136,1.092,146,0.012,147,0.012,173,2.463,175,2.237,187,2.091,200,2.546,205,1.296,217,0.906,253,2.197,262,2.386,275,3.758,276,5.359,277,3.134,278,5.359,279,5.359,292,1.368,316,1.749,317,2.072,325,2.006,327,1.6,344,2.445,346,3.36,347,1.773,348,3.034,349,3.713,352,1.773,353,2.223,355,0.702,357,1.332,358,1.332,359,1.332,360,1.332,401,1.825,412,1.332,456,1.239,484,1.224,528,1.6,603,2.282,605,2.861,625,2.297,639,2.282,647,3.833,669,3.131,681,3.238,683,2.496,763,1.104,808,1.104,816,2.496,845,2.282,870,0.996,882,0.829,888,0.829,895,4.593,940,1.239,994,2.861,995,2.861,996,2.861,997,2.861,1000,2.282,1075,2.546,1124,5.264,1125,5.264,1126,5.264,1245,1.42,1329,1.239,1342,1.42,1386,3.655,1406,2.223,1470,1.42,1471,3.833,1473,2.861,1474,2.861,1478,1.42,1479,2.861,1480,1.42,1481,2.861,1482,2.861,1483,2.861,1484,2.861,1486,1.42,1487,1.42,1516,1.104,1525,2.282,1561,3.833,1689,1.42,1709,2.282,1710,5.159,1711,4.283,1712,1.695,1713,1.695,1714,1.695,1715,1.695,1716,1.695,1717,1.695,1718,1.695,1719,1.695,1720,1.695,1721,1.695,1722,1.695,1723,1.695,1724,1.695,1725,1.695,1726,2.723,1727,1.695,1728,2.723,1729,6.548,1730,1.695,1731,1.695,1732,2.723,1733,1.695,1734,2.723,1735,1.695,1736,1.695,1737,1.695,1738,1.695,1739,2.723,1740,1.695,1741,1.695,1742,2.723,1743,1.695,1744,2.723,1745,1.695,1746,2.723,1747,1.695,1748,2.723,1749,1.695,1750,2.723,1751,1.695,1752,2.723,1753,1.695,1754,2.723,1755,1.695,1756,2.723,1757,1.695,1758,2.723,1759,1.695,1760,2.723,1761,1.695,1762,1.695,1763,1.695,1764,2.723,1765,1.695,1766,2.723,1767,3.414,1768,6.652,1769,3.414,1770,3.414,1771,3.414,1772,3.414,1773,3.414,1774,3.414,1775,3.414,1776,3.414,1777,3.414,1778,3.414,1779,3.414,1780,3.414,1781,3.414,1782,3.414,1783,3.414,1784,3.414,1785,3.414,1786,3.414,1787,3.414,1788,1.695,1789,1.695,1790,3.414,1791,3.414,1792,3.414,1793,4.283,1794,1.695,1795,2.723,1796,1.695,1797,1.695,1798,1.695,1799,1.695,1800,1.695,1801,1.695,1802,1.695,1803,1.695,1804,1.695,1805,1.695,1806,1.695,1807,1.695,1808,1.695,1809,1.695,1810,3.91,1811,4.575,1812,3.414,1813,1.695,1814,1.695,1815,1.695,1816,1.695,1817,1.695,1818,1.695,1819,1.695,1820,2.723,1821,1.695,1822,1.695,1823,1.695,1824,1.695,1825,1.695,1826,1.695,1827,1.695,1828,1.695,1829,1.695,1830,2.723,1831,2.723,1832,2.723,1833,2.723,1834,1.695,1835,1.695,1836,1.695,1837,3.414,1838,3.414,1839,3.414,1840,3.414,1841,3.414,1842,3.414,1843,3.414,1844,1.695]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":253,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["0000",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06:34:00",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":262,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["1.1.8",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["1.14.3",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1523,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":758,"title":{},"body":{"injectables/AlarmService.html":{}}}],["10/10",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":754,"title":{},"body":{"injectables/AlarmService.html":{}}}],["11",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11/11",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1000,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["1267252440000",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14/14",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1709,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":1001,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["16/16",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1002,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["18",{"_index":1003,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["19",{"_index":1004,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["19/19",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":344,"title":{},"body":{"classes/Alarm.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":724,"title":{},"body":{"injectables/AlarmService.html":{}}}],["2007",{"_index":1576,"title":{},"body":{"license.html":{}}}],["201",{"_index":720,"title":{},"body":{"injectables/AlarmService.html":{}}}],["2010",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23/23",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26/26",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":1574,"title":{},"body":{"license.html":{}}}],["3",{"_index":346,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":348,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.1.1",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["41",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4d0",{"_index":1679,"title":{},"body":{"license.html":{}}}],["4d1",{"_index":1680,"title":{},"body":{"license.html":{}}}],["5",{"_index":349,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":351,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"overview.html":{}}}],["6.0.0",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["6.0.4",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":353,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["7/7",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":999,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["8/8",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["9650",{"_index":1328,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["_",{"_index":534,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/RoutingService.html":{}}}],["_alarm",{"_index":920,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["_descript",{"_index":921,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["_nodedata",{"_index":535,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.expand",{"_index":536,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_nodedata.item",{"_index":539,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["_setfilteractiv",{"_index":1335,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["_url",{"_index":922,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["accept",{"_index":1702,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":338,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["accompani",{"_index":1656,"title":{},"body":{"license.html":{}}}],["accord",{"_index":221,"title":{},"body":{"components/AckModalComponent.html":{},"classes/DisplayedAlarm.html":{}}}],["ack",{"_index":24,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["ackbuttoncompon",{"_index":1,"title":{"components/AckButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ackfromselect",{"_index":156,"title":{},"body":{"components/AckModalComponent.html":{}}}],["acklist",{"_index":486,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ackmod",{"_index":100,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["ackmodal.componentinstance.alarm",{"_index":106,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["ackmodalcompon",{"_index":87,"title":{"components/AckModalComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acknowledg",{"_index":17,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{}}}],["acknowledgealarm",{"_index":610,"title":{},"body":{"injectables/AlarmService.html":{}}}],["acknowledgealarms(alarms_id",{"_index":626,"title":{},"body":{"injectables/AlarmService.html":{}}}],["acksuccess",{"_index":157,"title":{},"body":{"components/AckModalComponent.html":{}}}],["acksuccessful(alarm",{"_index":190,"title":{},"body":{"components/AckModalComponent.html":{}}}],["acktreecompon",{"_index":115,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":192,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/HttpClientService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["activ",{"_index":1365,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["activatedrout",{"_index":1348,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["activemod",{"_index":152,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["actual_compon",{"_index":145,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["add",{"_index":656,"title":{},"body":{"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{}}}],["addit",{"_index":1593,"title":{},"body":{"license.html":{}}}],["address",{"_index":1691,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":1332,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm",{"_index":32,"title":{"classes/Alarm.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["alarm'},{'nam",{"_index":118,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["alarm(alarm",{"_index":966,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ack",{"_index":984,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.acknowledg",{"_index":715,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm.asalarm(obj",{"_index":727,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm.component.css",{"_index":404,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.component.html",{"_index":405,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["alarm.core_timestamp",{"_index":396,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.depend",{"_index":548,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.dependencies.length",{"_index":546,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarm.descript",{"_index":1453,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.getvalidityasstr",{"_index":983,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.getvalueasstring().split('_",{"_index":980,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.mod",{"_index":391,"title":{},"body":{"classes/Alarm.html":{},"components/TabularViewComponent.html":{}}}],["alarm.nam",{"_index":1451,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.servic",{"_index":90,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["alarm.shelv",{"_index":722,"title":{},"body":{"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{}}}],["alarm.state_change_timestamp",{"_index":341,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm.t",{"_index":919,"title":{},"body":{"classes/DisplayedAlarm.html":{},"coverage.html":{}}}],["alarm.timestamp",{"_index":1452,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["alarm.ts:105",{"_index":938,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:12",{"_index":930,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:15",{"_index":927,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:150",{"_index":933,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:31",{"_index":945,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:38",{"_index":943,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:43",{"_index":949,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:48",{"_index":947,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:53",{"_index":953,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:58",{"_index":951,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:64",{"_index":955,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:69",{"_index":957,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:77",{"_index":958,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:86",{"_index":960,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:9",{"_index":928,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.ts:94",{"_index":941,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["alarm.unshelv",{"_index":725,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarm.valu",{"_index":393,"title":{},"body":{"classes/Alarm.html":{}}}],["alarm/alarm.compon",{"_index":841,"title":{},"body":{"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["alarm?.core_id",{"_index":265,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["alarm_id",{"_index":40,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveButtonComponent.html":{}}}],["alarmchangestream",{"_index":606,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarmcompon",{"_index":117,"title":{"components/AlarmComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmcoreid",{"_index":871,"title":{},"body":{"injectables/CdbService.html":{}}}],["alarmid",{"_index":688,"title":{},"body":{"injectables/AlarmService.html":{},"components/IasHealthOverviewComponent.html":{}}}],["alarmimageset",{"_index":412,"title":{"classes/AlarmImageSet.html":{}},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarmitemflatnod",{"_index":452,"title":{"classes/AlarmItemFlatNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemnod",{"_index":476,"title":{"classes/AlarmItemNode.html":{}},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["alarmitemselectiontoggle(nod",{"_index":589,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarms_d",{"_index":1481,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alarms_id",{"_index":628,"title":{},"body":{"injectables/AlarmService.html":{}}}],["alarmservic",{"_index":43,"title":{"injectables/AlarmService.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alarmservicesubscript",{"_index":1045,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["alarmsiasiosdata",{"_index":903,"title":{},"body":{"injectables/CdbService.html":{}}}],["alarmsiasiosdata.foreach(iasio",{"_index":906,"title":{},"body":{"injectables/CdbService.html":{}}}],["alarmslist",{"_index":657,"title":{},"body":{"injectables/AlarmService.html":{},"components/TabularViewComponent.html":{}}}],["alarmstoack",{"_index":153,"title":{},"body":{"components/AckModalComponent.html":{}}}],["alarmstoackfromselect",{"_index":483,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["alarmtag",{"_index":1291,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["allow",{"_index":1588,"title":{},"body":{"license.html":{}}}],["alreadi",{"_index":1672,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1614,"title":{},"body":{"license.html":{}}}],["angular",{"_index":478,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{},"injectables/RoutingService.html":{},"index.html":{}}}],["angular/anim",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collect",{"_index":466,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["angular/cdk/tre",{"_index":468,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["angular/clito",{"_index":1544,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":805,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":812,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientService.html":{}}}],["angular/compil",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":83,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":227,"title":{},"body":{"components/AckModalComponent.html":{},"modules/AppModule.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1404,"title":{},"body":{"components/TabularViewComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1107,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/card",{"_index":1111,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1118,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/icon",{"_index":1109,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/input",{"_index":1095,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/list",{"_index":1115,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/pagin",{"_index":1097,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/progress",{"_index":1099,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1113,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/slid",{"_index":1101,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/sort",{"_index":1103,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/t",{"_index":1105,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1120,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["angular/material/tre",{"_index":471,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{}}}],["angular/platform",{"_index":807,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":815,"title":{},"body":{"modules/AppModule.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"dependencies.html":{}}}],["antenna",{"_index":1169,"title":{},"body":{"components/OverviewComponent.html":{}}}],["api",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/ia",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/shelv",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/tickets/acknowledg",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/tickets/old_open_info",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.compon",{"_index":826,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":766,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":765,"title":{},"body":{"components/AppComponent.html":{}}}],["app_base_href",{"_index":804,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":119,"title":{"components/AppComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":1059,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["applic",{"_index":763,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["applicaiton",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":1034,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["applyfilt",{"_index":1343,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["applyfilter(filt",{"_index":1350,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["appmodul",{"_index":790,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":844,"title":{},"body":{"modules/AppModule.html":{}}}],["archiv",{"_index":1258,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["argument",{"_index":1627,"title":{},"body":{"license.html":{}}}],["array",{"_index":1377,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilt",{"_index":1440,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.indexof(this.filtervalueforsetalarm",{"_index":1442,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["arrayoffilters.splice(indexofset",{"_index":1450,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["artifact",{"_index":1556,"title":{},"body":{"index.html":{}}}],["asalarm",{"_index":281,"title":{},"body":{"classes/Alarm.html":{}}}],["asalarm(json",{"_index":319,"title":{},"body":{"classes/Alarm.html":{}}}],["asc",{"_index":1414,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["asiasio",{"_index":1127,"title":{},"body":{"classes/Iasio.html":{}}}],["asiasio(json",{"_index":1135,"title":{},"body":{"classes/Iasio.html":{}}}],["asset",{"_index":1075,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assets.icon",{"_index":1084,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["assets/img",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associ",{"_index":410,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{}}}],["asterisc",{"_index":1285,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["attribut",{"_index":294,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{}}}],["author",{"_index":1704,"title":{},"body":{"license.html":{}}}],["automat",{"_index":1551,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1391,"title":{},"body":{"components/TabularViewComponent.html":{},"index.html":{},"modules.html":{}}}],["b",{"_index":1637,"title":{},"body":{"license.html":{}}}],["backend",{"_index":639,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["backendurl",{"_index":683,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["backendurls.tickets_info",{"_index":716,"title":{},"body":{"injectables/AlarmService.html":{}}}],["base",{"_index":57,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["be",{"_index":1622,"title":{},"body":{"license.html":{}}}],["becom",{"_index":1366,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["befor",{"_index":81,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["behaviorsubject",{"_index":474,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["behaviorsubject(fals",{"_index":672,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["behaviorsubject(tru",{"_index":667,"title":{},"body":{"injectables/AlarmService.html":{}}}],["below",{"_index":1595,"title":{},"body":{"license.html":{}}}],["bind",{"_index":1367,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["black",{"_index":1325,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["boolean",{"_index":201,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["bootstrap",{"_index":86,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"modules/AppModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":85,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"modules/AppModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{}}}],["both",{"_index":1651,"title":{},"body":{"license.html":{}}}],["bound",{"_index":1623,"title":{},"body":{"license.html":{}}}],["branch",{"_index":1534,"title":{},"body":{"index.html":{}}}],["broadcastfactor",{"_index":748,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["brows",{"_index":1707,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":808,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browser/anim",{"_index":822,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":821,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":806,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":291,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["buildfiletree(valu",{"_index":552,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["button",{"_index":12,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button'},{'nam",{"_index":113,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.compon",{"_index":836,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.css",{"_index":26,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.html",{"_index":28,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["button.component.t",{"_index":10,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":1455,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:20",{"_index":61,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:22",{"_index":1457,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["button.component.ts:25",{"_index":77,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["button.component.ts:30",{"_index":47,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:42",{"_index":1253,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:46",{"_index":69,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:50",{"_index":1249,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:54",{"_index":62,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:62",{"_index":72,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["button.component.ts:65",{"_index":1252,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button.component.ts:72",{"_index":1254,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["button/ack",{"_index":9,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["button/shelv",{"_index":840,"title":{},"body":{"modules/AppModule.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{}}}],["button/wiki",{"_index":837,"title":{},"body":{"modules/AppModule.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["c",{"_index":1578,"title":{},"body":{"license.html":{}}}],["cach",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":962,"title":{},"body":{"classes/DisplayedAlarm.html":{},"components/ShelveModalComponent.html":{},"license.html":{}}}],["canacknowledg",{"_index":34,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["cancel",{"_index":273,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["cansend",{"_index":1261,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["card",{"_index":133,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["card'},{'nam",{"_index":129,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["card.compon",{"_index":833,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":1161,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.html",{"_index":1162,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.t",{"_index":1157,"title":{},"body":{"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:12",{"_index":1163,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card.component.ts:18",{"_index":1164,"title":{},"body":{"components/OverviewCardComponent.html":{}}}],["card/overview",{"_index":832,"title":{},"body":{"modules/AppModule.html":{},"components/OverviewCardComponent.html":{},"coverage.html":{}}}],["catch",{"_index":745,"title":{},"body":{"injectables/AlarmService.html":{}}}],["cdb",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdb.servic",{"_index":229,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"modules/AppModule.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["cdb_ia",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdbapiurl",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdbservic",{"_index":166,"title":{"injectables/CdbService.html":{}},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cdbservicesubscript",{"_index":1336,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["center",{"_index":104,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["cento",{"_index":1526,"title":{},"body":{"index.html":{}}}],["central",{"_index":1233,"title":{},"body":{"injectables/RoutingService.html":{}}}],["certain",{"_index":1695,"title":{},"body":{"license.html":{}}}],["chang",{"_index":311,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{},"index.html":{},"license.html":{}}}],["changealarm",{"_index":611,"title":{},"body":{"injectables/AlarmService.html":{}}}],["changealarms(ani",{"_index":629,"title":{},"body":{"injectables/AlarmService.html":{}}}],["channel",{"_index":677,"title":{},"body":{"injectables/AlarmService.html":{},"dependencies.html":{}}}],["check",{"_index":213,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"classes/Iasio.html":{},"components/ShelveModalComponent.html":{},"index.html":{}}}],["checkbox",{"_index":477,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklist",{"_index":505,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["checklistselect",{"_index":506,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["child",{"_index":218,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["children",{"_index":210,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["choic",{"_index":1640,"title":{},"body":{"license.html":{}}}],["choos",{"_index":1696,"title":{},"body":{"license.html":{}}}],["class",{"_index":92,"title":{"classes/Alarm.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["class=\"sect",{"_index":272,"title":{},"body":{"components/AckModalComponent.html":{}}}],["classes.push('blink",{"_index":1321,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["classes.push('statu",{"_index":1313,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["clear",{"_index":316,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["clear.svg",{"_index":1086,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["clear_unreli",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":1521,"title":{},"body":{"index.html":{}}}],["click",{"_index":74,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["client",{"_index":1008,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.servic",{"_index":684,"title":{},"body":{"injectables/AlarmService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{}}}],["client.service.t",{"_index":1006,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["client.service.ts:12",{"_index":1014,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:21",{"_index":1020,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:30",{"_index":1018,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:44",{"_index":1024,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:58",{"_index":1026,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["client.service.ts:71",{"_index":1016,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["close",{"_index":197,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/ShelveModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_appmodul",{"_index":792,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":795,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":793,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":794,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":796,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1553,"title":{},"body":{"index.html":{},"license.html":{}}}],["collectionview",{"_index":1405,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["color",{"_index":1322,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["column",{"_index":936,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["combin",{"_index":1601,"title":{},"body":{"license.html":{}}}],["compar",{"_index":1384,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["comparecurrentandlastreceivedmessagetimestamp",{"_index":612,"title":{},"body":{"injectables/AlarmService.html":{}}}],["compat",{"_index":1513,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["complementari",{"_index":176,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["complet",{"_index":643,"title":{},"body":{"injectables/AlarmService.html":{}}}],["compodoc",{"_index":1568,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":112,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["comput",{"_index":1675,"title":{},"body":{"license.html":{}}}],["concern",{"_index":1693,"title":{},"body":{"license.html":{}}}],["condit",{"_index":1591,"title":{},"body":{"license.html":{}}}],["configur",{"_index":854,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["connect",{"_index":603,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["connectionpath",{"_index":706,"title":{},"body":{"injectables/AlarmService.html":{}}}],["connectionstatusstream",{"_index":607,"title":{},"body":{"injectables/AlarmService.html":{}}}],["consid",{"_index":1536,"title":{},"body":{"index.html":{},"license.html":{}}}],["console.error('an",{"_index":1028,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["console.log('ack",{"_index":236,"title":{},"body":{"components/AckModalComponent.html":{}}}],["console.log('connect",{"_index":710,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('error",{"_index":247,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["console.log('notifi",{"_index":698,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('request",{"_index":703,"title":{},"body":{"injectables/AlarmService.html":{}}}],["console.log('shelv",{"_index":1278,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["console.log('unshelv",{"_index":1279,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["const",{"_index":99,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["constructor(activemod",{"_index":163,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["constructor(alarm",{"_index":926,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["constructor(alarmservic",{"_index":42,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["constructor(attribut",{"_index":289,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["constructor(cdbservic",{"_index":622,"title":{},"body":{"injectables/AlarmService.html":{}}}],["constructor(http",{"_index":1013,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["constructor(httpclientservic",{"_index":865,"title":{},"body":{"injectables/CdbService.html":{}}}],["constructor(priv",{"_index":509,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{}}}],["constructor(rout",{"_index":1237,"title":{},"body":{"injectables/RoutingService.html":{}}}],["contain",{"_index":296,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/CdbService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["content",{"_index":537,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/HttpClientService.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["content'},{'nam",{"_index":134,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["content.compon",{"_index":835,"title":{},"body":{"modules/AppModule.html":{}}}],["content.component.css",{"_index":1173,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.html",{"_index":1174,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.t",{"_index":1172,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:104",{"_index":1189,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:187",{"_index":1191,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:20",{"_index":1197,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:23",{"_index":1202,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:26",{"_index":1208,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:29",{"_index":1198,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:32",{"_index":1203,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:35",{"_index":1209,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:38",{"_index":1194,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:41",{"_index":1199,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:44",{"_index":1204,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:47",{"_index":1196,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:50",{"_index":1201,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:53",{"_index":1207,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:56",{"_index":1188,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:72",{"_index":1193,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content.component.ts:97",{"_index":1192,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["content/overview",{"_index":834,"title":{},"body":{"modules/AppModule.html":{},"components/OverviewWeatherCardContentComponent.html":{},"coverage.html":{}}}],["contract",{"_index":774,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":497,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["convert",{"_index":323,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{}}}],["convey",{"_index":1620,"title":{},"body":{"license.html":{}}}],["copi",{"_index":321,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{},"license.html":{}}}],["copyright",{"_index":1577,"title":{},"body":{"license.html":{}}}],["core",{"_index":300,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{},"dependencies.html":{}}}],["core_id",{"_index":275,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["core_id'",{"_index":304,"title":{},"body":{"classes/Alarm.html":{}}}],["core_timestamp",{"_index":276,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/variables.html":{}}}],["coreid$1",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$11",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$12",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$13",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$14",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$15",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$2",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$21",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$22",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$23",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$24",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$25",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$3",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$31",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$32",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$33",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$34",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$35",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$4",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$40",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$41",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$42",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$43",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$44",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$45",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$46",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$47",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$48",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$49",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coreid$5",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["correspond",{"_index":335,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Iasio.html":{},"index.html":{},"license.html":{}}}],["coulmn",{"_index":1378,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["count",{"_index":259,"title":{},"body":{"components/AckModalComponent.html":{}}}],["cover",{"_index":1598,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":1459,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":212,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["critic",{"_index":994,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["critical.svg",{"_index":1087,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["critical_unreli",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crud",{"_index":1009,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["current",{"_index":415,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"index.html":{}}}],["custom",{"_index":1007,"title":{},"body":{"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["cycl",{"_index":636,"title":{},"body":{"injectables/AlarmService.html":{}}}],["d",{"_index":1665,"title":{},"body":{"license.html":{}}}],["dash",{"_index":1296,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["data",{"_index":484,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["data).pip",{"_index":713,"title":{},"body":{"injectables/AlarmService.html":{}}}],["data.push(nod",{"_index":561,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["data.tostringforfiltering().tolowercas",{"_index":1380,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["data[0",{"_index":902,"title":{},"body":{"injectables/CdbService.html":{}}}],["data[1",{"_index":904,"title":{},"body":{"injectables/CdbService.html":{}}}],["databas",{"_index":374,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/Iasio.html":{}}}],["datafromcdb",{"_index":1431,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datafromcdb.descript",{"_index":1434,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datafromcdb.url",{"_index":1435,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datasourc",{"_index":504,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["datastr",{"_index":1379,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datastr.indexof(filt",{"_index":1382,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["date",{"_index":325,"title":{},"body":{"classes/Alarm.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["date()).gettim",{"_index":736,"title":{},"body":{"injectables/AlarmService.html":{}}}],["date(date.parse('27",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(t",{"_index":389,"title":{},"body":{"classes/Alarm.html":{}}}],["date).gettim",{"_index":674,"title":{},"body":{"injectables/AlarmService.html":{}}}],["date_format",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dateformat",{"_index":1337,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["datepip",{"_index":816,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datepipe('en",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddthh:mm:ss",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deactiv",{"_index":1444,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["debug",{"_index":743,"title":{},"body":{"injectables/AlarmService.html":{},"license.html":{}}}],["decid",{"_index":1698,"title":{},"body":{"license.html":{}}}],["declar",{"_index":791,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"overview.html":{}}}],["decor",{"_index":1393,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["deem",{"_index":1606,"title":{},"body":{"license.html":{}}}],["default",{"_index":78,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":46,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["definealarmsandicon",{"_index":1048,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["definealarmsandimag",{"_index":1187,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["definit",{"_index":542,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["degrad",{"_index":350,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["delet",{"_index":653,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{}}}],["delete(url",{"_index":1015,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["demo",{"_index":1030,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["depend",{"_index":187,"title":{"dependencies.html":{}},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["descend",{"_index":575,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.every(child",{"_index":578,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendants.some(child",{"_index":582,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantsallselected(nod",{"_index":576,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descendantspartiallyselected(nod",{"_index":581,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["descript",{"_index":11,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["description(descript",{"_index":967,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["destroy",{"_index":1066,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["detail",{"_index":1690,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1549,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1525,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dictionari",{"_index":295,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"classes/Iasio.html":{}}}],["differ",{"_index":1689,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":110,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1555,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1558,"title":{},"body":{"index.html":{}}}],["disableacknowledg",{"_index":158,"title":{},"body":{"components/AckModalComponent.html":{}}}],["dispay",{"_index":1330,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["display",{"_index":402,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"components/LegendComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"index.html":{},"license.html":{}}}],["display/index.html",{"_index":1531,"title":{},"body":{"index.html":{}}}],["displayedalarm",{"_index":917,"title":{"classes/DisplayedAlarm.html":{}},"body":{"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[0",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[1",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[10",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[11",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[12",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[13",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[14",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[15",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[16",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[17",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[18",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[19",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[2",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[20",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[21",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[22",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[3",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[4",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[5",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[6",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[7",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[8",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedalarm(alarm.asalarm(mockalarms[9",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["displayedcolumn",{"_index":1338,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["dist",{"_index":1557,"title":{},"body":{"index.html":{}}}],["distinguish",{"_index":1694,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":1586,"title":{},"body":{"license.html":{}}}],["django",{"_index":676,"title":{},"body":{"injectables/AlarmService.html":{},"dependencies.html":{}}}],["doc_url",{"_index":1124,"title":{},"body":{"classes/Iasio.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":206,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/ShelveModalComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["done",{"_index":1267,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["doubl",{"_index":1131,"title":{},"body":{"classes/Iasio.html":{}}}],["dure",{"_index":1663,"title":{},"body":{"license.html":{}}}],["dynam",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":746,"title":{},"body":{"injectables/AlarmService.html":{},"license.html":{}}}],["e2",{"_index":1566,"title":{},"body":{"index.html":{}}}],["each",{"_index":1655,"title":{},"body":{"license.html":{}}}],["effect",{"_index":1659,"title":{},"body":{"license.html":{}}}],["effort",{"_index":1631,"title":{},"body":{"license.html":{}}}],["element",{"_index":109,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["enabl",{"_index":270,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["end",{"_index":1565,"title":{},"body":{"index.html":{}}}],["engin",{"_index":1662,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":1632,"title":{},"body":{"license.html":{}}}],["entrycompon",{"_index":803,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":342,"title":{},"body":{"classes/Alarm.html":{}}}],["enumer",{"_index":1517,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":681,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.cdbapiurl",{"_index":889,"title":{},"body":{"injectables/CdbService.html":{}}}],["environment.websocketpath",{"_index":707,"title":{},"body":{"injectables/AlarmService.html":{}}}],["environments/environ",{"_index":682,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["error",{"_index":246,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{}}}],["etc",{"_index":1132,"title":{},"body":{"classes/Iasio.html":{},"components/ShelveModalComponent.html":{}}}],["evalu",{"_index":692,"title":{},"body":{"injectables/AlarmService.html":{}}}],["event",{"_index":15,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["eventemitt",{"_index":463,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["everyon",{"_index":1584,"title":{},"body":{"license.html":{}}}],["except",{"_index":741,"title":{},"body":{"injectables/AlarmService.html":{},"license.html":{}}}],["exclud",{"_index":1611,"title":{},"body":{"license.html":{}}}],["execut",{"_index":417,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"index.html":{},"license.html":{}}}],["expand",{"_index":458,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{}}}],["expand/collaps",{"_index":498,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["expect",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedfilteredtablerow",{"_index":1482,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["expectedtablerow",{"_index":1483,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["expectedtablerows[11",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[12",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[13",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[14",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[21",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expectedtablerows[4",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["explain",{"_index":1684,"title":{},"body":{"license.html":{}}}],["export",{"_index":91,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["extent",{"_index":1677,"title":{},"body":{"license.html":{}}}],["facil",{"_index":1625,"title":{},"body":{"license.html":{}}}],["factor",{"_index":878,"title":{},"body":{"injectables/CdbService.html":{}}}],["faith",{"_index":1630,"title":{},"body":{"license.html":{}}}],["fals",{"_index":80,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["feb",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fewer",{"_index":1648,"title":{},"body":{"license.html":{}}}],["field",{"_index":214,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":888,"title":{},"body":{"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["filter.replac",{"_index":1243,"title":{},"body":{"injectables/RoutingService.html":{}}}],["filter.split",{"_index":1441,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.tolowercas",{"_index":1446,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filter.trim",{"_index":1445,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtered_by_alarm",{"_index":886,"title":{},"body":{"injectables/CdbService.html":{}}}],["filterpred",{"_index":1339,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstr",{"_index":1340,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filterstring.tolowercase().split",{"_index":1381,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalu",{"_index":1421,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalue.replace('_",{"_index":1423,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["filtervalueforsetalarm",{"_index":1341,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["final",{"_index":196,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["find",{"_index":490,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["fix",{"_index":1245,"title":{},"body":{"injectables/RoutingService.html":{},"miscellaneous/variables.html":{}}}],["flag",{"_index":1560,"title":{},"body":{"index.html":{}}}],["flat",{"_index":455,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnod",{"_index":565,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.expand",{"_index":571,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.item",{"_index":569,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnode.level",{"_index":570,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatnodemap",{"_index":492,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flatten",{"_index":493,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol",{"_index":467,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":516,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["folder",{"_index":1538,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1537,"title":{},"body":{"index.html":{},"license.html":{}}}],["forkjoin",{"_index":892,"title":{},"body":{"injectables/CdbService.html":{}}}],["form",{"_index":154,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["format",{"_index":327,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["formbuild",{"_index":165,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["formcontrol",{"_index":226,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["formgroup",{"_index":222,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["formsmodul",{"_index":818,"title":{},"body":{"modules/AppModule.html":{}}}],["foundat",{"_index":1581,"title":{},"body":{"license.html":{}}}],["free",{"_index":1579,"title":{},"body":{"license.html":{}}}],["full",{"_index":848,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":181,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["further",{"_index":1569,"title":{},"body":{"index.html":{}}}],["futur",{"_index":1699,"title":{},"body":{"license.html":{}}}],["g",{"_index":1543,"title":{},"body":{"index.html":{}}}],["gener",{"_index":303,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"index.html":{},"license.html":{}}}],["get",{"_index":1355,"title":{"index.html":{},"license.html":{}},"body":{"components/TabularViewComponent.html":{}}}],["get(core_id",{"_index":640,"title":{},"body":{"injectables/AlarmService.html":{}}}],["get(url",{"_index":1017,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["getactionbuttontext",{"_index":1262,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["getalarm",{"_index":942,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getalarmdatafromcdbservic",{"_index":1344,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["getalarmdatafromcdbservice(core_id",{"_index":1353,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["getalarmdescript",{"_index":159,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{}}}],["getalarmdescription(alarmcoreid",{"_index":867,"title":{},"body":{"injectables/CdbService.html":{}}}],["getalarmlist",{"_index":613,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getalarmsiasiosdata",{"_index":861,"title":{},"body":{"injectables/CdbService.html":{}}}],["getalarmsinformationurl",{"_index":862,"title":{},"body":{"injectables/CdbService.html":{}}}],["getalarmsinformationurl(alarmcoreid",{"_index":873,"title":{},"body":{"injectables/CdbService.html":{}}}],["getalarmstatusord",{"_index":923,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getalarmstatusorder(valu",{"_index":931,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getalarmstatustagsstr",{"_index":924,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getalarmurl",{"_index":160,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["getbuttontooltiptext",{"_index":1248,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["getchildren",{"_index":531,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getconfigurationdata",{"_index":863,"title":{},"body":{"injectables/CdbService.html":{}}}],["getcontainerclass",{"_index":1292,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["getcoretimestampasd",{"_index":282,"title":{},"body":{"classes/Alarm.html":{}}}],["getdescript",{"_index":946,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getfilt",{"_index":1399,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["getimag",{"_index":406,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["getlevel",{"_index":526,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["getmissingack",{"_index":614,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getmissingacks(alarm_id",{"_index":644,"title":{},"body":{"injectables/AlarmService.html":{}}}],["getmissingacksinfo",{"_index":161,"title":{},"body":{"components/AckModalComponent.html":{}}}],["getmod",{"_index":956,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getmodeasstr",{"_index":283,"title":{},"body":{"classes/Alarm.html":{}}}],["getnam",{"_index":954,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getrefreshrateparamet",{"_index":864,"title":{},"body":{"injectables/CdbService.html":{}}}],["getstatechangetimestampasd",{"_index":284,"title":{},"body":{"classes/Alarm.html":{}}}],["getstatu",{"_index":959,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getsymbolstyl",{"_index":1293,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["getter",{"_index":961,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["gettimestamp",{"_index":339,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{}}}],["gettogglestatu",{"_index":1402,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["gettreedatafromalarm(alarm",{"_index":540,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["geturl",{"_index":950,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["getvalidityasstr",{"_index":285,"title":{},"body":{"classes/Alarm.html":{}}}],["getvalueasstr",{"_index":286,"title":{},"body":{"classes/Alarm.html":{}}}],["give",{"_index":1652,"title":{},"body":{"license.html":{}}}],["given",{"_index":525,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["global",{"_index":1082,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["gmt",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gnu",{"_index":1572,"title":{},"body":{"license.html":{}}}],["go",{"_index":267,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["good",{"_index":1629,"title":{},"body":{"license.html":{}}}],["gototablefilteredbi",{"_index":1049,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["gototablefilteredby(filt",{"_index":1057,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["govern",{"_index":1600,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":1597,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1708,"title":{},"body":{"modules.html":{}}}],["group.github.io/ia",{"_index":1530,"title":{},"body":{"index.html":{}}}],["hammerj",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":73,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["handleerror",{"_index":1010,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["handleerror(error",{"_index":1019,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["haschild",{"_index":533,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hasnocont",{"_index":538,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["hastag",{"_index":1294,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["hastag(tag",{"_index":1302,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["header",{"_index":1033,"title":{},"body":{"injectables/HttpClientService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["health",{"_index":123,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["help",{"_index":489,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"index.html":{}}}],["here",{"_index":742,"title":{},"body":{"injectables/AlarmService.html":{},"index.html":{}}}],["herein",{"_index":1596,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1324,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["high",{"_index":995,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["high_unreli",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":108,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["http",{"_index":625,"title":{},"body":{"injectables/AlarmService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"miscellaneous/variables.html":{}}}],["http://127.0.0.1:8000",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://127.0.0.1:8000/cdb",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1550,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":811,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientService.html":{}}}],["httpclientmodul",{"_index":810,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientservic",{"_index":623,"title":{"injectables/HttpClientService.html":{}},"body":{"injectables/AlarmService.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"coverage.html":{},"overview.html":{}}}],["httpheader",{"_index":1027,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httpoption",{"_index":1032,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["httprequest",{"_index":1021,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["https://fsf.org",{"_index":1583,"title":{},"body":{"license.html":{}}}],["https://integratedalarmsystem",{"_index":1529,"title":{},"body":{"index.html":{}}}],["https://www.alma.cl",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpurl",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hum",{"_index":1224,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["humid",{"_index":1195,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["humidityalarm",{"_index":1175,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["humidityalarmid",{"_index":1176,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["humidityimageset",{"_index":1177,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["humidityimageunreliableset",{"_index":1178,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["ia",{"_index":122,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["ias_health",{"_index":1085,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["ias_typ",{"_index":1125,"title":{},"body":{"classes/Iasio.html":{},"miscellaneous/variables.html":{}}}],["iasalarmsiasio",{"_index":855,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasconfigur",{"_index":856,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasconfigurationdata",{"_index":901,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasdataavail",{"_index":857,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["iasdisplay",{"_index":1519,"title":{},"body":{"index.html":{}}}],["iashealthoverviewcompon",{"_index":121,"title":{"components/IasHealthOverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iasio",{"_index":870,"title":{"classes/Iasio.html":{}},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iasio(iasio",{"_index":908,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasioalarmsurl",{"_index":858,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasiourl",{"_index":859,"title":{},"body":{"injectables/CdbService.html":{}}}],["iasmaterialmodul",{"_index":797,"title":{"modules/IasMaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["iasurl",{"_index":860,"title":{},"body":{"injectables/CdbService.html":{}}}],["icon",{"_index":401,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"miscellaneous/variables.html":{}}}],["iconset",{"_index":1046,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["iconunreliableset",{"_index":1047,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["id",{"_index":58,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{}}}],["identifi",{"_index":299,"title":{},"body":{"classes/Alarm.html":{},"injectables/CdbService.html":{},"coverage.html":{}}}],["imag",{"_index":407,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestous",{"_index":421,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.clear",{"_index":435,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.mainten",{"_index":432,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_crit",{"_index":443,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_high",{"_index":441,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_low",{"_index":437,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.set_medium",{"_index":439,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.shelv",{"_index":426,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagestouse.unknown",{"_index":429,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["imagesunreli",{"_index":408,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["implement",{"_index":19,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inc",{"_index":1582,"title":{},"body":{"license.html":{}}}],["includ",{"_index":1615,"title":{},"body":{"license.html":{}}}],["incorpor",{"_index":1589,"title":{},"body":{"license.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexofset",{"_index":1449,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["indic",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["inform",{"_index":177,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["init",{"_index":70,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/StatusViewComponent.html":{}}}],["initi",{"_index":65,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initializ",{"_index":880,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["inject",{"_index":48,"title":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{}},"body":{"components/AckButtonComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":1646,"title":{},"body":{"license.html":{}}}],["input",{"_index":39,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instal",{"_index":1535,"title":{},"body":{"index.html":{},"license.html":{}}}],["installdevelop",{"_index":1546,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":293,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/WikiButtonComponent.html":{}}}],["instanti",{"_index":170,"title":{},"body":{"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["instruct",{"_index":1524,"title":{},"body":{"index.html":{}}}],["integr",{"_index":781,"title":{},"body":{"components/AppComponent.html":{}}}],["interfac",{"_index":1603,"title":{},"body":{"license.html":{}}}],["intern",{"_index":929,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["internalobserv",{"_index":756,"title":{},"body":{"injectables/AlarmService.html":{}}}],["intervalobserv",{"_index":679,"title":{},"body":{"injectables/AlarmService.html":{}}}],["intervalobservable.create(1000",{"_index":757,"title":{},"body":{"injectables/AlarmService.html":{}}}],["invalid",{"_index":200,"title":{},"body":{"components/AckModalComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"miscellaneous/variables.html":{}}}],["invok",{"_index":1628,"title":{},"body":{"license.html":{}}}],["io_id",{"_index":895,"title":{},"body":{"injectables/CdbService.html":{},"classes/Iasio.html":{},"miscellaneous/variables.html":{}}}],["ionicon",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["iscompact",{"_index":767,"title":{},"body":{"components/AppComponent.html":{}}}],["isexpand",{"_index":529,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["isol",{"_index":1613,"title":{},"body":{"license.html":{}}}],["isubscript",{"_index":1070,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["isvalidalarm",{"_index":287,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidalarm(json",{"_index":333,"title":{},"body":{"classes/Alarm.html":{}}}],["isvalidiasio",{"_index":1128,"title":{},"body":{"classes/Iasio.html":{}}}],["isvalidiasio(json",{"_index":1137,"title":{},"body":{"classes/Iasio.html":{}}}],["item",{"_index":456,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"miscellaneous/variables.html":{}}}],["item.icon",{"_index":787,"title":{},"body":{"components/AppComponent.html":{}}}],["item.titl",{"_index":788,"title":{},"body":{"components/AppComponent.html":{}}}],["itself",{"_index":172,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["join",{"_index":972,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["jqueri",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":322,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{}}}],["json.hasownproperty('ack",{"_index":369,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_id",{"_index":363,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('core_timestamp",{"_index":366,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('depend",{"_index":371,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('doc_url",{"_index":1142,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('ias_typ",{"_index":1141,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('io_id",{"_index":1139,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('mod",{"_index":365,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('running_id",{"_index":364,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('shelv",{"_index":370,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('short_desc",{"_index":1140,"title":{},"body":{"classes/Iasio.html":{}}}],["json.hasownproperty('state_change_timestamp",{"_index":367,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valid",{"_index":368,"title":{},"body":{"classes/Alarm.html":{}}}],["json.hasownproperty('valu",{"_index":362,"title":{},"body":{"classes/Alarm.html":{}}}],["json['ack",{"_index":383,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_id",{"_index":377,"title":{},"body":{"classes/Alarm.html":{}}}],["json['core_timestamp",{"_index":380,"title":{},"body":{"classes/Alarm.html":{}}}],["json['depend",{"_index":385,"title":{},"body":{"classes/Alarm.html":{}}}],["json['doc_url",{"_index":1147,"title":{},"body":{"classes/Iasio.html":{}}}],["json['ias_typ",{"_index":1146,"title":{},"body":{"classes/Iasio.html":{}}}],["json['io_id",{"_index":1144,"title":{},"body":{"classes/Iasio.html":{}}}],["json['mod",{"_index":379,"title":{},"body":{"classes/Alarm.html":{}}}],["json['running_id",{"_index":378,"title":{},"body":{"classes/Alarm.html":{}}}],["json['shelv",{"_index":384,"title":{},"body":{"classes/Alarm.html":{}}}],["json['short_desc",{"_index":1145,"title":{},"body":{"classes/Iasio.html":{}}}],["json['state_change_timestamp",{"_index":381,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valid",{"_index":382,"title":{},"body":{"classes/Alarm.html":{}}}],["json['valu",{"_index":376,"title":{},"body":{"classes/Alarm.html":{}}}],["june",{"_index":1575,"title":{},"body":{"license.html":{}}}],["k",{"_index":553,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["karma",{"_index":1564,"title":{},"body":{"index.html":{}}}],["keep",{"_index":494,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["key",{"_index":257,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{}}}],["keyword",{"_index":1389,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["languag",{"_index":778,"title":{},"body":{"components/AppComponent.html":{}}}],["last",{"_index":330,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{}}}],["lastreceivedmessagetimestamp",{"_index":608,"title":{},"body":{"injectables/AlarmService.html":{}}}],["later",{"_index":564,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["layout",{"_index":1643,"title":{},"body":{"license.html":{}}}],["legend",{"_index":107,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["legend'},{'nam",{"_index":126,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["legend.component.css",{"_index":1153,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.css,legend.component.scss",{"_index":1149,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.html",{"_index":1150,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.scss",{"_index":1154,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend/legend.compon",{"_index":838,"title":{},"body":{"modules/AppModule.html":{}}}],["legendcompon",{"_index":125,"title":{"components/LegendComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["length",{"_index":1650,"title":{},"body":{"license.html":{}}}],["lesser",{"_index":1573,"title":{},"body":{"license.html":{}}}],["level",{"_index":459,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["lg",{"_index":103,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["librari",{"_index":1545,"title":{},"body":{"index.html":{},"license.html":{}}}],["licens",{"_index":1571,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":635,"title":{},"body":{"injectables/AlarmService.html":{}}}],["limit",{"_index":1641,"title":{},"body":{"license.html":{}}}],["line",{"_index":1649,"title":{},"body":{"license.html":{}}}],["link",{"_index":49,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["linux",{"_index":1527,"title":{},"body":{"index.html":{}}}],["list",{"_index":186,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["listen",{"_index":1056,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["liter",{"_index":670,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["load",{"_index":179,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["loadalarm",{"_index":36,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["loadtabl",{"_index":1345,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["local",{"_index":1406,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locale.date_format",{"_index":1410,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locale.timezon",{"_index":1412,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["locat",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":997,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["low_unreli",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["macro",{"_index":1645,"title":{},"body":{"license.html":{}}}],["made",{"_index":194,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"license.html":{}}}],["main",{"_index":762,"title":{},"body":{"components/AppComponent.html":{},"components/OverviewComponent.html":{},"components/StatusViewComponent.html":{}}}],["maint.svg",{"_index":1089,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["mainten",{"_index":347,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["maintenance_unreli",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":1602,"title":{},"body":{"license.html":{}}}],["manag",{"_index":59,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["manner",{"_index":1669,"title":{},"body":{"license.html":{}}}],["map",{"_index":487,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["marker",{"_index":400,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["master",{"_index":1533,"title":{},"body":{"index.html":{}}}],["matbuttonmodul",{"_index":1106,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matcardmodul",{"_index":1110,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["match",{"_index":147,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":1117,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["materi",{"_index":479,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/IasMaterialModule.html":{},"license.html":{}}}],["material.modul",{"_index":824,"title":{},"body":{"modules/AppModule.html":{}}}],["material.module.t",{"_index":1092,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["material/ia",{"_index":823,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{}}}],["maticonmodul",{"_index":1108,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matinputmodul",{"_index":1094,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matlistmodul",{"_index":1114,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matpaginatormodul",{"_index":1096,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1098,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsidenavmodul",{"_index":1112,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1100,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["matsort",{"_index":1392,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["matsortmodul",{"_index":1102,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattabl",{"_index":1396,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattabledatasourc",{"_index":1373,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["mattablemodul",{"_index":1104,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1119,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["mattreeflatdatasourc",{"_index":470,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":518,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflatten",{"_index":469,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreeflattener(this.transform",{"_index":511,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["mattreemodul",{"_index":1116,"title":{},"body":{"modules/IasMaterialModule.html":{}}}],["max_seconds_without_messag",{"_index":749,"title":{},"body":{"injectables/AlarmService.html":{}}}],["mean",{"_index":1610,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1636,"title":{},"body":{"license.html":{}}}],["mechan",{"_index":1671,"title":{},"body":{"license.html":{}}}],["medium",{"_index":996,"title":{},"body":{"classes/DisplayedAlarm.html":{},"miscellaneous/variables.html":{}}}],["medium_unreli",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mention",{"_index":225,"title":{},"body":{"components/AckModalComponent.html":{}}}],["menu",{"_index":780,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":224,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["method",{"_index":35,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["millisecondsdelta",{"_index":753,"title":{},"body":{"injectables/AlarmService.html":{}}}],["minim",{"_index":1609,"title":{},"body":{"license.html":{}}}],["miscellan",{"_index":1516,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":209,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{}}}],["missedack",{"_index":155,"title":{},"body":{"components/AckModalComponent.html":{}}}],["mm",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mock",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockalarm",{"_index":1471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockiasio",{"_index":1484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockimageset",{"_index":1473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockimageunreliableset",{"_index":1474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":18,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"modules/AppModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal'},{'nam",{"_index":114,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["modal.compon",{"_index":89,"title":{},"body":{"components/AckButtonComponent.html":{},"modules/AppModule.html":{},"components/ShelveButtonComponent.html":{}}}],["modal.component.css",{"_index":230,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.css,ack",{"_index":149,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.css,shelv",{"_index":1260,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.html",{"_index":151,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.scss",{"_index":150,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.t",{"_index":148,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:102",{"_index":184,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:107",{"_index":1276,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:123",{"_index":216,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:131",{"_index":1266,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:132",{"_index":202,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:139",{"_index":1270,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:140",{"_index":203,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:147",{"_index":199,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.ts:155",{"_index":1269,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:156",{"_index":207,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:23",{"_index":183,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.ts:28",{"_index":220,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["modal.component.ts:33",{"_index":223,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:38",{"_index":169,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:39",{"_index":1277,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:49",{"_index":219,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:50",{"_index":1271,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:60",{"_index":211,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:61",{"_index":1273,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:72",{"_index":191,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:73",{"_index":1275,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal.component.ts:80",{"_index":188,"title":{},"body":{"components/AckModalComponent.html":{}}}],["modal.component.ts:84",{"_index":1274,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["modal/ack",{"_index":88,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["modal/shelv",{"_index":839,"title":{},"body":{"modules/AppModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"coverage.html":{}}}],["modalservic",{"_index":44,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["mode",{"_index":277,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"components/LegendComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":418,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["modif",{"_index":1624,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":491,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"license.html":{}}}],["modul",{"_index":789,"title":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":1122,"title":{},"body":{"classes/Iasio.html":{}}}],["more",{"_index":543,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/OverviewComponent.html":{},"index.html":{}}}],["multipl",{"_index":508,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["multipli",{"_index":877,"title":{},"body":{"injectables/CdbService.html":{}}}],["name",{"_index":52,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{}}}],["navig",{"_index":1234,"title":{},"body":{"injectables/RoutingService.html":{},"index.html":{}}}],["nbsp",{"_index":1458,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["necessari",{"_index":1678,"title":{},"body":{"license.html":{}}}],["need",{"_index":940,"title":{},"body":{"classes/DisplayedAlarm.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":488,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nestednodemap",{"_index":496,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["network",{"_index":1171,"title":{},"body":{"components/OverviewComponent.html":{}}}],["new",{"_index":292,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":84,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"modules/AppModule.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1346,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["ngbactivemod",{"_index":164,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["ngbmodal",{"_index":45,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ngbmodul",{"_index":817,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodule.forroot",{"_index":851,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":809,"title":{},"body":{"modules/AppModule.html":{},"modules/IasMaterialModule.html":{}}}],["ngondestroy",{"_index":1050,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["ngoninit",{"_index":37,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ngx",{"_index":228,"title":{},"body":{"components/AckModalComponent.html":{},"modules/AppModule.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodul",{"_index":820,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnerservic",{"_index":168,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["noalarmstoack",{"_index":251,"title":{},"body":{"components/AckModalComponent.html":{}}}],["node",{"_index":457,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.children",{"_index":559,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.expand",{"_index":530,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.item",{"_index":556,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["node.level",{"_index":527,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["nodej",{"_index":1539,"title":{},"body":{"index.html":{}}}],["non",{"_index":633,"title":{},"body":{"injectables/AlarmService.html":{}}}],["none",{"_index":1638,"title":{},"body":{"license.html":{}}}],["normal",{"_index":502,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["noselecteddescendants(nod",{"_index":585,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["note",{"_index":632,"title":{},"body":{"injectables/AlarmService.html":{},"index.html":{}}}],["notic",{"_index":1654,"title":{},"body":{"license.html":{}}}],["notif",{"_index":661,"title":{},"body":{"injectables/AlarmService.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["notifi",{"_index":884,"title":{},"body":{"injectables/CdbService.html":{},"components/TabularViewComponent.html":{}}}],["now",{"_index":752,"title":{},"body":{"injectables/AlarmService.html":{}}}],["npm",{"_index":1540,"title":{},"body":{"index.html":{}}}],["null",{"_index":233,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["number",{"_index":208,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"license.html":{}}}],["numer",{"_index":1642,"title":{},"body":{"license.html":{}}}],["obj",{"_index":651,"title":{},"body":{"injectables/AlarmService.html":{}}}],["object",{"_index":56,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.assign(thi",{"_index":361,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{}}}],["object.entries(respons",{"_index":258,"title":{},"body":{"components/AckModalComponent.html":{}}}],["object.keys(this.alarmservice.alarms).map(function(key",{"_index":1430,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["observ",{"_index":473,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["observableforkjoin",{"_index":893,"title":{},"body":{"injectables/CdbService.html":{}}}],["occur",{"_index":1029,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["ofobserv",{"_index":472,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["ofobservable(node.children",{"_index":532,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["old",{"_index":646,"title":{},"body":{"injectables/AlarmService.html":{}}}],["on",{"_index":544,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["on/off",{"_index":1363,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["onclick",{"_index":38,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["onclick(ev",{"_index":71,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["ondestroy",{"_index":1042,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["open",{"_index":16,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/AlarmService.html":{},"components/ShelveButtonComponent.html":{},"components/WikiButtonComponent.html":{}}}],["oper",{"_index":269,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["operationalmod",{"_index":305,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["operationalmode.mainten",{"_index":430,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["operationalmode.shuttedown",{"_index":431,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["operationalmode.unknown",{"_index":428,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["operationalmode[this.mod",{"_index":392,"title":{},"body":{"classes/Alarm.html":{}}}],["option",{"_index":54,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["order",{"_index":937,"title":{},"body":{"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{}}}],["ot",{"_index":1352,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["otherwis",{"_index":1604,"title":{},"body":{"license.html":{}}}],["out",{"_index":801,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":464,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["overview",{"_index":128,"title":{"overview.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"overview.html":{}}}],["overview'},{'nam",{"_index":124,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["overview.compon",{"_index":843,"title":{},"body":{"modules/AppModule.html":{}}}],["overview.component.css",{"_index":1043,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewComponent.html":{}}}],["overview.component.html",{"_index":1044,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewComponent.html":{}}}],["overview.component.t",{"_index":1040,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:100",{"_index":1058,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["overview.component.ts:20",{"_index":1072,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["overview.component.ts:23",{"_index":1073,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["overview.component.ts:26",{"_index":1068,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["overview.component.ts:29",{"_index":1069,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["overview.component.ts:32",{"_index":1051,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["overview.component.ts:48",{"_index":1067,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["overview.component.ts:60",{"_index":1064,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["overview.component.ts:67",{"_index":1055,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["overview/ia",{"_index":842,"title":{},"body":{"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"coverage.html":{}}}],["overview/overview.compon",{"_index":831,"title":{},"body":{"modules/AppModule.html":{}}}],["overviewcardcompon",{"_index":127,"title":{"components/OverviewCardComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewcompon",{"_index":130,"title":{"components/OverviewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["overviewweathercardcontentcompon",{"_index":131,"title":{"components/OverviewWeatherCardContentComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["packag",{"_index":1489,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1456,"title":{},"body":{"components/WikiButtonComponent.html":{}}}],["par",{"_index":739,"title":{},"body":{"injectables/AlarmService.html":{}}}],["param",{"_index":93,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["paramet",{"_index":50,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["parent",{"_index":308,"title":{},"body":{"classes/Alarm.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["pars['broadcastfactor",{"_index":751,"title":{},"body":{"injectables/AlarmService.html":{}}}],["pars['refreshr",{"_index":750,"title":{},"body":{"injectables/AlarmService.html":{}}}],["part",{"_index":580,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["particular",{"_index":1608,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1242,"title":{},"body":{"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["path",{"_index":845,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":847,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":696,"title":{},"body":{"injectables/AlarmService.html":{}}}],["payload.data",{"_index":701,"title":{},"body":{"injectables/AlarmService.html":{}}}],["perform",{"_index":193,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{},"license.html":{}}}],["period",{"_index":731,"title":{},"body":{"injectables/AlarmService.html":{}}}],["perman",{"_index":1703,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":1594,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1585,"title":{},"body":{"license.html":{}}}],["pk",{"_index":372,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["place",{"_index":934,"title":{},"body":{"classes/DisplayedAlarm.html":{},"license.html":{}}}],["pleas",{"_index":1532,"title":{},"body":{"index.html":{}}}],["point",{"_index":1123,"title":{},"body":{"classes/Iasio.html":{}}}],["popper.j",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["portion",{"_index":1612,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":354,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["post",{"_index":1011,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["post(url",{"_index":1023,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["power",{"_index":1170,"title":{},"body":{"components/OverviewComponent.html":{}}}],["present",{"_index":1673,"title":{},"body":{"license.html":{}}}],["primari",{"_index":373,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["prioriti",{"_index":932,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["priorities.indexof(prior",{"_index":998,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["privat",{"_index":31,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["problem",{"_index":1692,"title":{},"body":{"license.html":{}}}],["process",{"_index":1306,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["prod",{"_index":1559,"title":{},"body":{"index.html":{}}}],["produc",{"_index":1607,"title":{},"body":{"license.html":{}}}],["product",{"_index":1561,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["program",{"_index":1617,"title":{},"body":{"license.html":{}}}],["project",{"_index":1520,"title":{},"body":{"index.html":{}}}],["promin",{"_index":1653,"title":{},"body":{"license.html":{}}}],["promis",{"_index":1022,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["promise.reject(error.messag",{"_index":1031,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["properli",{"_index":1676,"title":{},"body":{"license.html":{}}}],["properti",{"_index":30,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["protractor",{"_index":1567,"title":{},"body":{"index.html":{}}}],["provid",{"_index":178,"title":{},"body":{"components/AckModalComponent.html":{},"modules/AppModule.html":{},"components/ShelveModalComponent.html":{},"license.html":{},"overview.html":{}}}],["proxi",{"_index":1697,"title":{},"body":{"license.html":{}}}],["proxy'",{"_index":1701,"title":{},"body":{"license.html":{}}}],["public",{"_index":33,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["publish",{"_index":1686,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":403,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"license.html":{}}}],["push",{"_index":1307,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["put",{"_index":1012,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["put(url",{"_index":1025,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["rate",{"_index":738,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["re",{"_index":899,"title":{},"body":{"injectables/CdbService.html":{}}}],["reactiveformsmodul",{"_index":819,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":521,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/TabularViewComponent.html":{}}}],["readalarmmessag",{"_index":615,"title":{},"body":{"injectables/AlarmService.html":{}}}],["readalarmmessage(act",{"_index":650,"title":{},"body":{"injectables/AlarmService.html":{}}}],["readalarmmessageslist",{"_index":616,"title":{},"body":{"injectables/AlarmService.html":{}}}],["readalarmmessageslist(alarmslist",{"_index":654,"title":{},"body":{"injectables/AlarmService.html":{}}}],["readm",{"_index":1570,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":64,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["recombin",{"_index":1667,"title":{},"body":{"license.html":{}}}],["record",{"_index":563,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["recurs",{"_index":500,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["red",{"_index":1284,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["redirect",{"_index":1052,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["redirectto",{"_index":846,"title":{},"body":{"modules/AppModule.html":{}}}],["refer",{"_index":171,"title":{},"body":{"components/AckModalComponent.html":{},"classes/DisplayedAlarm.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["refresh",{"_index":737,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["refreshr",{"_index":747,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["registri",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registries/unshelv",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relat",{"_index":63,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/ShelveButtonComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["releas",{"_index":1528,"title":{},"body":{"index.html":{}}}],["reliabl",{"_index":356,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{},"components/LegendComponent.html":{},"miscellaneous/enumerations.html":{}}}],["relink",{"_index":1668,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1552,"title":{},"body":{"index.html":{}}}],["remain",{"_index":1635,"title":{},"body":{"license.html":{}}}],["repetit",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repres",{"_index":315,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/Iasio.html":{},"components/StatusViewComponent.html":{}}}],["represent",{"_index":326,"title":{},"body":{"classes/Alarm.html":{},"classes/DisplayedAlarm.html":{}}}],["reproduc",{"_index":1618,"title":{},"body":{"license.html":{}}}],["request",{"_index":175,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{},"miscellaneous/variables.html":{}}}],["requir",{"_index":1093,"title":{},"body":{"modules/IasMaterialModule.html":{},"index.html":{},"license.html":{}}}],["res[0",{"_index":897,"title":{},"body":{"injectables/CdbService.html":{}}}],["reset",{"_index":800,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respect",{"_index":1190,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["respons",{"_index":189,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{}}}],["response['statu",{"_index":719,"title":{},"body":{"injectables/AlarmService.html":{}}}],["restrict",{"_index":1660,"title":{},"body":{"license.html":{}}}],["result",{"_index":146,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":1361,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["retun",{"_index":524,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["return",{"_index":67,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["reusabl",{"_index":1158,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/StatusViewComponent.html":{}}}],["revers",{"_index":1661,"title":{},"body":{"license.html":{}}}],["review",{"_index":634,"title":{},"body":{"injectables/AlarmService.html":{}}}],["revis",{"_index":1685,"title":{},"body":{"license.html":{}}}],["root",{"_index":764,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["root'},{'nam",{"_index":120,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["rout",{"_index":814,"title":{},"body":{"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/TabularViewComponent.html":{}}}],["router",{"_index":1238,"title":{},"body":{"injectables/RoutingService.html":{}}}],["routermodul",{"_index":813,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":850,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.servic",{"_index":825,"title":{},"body":{"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["routingservic",{"_index":798,"title":{"injectables/RoutingService.html":{}},"body":{"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"coverage.html":{},"overview.html":{}}}],["row",{"_index":76,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1547,"title":{},"body":{"index.html":{},"license.html":{}}}],["running_id",{"_index":278,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":475,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{},"dependencies.html":{}}}],["rxjs/observable/intervalobserv",{"_index":680,"title":{},"body":{"injectables/AlarmService.html":{}}}],["rxjs/oper",{"_index":678,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{}}}],["rxjs/rx",{"_index":894,"title":{},"body":{"injectables/CdbService.html":{}}}],["s",{"_index":263,"title":{},"body":{"components/AckModalComponent.html":{}}}],["same",{"_index":495,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["scaffold",{"_index":1554,"title":{},"body":{"index.html":{}}}],["search",{"_index":1304,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["section",{"_index":1619,"title":{},"body":{"license.html":{}}}],["select",{"_index":182,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{}}}],["select/deselect",{"_index":588,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selected.foreach",{"_index":597,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectedalarm",{"_index":482,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel",{"_index":465,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selectionmodel(tru",{"_index":507,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["self",{"_index":1428,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["self.alarmservice.alarms[key",{"_index":1433,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["self.getalarmdatafromcdbservice(self.alarmservice.alarms[key].core_id",{"_index":1432,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["send",{"_index":174,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/ShelveModalComponent.html":{}}}],["sendsuccess",{"_index":1263,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["sendsuccessful(alarm",{"_index":1272,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["sent",{"_index":1268,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["separ",{"_index":1062,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/StatusViewComponent.html":{}}}],["serv",{"_index":1548,"title":{},"body":{"index.html":{}}}],["server",{"_index":1497,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["servic",{"_index":55,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["set",{"_index":317,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["set_crit",{"_index":360,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set_high",{"_index":359,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set_low",{"_index":357,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["set_medium",{"_index":358,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["setalarm(alarm",{"_index":944,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["setdescription(descript",{"_index":948,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["seturl(url",{"_index":952,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["shall",{"_index":1700,"title":{},"body":{"license.html":{}}}],["share",{"_index":1670,"title":{},"body":{"license.html":{}}}],["shelv",{"_index":136,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["shelve/unshelv",{"_index":1250,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["shelve_api",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shelvealarm",{"_index":617,"title":{},"body":{"injectables/AlarmService.html":{}}}],["shelvealarm(alarm_id",{"_index":658,"title":{},"body":{"injectables/AlarmService.html":{}}}],["shelvebuttoncompon",{"_index":135,"title":{"components/ShelveButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shelved/unshelv",{"_index":1265,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["shelved_unreli",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shelvemod",{"_index":1255,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["shelvemodal.componentinstance.alarm",{"_index":1257,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["shelvemodalcompon",{"_index":137,"title":{"components/ShelveModalComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["short",{"_index":869,"title":{},"body":{"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/TabularViewComponent.html":{}}}],["short_desc",{"_index":1126,"title":{},"body":{"classes/Iasio.html":{},"miscellaneous/variables.html":{}}}],["show",{"_index":1159,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["shutteddown",{"_index":1155,"title":{},"body":{"components/LegendComponent.html":{}}}],["shuttedown",{"_index":345,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":1681,"title":{},"body":{"license.html":{}}}],["sidebar",{"_index":775,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenav",{"_index":776,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenavitem",{"_index":768,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":1687,"title":{},"body":{"license.html":{}}}],["singl",{"_index":1682,"title":{},"body":{"license.html":{}}}],["size",{"_index":102,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["slide",{"_index":1368,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["small",{"_index":1644,"title":{},"body":{"license.html":{}}}],["softwar",{"_index":1580,"title":{},"body":{"license.html":{}}}],["sort",{"_index":935,"title":{},"body":{"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"classes/Iasio.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{}}}],["space",{"_index":1061,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["special",{"_index":1053,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["specif",{"_index":1166,"title":{},"body":{"components/OverviewComponent.html":{},"components/StatusViewComponent.html":{}}}],["specifi",{"_index":1060,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"license.html":{}}}],["speed",{"_index":1206,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["spinner",{"_index":180,"title":{},"body":{"components/AckModalComponent.html":{},"modules/AppModule.html":{},"modules/IasMaterialModule.html":{},"components/ShelveModalComponent.html":{},"dependencies.html":{}}}],["spinnerservic",{"_index":167,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["spirit",{"_index":1688,"title":{},"body":{"license.html":{}}}],["src/.../alarm.t",{"_index":1518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fixtures.t",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.t",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/ack",{"_index":8,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["src/app/alarm.service.t",{"_index":602,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{}}}],["src/app/alarm.service.ts:109",{"_index":637,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:123",{"_index":641,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:133",{"_index":627,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:155",{"_index":645,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:171",{"_index":659,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:194",{"_index":665,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:218",{"_index":642,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:230",{"_index":652,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:24",{"_index":675,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:245",{"_index":655,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:258",{"_index":662,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:270",{"_index":666,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:279",{"_index":631,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:30",{"_index":673,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:306",{"_index":660,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:35",{"_index":671,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:41",{"_index":668,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:47",{"_index":624,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:73",{"_index":630,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.service.ts:82",{"_index":649,"title":{},"body":{"injectables/AlarmService.html":{}}}],["src/app/alarm.t",{"_index":274,"title":{},"body":{"classes/Alarm.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/alarm.ts:110",{"_index":320,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:135",{"_index":340,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:144",{"_index":329,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:157",{"_index":318,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:167",{"_index":328,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:176",{"_index":332,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:185",{"_index":331,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:194",{"_index":324,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:209",{"_index":336,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:219",{"_index":337,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:43",{"_index":314,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:46",{"_index":298,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:49",{"_index":307,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:52",{"_index":306,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:55",{"_index":313,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:58",{"_index":301,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:61",{"_index":310,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:64",{"_index":297,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:67",{"_index":309,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:70",{"_index":290,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm.ts:88",{"_index":334,"title":{},"body":{"classes/Alarm.html":{}}}],["src/app/alarm/alarm.component.t",{"_index":399,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"coverage.html":{}}}],["src/app/alarm/alarm.component.ts:12",{"_index":449,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/alarm/alarm.component.ts:15",{"_index":450,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/alarm/alarm.component.ts:18",{"_index":448,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/alarm/alarm.component.ts:21",{"_index":447,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/alarm/alarm.component.ts:24",{"_index":451,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/alarm/alarm.component.ts:27",{"_index":446,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/alarm/alarm.component.ts:30",{"_index":444,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/alarm/alarm.component.ts:56",{"_index":411,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/alarm/alarm.component.ts:61",{"_index":413,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/alarm/alarm.component.ts:66",{"_index":409,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/alarm/alarm.component.ts:76",{"_index":416,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/alarm/alarm.component.ts:82",{"_index":414,"title":{},"body":{"components/AlarmComponent.html":{}}}],["src/app/alarm/alarm.component.ts:9",{"_index":445,"title":{},"body":{"classes/AlarmImageSet.html":{}}}],["src/app/alarm/fixtures.t",{"_index":1470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":761,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":783,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":777,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":779,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":771,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":772,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":773,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":802,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/cdb.service.t",{"_index":853,"title":{},"body":{"injectables/CdbService.html":{},"coverage.html":{}}}],["src/app/cdb.service.ts:103",{"_index":868,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:115",{"_index":874,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:19",{"_index":891,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:22",{"_index":890,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:25",{"_index":887,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:30",{"_index":883,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:35",{"_index":881,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:40",{"_index":866,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:54",{"_index":879,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:74",{"_index":875,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:82",{"_index":872,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/cdb.service.ts:91",{"_index":876,"title":{},"body":{"injectables/CdbService.html":{}}}],["src/app/display",{"_index":918,"title":{},"body":{"classes/DisplayedAlarm.html":{},"coverage.html":{}}}],["src/app/http",{"_index":1005,"title":{},"body":{"injectables/HttpClientService.html":{},"coverage.html":{}}}],["src/app/ia",{"_index":1039,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"modules/IasMaterialModule.html":{},"coverage.html":{}}}],["src/app/iasio.t",{"_index":1121,"title":{},"body":{"classes/Iasio.html":{},"coverage.html":{}}}],["src/app/iasio.ts:10",{"_index":1134,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/iasio.ts:13",{"_index":1130,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/iasio.ts:16",{"_index":1129,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/iasio.ts:34",{"_index":1138,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/iasio.ts:50",{"_index":1136,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/iasio.ts:7",{"_index":1133,"title":{},"body":{"classes/Iasio.html":{}}}],["src/app/legend/legend.component.t",{"_index":1148,"title":{},"body":{"components/LegendComponent.html":{},"coverage.html":{}}}],["src/app/legend/legend.component.ts:11",{"_index":1151,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/legend/legend.component.ts:17",{"_index":1152,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/overview",{"_index":1156,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.component.t",{"_index":1165,"title":{},"body":{"components/OverviewComponent.html":{},"coverage.html":{}}}],["src/app/overview/overview.component.ts:11",{"_index":1167,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/overview/overview.component.ts:17",{"_index":1168,"title":{},"body":{"components/OverviewComponent.html":{}}}],["src/app/routing.service.t",{"_index":1232,"title":{},"body":{"injectables/RoutingService.html":{},"coverage.html":{}}}],["src/app/routing.service.ts:20",{"_index":1241,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/routing.service.ts:8",{"_index":1239,"title":{},"body":{"injectables/RoutingService.html":{}}}],["src/app/settings.t",{"_index":1478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shelv",{"_index":1247,"title":{},"body":{"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"coverage.html":{}}}],["src/app/statu",{"_index":1287,"title":{},"body":{"components/StatusViewComponent.html":{},"coverage.html":{}}}],["src/app/tabular",{"_index":1329,"title":{},"body":{"components/TabularViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/wiki",{"_index":1454,"title":{},"body":{"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":1486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssuccesfulli",{"_index":195,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["start",{"_index":638,"title":{"index.html":{},"license.html":{}},"body":{"injectables/AlarmService.html":{},"components/TabularViewComponent.html":{}}}],["startlastreceivedmessagetimestampcheck",{"_index":618,"title":{},"body":{"injectables/AlarmService.html":{}}}],["startup",{"_index":343,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/enumerations.html":{}}}],["state",{"_index":312,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["state_change_timestamp",{"_index":279,"title":{},"body":{"classes/Alarm.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":1460,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["static",{"_index":280,"title":{},"body":{"classes/Alarm.html":{},"classes/Iasio.html":{}}}],["statu",{"_index":139,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["status",{"_index":419,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["statusviewcompon",{"_index":138,"title":{"components/StatusViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["still",{"_index":1633,"title":{},"body":{"license.html":{}}}],["storageitem",{"_index":1479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":882,"title":{},"body":{"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":669,"title":{},"body":{"injectables/AlarmService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["streamnam",{"_index":697,"title":{},"body":{"injectables/AlarmService.html":{}}}],["string",{"_index":60,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["structur",{"_index":550,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["style",{"_index":1299,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["styleurl",{"_index":25,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["sub",{"_index":551,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["subclass",{"_index":1605,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":759,"title":{},"body":{"injectables/AlarmService.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["subscribe((data",{"_index":900,"title":{},"body":{"injectables/CdbService.html":{}}}],["subscript",{"_index":1071,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["subscriptionlik",{"_index":1074,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["subsystem",{"_index":1160,"title":{},"body":{"components/OverviewCardComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["subtre",{"_index":499,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["success",{"_index":237,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["sucessfulli",{"_index":198,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["such",{"_index":1639,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":1541,"title":{},"body":{"index.html":{}}}],["suitabl",{"_index":1666,"title":{},"body":{"license.html":{}}}],["summar",{"_index":1041,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["supplement",{"_index":1592,"title":{},"body":{"license.html":{}}}],["suppli",{"_index":1626,"title":{},"body":{"license.html":{}}}],["support",{"_index":1705,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1706,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1369,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["symbol",{"_index":1301,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["system",{"_index":782,"title":{},"body":{"components/AppComponent.html":{},"injectables/CdbService.html":{},"license.html":{}}}],["tabl",{"_index":75,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table'",{"_index":1358,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["tablewithfilt",{"_index":1236,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tablewithfilter(filt",{"_index":1240,"title":{},"body":{"injectables/RoutingService.html":{}}}],["tabular",{"_index":142,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tabular/:filt",{"_index":849,"title":{},"body":{"modules/AppModule.html":{}}}],["tabularviewcompon",{"_index":141,"title":{"components/TabularViewComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":939,"title":{},"body":{"classes/DisplayedAlarm.html":{},"components/StatusViewComponent.html":{}}}],["tags.join",{"_index":993,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.length",{"_index":1309,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["tags.push('ack",{"_index":991,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push('shelv",{"_index":992,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(alarm.getmodeasstr",{"_index":987,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(ord",{"_index":986,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(prior",{"_index":989,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(valid",{"_index":990,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["tags.push(valu",{"_index":988,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["taken",{"_index":1657,"title":{},"body":{"license.html":{}}}],["target",{"_index":648,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/HttpClientService.html":{}}}],["temp",{"_index":1226,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["tempalarm",{"_index":1179,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["tempalarmid",{"_index":1180,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["temperatur",{"_index":1200,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["tempimageset",{"_index":1181,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["tempimageunreliableset",{"_index":1182,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"license.html":{}}}],["templateurl",{"_index":27,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["ten",{"_index":1647,"title":{},"body":{"license.html":{}}}],["term",{"_index":1590,"title":{},"body":{"license.html":{}}}],["test",{"_index":1386,"title":{},"body":{"components/TabularViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":261,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["textfield",{"_index":1387,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this._alarm",{"_index":963,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._alarm.core_id",{"_index":969,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._alarm.getmodeasstr",{"_index":970,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._alarm.timestamp",{"_index":971,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._descript",{"_index":964,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this._setfilteractiv",{"_index":1443,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this._url",{"_index":965,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.ack",{"_index":390,"title":{},"body":{"classes/Alarm.html":{}}}],["this.acklist",{"_index":595,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acklist.push(flatnode.item",{"_index":598,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.acksuccessful(respons",{"_index":244,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.activemodal.clos",{"_index":238,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.alarm",{"_index":95,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"components/IasHealthOverviewComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.alarm.ack",{"_index":98,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.alarm.core_id",{"_index":242,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.alarm.mod",{"_index":427,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.alarm.shelv",{"_index":425,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.alarm.valid",{"_index":423,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.alarm.valu",{"_index":433,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.alarmchangestream.next(ani",{"_index":687,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarmid",{"_index":1079,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["this.alarms.hasownproperty(core_id",{"_index":732,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms[alarm.core_id",{"_index":728,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms[core_id",{"_index":711,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarms[core_id]['valid",{"_index":733,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.alarmservice.acknowledgealarm",{"_index":241,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.alarmservice.alarmchangestream.subscribe(notif",{"_index":1078,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["this.alarmservice.get(notif",{"_index":1218,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.alarmservice.get(this.alarm_id",{"_index":96,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.alarmservice.get(this.alarmid",{"_index":1080,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["this.alarmservice.get(this.humidityalarmid",{"_index":1212,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.alarmservice.get(this.tempalarmid",{"_index":1214,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.alarmservice.get(this.windsalarmid",{"_index":1216,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.alarmservice.getmissingacks(this.alarm.core_id).subscrib",{"_index":256,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.alarmservice.initi",{"_index":784,"title":{},"body":{"components/AppComponent.html":{}}}],["this.alarmservice.shelvealarm",{"_index":1282,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.alarmservice.unshelvealarm",{"_index":1286,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.alarmservicesubscript",{"_index":1077,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["this.alarmservicesubscription.unsubscrib",{"_index":1081,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["this.alarmslist",{"_index":1429,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.alarmstoack",{"_index":248,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.alarmstoack.length",{"_index":252,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.alarmstoackfromselection.emit(this.acklist",{"_index":599,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.alarmtag",{"_index":1311,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmtags.indexof(tag",{"_index":1327,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.alarmtags.push(tag",{"_index":1310,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.applyfilter(filtervalu",{"_index":1424,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.buildfiletree(this.gettreedatafromalarm(this.selectedalarm",{"_index":523,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.buildfiletree(v",{"_index":560,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.canacknowledg",{"_index":97,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.cansend",{"_index":1281,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.cdbservice.getalarmdescription(core_id",{"_index":1437,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.cdbservice.getalarmdescription(this.alarm.core_id",{"_index":249,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.cdbservice.getalarmsinformationurl(core_id",{"_index":1438,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.cdbservice.getalarmsinformationurl(this.alarm.core_id",{"_index":250,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.cdbservice.getrefreshrateparamet",{"_index":744,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.cdbservice.iasdataavailable.subscrib",{"_index":1418,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.cdbservice.initi",{"_index":694,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.cdbservicesubscript",{"_index":1417,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.cdbservicesubscription.unsubscrib",{"_index":1427,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.changealarms('al",{"_index":730,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.changealarms(alarm.core_id",{"_index":729,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.checklistselection.deselect(...descend",{"_index":593,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.deselect(nod",{"_index":586,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(child",{"_index":579,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.isselected(nod",{"_index":591,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.onchange.subscribe(data",{"_index":519,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select",{"_index":596,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(...descend",{"_index":592,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.select(nod",{"_index":584,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.checklistselection.toggle(nod",{"_index":590,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.comparecurrentandlastreceivedmessagetimestamp",{"_index":760,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.connect",{"_index":689,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.connectionstatusstream.next(fals",{"_index":755,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.connectionstatusstream.next(tru",{"_index":691,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.connectionstatusstream.subscrib",{"_index":685,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.core_timestamp",{"_index":397,"title":{},"body":{"classes/Alarm.html":{}}}],["this.datasourc",{"_index":517,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.data",{"_index":522,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/TabularViewComponent.html":{}}}],["this.datasource.filt",{"_index":1447,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.filterpred",{"_index":1415,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.datasource.sort",{"_index":1425,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.dateformat",{"_index":1409,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.definealarmsandicon",{"_index":1076,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["this.definealarmsandimag",{"_index":1210,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.descendantsallselected(nod",{"_index":583,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.descript",{"_index":975,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.filterpred",{"_index":1416,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstr",{"_index":1439,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.filterstring.split",{"_index":1448,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.flatnodemap.set(flatnod",{"_index":572,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.form",{"_index":231,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.form.get('message').value).subscrib",{"_index":243,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.form.valid",{"_index":240,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.formbuilder.group",{"_index":232,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.get(alarm_id",{"_index":721,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.get(id",{"_index":714,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.getalarmlist",{"_index":693,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.getalarmsiasiosdata().pipe(map((r",{"_index":898,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getalarmstatusorder(valu",{"_index":985,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.getalarmstatustagsstr",{"_index":973,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.getchildren",{"_index":514,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getconfigurationdata().pipe(map((r",{"_index":896,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.getlevel",{"_index":512,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.getmissingacksinfo",{"_index":235,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.getstatechangetimestampasd",{"_index":386,"title":{},"body":{"classes/Alarm.html":{}}}],["this.hastag('ack",{"_index":1320,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('clear",{"_index":1317,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('mainten",{"_index":1314,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('set",{"_index":1318,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('shelv",{"_index":1312,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('shuttedown",{"_index":1315,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('unknown",{"_index":1316,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.hastag('unreli",{"_index":1319,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.http.delete(url",{"_index":1038,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.get(url",{"_index":1035,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.post(url",{"_index":1036,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.http.put(url",{"_index":1037,"title":{},"body":{"injectables/HttpClientService.html":{}}}],["this.httpclientservice.get(this.iasioalarmsurl",{"_index":911,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(this.iasurl",{"_index":910,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.httpclientservice.get(url).pip",{"_index":717,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.httpclientservice.post(backendurls.shelve_api",{"_index":718,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.httpclientservice.put(backendurls.tickets_multiple_ack",{"_index":712,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.httpclientservice.put(backendurls.unshelve_api",{"_index":723,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.humidityalarm",{"_index":1211,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.humidityalarmid",{"_index":1219,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.humidityimageset",{"_index":1223,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.humidityimageunreliableset",{"_index":1229,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.iasalarmsiasio",{"_index":914,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasalarmsiasios[alarmcoreid].doc_url",{"_index":916,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasalarmsiasios[alarmcoreid].short_desc",{"_index":915,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasalarmsiasios[iasio.io_id",{"_index":907,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfigur",{"_index":905,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['broadcast_factor",{"_index":913,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasconfiguration['refresh_r",{"_index":912,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.getvalu",{"_index":1436,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.iasdataavailable.next(tru",{"_index":909,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iasdataavailable.next(valu",{"_index":1419,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.iasiourl",{"_index":885,"title":{},"body":{"injectables/CdbService.html":{}}}],["this.iconset",{"_index":1083,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["this.iconunreliableset",{"_index":1090,"title":{},"body":{"components/IasHealthOverviewComponent.html":{}}}],["this.imag",{"_index":422,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.imagesunreli",{"_index":424,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.imagesunreliable.unknown",{"_index":420,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["this.iscompact",{"_index":786,"title":{},"body":{"components/AppComponent.html":{}}}],["this.iscompacted=!this.iscompact",{"_index":785,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isexpand",{"_index":513,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.isvalidalarm(json",{"_index":375,"title":{},"body":{"classes/Alarm.html":{}}}],["this.isvalidiasio(json",{"_index":1143,"title":{},"body":{"classes/Iasio.html":{}}}],["this.lastreceivedmessagetimestamp",{"_index":735,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.loadalarm",{"_index":94,"title":{},"body":{"components/AckButtonComponent.html":{},"components/ShelveButtonComponent.html":{}}}],["this.loadt",{"_index":1420,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.missedack",{"_index":255,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.missedacks.push(text",{"_index":264,"title":{},"body":{"components/AckModalComponent.html":{}}}],["this.mod",{"_index":977,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.modalservice.open(ackmodalcompon",{"_index":101,"title":{},"body":{"components/AckButtonComponent.html":{}}}],["this.modalservice.open(shelvemodalcompon",{"_index":1256,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["this.nam",{"_index":976,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.nestednodemap.get(nod",{"_index":567,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.get(node).item",{"_index":568,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.has(nod",{"_index":566,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.nestednodemap.set(nod",{"_index":573,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.readalarmmessage(payload.act",{"_index":700,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.readalarmmessageslist(payload.data",{"_index":704,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.route.snapshot.parammap.get('filt",{"_index":1422,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.router.navigate(['/tabular",{"_index":1246,"title":{},"body":{"injectables/RoutingService.html":{}}}],["this.routing.tablewithfilter(filt",{"_index":1091,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["this.sendsuccessful(respons",{"_index":1283,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.shelv",{"_index":398,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveModalComponent.html":{}}}],["this.sort",{"_index":1426,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.sort.sort",{"_index":1413,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.spinnerservice.hid",{"_index":245,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.spinnerservice.show",{"_index":239,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["this.startlastreceivedmessagetimestampcheck",{"_index":705,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.state_change_timestamp",{"_index":388,"title":{},"body":{"classes/Alarm.html":{}}}],["this.statu",{"_index":974,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.tempalarm",{"_index":1213,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.tempalarmid",{"_index":1220,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.tempimageset",{"_index":1225,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.tempimageunreliableset",{"_index":1230,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.timestamp",{"_index":978,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["this.timezon",{"_index":1411,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["this.treecontrol",{"_index":515,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treecontrol.getdescendants(nod",{"_index":577,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.treeflatten",{"_index":510,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.triggeralarmsnonvalidconnectionst",{"_index":686,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.unshelv",{"_index":1280,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["this.updateacklist",{"_index":520,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["this.updatelastreceivedmessagetimestamp",{"_index":699,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.value.tostring().split",{"_index":1308,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["this.websocketbridge.connect(connectionpath",{"_index":708,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.demultiplex(streams.alarm",{"_index":695,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.demultiplex(streams.upd",{"_index":702,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.listen(connectionpath",{"_index":709,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.socket.addeventlisten",{"_index":690,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.websocketbridge.stream(streams.updates).send",{"_index":726,"title":{},"body":{"injectables/AlarmService.html":{}}}],["this.windsalarm",{"_index":1215,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.windsalarmid",{"_index":1217,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.windsimageset",{"_index":1227,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["this.windsimageunreliableset",{"_index":1231,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["thorugh",{"_index":1235,"title":{},"body":{"injectables/RoutingService.html":{}}}],["through",{"_index":185,"title":{},"body":{"components/AckModalComponent.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{}}}],["ticket",{"_index":647,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["tickets_info",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tickets_multiple_ack",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":266,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"license.html":{}}}],["timestamp",{"_index":302,"title":{},"body":{"classes/Alarm.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"components/TabularViewComponent.html":{}}}],["timezon",{"_index":1342,"title":{},"body":{"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["titl",{"_index":769,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":541,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{}}}],["togeth",{"_index":1658,"title":{},"body":{"license.html":{}}}],["toggl",{"_index":587,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"modules/IasMaterialModule.html":{},"components/TabularViewComponent.html":{}}}],["togglefilteronlysetalarm",{"_index":1347,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["toggleshelveunshelv",{"_index":1264,"title":{},"body":{"components/ShelveModalComponent.html":{}}}],["togglesidenav",{"_index":770,"title":{},"body":{"components/AppComponent.html":{}}}],["togglestatu",{"_index":1401,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["token",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tooltip",{"_index":1251,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["tostringforfilt",{"_index":925,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["transform",{"_index":562,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree'},{'nam",{"_index":116,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["tree.compon",{"_index":830,"title":{},"body":{"modules/AppModule.html":{}}}],["tree.component.html",{"_index":480,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.scss",{"_index":481,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree.component.t",{"_index":454,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"coverage.html":{}}}],["tree.component.ts:16",{"_index":600,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:19",{"_index":601,"title":{},"body":{"classes/AlarmItemNode.html":{}}}],["tree.component.ts:26",{"_index":461,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:29",{"_index":462,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree.component.ts:32",{"_index":460,"title":{},"body":{"classes/AlarmItemFlatNode.html":{}}}],["tree/ack",{"_index":453,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["tree_data",{"_index":545,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[alarm.core_id",{"_index":547,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tree_data[alarm.core_id].push(item",{"_index":549,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treecontrol",{"_index":501,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treedata",{"_index":485,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["treeflatten",{"_index":503,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["tri",{"_index":740,"title":{},"body":{"injectables/AlarmService.html":{}}}],["trigger",{"_index":14,"title":{},"body":{"components/AckButtonComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["triggeralarmsnonvalidconnectionst",{"_index":619,"title":{},"body":{"injectables/AlarmService.html":{}}}],["true",{"_index":105,"title":{},"body":{"components/AckButtonComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"classes/Iasio.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":387,"title":{},"body":{"classes/Alarm.html":{}}}],["type",{"_index":53,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"components/IasHealthOverviewComponent.html":{},"classes/Iasio.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":558,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["unarch",{"_index":1259,"title":{},"body":{"components/ShelveButtonComponent.html":{}}}],["uncombin",{"_index":1683,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":557,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"classes/DisplayedAlarm.html":{}}}],["under",{"_index":663,"title":{},"body":{"injectables/AlarmService.html":{},"index.html":{},"license.html":{}}}],["unit",{"_index":1562,"title":{},"body":{"index.html":{}}}],["unkn.svg",{"_index":1088,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["unknown",{"_index":352,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["unknown_unreli",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unreli",{"_index":355,"title":{},"body":{"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/StatusViewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["unshelv",{"_index":288,"title":{},"body":{"classes/Alarm.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{}}}],["unshelve_api",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unshelvealarm",{"_index":620,"title":{},"body":{"injectables/AlarmService.html":{}}}],["unshelvealarms(alarms_id",{"_index":664,"title":{},"body":{"injectables/AlarmService.html":{}}}],["unsubscrib",{"_index":1065,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/TabularViewComponent.html":{}}}],["updat",{"_index":217,"title":{},"body":{"components/AckModalComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["updateacklist",{"_index":594,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["updatealarmstoack",{"_index":162,"title":{},"body":{"components/AckModalComponent.html":{}}}],["updatealarmstoack(ev",{"_index":215,"title":{},"body":{"components/AckModalComponent.html":{}}}],["updatelastreceivedmessagetimestamp",{"_index":621,"title":{},"body":{"injectables/AlarmService.html":{}}}],["url",{"_index":205,"title":{},"body":{"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/HttpClientService.html":{},"classes/Iasio.html":{},"injectables/RoutingService.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["url(url",{"_index":968,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["us",{"_index":13,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":1331,"title":{},"body":{"components/TabularViewComponent.html":{},"license.html":{}}}],["user'",{"_index":1674,"title":{},"body":{"license.html":{}}}],["usevalu",{"_index":852,"title":{},"body":{"modules/AppModule.html":{}}}],["util",{"_index":1616,"title":{},"body":{"license.html":{}}}],["v",{"_index":554,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["valid",{"_index":173,"title":{},"body":{"components/AckModalComponent.html":{},"classes/Alarm.html":{},"injectables/AlarmService.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["validators.requir",{"_index":234,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["validform",{"_index":254,"title":{},"body":{"components/AckModalComponent.html":{}}}],["validity.unreli",{"_index":734,"title":{},"body":{"injectables/AlarmService.html":{}}}],["validity[this.valid",{"_index":395,"title":{},"body":{"classes/Alarm.html":{}}}],["valu",{"_index":79,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"classes/Alarm.html":{},"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"classes/DisplayedAlarm.html":{},"injectables/RoutingService.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.clear",{"_index":434,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value.length",{"_index":260,"title":{},"body":{"components/AckModalComponent.html":{}}}],["value.set_crit",{"_index":442,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value.set_high",{"_index":440,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value.set_low",{"_index":436,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value.set_medium",{"_index":438,"title":{},"body":{"components/AlarmComponent.html":{},"classes/AlarmImageSet.html":{}}}],["value[k",{"_index":555,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{}}}],["value[this.valu",{"_index":394,"title":{},"body":{"classes/Alarm.html":{}}}],["value_tag",{"_index":979,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["value_tags[0",{"_index":981,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["value_tags[1",{"_index":982,"title":{},"body":{"classes/DisplayedAlarm.html":{}}}],["var",{"_index":111,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["variabl",{"_index":66,"title":{"miscellaneous/variables.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AppComponent.html":{},"injectables/CdbService.html":{},"components/ShelveButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":1587,"title":{},"body":{"license.html":{}}}],["version",{"_index":1522,"title":{},"body":{"index.html":{},"license.html":{}}}],["via",{"_index":1563,"title":{},"body":{"index.html":{}}}],["view",{"_index":1054,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view'},{'nam",{"_index":140,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["view.compon",{"_index":828,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.css",{"_index":1289,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.css,tabular",{"_index":1333,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.html",{"_index":1290,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{}}}],["view.component.scss",{"_index":1334,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.t",{"_index":1288,"title":{},"body":{"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:109",{"_index":1360,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:117",{"_index":1303,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:135",{"_index":1357,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:143",{"_index":1359,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:152",{"_index":1356,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:17",{"_index":1297,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:171",{"_index":1354,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:189",{"_index":1351,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:207",{"_index":1362,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:22",{"_index":1295,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:232",{"_index":1400,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:240",{"_index":1403,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:26",{"_index":1397,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:29",{"_index":1395,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:32",{"_index":1305,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:37",{"_index":1364,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:40",{"_index":1385,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:45",{"_index":1376,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:47",{"_index":1298,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:48",{"_index":1375,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:51",{"_index":1398,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:54",{"_index":1388,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:57",{"_index":1374,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:60",{"_index":1370,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:63",{"_index":1372,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:69",{"_index":1390,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:72",{"_index":1371,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:78",{"_index":1383,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view.component.ts:85",{"_index":1300,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["view.component.ts:88",{"_index":1349,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["view/fixtures.t",{"_index":1480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["view/statu",{"_index":827,"title":{},"body":{"modules/AppModule.html":{},"components/StatusViewComponent.html":{},"coverage.html":{}}}],["view/tabular",{"_index":829,"title":{},"body":{"modules/AppModule.html":{},"components/TabularViewComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":1394,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewchild(matsort",{"_index":1408,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["viewchild(matt",{"_index":1407,"title":{},"body":{"components/TabularViewComponent.html":{}}}],["visibl",{"_index":1323,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["void",{"_index":68,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"injectables/AlarmService.html":{},"components/AppComponent.html":{},"classes/DisplayedAlarm.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"injectables/RoutingService.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["weather",{"_index":132,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{}}}],["webserv",{"_index":604,"title":{},"body":{"injectables/AlarmService.html":{},"injectables/CdbService.html":{},"components/ShelveModalComponent.html":{}}}],["websocket",{"_index":605,"title":{},"body":{"injectables/AlarmService.html":{},"miscellaneous/variables.html":{}}}],["websocketbridg",{"_index":609,"title":{},"body":{"injectables/AlarmService.html":{}}}],["websocketpath",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weith",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["well",{"_index":1664,"title":{},"body":{"license.html":{}}}],["wether",{"_index":528,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{},"miscellaneous/variables.html":{}}}],["whatev",{"_index":1634,"title":{},"body":{"license.html":{}}}],["whether",{"_index":574,"title":{},"body":{"classes/AlarmItemFlatNode.html":{},"classes/AlarmItemNode.html":{},"license.html":{}}}],["white",{"_index":1326,"title":{},"body":{"components/StatusViewComponent.html":{}}}],["wiki",{"_index":144,"title":{},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{}}}],["wiki&nbsp",{"_index":268,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["wikibuttoncompon",{"_index":143,"title":{"components/WikiButtonComponent.html":{}},"body":{"components/AckButtonComponent.html":{},"components/AckModalComponent.html":{},"components/AlarmComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/IasHealthOverviewComponent.html":{},"components/LegendComponent.html":{},"components/OverviewCardComponent.html":{},"components/OverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{},"components/ShelveButtonComponent.html":{},"components/ShelveModalComponent.html":{},"components/StatusViewComponent.html":{},"components/TabularViewComponent.html":{},"components/WikiButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wikipag",{"_index":204,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{}}}],["wind",{"_index":1205,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["wind_",{"_index":1228,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["windsalarm",{"_index":1183,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["windsalarmid",{"_index":1184,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["windsimageset",{"_index":1185,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["windsimageunreliableset",{"_index":1186,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["windspe",{"_index":1222,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["without",{"_index":1621,"title":{},"body":{"license.html":{}}}],["word",{"_index":1063,"title":{},"body":{"components/IasHealthOverviewComponent.html":{},"components/OverviewWeatherCardContentComponent.html":{}}}],["work",{"_index":1599,"title":{},"body":{"license.html":{}}}],["write",{"_index":271,"title":{},"body":{"components/AckModalComponent.html":{},"components/ShelveModalComponent.html":{},"components/TabularViewComponent.html":{}}}],["wrong",{"_index":1244,"title":{},"body":{"injectables/RoutingService.html":{}}}],["ws",{"_index":1221,"title":{},"body":{"components/OverviewWeatherCardContentComponent.html":{}}}],["ws://127.0.0.1:8000/stream",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yum",{"_index":1542,"title":{},"body":{"index.html":{}}}],["yyyi",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.j",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":799,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AckButtonComponent.html":{"url":"components/AckButtonComponent.html","title":"component - AckButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ack-button/ack-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Acknowledge Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-button\n            \n\n            \n                styleUrls\n                ack-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ack-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarm\n                            \n                            \n                                    Public\n                                canAcknowledge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm_id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/ack-button/ack-button.component.ts:30\n                            \n                        \n\n                \n                    \n                            The \"constructor\", injects the AlarmService and the {@link modalService}\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get the alarm object based on the input id\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Modal Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm_id\n                    \n                    \n                        Id of the alarm to be acknowledged\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/ack-button/ack-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-button/ack-button.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Get the alarm object related with the alarm id received as input using the\nAlarmService. Initialize the private variables of this component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-button/ack-button.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            On init the component initialize the private variables using the method\n{@link loadAlarm}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-button/ack-button.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Handle click on table rows, it triggers the ack modal\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-button/ack-button.component.ts:25\n                            \n                        \n\n                \n                    \n                        Alarm object related with the alarm id received as input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canAcknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canAcknowledge:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-button/ack-button.component.ts:30\n                            \n                        \n\n                \n                    \n                        Define if the alarm can be acknowledged based on if it was acknowledged before.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AckModalComponent } from '../ack-modal/ack-modal.component';\nimport { AlarmService } from '../alarm.service';\nimport { Alarm } from '../alarm';\n\n/**\n * Button used to trigger the event to open the Acknowledge Modal\n */\n@Component({\n  selector: 'app-ack-button',\n  templateUrl: './ack-button.component.html',\n  styleUrls: ['./ack-button.component.css']\n})\nexport class AckButtonComponent implements OnInit {\n\n  /**\n   * Id of the alarm to be acknowledged\n   */\n  @Input() alarm_id: string;\n\n  /**\n   * Alarm object related with the alarm id received as input\n   */\n  private alarm: Alarm;\n\n  /**\n   * Define if the alarm can be acknowledged based on if it was acknowledged before.\n   */\n  public canAcknowledge = false;\n\n  /**\n   * The \"constructor\", injects the {@link AlarmService} and the {@link modalService}\n   * @param {AlarmService} alarmService Service to get the alarm object based on the input id\n   * @param {ModalService} modalService Service to manage the Modal Component\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private modalService: NgbModal\n  ) { }\n\n  /**\n   * On init the component initialize the private variables using the method\n   * {@link loadAlarm}\n   */\n  ngOnInit() {\n    this.loadAlarm();\n  }\n\n  /**\n   * Get the alarm object related with the alarm id received as input using the\n   * AlarmService. Initialize the private variables of this component.\n   */\n  loadAlarm() {\n    this.alarm = this.alarmService.get(this.alarm_id);\n    this.canAcknowledge = !this.alarm.ack;\n  }\n\n  /**\n  * Handle click on table rows, it triggers the ack modal\n  */\n  onClick(event) {\n    const ackModal = this.modalService.open(AckModalComponent,\n      { size: 'lg', centered: true }\n    );\n    ackModal.componentInstance.alarm = this.alarm;\n    return ackModal;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AckModalComponent.html":{"url":"components/AckModalComponent.html","title":"component - AckModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AckModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ack-modal/ack-modal.component.ts\n\n\n    \n        Description\n    \n    \n        Modal used to acknowledge alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ack-modal\n            \n\n            \n                styleUrls\n                ack-modal.component.css,ack-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ack-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                            \n                                alarmsToAck\n                            \n                            \n                                form\n                            \n                            \n                                    Public\n                                missedAcks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ackFromSelection\n                            \n                            \n                                acknowledge\n                            \n                            \n                                ackSuccessful\n                            \n                            \n                                disableAcknowledgment\n                            \n                            \n                                getAlarmDescription\n                            \n                            \n                                getAlarmUrl\n                            \n                            \n                                getMissingAcksInfo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateAlarmsToAck\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal, formBuilder: FormBuilder, alarmService: AlarmService, cdbService: CdbService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ack-modal/ack-modal.component.ts:38\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to itself\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        cdbService\n                                                  \n                                                        \n                                                                    CdbService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get complementary alarm information\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Selected alarm\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ackFromSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \nackFromSelection()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Ack request through the related AlarmService method using a list of dependencies\nfrom the selected alarms\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Send the acknowledge request through the method provided by the AlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ackSuccessful\n                            \n                            \n                        \n                    \n                \n                \n                    \nackSuccessful(alarms: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Actions performed when the acknowledge is made ssuccesfully.\nFinally the modal is closed.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarms\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of sucessfully acknowledged alarms\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableAcknowledgment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableAcknowledgment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Method to invalidate ack action\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmDescription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Get the alarm description through the method provided by the CdbService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    description of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Get the link to the wikipage of the alarm through the method provided by the CdbService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    URL for of the documentation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMissingAcksInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMissingAcksInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:156\n                            \n                        \n\n\n                \n                    \n                            Get the number of missed acknowledgements of the alarm and its children\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Create the form and check the validity of the form input fields\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAlarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAlarmsToAck(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Update the list of alarms to ack from the selection on the child component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:49\n                            \n                        \n\n                \n                    \n                        Reference to itself\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alarmsToAck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsToAck:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:28\n                            \n                        \n\n                \n                    \n                        List of alarms to ack according to selection from child component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:33\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            missedAcks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        missedAcks:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-modal/ack-modal.component.ts:38\n                            \n                        \n\n                \n                    \n                        List of messages to mention the alarms with missed acknowledgments\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlarmService } from '../alarm.service';\nimport { CdbService } from '../cdb.service';\nimport { Alarm } from '../alarm';\n\n\n/**\n * Modal used to acknowledge alarms\n */\n@Component({\n  selector: 'app-ack-modal',\n  templateUrl: './ack-modal.component.html',\n  styleUrls: ['./ack-modal.component.css', './ack-modal.component.scss']\n})\nexport class AckModalComponent implements OnInit {\n\n  /**\n   * Selected alarm\n   */\n  @Input() alarm;\n\n  /**\n   * List of alarms to ack according to selection from child component\n   */\n  alarmsToAck: string[] = [];\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n  * List of messages to mention the alarms with missed acknowledgments\n  */\n  public missedAcks: string[] = [];\n\n  /**\n   * Instantiates the component\n   * @param {ActiveModal} activeModal Reference to itself\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    public activeModal: NgbActiveModal,\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private cdbService: CdbService,\n    private spinnerService: NgxSpinnerService,\n  ) {\n  }\n\n  /**\n   * Create the form and check the validity of the form input fields\n   */\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      message: [null, [Validators.required]]\n    });\n    this.getMissingAcksInfo();\n  }\n\n  /**\n   * Actions performed when the acknowledge is made ssuccesfully.\n   * Finally the modal is closed.\n   * @param alarms list of sucessfully acknowledged alarms\n   */\n  ackSuccessful(alarms: any): void {\n    console.log('Ack successful for alarms: ', alarms);\n    this.activeModal.close();\n  }\n\n  /**\n   * Send the acknowledge request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  acknowledge(): void {\n    this.spinnerService.show();\n    if (this.form.valid) {\n      this.alarmService.acknowledgeAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.ackSuccessful(response);\n            this.spinnerService.hide();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.spinnerService.hide();\n            return error;\n          }\n        );\n    }\n  }\n\n  /**\n   * Ack request through the related {@link AlarmService} method using a list of dependencies\n   * from the selected alarms\n   */\n  ackFromSelection(): void {\n    this.spinnerService.show();\n    if (this.form.valid) {\n      this.alarmService.acknowledgeAlarms(\n        this.alarmsToAck, this.form.get('message').value).subscribe(\n          (response) => {\n            this.ackSuccessful(response);\n            this.spinnerService.hide();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.spinnerService.hide();\n            return error;\n          }\n        );\n    }\n  }\n\n  /**\n   * Update the list of alarms to ack from the selection on the child component\n   */\n  updateAlarmsToAck(event): void {\n    this.alarmsToAck = event;\n  }\n\n\n  /**\n   * Get the alarm description through the method provided by the {@link CdbService}\n   * @returns {string} description of the {@link Alarm}\n   */\n  getAlarmDescription() {\n    return this.cdbService.getAlarmDescription(this.alarm.core_id);\n  }\n\n  /**\n   * Get the link to the wikipage of the alarm through the method provided by the {@link CdbService}\n   * @returns {string} URL for of the documentation of the {@link Alarm}\n   */\n  getAlarmUrl() {\n    return this.cdbService.getAlarmsInformationUrl(this.alarm.core_id);\n  }\n\n  /**\n  * Method to invalidate ack action\n  */\n  disableAcknowledgment() {\n    const noAlarmsToAck = (this.alarmsToAck.length === 0);\n    const validForm = this.form.valid;\n    return (noAlarmsToAck || !validForm);\n  }\n\n  /**\n  * Get the number of missed acknowledgements of the alarm and its children\n  */\n  getMissingAcksInfo(): void {\n    if (this.alarm) {\n      this.missedAcks = [];\n      this.alarmService.getMissingAcks(this.alarm.core_id).subscribe(\n        (response) => {\n          for (const [key, value] of Object.entries(response)) {\n            const count = value.length;\n            if (count > 0) {\n              let text = key + ' has ' + count + ' missed acknowledgement';\n              if (count > 1) {\n                text += 's';\n              }\n              this.missedAcks.push(text);\n            }\n          }\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  {{alarm?.core_id}}\n  \n    &times;\n  \n\n\n\n  \n    \n      {{ getAlarmDescription() }} \n      \n        \n           Go to wiki&nbsp;\n        \n      \n    \n    \n       Action from the operator \n      \n      \n        * The acknowledge button will be enabled after writing the message and the selection of the related alarms\n      \n    \n    \n       Select alarms for acknowledgment \n      \n    \n     0\" class=\"section missed-acks\">\n       Missed acknowledgments \n      \n        \n          {{text}}\n        \n      \n    \n  \n  \n    Cancel\n    Acknowledge\n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{alarm?.core_id}}      ×              {{ getAlarmDescription() }}                          Go to wiki                              Action from the operator                     * The acknowledge button will be enabled after writing the message and the selection of the related alarms                     Select alarms for acknowledgment                0\" class=\"section missed-acks\">       Missed acknowledgments                         {{text}}                          Cancel    Acknowledge  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AckModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alarm.html":{"url":"classes/Alarm.html","title":"class - Alarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/alarm.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Alarm objects\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ack\n                            \n                            \n                                core_id\n                            \n                            \n                                core_timestamp\n                            \n                            \n                                dependencies\n                            \n                            \n                                mode\n                            \n                            \n                                running_id\n                            \n                            \n                                shelved\n                            \n                            \n                                state_change_timestamp\n                            \n                            \n                                validity\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledge\n                            \n                            \n                                    Static\n                                asAlarm\n                            \n                            \n                                getCoreTimestampAsDate\n                            \n                            \n                                getModeAsString\n                            \n                            \n                                getStateChangeTimestampAsDate\n                            \n                            \n                                getValidityAsString\n                            \n                            \n                                getValueAsString\n                            \n                            \n                                    Static\n                                isValidAlarm\n                            \n                            \n                                shelve\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/alarm.ts:70\n                            \n                        \n\n                \n                    \n                            Builds a new Alarm instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ack:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:64\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:46\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            core_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        core_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:58\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm was generated by the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dependencies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dependencies:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:70\n                            \n                        \n\n                \n                    \n                        List of core_id's of dependent alarms *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mode:     OperationalMode\n\n                    \n                \n                    \n                        \n                            Type :     OperationalMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:52\n                            \n                        \n\n                \n                    \n                        Operational mode of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        running_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:49\n                            \n                        \n\n                \n                    \n                        Id used to identify the Alarm and its parents in the IAS Core \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:67\n                            \n                        \n\n                \n                    \n                        Acknowledgement status \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state_change_timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state_change_timestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:61\n                            \n                        \n\n                \n                    \n                        Timestamp at which the Alarm changed the state or the mode \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validity:     Validity\n\n                    \n                \n                    \n                        \n                            Type :     Validity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:55\n                            \n                        \n\n                \n                    \n                        Validity of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     Value\n\n                    \n                \n                    \n                        \n                            Type :     Value\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.ts:43\n                            \n                        \n\n                \n                    \n                        Value that represents the state of the Alarm.\nCan be either 0 (CLEARED) or 1 (SET)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledge\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledge()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:157\n                            \n                        \n\n\n                \n                    \n                            Acknowledges the Alarm and returns the acknowledge status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the acknowledgement status\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:110\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCoreTimestampAsDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCoreTimestampAsDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:194\n                            \n                        \n\n\n                \n                    \n                            Returns a Date representation of the core_timestamp of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    a date format representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getModeAsString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetModeAsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:167\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the operational mode of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    a string representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStateChangeTimestampAsDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStateChangeTimestampAsDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:144\n                            \n                        \n\n\n                \n                    \n                            Returns a Date representation of the timestamp of the last change of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    a date format representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidityAsString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidityAsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:185\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the validity of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    a string representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValueAsString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValueAsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:176\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the value of the Alarm\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    a string representation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidAlarm(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:88\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Alarm object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:209\n                            \n                        \n\n\n                \n                    \n                            Shelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving message\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.ts:219\n                            \n                        \n\n\n                \n                    \n                            Unshelves the Alarm and returns the shelve status\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    a the shelving status\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timestamp\n                    \n                \n\n                \n                    \n                        gettimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/alarm.ts:135\n                                \n                            \n                    \n                        \n                                Returns a Date representation of the {@link Alarm.state_change_timestamp}\nattribute\n\n\n                                \n                                \n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        export enum OperationalMode {\n  startup = 0,\n  initialization = 1,\n  closing = 2,\n  shuttedown = 3,\n  maintenance = 4,\n  operational = 5,\n  degraded = 6,\n  unknown = 7,\n}\n\n/**\n* List of the possible Validity values\n*/\nexport enum Validity {\n  unreliable = 0,\n  reliable = 1\n}\n\n/**\n* List of the possible Values of an Alarm\n*/\nexport enum Value {\n  cleared = 0,\n  set_low = 1,\n  set_medium = 2,\n  set_high = 3,\n  set_critical = 4,\n}\n\n/**\n* Class to define Alarm objects\n*/\nexport class Alarm {\n\n  /**\n  * Value that represents the state of the {@link Alarm}.\n  * Can be either 0 (CLEARED) or 1 (SET)\n  */\n  value: Value;\n\n  /** Id used to identify the {@link Alarm} in the IAS Core */\n  core_id: string;\n\n  /** Id used to identify the {@link Alarm} and its parents in the IAS Core */\n  running_id: string;\n\n  /** Operational mode of the {@link Alarm} */\n  mode: OperationalMode;\n\n  /** Validity of the {@link Alarm} */\n  validity: Validity;\n\n  /** Timestamp at which the {@link Alarm} was generated by the IAS Core */\n  core_timestamp: number;\n\n  /** Timestamp at which the {@link Alarm} changed the state or the mode */\n  state_change_timestamp: number;\n\n  /** Acknowledgement status */\n  ack: boolean;\n\n  /** Acknowledgement status */\n  shelved: boolean;\n\n  /** List of core_id's of dependent alarms **/\n  dependencies: string[];\n\n  /**\n  * Builds a new Alarm instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Alarm object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Alarm}, false if not\n  */\n  static isValidAlarm(json: any): boolean {\n    return (\n      json.hasOwnProperty('value') &&\n      json.hasOwnProperty('core_id') &&\n      json.hasOwnProperty('running_id') &&\n      json.hasOwnProperty('mode') &&\n      json.hasOwnProperty('core_timestamp') &&\n      // json.hasOwnProperty('state_change_timestamp') &&\n      json.hasOwnProperty('validity') &&\n      json.hasOwnProperty('ack') &&\n      json.hasOwnProperty('shelved') &&\n      json.hasOwnProperty('dependencies')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Alarm}\n  *\n  * @param {any} json the object to convert to an Alarm\n  * @param {number} pk the primary key of the Alarm in the database\n  * @returns {Alarm} the object as an {@link Alarm} instance\n  */\n  static asAlarm(json: any): Alarm {\n    if (!this.isValidAlarm(json)) {\n      return null;\n    }\n    const value = json['value'];\n    const core_id = json['core_id'];\n    const running_id = json['running_id'];\n    const mode = json['mode'];\n    const core_timestamp = json['core_timestamp'];\n    const state_change_timestamp = json['state_change_timestamp'];\n    const validity = json['validity'];\n    const ack = json['ack'];\n    const shelved = json['shelved'];\n    const dependencies = json['dependencies'];\n    return new Alarm({ value, core_id, running_id, mode, core_timestamp,\n      state_change_timestamp, validity, ack, shelved, dependencies });\n  }\n\n  /**\n  * Returns a Date representation of the {@link Alarm.state_change_timestamp}\n  * attribute\n  *\n  * @returns {Date} a date format representation of the Alarm\n  * state_change_timestamp\n  */\n  get timestamp(): Date {\n    return this.getStateChangeTimestampAsDate();\n  }\n\n  /**\n  * Returns a Date representation of the timestamp of the last change of the Alarm\n  *\n  * @returns {Date} a date format representation of the {@link Alarm.state_change_timestamp} attribute\n  */\n  getStateChangeTimestampAsDate(): Date {\n    const ts = this.state_change_timestamp;\n    const date: Date = new Date(ts);\n    return date;\n  }\n\n  /**\n  * Acknowledges the {@link Alarm} and returns the acknowledge status\n  *\n  * @param {message} string string message of the acknowledgement\n  *\n  * @returns {boolean} a the acknowledgement status\n  */\n  acknowledge(): boolean {\n    this.ack = true;\n    return this.ack;\n  }\n\n  /**\n  * Returns a string representation of the operational mode of the Alarm\n  *\n  * @returns {string} a string representation of the {@link Alarm.mode} attribute\n  */\n  getModeAsString(): string {\n    return OperationalMode[this.mode];\n  }\n\n  /**\n  * Returns a string representation of the value of the Alarm\n  *\n  * @returns {string} a string representation of the {@link Alarm.value} attribute\n  */\n  getValueAsString(): string {\n    return Value[this.value];\n  }\n\n  /**\n  * Returns a string representation of the validity of the Alarm\n  *\n  * @returns {string} a string representation of the {@link Alarm.mode} attribute\n  */\n  getValidityAsString(): string {\n    return Validity[this.validity];\n  }\n\n  /**\n  * Returns a Date representation of the core_timestamp of the Alarm\n  *\n  * @returns {Date} a date format representation of the {@link Alarm.core_timestamp} attribute\n  */\n  getCoreTimestampAsDate(): Date {\n\n    const ts = this.core_timestamp;\n    const date: Date = new Date(ts);\n\n    return date;\n  }\n\n  /**\n  * Shelves the {@link Alarm} and returns the shelve status\n  *\n  * @param {message} string string message of the shelving\n  *\n  * @returns {boolean} a the shelving message\n  */\n  shelve(): boolean {\n    this.shelved = true;\n    return this.shelved;\n  }\n\n  /**\n  * Unshelves the {@link Alarm} and returns the shelve status\n  *\n  * @returns {boolean} a the shelving status\n  */\n  unshelve(): boolean {\n    this.shelved = false;\n    return this.shelved;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlarmComponent.html":{"url":"components/AlarmComponent.html","title":"component - AlarmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlarmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/alarm/alarm.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents an Alarm marker based on an icon, for displaying purposes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alarm\n            \n\n            \n                styleUrls\n                alarm.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alarm.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImage\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                            \n                                images\n                            \n                            \n                                imagesUnreliable\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/alarm/alarm.component.ts:66\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object associated to the component\n\n                            \n                            Type:    Alarm\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        images\n                    \n                    \n                        Set of names for the images to use\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        imagesUnreliable\n                    \n                    \n                        Set of names for the images to use for unreliable states\n\n                            \n                            Type:    AlarmImageSet\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:66\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getImage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns the URL of the current image to use depending on the Alarm status\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Executed when the component is initiating\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n   /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.css']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the URL of the current image to use depending on the Alarm status\n  */\n  getImage(): string {\n    if (!this.alarm) {\n      return this.imagesUnreliable.unknown;\n    }\n    let imagesToUse = this.images;\n    if (this.alarm.validity === 0) {\n      imagesToUse = this.imagesUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      return imagesToUse.shelved;\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      return imagesToUse.unknown;\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      return imagesToUse.maintenance;\n    } else if (this.alarm.value === Value.cleared) {\n      return imagesToUse.clear;\n    } else if (this.alarm.value === Value.set_low) {\n      return imagesToUse.set_low;\n    } else if (this.alarm.value === Value.set_medium) {\n      return imagesToUse.set_medium;\n    } else if (this.alarm.value === Value.set_high) {\n      return imagesToUse.set_high;\n    } else if (this.alarm.value === Value.set_critical) {\n      return imagesToUse.set_critical;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlarmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmImageSet.html":{"url":"classes/AlarmImageSet.html","title":"class - AlarmImageSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmImageSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/alarm/alarm.component.ts\n        \n\n            \n                Description\n            \n            \n                Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                maintenance\n                            \n                            \n                                    Public\n                                set_critical\n                            \n                            \n                                    Public\n                                set_high\n                            \n                            \n                                    Public\n                                set_low\n                            \n                            \n                                    Public\n                                set_medium\n                            \n                            \n                                    Public\n                                shelved\n                            \n                            \n                                    Public\n                                unknown\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                            Builds a new AlarmImageSet instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clear:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:9\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"clear\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maintenance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maintenance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:27\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"maintenance\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_critical\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_critical:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:21\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_critical\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_high\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_high:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:18\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_high\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_low\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_low:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:12\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_low\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set_medium\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        set_medium:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:15\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"set_medium\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shelved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shelved:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:30\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"shelved\" Alarm value  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unknown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unknown:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm/alarm.component.ts:24\n                            \n                        \n\n                \n                    \n                        URL of the image to use for the \"unknown\" Alarm value  \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Alarm, Value, OperationalMode } from '../alarm';\n\n/**\n* Class that models the relation of image URLS and Alarm statuses, for displaying purposes\n**/\nexport class AlarmImageSet {\n   /** URL of the image to use for the \"clear\" Alarm value  */\n  public clear: string;\n\n  /** URL of the image to use for the \"set_low\" Alarm value  */\n  public set_low: string;\n\n  /** URL of the image to use for the \"set_medium\" Alarm value  */\n  public set_medium: string;\n\n  /** URL of the image to use for the \"set_high\" Alarm value  */\n  public set_high: string;\n\n  /** URL of the image to use for the \"set_critical\" Alarm value  */\n  public set_critical: string;\n\n  /** URL of the image to use for the \"unknown\" Alarm value  */\n  public unknown: string;\n\n  /** URL of the image to use for the \"maintenance\" Alarm value  */\n  public maintenance: string;\n\n  /** URL of the image to use for the \"shelved\" Alarm value  */\n  public shelved: string;\n\n  /**\n  * Builds a new AlarmImageSet instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n}\n\n/**\n * Component that represents an Alarm marker based on an icon, for displaying purposes\n */\n@Component({\n  selector: 'app-alarm',\n  templateUrl: './alarm.component.html',\n  styleUrls: ['./alarm.component.css']\n})\nexport class AlarmComponent implements OnInit {\n\n  /**\n   * Alarm object associated to the component\n   */\n  @Input() alarm: Alarm;\n\n  /**\n   * Set of names for the images to use\n   */\n  @Input() images: AlarmImageSet;\n\n  /**\n   * Set of names for the images to use for unreliable states\n   */\n  @Input() imagesUnreliable: AlarmImageSet;\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n  * Executed when the component is initiating\n  */\n  ngOnInit() {\n  }\n\n  /**\n  * Returns the URL of the current image to use depending on the Alarm status\n  */\n  getImage(): string {\n    if (!this.alarm) {\n      return this.imagesUnreliable.unknown;\n    }\n    let imagesToUse = this.images;\n    if (this.alarm.validity === 0) {\n      imagesToUse = this.imagesUnreliable;\n    }\n    if (this.alarm.shelved === true) {\n      return imagesToUse.shelved;\n    } else if (this.alarm.mode === OperationalMode.unknown) {\n      return imagesToUse.unknown;\n    } else if (this.alarm.mode === OperationalMode.maintenance || this.alarm.mode === OperationalMode.shuttedown) {\n      return imagesToUse.maintenance;\n    } else if (this.alarm.value === Value.cleared) {\n      return imagesToUse.clear;\n    } else if (this.alarm.value === Value.set_low) {\n      return imagesToUse.set_low;\n    } else if (this.alarm.value === Value.set_medium) {\n      return imagesToUse.set_medium;\n    } else if (this.alarm.value === Value.set_high) {\n      return imagesToUse.set_high;\n    } else if (this.alarm.value === Value.set_critical) {\n      return imagesToUse.set_critical;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemFlatNode.html":{"url":"classes/AlarmItemFlatNode.html","title":"class - AlarmItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat to-do item node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expandable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-tree/ack-tree.component.ts:32\n                            \n                        \n\n                \n                    \n                        True if the node is expandable, false if not \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-tree/ack-tree.component.ts:26\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-tree/ack-tree.component.ts:29\n                            \n                        \n\n                \n                    \n                        Level of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../alarm.service';\nimport { Alarm } from '../alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** Tree data with dependencies for the selected alarm **/\n  treeData = {};\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n  }\n\n  /**\n   * Creates the component and builds the tree reading the data from the alarm\n   */\n  ngOnInit() {\n    this.dataSource.data = this.buildFileTree(this.getTreeDataFromAlarm(this.selectedAlarm), 0);\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeDataFromAlarm(alarm: Alarm) {\n     // TODO: Update definition for alarms with more than one dependency level\n     const tree_data = {};\n     if (alarm.dependencies.length === 0) {\n       tree_data[alarm.core_id] = null;\n     } else {\n       tree_data[alarm.core_id] = [];\n       for (const item of alarm.dependencies) {\n         tree_data[alarm.core_id].push(item);\n       }\n     }\n     return tree_data;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    if (this.descendantsAllSelected(node)) {\n      this.checklistSelection.select(node);\n    }\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    if (!result) {\n      this.checklistSelection.deselect(node);\n    }\n    return !result;\n  }\n\n  /** Toggle the alarm item selection. Select/deselect all the descendants node */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlarmItemNode.html":{"url":"classes/AlarmItemNode.html","title":"class - AlarmItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlarmItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ack-tree/ack-tree.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for an alarm item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        children:     AlarmItemNode[]\n\n                    \n                \n                    \n                        \n                            Type :     AlarmItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-tree/ack-tree.component.ts:16\n                            \n                        \n\n                \n                    \n                        List of children nodes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ack-tree/ack-tree.component.ts:19\n                            \n                        \n\n                \n                    \n                        Name of the node \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OnInit, Injectable } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlattener, MatTreeFlatDataSource } from '@angular/material/tree';\nimport { of as ofObservable, Observable, BehaviorSubject } from 'rxjs';\nimport { AlarmService } from '../alarm.service';\nimport { Alarm } from '../alarm';\n\n/**\n * Node for an alarm item\n */\nexport class AlarmItemNode {\n\n  /** List of children nodes */\n  children: AlarmItemNode[];\n\n  /** Name of the node */\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class AlarmItemFlatNode {\n\n  /** Name of the node */\n  item: string;\n\n  /** Level of the node */\n  level: number;\n\n  /** True if the node is expandable, false if not */\n  expandable: boolean;\n}\n\n/**\n* Tree with checkboxes for a list of alarms\n*\n* Based on the angular material documentation for the tree component\n*\n*/\n@Component({\n  selector: 'app-ack-tree',\n  templateUrl: 'ack-tree.component.html',\n  styleUrls: ['ack-tree.component.scss']\n})\nexport class AckTreeComponent implements OnInit {\n\n  /** The parent Alarm of the tree  */\n  @Input() selectedAlarm: Alarm;\n\n  /** EventEmitter used to send the selected alarms to the parent component */\n  @Output() alarmsToAckFromSelection = new EventEmitter();\n\n  /** Tree data with dependencies for the selected alarm **/\n  treeData = {};\n\n  /** List with ids to ack **/\n  ackList: string[] = [];\n\n  /** Map from flat node to nested node. This helps us finding a nested node to be modified */\n  flatNodeMap: Map = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map = new Map();\n\n  /** Angular Material Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\n  treeControl: FlatTreeControl;\n\n  /** Angular Material Tree flattener to convert a normal type of node to node with children & level information */\n  treeFlattener: MatTreeFlattener;\n\n  /** Angular Material Data source for the flat tree */\n  dataSource: MatTreeFlatDataSource;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel(true /* multiple */);\n\n  /**\n   * Instantiates the component\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   */\n  constructor(private alarmService: AlarmService) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n    this.checklistSelection.onChange.subscribe(data => {\n      this.updateAckList();\n    });\n  }\n\n  /**\n   * Creates the component and builds the tree reading the data from the alarm\n   */\n  ngOnInit() {\n    this.dataSource.data = this.buildFileTree(this.getTreeDataFromAlarm(this.selectedAlarm), 0);\n  }\n\n  /**\n  * Retuns the level of a given node\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {number} the level of the node\n  */\n  getLevel = (node: AlarmItemFlatNode) => node.level;\n\n  /**\n  * Checks wether or not the node is expandable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean} true if the node is expandable, false if not\n  */\n  isExpandable = (node: AlarmItemFlatNode) => node.expandable;\n\n  /**\n  * Retuns the children of the node, as an Observable\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {Observable} the children the node\n  */\n  getChildren = (node: AlarmItemNode): Observable => {\n    return ofObservable(node.children);\n  }\n\n  /**\n  * Checks wether or not the node has children\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has a child, false if not\n  */\n  hasChild = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.expandable;\n\n  /**\n  * Checks wether or not the node has no content\n  * @param {AlarmItemFlatNode} node the node\n  * @returns {boolean}  true if the node has no content, false if not\n  */\n  hasNoContent = (_: number, _nodeData: AlarmItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Tree data from selected alarm\n   * @returns {dictionary}  the tree data in a JSON format\n   */\n  getTreeDataFromAlarm(alarm: Alarm) {\n     // TODO: Update definition for alarms with more than one dependency level\n     const tree_data = {};\n     if (alarm.dependencies.length === 0) {\n       tree_data[alarm.core_id] = null;\n     } else {\n       tree_data[alarm.core_id] = [];\n       for (const item of alarm.dependencies) {\n         tree_data[alarm.core_id].push(item);\n       }\n     }\n     return tree_data;\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * @param {any} value the node as a Json object, or a sub-tree of a Json object.\n   * @param {number} level the level of the node\n   * @returns {list} the list of `AlarmItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    const data: any[] = [];\n    for (const k in value) {\n      if (k in value) {\n        const v = value[k];\n        const node = new AlarmItemNode();\n        node.item = `${k}`;\n        if (v === null || v === undefined) {\n          // no action\n        } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   * @param {AlarmItemNode} node the node\n   * @param {number} level the level node\n   * @returns {flatNode} the node converted to a FlatNode\n   */\n  transformer = (node: AlarmItemNode, level: number) => {\n    let flatNode;\n    if (this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node) !== null && this.nestedNodeMap.get(node).item === node.item) {\n      flatNode = this.nestedNodeMap.get(node);\n    } else {\n      flatNode = new AlarmItemFlatNode();\n    }\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /**\n  * Checks whether all the descendants of the node are selected\n  * @returns {boolean} true if all the descendants of the node are selected, false if not\n  */\n  descendantsAllSelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /**\n  * Checks whether part of the descendants are selected\n  * @returns {boolean} true if some of the descendents are selected, false if not\n  */\n  descendantsPartiallySelected(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    if (this.descendantsAllSelected(node)) {\n      this.checklistSelection.select(node);\n    }\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /**\n  * Checks wether or not the node has selected dependencies\n  * @returns {boolean} true if the node has no selected descendents, false if not\n  */\n  noSelectedDescendants(node: AlarmItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    if (!result) {\n      this.checklistSelection.deselect(node);\n    }\n    return !result;\n  }\n\n  /** Toggle the alarm item selection. Select/deselect all the descendants node */\n  alarmItemSelectionToggle(node: AlarmItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n  }\n\n  /** Update list with ids to ack **/\n  updateAckList(): void {\n    this.ackList = [];\n    const selected = this.checklistSelection.selected;\n    selected.forEach( (flatNode) => {\n      if (flatNode.expandable === false) {\n        this.ackList.push(flatNode.item);\n      }\n    });\n    this.alarmsToAckFromSelection.emit(this.ackList);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlarmService.html":{"url":"injectables/AlarmService.html","title":"injectable - AlarmService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AlarmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/alarm.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that connects and receives Alarm messages from the\nIAS Webserver through Websockets\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarmChangeStream\n                            \n                            \n                                    Public\n                                alarms\n                            \n                            \n                                    Public\n                                connectionStatusStream\n                            \n                            \n                                    Public\n                                lastReceivedMessageTimestamp\n                            \n                            \n                                    Private\n                                webSocketBridge\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acknowledgeAlarms\n                            \n                            \n                                changeAlarms\n                            \n                            \n                                compareCurrentAndLastReceivedMessageTimestamp\n                            \n                            \n                                connect\n                            \n                            \n                                get\n                            \n                            \n                                getAlarmList\n                            \n                            \n                                getMissingAcks\n                            \n                            \n                                initialize\n                            \n                            \n                                readAlarmMessage\n                            \n                            \n                                readAlarmMessagesList\n                            \n                            \n                                shelveAlarm\n                            \n                            \n                                startLastReceivedMessageTimestampCheck\n                            \n                            \n                                triggerAlarmsNonValidConnectionState\n                            \n                            \n                                unshelveAlarms\n                            \n                            \n                                updateLastReceivedMessageTimestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cdbService: CdbService, httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/alarm.service.ts:47\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cdbService\n                                                  \n                                                        \n                                                                    CdbService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get complementary alarm information\n\n                                                        \n                                                \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acknowledgeAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \nacknowledgeAlarms(alarms_ids: , message: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:133\n                            \n                        \n\n\n                \n                    \n                            Acknowledges a list of Alarms with a message\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarms_ids\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                message of the acknowledgement\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    response of the HTTP request of the acknowledge\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeAlarms(any: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            Sends an Alarm change event\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        any\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the core_id of the updated alarm,\nor 'all' if all were updated\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareCurrentAndLastReceivedMessageTimestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \ncompareCurrentAndLastReceivedMessageTimestamp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:279\n                            \n                        \n\n\n                \n                    \n                            Method to check the last received message timestamp\nNote: If non-valid, the connection state is non-valid\nTODO: Review the life cycle of the connection status.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connect\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:109\n                            \n                        \n\n\n                \n                    \n                            Start connection to the backend through websockets\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(core_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:123\n                            \n                        \n\n\n                \n                    \n                            Returns an Alarm object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                core_id of the Alarm to return\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Alarm\n\n                            \n                                \n                                    Alarm object corresponding to the given core_id\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmList()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:218\n                            \n                        \n\n\n                \n                    \n                            Get the complete list of alarms from the webserver database\n through the websocket\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMissingAcks\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMissingAcks(alarm_id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:155\n                            \n                        \n\n\n                \n                    \n                            Get information about old tickets related to a target alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                id of the target alarm\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    response of the HTTP request with a dictionary with information about missing acks\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Start connection to the backend through websockets\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readAlarmMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadAlarmMessage(action: , obj: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:230\n                            \n                        \n\n\n                \n                    \n                            Reads an alarm message from the Core and modify the service alarms list\ndepending on the action value.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                create, update or delete\n\n                                                        \n                                                \n                                                \n                                                        obj\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readAlarmMessagesList\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadAlarmMessagesList(alarmsList: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:245\n                            \n                        \n\n\n                \n                    \n                            Reads a list of alarm messages form the Core and add them to the\nservice alarms list\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmsList\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of dictionaries with values for alarm fields (as generic objects)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelveAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelveAlarm(alarm_id: , message: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:171\n                            \n                        \n\n\n                \n                    \n                            Shelves and Alarm with a message\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm_id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                message of the shelving\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    response of the HTTP request of the shelve\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startLastReceivedMessageTimestampCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartLastReceivedMessageTimestampCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:306\n                            \n                        \n\n\n                \n                    \n                            Method to update the last received message timestamp\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    for notifications to check the last received message\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            triggerAlarmsNonValidConnectionState\n                            \n                            \n                        \n                    \n                \n                \n                    \ntriggerAlarmsNonValidConnectionState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:258\n                            \n                        \n\n\n                \n                    \n                            Set selected state to alarms under an non-valid connection\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelveAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelveAlarms(alarms_ids: , message: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:194\n                            \n                        \n\n\n                \n                    \n                            Shelves and Alarm with a message\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarms_ids\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                message of the shelving\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    response of the HTTP request of the shelve\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateLastReceivedMessageTimestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateLastReceivedMessageTimestamp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/alarm.service.ts:270\n                            \n                        \n\n\n                \n                    \n                            Method to update the last received message timestamp\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmChangeStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmChangeStream:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(true)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.service.ts:41\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe dictionary of Alarm objects\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.service.ts:35\n                            \n                        \n\n                \n                    \n                        Dictionary of Alarm objects, indexed by their core_ids\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionStatusStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectionStatusStream:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.service.ts:30\n                            \n                        \n\n                \n                    \n                        Stream of notifications of changes in\nthe status of the service connection\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastReceivedMessageTimestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastReceivedMessageTimestamp:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : (new Date).getTime()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.service.ts:24\n                            \n                        \n\n                \n                    \n                        Timestamp related with the last received message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webSocketBridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        webSocketBridge:     WebSocketBridge\n\n                    \n                \n                    \n                        \n                            Type :     WebSocketBridge\n\n                        \n                    \n                    \n                        \n                            Default value : new WebSocketBridge()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/alarm.service.ts:47\n                            \n                        \n\n                \n                    \n                        Django Channels WebsocketBridge,\nused to connect to Django Channels through Websockets\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable ,  BehaviorSubject } from 'rxjs';\nimport { IntervalObservable } from 'rxjs/observable/IntervalObservable';\nimport { WebSocketBridge } from 'django-channels';\nimport { environment } from '../environments/environment';\nimport { Alarm, OperationalMode, Validity } from './alarm';\nimport { BackendUrls, Streams } from './settings';\nimport { CdbService } from './cdb.service';\nimport { HttpClientService } from './http-client.service';\n\n\n/**\n* Service that connects and receives {@link Alarm} messages from the\n* IAS Webserver through Websockets\n*/\n@Injectable()\nexport class AlarmService {\n\n  /**\n  * Timestamp related with the last received message\n  */\n  public lastReceivedMessageTimestamp: number = (new Date).getTime();\n\n  /**\n  * Stream of notifications of changes in\n  * the status of the service connection\n  */\n  public connectionStatusStream = new BehaviorSubject(false);\n\n  /**\n  * Dictionary of {@link Alarm} objects, indexed by their core_ids\n  */\n  public alarms: {[core_id: string]: Alarm } = {};\n\n  /**\n  * Stream of notifications of changes in\n  * the dictionary of {@link Alarm} objects\n  */\n  public alarmChangeStream = new BehaviorSubject(true);\n\n  /**\n  * Django Channels WebsocketBridge,\n  * used to connect to Django Channels through Websockets\n  */\n  private webSocketBridge: WebSocketBridge = new WebSocketBridge();\n\n  /**\n   * Instantiates the service\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private cdbService: CdbService,\n    private httpClientService: HttpClientService,\n  ) {\n    this.connectionStatusStream.subscribe(\n      value => {\n        if (value === false) {\n          this.triggerAlarmsNonValidConnectionState();\n        }\n      }\n    );\n  }\n\n  /**\n  * Sends an {@link Alarm} change event\n  *\n  * @param {Any} any the core_id of the updated alarm,\n  * or 'all' if all were updated\n  */\n  changeAlarms(any) {\n    this.alarmChangeStream.next(any);\n  }\n\n  /******* SERVICE INITIALIZATION *******/\n\n  /**\n  * Start connection to the backend through websockets\n  */\n  initialize() {\n    const alarmId = 1;\n    this.connect();\n    this.webSocketBridge.socket.addEventListener(\n      'open', () => {\n        this.connectionStatusStream.next(true);\n        /* TODO: Evaluate function for webserver requests */\n        this.getAlarmList();\n        this.cdbService.initialize();\n      }\n    );\n    this.webSocketBridge.demultiplex(Streams.ALARMS, (payload, streamName) => {\n      // console.log('notify ', payload);\n      this.updateLastReceivedMessageTimestamp();\n      this.readAlarmMessage(payload.action, payload.data);\n    });\n    this.webSocketBridge.demultiplex(Streams.UPDATES, (payload, streamName) => {\n      // console.log('request', payload);\n      this.updateLastReceivedMessageTimestamp();\n      this.readAlarmMessagesList(payload.data);\n    });\n    this.startLastReceivedMessageTimestampCheck();\n  }\n\n   /**\n   *  Start connection to the backend through websockets\n   */\n  connect() {\n    const connectionPath = environment.websocketPath;\n    this.webSocketBridge.connect(connectionPath);\n    this.webSocketBridge.listen(connectionPath);\n    console.log('Connected to webserver at: ' + connectionPath);\n  }\n\n  /******* ALARM HANDLING *******/\n\n  /**\n   * Returns an Alarm object\n   * @param core_id core_id of the Alarm to return\n   * @returns {Alarm} Alarm object corresponding to the given core_id\n   */\n  get(core_id: string): Alarm {\n    return this.alarms[core_id] as Alarm;\n  }\n\n  /**\n   * Acknowledges a list of Alarms with a message\n   * @param alarms list of ids of the alarms to acknowledge\n   * @param message message of the acknowledgement\n   * @returns {json} response of the HTTP request of the acknowledge\n   */\n  acknowledgeAlarms(alarms_ids, message) {\n    const data = {\n      'alarms_ids': alarms_ids,\n      'message': message,\n    };\n    return this.httpClientService.put(BackendUrls.TICKETS_MULTIPLE_ACK, data).pipe(\n    map(\n      (response) => {\n        for (const id of alarms_ids) {\n          const alarm = this.get(id);\n          alarm.acknowledge();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Get information about old tickets related to a target alarm\n   * @param alarm_id id of the target alarm\n   * @returns {json} response of the HTTP request with a dictionary with information about missing acks\n   */\n  getMissingAcks(alarm_id) {\n    const url = BackendUrls.TICKETS_INFO + '?alarm_id=' + alarm_id;\n    return this.httpClientService.get(url).pipe(\n    map(\n      (response) => {\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and Alarm with a message\n   * @param alarms id of the alarm to shelve\n   * @param message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  shelveAlarm(alarm_id, message) {\n    const data = {\n      'alarm_id': alarm_id,\n      'message': message,\n    };\n    return this.httpClientService.post(BackendUrls.SHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 201) {\n          const alarm = this.get(alarm_id);\n          alarm.shelve();\n        }\n        return response;\n      }\n    ));\n  }\n\n  /**\n   * Shelves and Alarm with a message\n   * @param alarms id of the alarm to shelve\n   * @param message message of the shelving\n   * @returns {json} response of the HTTP request of the shelve\n   */\n  unshelveAlarms(alarms_ids, message) {\n    const data = {\n      'alarms_ids': alarms_ids,\n    };\n    return this.httpClientService.put(BackendUrls.UNSHELVE_API, data).pipe(\n    map(\n      (response) => {\n        if (response['status'] === 200) {\n          for (const id of alarms_ids) {\n            const alarm = this.get(id);\n            alarm.unshelve();\n          }\n        }\n        return response;\n      }\n    ));\n  }\n\n  /******* HANDLING OF ALARM MESSAGES FROM THE CORE *******/\n\n  /**\n  * Get the complete list of alarms from the webserver database\n   * through the websocket\n   */\n  getAlarmList() {\n    this.webSocketBridge.stream(Streams.UPDATES).send({\n      'action': 'list'\n    });\n  }\n\n  /**\n   * Reads an alarm message from the Core and modify the service alarms list\n   * depending on the action value.\n   * @param action create, update or delete\n   * @param alarm dictionary with values for alarm fields (as generic object)\n   */\n  readAlarmMessage(action, obj) {\n    const alarm = Alarm.asAlarm(obj);\n    if ( action === 'create' || action === 'update' ) {\n      this.alarms[alarm.core_id] = alarm;\n    } else if ( action === 'delete') {\n      delete this.alarms[alarm.core_id];\n    }\n    this.changeAlarms(alarm.core_id);\n  }\n\n  /**\n   * Reads a list of alarm messages form the Core and add them to the\n   * service alarms list\n   * @param alarmsList list of dictionaries with values for alarm fields (as generic objects)\n   */\n  readAlarmMessagesList(alarmsList) {\n    for (const obj of alarmsList) {\n      const alarm = Alarm.asAlarm(obj);\n      this.alarms[alarm.core_id] = alarm;\n    }\n    this.changeAlarms('all');\n  }\n\n  /******* PERIODIC CHECK OF VALIDITY OF ALARMS *******/\n\n  /**\n   * Set selected state to alarms under an non-valid connection\n   */\n  triggerAlarmsNonValidConnectionState() {\n    for (const core_id in this.alarms) {\n      if (this.alarms.hasOwnProperty(core_id)) {\n        this.alarms[core_id]['validity'] = Validity.unreliable;\n      }\n    }\n    this.changeAlarms('all');\n  }\n\n  /**\n   * Method to update the last received message timestamp\n   */\n  updateLastReceivedMessageTimestamp() {\n    this.lastReceivedMessageTimestamp = (new Date()).getTime();\n  }\n\n  /**\n   * Method to check the last received message timestamp\n   * Note: If non-valid, the connection state is non-valid\n   * TODO: Review the life cycle of the connection status.\n   */\n  compareCurrentAndLastReceivedMessageTimestamp() {\n\n    /* Refresh rate parameters */\n    let pars;\n\n    /* TODO: Evaluate try exception. Here for debug options. */\n    try {\n      pars = this.cdbService.getRefreshRateParameters();\n    } catch (e) {\n      pars = {'refreshRate': 5, 'broadcastFactor': 1};\n    }\n\n    const MAX_SECONDS_WITHOUT_MESSAGES = pars['refreshRate'] * pars['broadcastFactor'] + 1;\n\n    const now = (new Date).getTime();\n    let millisecondsDelta;\n\n    millisecondsDelta = now - this.lastReceivedMessageTimestamp;\n    if (millisecondsDelta >= 1000 * MAX_SECONDS_WITHOUT_MESSAGES ) {\n      this.connectionStatusStream.next(false);\n    }\n  }\n\n  /**\n   * Method to update the last received message timestamp\n   * @returns {InternalObservable} for notifications to check the last received message\n   */\n  startLastReceivedMessageTimestampCheck() {\n    return IntervalObservable.create(1000 * 10)\n      .subscribe(() => {\n      this.compareCurrentAndLastReceivedMessageTimestamp();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Main component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCompacted\n                            \n                            \n                                sidenavItems\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms of this component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Instantiates the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleSidenav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleSidenav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Toggles expanding-contracting the sidebar\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Value of the main sidenav isCompacted variable\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCompacted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCompacted:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                        State of the main sidenav\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenavItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidenavItems:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { title: 'Overview', link: '/overview', icon: 'language'},\n    { title: 'Table', link: '/tabular', icon: 'list'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n                \n                    \n                        Sidebar Menu of the application \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Integrated Alarm System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                        Title of the application\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AlarmService } from './alarm.service';\n\n/**\n* Main component of the application\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n  * Title of the application\n  */\n  title = 'Integrated Alarm System';\n\n  /**\n  * State of the main sidenav\n  */\n  isCompacted = true;\n\n  /** Sidebar Menu of the application */\n  sidenavItems = [\n    { title: 'Overview', link: '/overview', icon: 'language'},\n    { title: 'Table', link: '/tabular', icon: 'list'}\n  ];\n\n  /**\n   * Instantiates the service\n   * @param {AlarmService} alarmService Service used to get the Alarms of this component\n   */\n  constructor(\n    private alarmService: AlarmService\n  ) {}\n\n  /**\n   * Instantiates the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.alarmService.initialize();\n  }\n\n  /**\n   * Toggles expanding-contracting the sidebar\n   * @returns {boolean} Value of the main sidenav isCompacted variable\n   */\n  toggleSidenav(): boolean {\n    this.isCompacted=!this.isCompacted\n    return this.isCompacted;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        menu\n      \n    \n    \n       Integrated Alarm System \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          \n            {{ item.icon }}\n            {{ item.title }} \n          \n        \n      \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                     Integrated Alarm System                                                                                                             {{ item.icon }}            {{ item.title }}                                             '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAckButtonComponent->AppModule\n\n\n\n\n\nAckModalComponent\n\nAckModalComponent\n\nAppModule -->\n\nAckModalComponent->AppModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nAppModule -->\n\nAckTreeComponent->AppModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nAppModule -->\n\nAlarmComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIasHealthOverviewComponent\n\nIasHealthOverviewComponent\n\nAppModule -->\n\nIasHealthOverviewComponent->AppModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nAppModule -->\n\nLegendComponent->AppModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nAppModule -->\n\nOverviewCardComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nOverviewWeatherCardContentComponent\n\nOverviewWeatherCardContentComponent\n\nAppModule -->\n\nOverviewWeatherCardContentComponent->AppModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nAppModule -->\n\nShelveButtonComponent->AppModule\n\n\n\n\n\nShelveModalComponent\n\nShelveModalComponent\n\nAppModule -->\n\nShelveModalComponent->AppModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nAppModule -->\n\nStatusViewComponent->AppModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nAppModule -->\n\nTabularViewComponent->AppModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nAppModule -->\n\nWikiButtonComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nAlarmService\n\nAlarmService\n\nAppModule -->\n\nAlarmService->AppModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nAppModule -->\n\nCdbService->AppModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nAppModule -->\n\nHttpClientService->AppModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppModule -->\n\nRoutingService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AckButtonComponent\n                            \n                            \n                                AckModalComponent\n                            \n                            \n                                AckTreeComponent\n                            \n                            \n                                AlarmComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                IasHealthOverviewComponent\n                            \n                            \n                                LegendComponent\n                            \n                            \n                                OverviewCardComponent\n                            \n                            \n                                OverviewComponent\n                            \n                            \n                                OverviewWeatherCardContentComponent\n                            \n                            \n                                ShelveButtonComponent\n                            \n                            \n                                ShelveModalComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                            \n                                TabularViewComponent\n                            \n                            \n                                WikiButtonComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AckModalComponent\n                            \n                            \n                                ShelveModalComponent\n                            \n                            \n                                StatusViewComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AlarmService\n                            \n                            \n                                     CdbService\n                            \n                            \n                                     HttpClientService\n                            \n                            \n                                     RoutingService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IasMaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { APP_BASE_HREF } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { IasMaterialModule } from './ias-material/ias-material.module';\nimport { RoutingService} from './routing.service';\nimport { HttpClientService } from './http-client.service';\nimport { AlarmService } from './alarm.service';\nimport { CdbService } from './cdb.service';\nimport { AppComponent } from './app.component';\nimport { StatusViewComponent } from './status-view/status-view.component';\nimport { TabularViewComponent } from './tabular-view/tabular-view.component';\nimport { AckModalComponent } from './ack-modal/ack-modal.component';\nimport { AckTreeComponent } from './ack-tree/ack-tree.component';\nimport { OverviewComponent } from './overview/overview.component';\nimport { OverviewCardComponent } from './overview-card/overview-card.component';\nimport { OverviewWeatherCardContentComponent } from './overview-weather-card-content/overview-weather-card-content.component';\nimport { AckButtonComponent } from './ack-button/ack-button.component';\nimport { WikiButtonComponent } from './wiki-button/wiki-button.component';\nimport { LegendComponent } from './legend/legend.component';\nimport { ShelveModalComponent } from './shelve-modal/shelve-modal.component';\nimport { ShelveButtonComponent } from './shelve-button/shelve-button.component';\nimport { AlarmComponent } from './alarm/alarm.component';\nimport { IasHealthOverviewComponent } from './ias-health-overview/ias-health-overview.component';\n\n\n/**\n* Application routes\n*/\nexport const appRoutes: Routes = [\n  { path: '', redirectTo: 'overview', pathMatch: 'full' },\n  { path: 'overview', component: OverviewComponent },\n  { path: 'tabular', component: TabularViewComponent },\n  { path: 'tabular/:filter', component: TabularViewComponent },\n  { path: 'modal', component: AckModalComponent }\n];\n\n/**\n* Application module\n*/\n@NgModule({\n  declarations: [\n    AppComponent,\n    StatusViewComponent,\n    AckModalComponent,\n    TabularViewComponent,\n    OverviewComponent,\n    OverviewCardComponent,\n    OverviewWeatherCardContentComponent,\n    AckButtonComponent,\n    AckTreeComponent,\n    WikiButtonComponent,\n    LegendComponent,\n    ShelveModalComponent,\n    ShelveButtonComponent,\n    AlarmComponent,\n    IasHealthOverviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    NgbModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    IasMaterialModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    HttpClientService,\n    HttpClient,\n    AlarmService,\n    CdbService,\n    RoutingService,\n    { provide: APP_BASE_HREF, useValue: '/' },\n    DatePipe,\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    StatusViewComponent,\n    AckModalComponent,\n    ShelveModalComponent,\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CdbService.html":{"url":"injectables/CdbService.html","title":"injectable - CdbService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CdbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/cdb.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that requests data from the Configuration database to the\nIAS Webserver through HTTP Requests\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iasAlarmsIasios\n                            \n                            \n                                iasConfiguration\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                iasioAlarmsUrl\n                            \n                            \n                                iasioUrl\n                            \n                            \n                                iasUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmDescription\n                            \n                            \n                                getAlarmsIasiosData\n                            \n                            \n                                getAlarmsInformationUrl\n                            \n                            \n                                getConfigurationData\n                            \n                            \n                                getRefreshRateParameters\n                            \n                            \n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClientService: HttpClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/cdb.service.ts:40\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClientService\n                                                  \n                                                        \n                                                                    HttpClientService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to perform HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmDescription(alarmCoreId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cdb.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Get short description from Iasios information for a selected alarm id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alarmCoreId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the description of the IASIO\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmsIasiosData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmsIasiosData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cdb.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Get information of Iasios from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    last change timestamp of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmsInformationUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmsInformationUrl(alarmCoreId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cdb.service.ts:115\n                            \n                        \n\n\n                \n                    \n                            Get link with documentation about the alarms\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alarmCoreId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the documentation URL\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfigurationData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfigurationData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cdb.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Get the ias configuration data from the IAS Webserver\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    URL to request the IAS configuration\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRefreshRateParameters\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRefreshRateParameters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cdb.service.ts:91\n                            \n                        \n\n\n                \n                    \n                            Get refresh rate parameters from IAS configuration data\nThese are refresh rate value and related multiplier factor\n\n\n                            \n                            \n                            \n                                Returns :     { 'refreshRate': any; 'broadcastFactor': any; }\n\n                            \n                                \n                                    contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/cdb.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Triggers request of general information to the IAS Webserver when\nthe component is initializated\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasAlarmsIasios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasAlarmsIasios:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cdb.service.ts:35\n                            \n                        \n\n                \n                    \n                        Variable to store alarm type iasios information data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasConfiguration:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/cdb.service.ts:30\n                            \n                        \n\n                \n                    \n                        Variable to store the ias configuration data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cdb.service.ts:40\n                            \n                        \n\n                \n                    \n                        Notify changes on the service data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasioAlarmsUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasioAlarmsUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : this.iasioUrl + '/filtered_by_alarm'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cdb.service.ts:25\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for requests of IASIOS filtered by Alarms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasioUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasioUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.cdbApiUrl + '/iasio'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cdb.service.ts:22\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IASIO requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iasUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.cdbApiUrl + '/ias'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cdb.service.ts:19\n                            \n                        \n\n                \n                    \n                        IAS Webserver URL for IAS configuration requests \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {forkJoin as observableForkJoin,  BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Rx';\nimport { environment } from '../environments/environment';\nimport { HttpClientService } from './http-client.service';\nimport { Iasio } from './iasio';\n\n\n/**\n* Service that requests data from the Configuration database to the\n* IAS Webserver through HTTP Requests\n*/\n@Injectable()\nexport class CdbService {\n\n  /** IAS Webserver URL for IAS configuration requests */\n  iasUrl = environment.cdbApiUrl + '/ias';\n\n  /** IAS Webserver URL for IASIO requests */\n  iasioUrl = environment.cdbApiUrl + '/iasio';\n\n  /** IAS Webserver URL for requests of IASIOS filtered by Alarms */\n  iasioAlarmsUrl = this.iasioUrl + '/filtered_by_alarm';\n\n  /**\n  * Variable to store the ias configuration data\n  */\n  iasConfiguration;\n\n  /**\n  * Variable to store alarm type iasios information data\n  */\n  iasAlarmsIasios: {[io_id: string]: Iasio } = {};\n\n  /**\n  * Notify changes on the service data\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /**\n   * Instantiates the service\n   * @param {HttpClientService} httpClientService Service used to perform HTTP requests\n   */\n  constructor(\n    private httpClientService: HttpClientService\n  ) {}\n\n  /**\n  * Triggers request of general information to the IAS Webserver when\n  * the component is initializated\n  */\n  initialize() {\n    return observableForkJoin(\n      this.getConfigurationData().pipe(map((res: Response) => res[0])),\n      this.getAlarmsIasiosData().pipe(map((res: Response) => res)),\n    )\n    .subscribe((data: any[]) => {\n      const iasConfigurationData = data[0];\n      const alarmsIasiosData = data[1];\n      this.iasConfiguration = iasConfigurationData;\n      alarmsIasiosData.forEach(iasio => {\n        this.iasAlarmsIasios[iasio.io_id] = new Iasio(iasio);\n      });\n      this.iasDataAvailable.next(true);\n    });\n  }\n\n  /**\n  * Get the ias configuration data from the IAS Webserver\n  * @returns {string} URL to request the IAS configuration\n  */\n  getConfigurationData() {\n    return this.httpClientService.get(this.iasUrl);\n  }\n\n  /**\n  * Get information of Iasios from the IAS Webserver\n  * @returns {Date} last change timestamp of the {@link Alarm}\n  */\n  getAlarmsIasiosData() {\n    return this.httpClientService.get(this.iasioAlarmsUrl);\n  }\n\n  /**\n  * Get refresh rate parameters from IAS configuration data\n  * These are refresh rate value and related multiplier factor\n  * @returns {json} contains the 'refreshRate' and 'broadcastFactor' for the refresh rate\n  */\n  getRefreshRateParameters() {\n    return {\n      'refreshRate': this.iasConfiguration['refresh_rate'],\n      'broadcastFactor': this.iasConfiguration['broadcast_factor']\n    };\n  }\n\n  /**\n  * Get short description from Iasios information for a selected alarm id\n  * @param {string} alarmCoreID Alarm identifier for the alarm in the core system\n  * @returns {string} the description of the IASIO\n  */\n  getAlarmDescription(alarmCoreId: string): string {\n    if (alarmCoreId in this.iasAlarmsIasios) {\n      return this.iasAlarmsIasios[alarmCoreId].short_desc;\n    } else {\n      return '';\n    }\n  }\n\n  /**\n  * Get link with documentation about the alarms\n  * @returns {string} the documentation URL\n  */\n  getAlarmsInformationUrl(alarmCoreId: string): string {\n    if (alarmCoreId in this.iasAlarmsIasios) {\n      return this.iasAlarmsIasios[alarmCoreId].doc_url;\n    } else {\n      return '';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisplayedAlarm.html":{"url":"classes/DisplayedAlarm.html","title":"class - DisplayedAlarm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisplayedAlarm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/displayed-alarm.ts\n        \n\n            \n                Description\n            \n            \n                Class that stores Alarm information for displaying purposes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _alarm\n                            \n                            \n                                    Private\n                                _description\n                            \n                            \n                                    Private\n                                _url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAlarmStatusOrder\n                            \n                            \n                                getAlarmStatusTagsString\n                            \n                            \n                                toStringForFiltering\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alarm: Alarm, description: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/displayed-alarm.ts:15\n                            \n                        \n\n                \n                    \n                            Builds a new instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarm\n                                                  \n                                                        \n                                                                    Alarm\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                the alarm to display\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                description of the alarm to display\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                url with documentation of the alarm to display\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/displayed-alarm.ts:9\n                            \n                        \n\n                \n                    \n                        Internal reference to the Alarm to display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/displayed-alarm.ts:12\n                            \n                        \n\n                \n                    \n                        The short description associated to the Alarm\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/displayed-alarm.ts:15\n                            \n                        \n\n                \n                    \n                        The url for the documentation associated to the Alarm\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmStatusOrder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmStatusOrder(value: string, priority: string, validity: string, ack: boolean, shelved: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/displayed-alarm.ts:150\n                            \n                        \n\n\n                \n                    \n                            Returns a string with a number that defines the place where the Alarm should be displayed on the Table according to the\nsorting by \"Status\" column\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the value of the {\n\n                                                        \n                                                \n                                                \n                                                        priority\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the priority of the {\n\n                                                        \n                                                \n                                                \n                                                        validity\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                string representation of the validity of the {\n\n                                                        \n                                                \n                                                \n                                                        ack\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the ack status of the {\n\n                                                        \n                                                \n                                                \n                                                        shelved\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    order for the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmStatusTagsString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmStatusTagsString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/displayed-alarm.ts:105\n                            \n                        \n\n\n                \n                    \n                            Returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    tags of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toStringForFiltering\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoStringForFiltering()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/displayed-alarm.ts:94\n                            \n                        \n\n\n                \n                    \n                            Returns a string representation of the Alarm for filtering purposes\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    info of the {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                \n\n                \n                    \n                        getalarm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:38\n                                \n                            \n                    \n                        \n                                Returns the instance of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Alarm\n\n                                \n                        \n                    \n\n                \n                    \n                        setalarm(alarm: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:31\n                                \n                            \n                    \n                        \n                                Sets the reference to the Alarm to display\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            alarm\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:48\n                                \n                            \n                    \n                        \n                                Returns the short description of the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n                \n                    \n                        setdescription(description: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:43\n                                \n                            \n                    \n                        \n                                Reference to the short description associated to the Alarm\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            description\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:58\n                                \n                            \n                    \n                        \n                                Returns the url of the documentation for the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n                \n                    \n                        seturl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:53\n                                \n                            \n                    \n                        \n                                Reference to the url associated to the Alarm\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:64\n                                \n                            \n                    \n                        \n                                Returns the core_id of the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n\n                \n                    \n                        getmode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:69\n                                \n                            \n                    \n                        \n                                Returns the operational mode of the Alarm\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timestamp\n                    \n                \n\n                \n                    \n                        gettimestamp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:77\n                                \n                            \n                    \n                        \n                                Returns the last change timestamp of the Alarm\n\n\n                                \n                                \n                                \n                                    Returns :     Date\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n\n                \n                    \n                        getstatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/displayed-alarm.ts:86\n                                \n                            \n                    \n                        \n                                Getter that returns the Alarm status tags, needed for the displaying of status\nthrough instances of StatusViewComponent. Calls getAlarmStatusTagsString()\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Alarm, OperationalMode, Validity, Value } from './alarm';\n\n/**\n* Class that stores Alarm information for displaying purposes\n*/\nexport class DisplayedAlarm {\n\n  /** Internal reference to the {@link Alarm} to display*/\n  private _alarm: Alarm;\n\n  /** The short description associated to the {@link Alarm}*/\n  private _description: string;\n\n  /** The url for the documentation associated to the {@link Alarm}*/\n  private _url: string;\n\n  /**\n  * Builds a new instance\n  *\n  * @param {Alarm} alarm the alarm to display\n  * @param {string} description description of the alarm to display\n  * @param {string} url url with documentation of the alarm to display\n  */\n  constructor(alarm: Alarm, description: string, url: string) {\n    this._alarm = alarm;\n    this._description = description;\n    this._url = url;\n  }\n\n  /** Sets the reference to the {@link Alarm} to display*/\n  set alarm(alarm: Alarm) {\n    this._alarm = alarm;\n  }\n\n  /** Returns the instance of the {@link Alarm}\n  * @returns {Alarm} the {@link Alarm}\n  */\n  get alarm(): Alarm {\n    return this._alarm;\n  }\n\n  /** Reference to the short description associated to the {@link Alarm}*/\n  set description(description: string) {\n    this._description = description;\n  }\n\n  /** Returns the short description of the {@link Alarm}*/\n  get description(): string {\n    return this._description;\n  }\n\n  /** Reference to the url associated to the {@link Alarm}*/\n  set url(url: string) {\n    this._url = url;\n  }\n\n  /** Returns the url of the documentation for the {@link Alarm}*/\n  get url(): string {\n    return this._url;\n  }\n\n  /**\n  * Returns the core_id of the {@link Alarm}*/\n  get name(): string {\n    return this._alarm.core_id;\n  }\n\n  /** Returns the operational mode of the {@link Alarm}*/\n  get mode(): string {\n    return this._alarm.getModeAsString();\n  }\n\n  /**\n  * Returns the last change timestamp of the {@link Alarm}\n  * @returns {Date} last change timestamp of the {@link Alarm}\n  */\n  get timestamp(): Date {\n    return this._alarm.timestamp;\n  }\n\n  /**\n  * Getter that returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}. Calls getAlarmStatusTagsString()\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  get status(): string {\n    return this.getAlarmStatusTagsString();\n  }\n\n  /**\n  * Returns a string representation of the {@link Alarm} for filtering purposes\n  * @returns {string} info of the {@link Alarm} for filtering purposes, joined by \" \"\n  */\n  toStringForFiltering(): string {\n    return [\n      this.status, this.description, this.name, this.mode, this.timestamp\n    ].join(' ');\n  }\n\n  /**\n  * Returns the {@link Alarm} status tags, needed for the displaying of status\n  * through instances of {@link StatusViewComponent}\n  * @returns {string} tags of the {@link Alarm} joined by \"-\"\n  */\n  getAlarmStatusTagsString(): string {\n    const alarm = this._alarm;\n    const shelved = alarm.shelved;\n    const value_tags = alarm.getValueAsString().split('_');\n    let value = value_tags[0];\n    let priority = value_tags[1];\n    let validity = alarm.getValidityAsString();\n    let ack = alarm.ack;\n\n    if (shelved) {\n      value = 'cleared';\n      priority = '';\n      validity = 'reliable';\n      ack = true;\n    }\n\n    const order = this.getAlarmStatusOrder(value, priority, validity, ack, shelved);\n\n    const tags = [];\n    tags.push(order);\n    tags.push(alarm.getModeAsString());\n    tags.push(value);\n    if (priority !== undefined) {\n      tags.push(priority);\n    }\n    tags.push(validity);\n    if (alarm.ack) {\n      tags.push('ack');\n    }\n    if (alarm.shelved) {\n      tags.push('shelved');\n    }\n    return tags.join('-');\n  }\n\n  /**\n  * Returns a string with a number that defines the place where the {@link Alarm} should be displayed on the Table according to the\n  * sorting by \"Status\" column\n  *\n  * @param {string} value string representation of the value of the {@link Alarm}\n  * @param {string} priority string representation of the priority of the {@link Alarm}\n  * @param {string} validity string representation of the validity of the {@link Alarm}\n  * @param {boolean} ack the ack status of the {@link Alarm}\n  * @returns {string} order for the {@link Alarm} in the Table\n  */\n  getAlarmStatusOrder(\n    value: string, priority: string, validity: string, ack: boolean, shelved: boolean): string {\n    let order = 0;\n    const priorities = ['critical', 'high', 'medium', 'low'];\n\n    // SET:\n    if (value === 'set') {\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = priorities.indexOf(priority);\n        } else {\n          order = 4 + priorities.indexOf(priority);\n        }\n      } else {\n        if (ack === false) {\n          order = 8 + priorities.indexOf(priority);\n        } else {\n          order = 12 + priorities.indexOf(priority);\n        }\n      }\n    } else {\n    // CLEARED:\n      if (validity === 'reliable') {\n        if (ack === false) {\n          order = 16;\n        } else {\n          order = 17;\n        }\n      } else {\n        if (ack === false) {\n          order = 18;\n        } else {\n          order = 19;\n        }\n      }\n    }\n    if (order \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientService.html":{"url":"injectables/HttpClientService.html","title":"injectable - HttpClientService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/http-client.service.ts\n        \n\n            \n                Description\n            \n            \n                Custom Http Client Service for CRUD operations\nand related actions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-client.service.ts:12\n                            \n                        \n\n                \n                    \n                            The \"constructor\" \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \ndelete(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/http-client.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Custom delete method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url with the selected object id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/http-client.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Custom get method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/http-client.service.ts:21\n                            \n                        \n\n\n                \n                    \n                            Method to manage httpRequest errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \npost(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/http-client.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Custom post method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            put\n                            \n                            \n                        \n                    \n                \n                \n                    \nput(url: , data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/http-client.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Custom put method\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                target url\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                json with data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\n\n\n/**\n* Custom Http Client Service for CRUD operations\n* and related actions\n*/\n@Injectable()\nexport class HttpClientService {\n\n  /** The \"constructor\" */\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n  * Method to manage httpRequest errors\n  */\n  private handleError(error: any): Promise {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n\n  /**\n  * Custom get method\n  * @param url target url\n  */\n  get(url) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.get(url, httpOptions);\n  }\n\n  /**\n  * Custom post method\n  * @param url target url\n  * @param data json with data\n  */\n  post(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(url, data, httpOptions);\n  }\n\n  /**\n  * Custom put method\n  * @param url target url\n  * @param data json with data\n  */\n  put(url, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.put(url, data, httpOptions);\n  }\n\n  /**\n  * Custom delete method\n  * @param url target url with the selected object id\n  */\n  delete(url) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.delete(url, httpOptions);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IasHealthOverviewComponent.html":{"url":"components/IasHealthOverviewComponent.html","title":"component - IasHealthOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IasHealthOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ias-health-overview/ias-health-overview.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the IAS health\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ias-health-overview\n            \n\n            \n                styleUrls\n                ias-health-overview.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ias-health-overview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                            \n                                    Public\n                                alarmId\n                            \n                            \n                                    Private\n                                alarmServiceSubscription\n                            \n                            \n                                    Public\n                                iconSet\n                            \n                            \n                                    Public\n                                iconUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndIcons\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ias-health-overview/ias-health-overview.component.ts:32\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndIcons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ias-health-overview/ias-health-overview.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Define the alarm that the component should listen to and its icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ias-health-overview/ias-health-overview.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ias-health-overview/ias-health-overview.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from  AlarmService when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ias-health-overview/ias-health-overview.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ias-health-overview/ias-health-overview.component.ts:26\n                            \n                        \n\n                \n                    \n                        Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ias-health-overview/ias-health-overview.component.ts:29\n                            \n                        \n\n                \n                    \n                        ID of the Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ias-health-overview/ias-health-overview.component.ts:32\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ias-health-overview/ias-health-overview.component.ts:20\n                            \n                        \n\n                \n                    \n                        Set of icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ias-health-overview/ias-health-overview.component.ts:23\n                            \n                        \n\n                \n                    \n                        Set of Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../alarm/alarm.component';\nimport { AlarmService } from '../alarm.service';\nimport { RoutingService } from '../routing.service';\nimport { Alarm } from '../alarm';\nimport { Assets } from '../settings';\n\n/**\n * Summarized state of the IAS health\n */\n@Component({\n  selector: 'app-ias-health-overview',\n  templateUrl: './ias-health-overview.component.html',\n  styleUrls: ['./ias-health-overview.component.css']\n})\nexport class IasHealthOverviewComponent implements OnInit, OnDestroy {\n\n  /** Set of icons */\n  public iconSet: AlarmImageSet;\n\n  /** Set of Unreliable icons */\n  public iconUnreliableSet: AlarmImageSet;\n\n  /** Alarm */\n  public alarm: Alarm;\n\n  /** ID of the Alarm */\n  public alarmId: string;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private alarmServiceSubscription: ISubscription;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndIcons();\n    this.alarmServiceSubscription = this.alarmService.alarmChangeStream.subscribe(notification => {\n      if (notification === 'all' || notification === this.alarmId) {\n        this.alarm = this.alarmService.get(this.alarmId);\n      }\n    });\n  }\n\n  /**\n  * Unsubscribes from  {@link AlarmService} when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.alarmServiceSubscription.unsubscribe();\n  }\n\n  /**\n  * Define the alarm that the component should listen to and its icons\n  */\n  defineAlarmsAndIcons() {\n    this.alarmId = 'IAS-Health-Global';\n\n    /** Set of icons */\n    this.iconSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-valid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_medium: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_high: Assets.ICONS + 'ias_health-valid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-valid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-valid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-valid-clear.svg',\n    });\n\n    /** Set of Unreliable icons */\n    this.iconUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'ias_health-invalid-clear.svg',\n      set_low: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_medium: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_high: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'ias_health-invalid-critical.svg',\n      unknown: Assets.ICONS + 'ias_health-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'ias_health-invalid-maint.svg',\n      shelved: Assets.ICONS + 'ias_health-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              IAS HEALTH\n              \n                \n              \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    IAS HEALTH                                                                  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IasHealthOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IasMaterialModule.html":{"url":"modules/IasMaterialModule.html","title":"module - IasMaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  IasMaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/ias-material/ias-material.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for the required Angular Material components\n\n            \n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\n/**\n* Module for the required Angular Material components\n*/\n@NgModule({\n  imports: [\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatToolbarModule\n  ],\n  exports: [\n    MatInputModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatTreeModule,\n    MatCheckboxModule,\n    MatToolbarModule\n  ],\n  declarations: []\n})\nexport class IasMaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Iasio.html":{"url":"classes/Iasio.html","title":"class - Iasio","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Iasio\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/iasio.ts\n        \n\n            \n                Description\n            \n            \n                Class to define Iasio objects, that represent monitoring points\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doc_url\n                            \n                            \n                                ias_type\n                            \n                            \n                                io_id\n                            \n                            \n                                short_desc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                asIasio\n                            \n                            \n                                    Static\n                                isValidIasio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attributes: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/iasio.ts:16\n                            \n                        \n\n                \n                    \n                            Builds a new IASIO instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        attributes\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                a dictionary containing the attributes to\ncreate the object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doc_url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doc_url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iasio.ts:16\n                            \n                        \n\n                \n                    \n                        URL of the documentation of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ias_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ias_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iasio.ts:13\n                            \n                        \n\n                \n                    \n                        Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            io_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        io_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iasio.ts:7\n                            \n                        \n\n                \n                    \n                        Core ID of the IASIO \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            short_desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        short_desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/iasio.ts:10\n                            \n                        \n\n                \n                    \n                        Short description of Alarms associated to this monitoring point \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            asIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/iasio.ts:50\n                            \n                        \n\n\n                \n                    \n                            Class method that receives an object and returns copy as an Iasio\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to convert to an Iasio\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Iasio\n\n                            \n                                \n                                    the object as an {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isValidIasio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidIasio(json: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/iasio.ts:34\n                            \n                        \n\n\n                \n                    \n                            Class method that checks if an object corresponds to an Iasio object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        json\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the object to check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it is an {\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Iasio {\n\n  /** Core ID of the IASIO */\n  io_id: string;\n\n  /** Short description of Alarms associated to this monitoring point */\n  short_desc: string;\n\n  /** Type of the IASIO, could be ALARM, DOUBLE, BOOLEAN, etc */\n  ias_type: string;\n\n  /** URL of the documentation of the IASIO */\n  doc_url: string;\n\n  /**\n  * Builds a new IASIO instance\n  *\n  * @param {Object} attributes a dictionary containing the attributes to\n  * create the object\n  */\n  constructor(attributes: Object = {}) {\n    Object.assign(this, attributes);\n  }\n\n  /**\n  * Class method that checks if an object corresponds to an Iasio object\n  *\n  * @param {any} json the object to check\n  * @returns {boolean} true if it is an {@link Iasio}, false if not\n  */\n  static isValidIasio(json: any): boolean {\n    return (\n      json.hasOwnProperty('io_id') &&\n      json.hasOwnProperty('short_desc') &&\n      json.hasOwnProperty('ias_type') &&\n      json.hasOwnProperty('doc_url')\n    );\n  }\n\n  /**\n  * Class method that receives an object and returns copy as an {@link Iasio}\n  *\n  * @param {any} json the object to convert to an Iasio\n  * @param {number} pk the primary key of the Iasio in the database\n  * @returns {Iasio} the object as an {@link Iasio} instance\n  */\n  static asIasio(json: any): Iasio {\n    if (!this.isValidIasio(json)) {\n      return null;\n    }\n    const io_id = json['io_id'];\n    const short_desc = json['short_desc'];\n    const ias_type = json['ias_type'];\n    const doc_url = json['doc_url'];\n    return new Iasio({ io_id, short_desc, ias_type, doc_url });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/legend/legend.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display the alarm table legend\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n            \n                styleUrls\n                legend.component.css,legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/legend/legend.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/legend/legend.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n* Component to display the alarm table legend\n*/\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.css', './legend.component.scss']\n})\nexport class LegendComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n        \n           set reliable\n        \n        \n           set unreliable\n        \n      \n\n      \n        \n           cleared reliable\n        \n        \n           cleared unreliable\n        \n      \n\n    \n    \n\n      \n        \n           unknown mode\n        \n        \n           maintenance -or- shutteddown mode\n        \n      \n\n    \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               set reliable                           set unreliable                                       cleared reliable                           cleared unreliable                                               unknown mode                           maintenance -or- shutteddown mode                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewCardComponent.html":{"url":"components/OverviewCardComponent.html","title":"component - OverviewCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview-card/overview-card.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable Card to show the summarized state of the subsystems in\nthe overview\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-card\n            \n\n            \n                styleUrls\n                overview-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./overview-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview-card/overview-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview-card/overview-card.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Reusable Card to show the summarized state of the subsystems in\n * the overview\n */\n@Component({\n  selector: 'app-overview-card',\n  templateUrl: './overview-card.component.html',\n  styleUrls: ['./overview-card.component.css']\n})\nexport class OverviewCardComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n    \n      \n    \n    \n        \n          \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewComponent.html":{"url":"components/OverviewComponent.html","title":"component - OverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview.component.ts\n\n\n    \n        Description\n    \n    \n        Main view that contains the components to redirect to more specific views\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                overview.component.css\n            \n\n\n\n            \n                templateUrl\n                ./overview.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/overview/overview.component.ts:11\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview/overview.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Main view that contains the components to redirect to more specific views\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         ANTENNAS \n          \n          \n      \n      \n         POWER \n          \n          \n      \n      \n         OBSERVATIONS \n          \n          \n      \n    \n    \n      \n         WEATHER \n          \n        \n          \n        \n      \n    \n    \n      \n         IAS HEALTH \n          \n        \n          \n        \n      \n      \n         NETWORK \n          \n          \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     ANTENNAS                                          POWER                                          OBSERVATIONS                                                  WEATHER                                                                  IAS HEALTH                                                          NETWORK                                 '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewWeatherCardContentComponent.html":{"url":"components/OverviewWeatherCardContentComponent.html","title":"component - OverviewWeatherCardContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewWeatherCardContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview-weather-card-content/overview-weather-card-content.component.ts\n\n\n    \n        Description\n    \n    \n        Summarized state of the weather alarm subsystem\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview-weather-card-content\n            \n\n            \n                styleUrls\n                overview-weather-card-content.component.css\n            \n\n\n\n            \n                templateUrl\n                ./overview-weather-card-content.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarmServiceSubscription\n                            \n                            \n                                    Public\n                                humidityAlarm\n                            \n                            \n                                    Public\n                                humidityAlarmId\n                            \n                            \n                                    Public\n                                humidityImageSet\n                            \n                            \n                                    Public\n                                humidityImageUnreliableSet\n                            \n                            \n                                    Public\n                                tempAlarm\n                            \n                            \n                                    Public\n                                tempAlarmId\n                            \n                            \n                                    Public\n                                tempImageSet\n                            \n                            \n                                    Public\n                                tempImageUnreliableSet\n                            \n                            \n                                    Public\n                                windsAlarm\n                            \n                            \n                                    Public\n                                windsAlarmId\n                            \n                            \n                                    Public\n                                windsImageSet\n                            \n                            \n                                    Public\n                                windsImageUnreliableSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defineAlarmsAndImages\n                            \n                            \n                                goToTableFilteredBy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, routing: RoutingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:56\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        routing\n                                                  \n                                                        \n                                                                    RoutingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to redirect to weather specialized views\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defineAlarmsAndImages\n                            \n                            \n                        \n                    \n                \n                \n                    \ndefineAlarmsAndImages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Define the alarms that the component should listen to and their respective icons\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToTableFilteredBy\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToTableFilteredBy(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:187\n                            \n                        \n\n\n                \n                    \n                            Redirect to table view applying the specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Space-separated String that contains words used to\nfilter the alarms in the table view\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from  AlarmService when the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Creates the component\nSubscribes to new alarms from the AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:56\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityAlarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:38\n                            \n                        \n\n                \n                    \n                        Humidity Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:47\n                            \n                        \n\n                \n                    \n                        ID of the Humidity Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:20\n                            \n                        \n\n                \n                    \n                        Set of Humidity icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            humidityImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        humidityImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:29\n                            \n                        \n\n                \n                    \n                        Set of Humidity Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempAlarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:41\n                            \n                        \n\n                \n                    \n                        Temperature Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:50\n                            \n                        \n\n                \n                    \n                        ID of the Temperature Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:23\n                            \n                        \n\n                \n                    \n                        Set of Temperature icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tempImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tempImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:32\n                            \n                        \n\n                \n                    \n                        Set of Temperature Unreliable icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsAlarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:44\n                            \n                        \n\n                \n                    \n                        Wind Speed Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsAlarmId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsAlarmId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:53\n                            \n                        \n\n                \n                    \n                        Wind ID of the Speed Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:26\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed icons \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windsImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windsImageUnreliableSet:     AlarmImageSet\n\n                    \n                \n                    \n                        \n                            Type :     AlarmImageSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/overview-weather-card-content/overview-weather-card-content.component.ts:35\n                            \n                        \n\n                \n                    \n                        Set of Wind Speed Unreliable icons \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { RoutingService } from '../routing.service';\nimport { Observable, BehaviorSubject , SubscriptionLike as ISubscription } from 'rxjs';\nimport { AlarmComponent, AlarmImageSet } from '../alarm/alarm.component';\nimport { AlarmService } from '../alarm.service';\nimport { Alarm } from '../alarm';\nimport { Assets } from '../settings';\n\n/**\n * Summarized state of the weather alarm subsystem\n */\n@Component({\n  selector: 'app-overview-weather-card-content',\n  templateUrl: './overview-weather-card-content.component.html',\n  styleUrls: ['./overview-weather-card-content.component.css']\n})\nexport class OverviewWeatherCardContentComponent implements OnInit, OnDestroy {\n\n  /** Set of Humidity icons */\n  public humidityImageSet: AlarmImageSet;\n\n  /** Set of Temperature icons */\n  public tempImageSet: AlarmImageSet;\n\n  /** Set of Wind Speed icons */\n  public windsImageSet: AlarmImageSet;\n\n  /** Set of Humidity Unreliable icons */\n  public humidityImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Temperature Unreliable icons */\n  public tempImageUnreliableSet: AlarmImageSet;\n\n  /** Set of Wind Speed Unreliable icons */\n  public windsImageUnreliableSet: AlarmImageSet;\n\n  /** Humidity Alarm */\n  public humidityAlarm: Alarm;\n\n  /** Temperature Alarm */\n  public tempAlarm: Alarm;\n\n  /** Wind Speed Alarm */\n  public windsAlarm: Alarm;\n\n  /** ID of the Humidity Alarm */\n  public humidityAlarmId: string;\n\n  /** ID of the Temperature Alarm */\n  public tempAlarmId: string;\n\n  /** Wind ID of the Speed Alarm */\n  public windsAlarmId: string;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private alarmServiceSubscription: ISubscription;\n\n  /**\n   * Builds an instance of the component\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {RoutingService} routing Service used to redirect to weather specialized views\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private routing: RoutingService,\n  ) { }\n\n  /**\n   * Creates the component\n   * Subscribes to new alarms from the {@link AlarmService}\n   */\n  ngOnInit() {\n    this.defineAlarmsAndImages();\n    this.alarmServiceSubscription = this.alarmService.alarmChangeStream.subscribe(notification => {\n      if (notification === 'all') {\n        this.humidityAlarm = this.alarmService.get(this.humidityAlarmId);\n        this.tempAlarm = this.alarmService.get(this.tempAlarmId);\n        this.windsAlarm = this.alarmService.get(this.windsAlarmId);\n\n      } else {\n        if (notification === this.windsAlarmId) {\n          this.windsAlarm = this.alarmService.get(notification);\n        }\n        if (notification === this.humidityAlarmId) {\n          this.humidityAlarm = this.alarmService.get(notification);\n        }\n        if (notification === this.tempAlarmId) {\n          this.tempAlarm = this.alarmService.get(notification);\n        }\n      }\n    });\n  }\n\n  /**\n  * Unsubscribes from  {@link AlarmService} when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.alarmServiceSubscription.unsubscribe();\n  }\n\n  /**\n  * Define the alarms that the component should listen to and their respective icons\n  */\n  defineAlarmsAndImages() {\n    this.humidityAlarmId = 'WS-Humidity-Global';\n    this.tempAlarmId = 'WS-Temperature-Global';\n    this.windsAlarmId = 'WS-WindSpeed-Global';\n\n    /** Set of Humidity icons */\n    this.humidityImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-valid-clear.svg',\n      set_low: Assets.ICONS + 'hum-valid-critical.svg',\n      set_medium: Assets.ICONS + 'hum-valid-critical.svg',\n      set_high: Assets.ICONS + 'hum-valid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-valid-critical.svg',\n      unknown: Assets.ICONS + 'hum-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-valid-maint.svg',\n      shelved: Assets.ICONS + 'hum-valid-clear.svg',\n    });\n\n    /** Set of Temperature icons */\n    this.tempImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-valid-clear.svg',\n      set_low: Assets.ICONS + 'temp-valid-critical.svg',\n      set_medium: Assets.ICONS + 'temp-valid-critical.svg',\n      set_high: Assets.ICONS + 'temp-valid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-valid-critical.svg',\n      unknown: Assets.ICONS + 'temp-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-valid-maint.svg',\n      shelved: Assets.ICONS + 'temp-valid-clear.svg',\n    });\n\n    /** Set of Wind Speed icons */\n    this.windsImageSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-valid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_medium: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_high: Assets.ICONS + 'wind_s-valid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-valid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-valid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-valid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-valid-clear.svg',\n    });\n\n    /** Set of Humidity Unreliable icons */\n    this.humidityImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'hum-invalid-clear.svg',\n      set_low: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_medium: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_high: Assets.ICONS + 'hum-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'hum-invalid-critical.svg',\n      unknown: Assets.ICONS + 'hum-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'hum-invalid-maint.svg',\n      shelved: Assets.ICONS + 'hum-invalid-clear.svg',\n    });\n\n    /** Set of Temperature Unreliable icons */\n    this.tempImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'temp-invalid-clear.svg',\n      set_low: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_medium: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_high: Assets.ICONS + 'temp-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'temp-invalid-critical.svg',\n      unknown: Assets.ICONS + 'temp-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'temp-invalid-maint.svg',\n      shelved: Assets.ICONS + 'temp-invalid-clear.svg',\n    });\n\n    /** Set of Wind Speed Unreliable icons */\n    this.windsImageUnreliableSet = new AlarmImageSet({\n      clear: Assets.ICONS + 'wind_s-invalid-clear.svg',\n      set_low: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_medium: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_high: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      set_critical: Assets.ICONS + 'wind_s-invalid-critical.svg',\n      unknown: Assets.ICONS + 'wind_s-invalid-unkn.svg',\n      maintenance: Assets.ICONS + 'wind_s-invalid-maint.svg',\n      shelved: Assets.ICONS + 'wind_s-invalid-clear.svg',\n    });\n  }\n\n  /**\n   * Redirect to table view applying the specified filter\n   * @param filter Space-separated String that contains words used to\n   * filter the alarms in the table view\n   */\n  goToTableFilteredBy(filter: string) {\n    this.routing.tableWithFilter(filter);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n              WIND SPEED\n              \n                \n              \n          \n      \n      \n          \n              HUMIDITY\n              \n                \n              \n              \n                  \n               -->\n          \n      \n      \n          \n              TEMPERATURE\n              \n                \n              \n          \n      \n    \n  \n  \n      \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    WIND SPEED                                                                                          HUMIDITY                                                                                           -->                                              TEMPERATURE                                                                            '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewWeatherCardContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingService.html":{"url":"injectables/RoutingService.html","title":"injectable - RoutingService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  RoutingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/routing.service.ts\n        \n\n            \n                Description\n            \n            \n                Service used to centralize all the navigation thorugh URLs\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tableWithFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/routing.service.ts:8\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                instance of an Angular {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableWithFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \ntableWithFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routing.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Go to the TabularViewComponent and pass a filter value by the URL\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                filter values to pass to the TabularViewComponent through the URL\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n* Service used to centralize all the navigation thorugh URLs\n*/\n@Injectable()\nexport class RoutingService {\n\n  /**\n  * Instantiates the service\n  * @param {Router} router instance of an Angular {@link Router} to handle routing\n  */\n  constructor(private router: Router) { }\n\n  /**\n  * Go to the TabularViewComponent and pass a filter value by the URL\n  * @param {string} filter filter values to pass to the TabularViewComponent through the URL\n  */\n  tableWithFilter(filter: string) {\n    filter.replace(' ', '_'); // TODO: This is wrong, fix it\n    this.router.navigate(['/tabular/' + filter]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveButtonComponent.html":{"url":"components/ShelveButtonComponent.html","title":"component - ShelveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shelve-button/shelve-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the Shelve Modal\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-button\n            \n\n            \n                styleUrls\n                shelve-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shelve-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alarm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonTooltipText\n                            \n                            \n                                loadAlarm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm_id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/shelve-button/shelve-button.component.ts:25\n                            \n                        \n\n                \n                    \n                            The \"constructor\", injects the AlarmService and the {@link modalService}\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get the alarm object based on the input id\n\n                                                        \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the Modal Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm_id\n                    \n                    \n                        Id of the alarm to be shelved\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shelve-button/shelve-button.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonTooltipText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonTooltipText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-button/shelve-button.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-button/shelve-button.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Get the alarm object related with the alarm id received as input using the\nAlarmService. Initialize the private variables of this component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-button/shelve-button.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            On init the component initialize the private variables using the method\n{@link loadAlarm}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-button/shelve-button.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Handle click on table rows, it triggers the shelve modal\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarm:     Alarm\n\n                    \n                \n                    \n                        \n                            Type :     Alarm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shelve-button/shelve-button.component.ts:25\n                            \n                        \n\n                \n                    \n                        Alarm object related with the alarm id received as input\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ShelveModalComponent } from '../shelve-modal/shelve-modal.component';\nimport { AlarmService } from '../alarm.service';\nimport { Alarm } from '../alarm';\n\n/**\n * Button used to trigger the event to open the Shelve Modal\n */\n@Component({\n  selector: 'app-shelve-button',\n  templateUrl: './shelve-button.component.html',\n  styleUrls: ['./shelve-button.component.css']\n})\nexport class ShelveButtonComponent implements OnInit {\n\n  /**\n   * Id of the alarm to be shelved\n   */\n  @Input() alarm_id: string;\n\n  /**\n   * Alarm object related with the alarm id received as input\n   */\n  public alarm: Alarm;\n\n\n  /**\n   * The \"constructor\", injects the {@link AlarmService} and the {@link modalService}\n   * @param {AlarmService} alarmService Service to get the alarm object based on the input id\n   * @param {ModalService} modalService Service to manage the Modal Component\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private modalService: NgbModal\n  ) { }\n\n  /**\n   * On init the component initialize the private variables using the method\n   * {@link loadAlarm}\n   */\n  ngOnInit() {\n    this.loadAlarm();\n  }\n\n  /**\n   * Returns the text to display in the shelve/unshelve button tooltip, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getButtonTooltipText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n\n  /**\n   * Get the alarm object related with the alarm id received as input using the\n   * AlarmService. Initialize the private variables of this component.\n   */\n  loadAlarm() {\n    this.alarm = this.alarmService.get(this.alarm_id);\n  }\n\n  /**\n  * Handle click on table rows, it triggers the shelve modal\n  */\n  onClick(event) {\n    const shelveModal = this.modalService.open(ShelveModalComponent,\n      { size: 'lg', centered: true }\n    );\n    shelveModal.componentInstance.alarm = this.alarm;\n    return shelveModal;\n  }\n}\n\n    \n\n    \n        \n    \n    \n      archive\n    \n    \n      unarchive\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              archive              unarchive    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShelveModalComponent.html":{"url":"components/ShelveModalComponent.html","title":"component - ShelveModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShelveModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shelve-modal/shelve-modal.component.ts\n\n\n    \n        Description\n    \n    \n        Modal used to acknowledge alarms\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shelve-modal\n            \n\n            \n                styleUrls\n                shelve-modal.component.css,shelve-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shelve-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSend\n                            \n                            \n                                getActionButtonText\n                            \n                            \n                                getAlarmDescription\n                            \n                            \n                                getAlarmUrl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendSuccessful\n                            \n                            \n                                shelve\n                            \n                            \n                                toggleShelveUnshelve\n                            \n                            \n                                unshelve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alarm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal, formBuilder: FormBuilder, alarmService: AlarmService, cdbService: CdbService, spinnerService: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shelve-modal/shelve-modal.component.ts:28\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to itself\n\n                                                        \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the form and validators\n\n                                                        \n                                                \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to send the request to acknowledge the alarm\n\n                                                        \n                                                \n                                                \n                                                        cdbService\n                                                  \n                                                        \n                                                                    CdbService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get complementary alarm information\n\n                                                        \n                                                \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to provide the loading spinner functionality\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alarm\n                    \n                    \n                        Alarm object to be shelved/unshelved\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canSend\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanSend()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if the action can be sent, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActionButtonText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActionButtonText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Returns the text to display in the action button, either \"Shelve\" or \"Unshelve\"\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    the text to display in the button\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmDescription\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmDescription()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Get the alarm description through the method provided by the CdbService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    description of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Get the link to the wikipage of the alarm through the method provided by the CdbService\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    URL for of the documentation of the {\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Create the form and check the validity of the form input fields\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendSuccessful\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendSuccessful(alarms: any, shelve: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Actions performed when the acknowledge is made ssuccesfully.\nFinally the modal is closed.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarms\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of sucessfully acknowledged alarms\n\n                                                        \n                                                \n                                                \n                                                        shelve\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the shelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleShelveUnshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleShelveUnshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Send the shelve/unshelve request through the method provided by the AlarmService and handle the response.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unshelve\n                            \n                            \n                        \n                    \n                \n                \n                    \nunshelve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Calls the webserver to apply the unshelving of the alarm\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:39\n                            \n                        \n\n                \n                    \n                        Reference to itself\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shelve-modal/shelve-modal.component.ts:28\n                            \n                        \n\n                \n                    \n                        Object used to manage the form and check the validity of the form input fields\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AlarmService } from '../alarm.service';\nimport { CdbService } from '../cdb.service';\nimport { Alarm } from '../alarm';\n\n\n/**\n * Modal used to acknowledge alarms\n */\n@Component({\n  selector: 'app-shelve-modal',\n  templateUrl: './shelve-modal.component.html',\n  styleUrls: ['./shelve-modal.component.css', './shelve-modal.component.scss']\n})\nexport class ShelveModalComponent implements OnInit {\n\n  /**\n   * Alarm object to be shelved/unshelved\n   */\n  @Input() alarm;\n\n  /**\n   * Object used to manage the form and check the validity of the form input fields\n   */\n  form: FormGroup;\n\n  /**\n   * Instantiates the component\n   * @param {ActiveModal} activeModal Reference to itself\n   * @param {FormBuilder} formBuilder Service to manage the form and validators\n   * @param {AlarmService} alarmService Service used to send the request to acknowledge the alarm\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {SpinnerService} spinnerService Service to provide the loading spinner functionality\n   */\n  constructor(\n    public activeModal: NgbActiveModal,\n    private formBuilder: FormBuilder,\n    private alarmService: AlarmService,\n    private cdbService: CdbService,\n    private spinnerService: NgxSpinnerService,\n  ) {\n  }\n\n  /**\n   * Create the form and check the validity of the form input fields\n   */\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      message: [null, [Validators.required]]\n    });\n  }\n\n  /**\n   * Actions performed when the acknowledge is made ssuccesfully.\n   * Finally the modal is closed.\n   * @param alarms list of sucessfully acknowledged alarms\n   */\n  sendSuccessful(alarms: any, shelve: boolean): void {\n    if (shelve) {\n      console.log('Shelved successful for alarms: ', alarms);\n    } else {\n      console.log('Unshelved successful for alarms: ', alarms);\n    }\n    this.activeModal.close();\n  }\n\n  /**\n   * Send the shelve/unshelve request through the method provided by the {@link AlarmService} and handle the response.\n   */\n  toggleShelveUnshelve(): void {\n    if (this.alarm.shelved) {\n      this.unshelve();\n    } else {\n      this.shelve();\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the shelving of the alarm\n   */\n  shelve() {\n    this.spinnerService.show();\n    if (this.canSend()) {\n      this.alarmService.shelveAlarm(\n        this.alarm.core_id, this.form.get('message').value).subscribe(\n          (response) => {\n            this.sendSuccessful(response, true);\n            this.spinnerService.hide();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.spinnerService.hide();\n            return error;\n          }\n        );\n    } else {\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Calls the webserver to apply the unshelving of the alarm\n   */\n  unshelve() {\n    this.spinnerService.show();\n    if (this.canSend()) {\n      this.alarmService.unshelveAlarms(\n        [this.alarm.core_id], this.form.get('message').value).subscribe(\n          (response) => {\n            this.sendSuccessful(response, false);\n            this.spinnerService.hide();\n          },\n          (error) => {\n            console.log('Error: ', error);\n            this.spinnerService.hide();\n            return error;\n          }\n        );\n    } else {\n      /* TODO: Show a message, add a red asterisc, etc. */\n    }\n  }\n\n  /**\n   * Defines wether the Shelve/unshelve action can be done or not, based on the status of the Alarm and the validity of the form\n   * @returns {boolean} true if the action can be sent, false if not\n   */\n  canSend(): boolean {\n    return this.alarm.shelved || this.form.valid;\n  }\n\n  /**\n   * Get the alarm description through the method provided by the {@link CdbService}\n   * @returns {string} description of the {@link Alarm}\n   */\n  getAlarmDescription() {\n    return this.cdbService.getAlarmDescription(this.alarm.core_id);\n  }\n\n  /**\n   * Get the link to the wikipage of the alarm through the method provided by the {@link CdbService}\n   * @returns {string} URL for of the documentation of the {@link Alarm}\n   */\n  getAlarmUrl() {\n    return this.cdbService.getAlarmsInformationUrl(this.alarm.core_id);\n  }\n\n  /**\n   * Returns the text to display in the action button, either \"Shelve\" or \"Unshelve\"\n   * @returns {string} the text to display in the button\n   */\n  getActionButtonText(): string {\n    if (!this.alarm) {\n      return null;\n    }\n    if (this.alarm.shelved) {\n      return 'Unshelve';\n    } else {\n      return 'Shelve';\n    }\n  }\n}\n\n    \n\n    \n        \n  {{alarm?.core_id}}\n  \n    &times;\n  \n\n\n\n  \n    \n      {{ getAlarmDescription() }} \n      \n        \n          Go to wiki&nbsp;\n        \n      \n    \n    \n      \n      \n        \n        \n          * The shelve button will be enabled after writing the message\n        \n      \n    \n  \n  \n    Cancel\n    {{ getActionButtonText() }}\n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{alarm?.core_id}}      ×              {{ getAlarmDescription() }}                         Go to wiki                                                             * The shelve button will be enabled after writing the message                          Cancel    {{ getActionButtonText() }}  '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShelveModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusViewComponent.html":{"url":"components/StatusViewComponent.html","title":"component - StatusViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatusViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/status-view/status-view.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component to show the state of an alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status-view\n            \n\n            \n                styleUrls\n                status-view.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alarmTags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getContainerClasses\n                            \n                            \n                                getSymbolStyle\n                            \n                            \n                                    Private\n                                hasTag\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/status-view/status-view.component.ts:22\n                            \n                        \n\n                \n                    \n                            Instantiates the component\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Dash-separated string with the tags that define the state of an alarm\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/status-view/status-view.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getContainerClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetContainerClasses()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/status-view/status-view.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Return the list of classes that define the main style of the status container\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    list of container classes to apply the style to the component\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSymbolStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSymbolStyle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/status-view/status-view.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Return the status symbol style used to represent if the alarm is SET or\nCLEARED\n\n\n                            \n                            \n                            \n                                Returns :     object\n\n                            \n                                \n                                    the style for the symbol\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasTag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasTag(tag: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/status-view/status-view.component.ts:117\n                            \n                        \n\n\n                \n                    \n                            Method to search if the component contains an specific tag\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                String of the searched tag\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    true if it has the tag, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/status-view/status-view.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            On init it processes the input and push the tags into the {@link alarmTags}\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmTags:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/status-view/status-view.component.ts:22\n                            \n                        \n\n                \n                    \n                        List of tags that define the state of an alarm\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { OperationalMode } from '../alarm';\n\n/**\n * Reusable component to show the state of an alarm\n */\n@Component({\n  selector: 'app-status-view',\n  templateUrl: './status-view.component.html',\n  styleUrls: ['./status-view.component.css']\n})\nexport class StatusViewComponent implements OnInit {\n\n  /**\n   * Dash-separated string with the tags that define the state of an alarm\n   */\n  @Input() value: string;\n\n  /**\n   * List of tags that define the state of an alarm\n   */\n  private alarmTags = [];\n\n  /**\n  * Instantiates the component\n  */\n  constructor() { }\n\n  /**\n   * On init it processes the input and push the tags into the {@link alarmTags}\n   */\n  ngOnInit() {\n    const tags = this.value.toString().split('-');\n    if (tags.length >= 2) {\n        for (const tag of this.value.toString().split('-')) {\n          this.alarmTags.push(tag);\n        }\n    } else {\n        this.alarmTags = [];\n    }\n  }\n\n  /**\n  * Return the list of classes that define the main style of the status container\n  * @returns {any} list of container classes to apply the style to the component\n  */\n  getContainerClasses(): any {\n    const classes = ['alarm-status'];\n\n    if (this.hasTag('shelved')) {\n      classes.push('status-cleared');\n      return classes;\n    }\n\n    if (this.hasTag('maintenance') || this.hasTag('shuttedown')) {\n      classes.push('status-maintenance');\n    } else if (this.hasTag('unknown')) {\n      classes.push('status-unknown');\n    } else {\n      if (this.hasTag('cleared')) {\n        classes.push('status-cleared');\n      } else if (this.hasTag('set')) {\n        classes.push('status-set');\n      } else {\n        classes.push('status-error');\n      }\n    }\n\n    if (this.hasTag('unreliable')) {\n      classes.push('status-unreliable');\n    }\n\n    if (!this.hasTag('ack')) {\n      classes.push('blink');\n    }\n\n    return classes;\n  }\n\n  /**\n  * Return the status symbol style used to represent if the alarm is SET or\n  * CLEARED\n  * @returns {object} the style for the symbol\n  */\n  getSymbolStyle(): object {\n\n    let color: string;\n    let visibility: string;\n\n    if (this.hasTag('shelved')) {\n      visibility = 'hidden';\n      color = 'black';\n    } else if (this.hasTag('set')) {\n      visibility = 'visible';\n      color = 'white';\n    } else if (this.hasTag('cleared')) {\n      visibility = 'hidden';\n      color = 'black';\n    } else {\n      visibility = 'visible';\n      color = 'black';  // error\n    }\n\n    const style = {\n      'visibility': visibility,\n      'color': color\n    };\n\n    return style;\n  }\n\n  /**\n   * Method to search if the component contains an specific tag\n   * @param {string} tag String of the searched tag\n   * @returns {boolean} true if it has the tag, false if not\n   */\n  private hasTag(tag): boolean {\n    return this.alarmTags.indexOf(tag) > -1 ? true : false;\n  }\n\n}\n\n    \n\n    \n        \n   &#9650; \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   ▲ '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabularViewComponent.html":{"url":"components/TabularViewComponent.html","title":"component - TabularViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabularViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabular-view/tabular-view.component.ts\n\n\n    \n        Description\n    \n    \n        Component that dispays all the Alarms in a table\nThe user can change the default sorting by clicking on the headers and filter\nby typing in an input field\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabular-view\n            \n\n            \n                styleUrls\n                tabular-view.component.css,tabular-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabular-view.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _setFilterActivated\n                            \n                            \n                                    Private\n                                alarmServiceSubscription\n                            \n                            \n                                    Public\n                                alarmsList\n                            \n                            \n                                    Private\n                                cdbServiceSubscription\n                            \n                            \n                                    Public\n                                dataSource\n                            \n                            \n                                    Private\n                                dateFormat\n                            \n                            \n                                    Public\n                                displayedColumns\n                            \n                            \n                                    Public\n                                filterPredicate\n                            \n                            \n                                    Public\n                                filterString\n                            \n                            \n                                    Private\n                                filterValueForSetAlarms\n                            \n                            \n                                    Public\n                                iasDataAvailable\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                            \n                                    Private\n                                timezone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                getAlarmDataFromCdbService\n                            \n                            \n                                loadTable\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleFilterOnlySetAlarm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alarmService: AlarmService, cdbService: CdbService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/tabular-view/tabular-view.component.ts:88\n                            \n                        \n\n                \n                    \n                            Instantiates the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alarmService\n                                                  \n                                                        \n                                                                    AlarmService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get the Alarms\n\n                                                        \n                                                \n                                                \n                                                        cdbService\n                                                  \n                                                        \n                                                                    CdbService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service used to get complementary alarm information\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Reference to the url that triggered the initialization\nof this component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(filter: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:189\n                            \n                        \n\n\n                \n                    \n                            Applies the filter ot the Table\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAlarmDataFromCdbService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAlarmDataFromCdbService(core_id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:171\n                            \n                        \n\n\n                \n                    \n                            Gets data (short description and url) from the CdbService\nfor a given Alarm\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        core_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                the core_id of the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { description: any; url: any; }\n\n                            \n                                \n                                    A JSON with 2 key: description and url\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTable\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadTable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            Loads the table with data from CdbService and AlarmService\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Applies the table's default sorting after its initialization \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from CdbService and AlarmService\nwhen the component is destroyed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Create the table when the component is initializated\nSubscribes to IAS configuration information from the CdbService\nSubscribes to new alarms from the AlarmService\nRetrieves filter values passed by the URL and applies them to the table\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleFilterOnlySetAlarm\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleFilterOnlySetAlarm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:207\n                            \n                        \n\n\n                \n                    \n                            Toggle the filtering for only set Alarm objects ON/OFF\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _setFilterActivated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _setFilterActivated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:37\n                            \n                        \n\n                \n                    \n                        Defines wether the filter for only SET Alarm is activated or not.\nWhen the user writes either \"set\", \" set\" or \"set \" this field becomes true\nIf the user deletes \"set\" from the input field then this field becomes false\nThis attribute is binded to the state of the toggle slide switch\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alarmServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:60\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alarmsList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarmsList:     DisplayedAlarm[]\n\n                    \n                \n                    \n                        \n                            Type :     DisplayedAlarm[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:72\n                            \n                        \n\n                \n                    \n                        List of DisplayedAlarm objects \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cdbServiceSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdbServiceSubscription:     ISubscription\n\n                    \n                \n                    \n                        \n                            Type :     ISubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:63\n                            \n                        \n\n                \n                    \n                        Subscription to changes in the Alarms stored in the AlarmService \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataSource:     MatTableDataSource\n\n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:57\n                            \n                        \n\n                \n                    \n                        DataSource of the Table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:48\n                            \n                        \n\n                \n                    \n                        String to store the formatting of dates, read form the settings \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayedColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayedColumns:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['status', 'name',  'mode', 'timestamp', 'description', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:45\n                            \n                        \n\n                \n                    \n                        Array that defines which coulmns are going to be displayed and in which order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterPredicate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPredicate:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: DisplayedAlarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:78\n                            \n                        \n\n                \n                    \n                        Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterString:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:40\n                            \n                        \n\n                \n                    \n                        String that stores the test input in the filter textfield \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filterValueForSetAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterValueForSetAlarms:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'set'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:54\n                            \n                        \n\n                \n                    \n                        String to define the keyword to filter SET Alarm \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iasDataAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iasDataAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:69\n                            \n                        \n\n                \n                    \n                        Subscription to be notified when there is data available from the\nIAS Table in the  CdbService\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     MatSort\n\n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        Reference to the MatSort, the component that defines the sorting of the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        table:     MatTable\n\n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the MatTable, the component that defines the table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timezone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timezone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:51\n                            \n                        \n\n                \n                    \n                        String to store the timezone to display dates, read from the settings \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n\n                \n                    \n                        getfilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:232\n                                \n                            \n                    \n                        \n                                Returns the filters applied to the Table\n\n\n                                \n                                \n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        toggleStatus\n                    \n                \n\n                \n                    \n                        gettoggleStatus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tabular-view/tabular-view.component.ts:240\n                                \n                            \n                    \n                        \n                                Returns the status of the Toggle for the filtering of set Alarms\n\n\n                                \n                                \n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Injectable, OnInit, ViewChild, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Observable ,  BehaviorSubject ,  SubscriptionLike as ISubscription } from 'rxjs';\nimport { MatTableDataSource, MatSort, MatSortable, MatTable } from '@angular/material';\nimport { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { ActivatedRoute } from '@angular/router';\nimport { Alarm, OperationalMode, Validity } from '../alarm';\nimport { DisplayedAlarm } from '../displayed-alarm';\nimport { AlarmService } from '../alarm.service';\nimport { CdbService } from '../cdb.service';\nimport { Locale } from '../settings';\n\n/**\n* Component that dispays all the Alarms in a table\n*\n* The user can change the default sorting by clicking on the headers and filter\n* by typing in an input field\n*/\n@Component({\n  selector: 'app-tabular-view',\n  templateUrl: './tabular-view.component.html',\n  styleUrls: ['./tabular-view.component.css', './tabular-view.component.scss']\n})\nexport class TabularViewComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  /** Reference to the MatTable, the component that defines the table */\n  @ViewChild(MatTable) table: MatTable;\n\n  /** Reference to the MatSort, the component that defines the sorting of the table */\n  @ViewChild(MatSort) sort: MatSort;\n\n  /**\n  * Defines wether the filter for only SET {@link Alarm} is activated or not.\n  * When the user writes either \"set\", \" set\" or \"set \" this field becomes true\n  * If the user deletes \"set\" from the input field then this field becomes false\n  * This attribute is binded to the state of the toggle slide switch\n  */\n  public _setFilterActivated = false;\n\n  /** String that stores the test input in the filter textfield */\n  public filterString = '';\n\n  /**\n  * Array that defines which coulmns are going to be displayed and in which order\n  */\n  public displayedColumns = ['status', 'name',  'mode', 'timestamp', 'description', 'actions'];\n\n  /** String to store the formatting of dates, read form the settings */\n  private dateFormat: string;\n\n  /** String to store the timezone to display dates, read from the settings */\n  private timezone: string;\n\n  /** String to define the keyword to filter SET {@link Alarm} */\n  private filterValueForSetAlarms = 'set';\n\n  /** DataSource of the Table */\n  public dataSource: MatTableDataSource;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private alarmServiceSubscription: ISubscription;\n\n  /** Subscription to changes in the Alarms stored in the {@link AlarmService} */\n  private cdbServiceSubscription: ISubscription;\n\n  /**\n  * Subscription to be notified when there is data available from the\n  * IAS Table in the  {@link CdbService}\n  */\n  public iasDataAvailable = new BehaviorSubject(false);\n\n  /** List of {@link DisplayedAlarm} objects */\n  public alarmsList: DisplayedAlarm[] = [];\n\n  /**\n  * Custom function to apply the filtering to the Table rows. Compares a row of the table with the filter values\n  * @returns {boolean} true if the row matches the filter, false if not\n  */\n  public filterPredicate: (\n    (data: DisplayedAlarm, filterString: string) => boolean) = (data: DisplayedAlarm, filterString: string): boolean => {\n    const dataStr = data.toStringForFiltering().toLowerCase();\n    const filters = filterString.toLowerCase().split(' ');\n    for (const filter of filters) {\n      if (dataStr.indexOf(filter) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Instantiates the service\n   * @param {AlarmService} alarmService Service used to get the Alarms\n   * @param {CdbService} cdbService Service used to get complementary alarm information\n   * @param {Route} route Reference to the url that triggered the initialization\n   * of this component\n   */\n  constructor(\n    private alarmService: AlarmService,\n    private cdbService: CdbService,\n    private route: ActivatedRoute\n  ) {}\n\n  /**\n   * Create the table when the component is initializated\n   * Subscribes to IAS configuration information from the {@link CdbService}\n   * Subscribes to new alarms from the {@link AlarmService}\n   * Retrieves filter values passed by the URL and applies them to the table\n   */\n  ngOnInit() {\n    this.dateFormat = Locale.DATE_FORMAT;\n    this.timezone = Locale.TIMEZONE;\n    this.sort.sort( {\n      id: 'status',\n      start: 'asc'\n    });\n    this.dataSource = new MatTableDataSource();\n    this.dataSource.filterPredicate = this.filterPredicate;\n    this.cdbServiceSubscription = this.cdbService.iasDataAvailable.subscribe(\n      value => {\n        this.iasDataAvailable.next(value);\n        this.loadTable();\n      }\n    );\n    this.alarmServiceSubscription = this.alarmService.alarmChangeStream.subscribe(notification => {\n      this.loadTable();\n    });\n    let filterValue = this.route.snapshot.paramMap.get('filter');\n    if (filterValue && filterValue !== '') {\n      filterValue = filterValue.replace('_', ' ');\n      this.applyFilter(filterValue);\n    }\n  }\n\n  /** Applies the table's default sorting after its initialization */\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  /**\n  * Unsubscribes from {@link CdbService} and {@link AlarmService}\n  * when the component is destroyed\n  */\n  ngOnDestroy() {\n    this.cdbServiceSubscription.unsubscribe();\n    this.alarmServiceSubscription.unsubscribe();\n  }\n\n\n  /**\n  * Loads the table with data from {@link CdbService} and {@link AlarmService}\n  */\n  loadTable() {\n    const self = this;\n    this.alarmsList = Object.keys(this.alarmService.alarms).map(function(key) {\n      const dataFromCdb = self.getAlarmDataFromCdbService(self.alarmService.alarms[key].core_id);\n      return new DisplayedAlarm(\n        self.alarmService.alarms[key],\n        dataFromCdb.description,\n        dataFromCdb.url\n      );\n    });\n    this.dataSource.data = this.alarmsList;\n  }\n\n  /**\n  * Gets data (short description and url) from the {@link CdbService}\n  * for a given {@link Alarm}\n  * @param {string} core_id the core_id of the {@link Alarm} for which to retriev info,\n  * @returns {JSON} A JSON with 2 key: description and url\n  */\n  getAlarmDataFromCdbService(core_id: string) {\n    if (this.iasDataAvailable.getValue() === true) {\n      return {\n        description: this.cdbService.getAlarmDescription(core_id),\n        url: this.cdbService.getAlarmsInformationUrl(core_id)\n      };\n    } else {\n      return {\n        description: '',\n        url: ''\n      };\n    }\n  }\n\n  /**\n  * Applies the filter ot the Table\n  * @param {string} filterValue the string containing keywords for filtering\n  */\n  applyFilter(filter: string) {\n    this.filterString = filter;\n    const arrayOfFilters = filter.split(' ');\n    // If \"set\" IS in the array, then it is activated\n    if (arrayOfFilters.indexOf(this.filterValueForSetAlarms) >= 0 ) {\n      this._setFilterActivated = true;\n\n    } else { // If \"set\" NOT in the field, then it is deactivated\n      this._setFilterActivated = false;\n    }\n    filter = filter.trim();\n    filter = filter.toLowerCase();\n    this.dataSource.filter = filter;\n  }\n\n  /**\n  * Toggle the filtering for only set {@link Alarm} objects ON/OFF\n  */\n  toggleFilterOnlySetAlarm() {\n    if (this.filterString == null) {\n      this.filterString = '';\n    }\n    const arrayOfFilters = this.filterString.split(' ');\n    const indexOfSet = arrayOfFilters.indexOf(this.filterValueForSetAlarms);\n\n    // If activated then should deactivate:\n    if (this._setFilterActivated) {\n      if ( indexOfSet >= 0 ) {\n        arrayOfFilters.splice(indexOfSet, 1);\n      }\n    } else { // If deactivated then should activate:\n      if ( indexOfSet \n    \n\n    \n        \n\n  \n    \n        \n          Alarms\n        \n        \n        \n    \n  \n  \n\n    \n\n    \n      All / Set only\n     -->\n\n    \n      \n        \n          \n        \n      \n      \n        \n           -->\n           Show only set alarms\n            \n            \n          \n        \n      \n    \n\n    \n\n      \n      \n        \n           Status \n        \n        \n          \n        \n      \n\n      \n      \n        \n           Alarm Name \n        \n         {{alarm.name}} \n      \n\n      \n      \n        \n           Mode \n        \n         {{alarm.mode}} \n      \n\n      \n      \n        \n           Last Change Time \n        \n         {{ alarm.timestamp | date: dateFormat: timezone }} \n      \n\n      \n      \n        \n           Description \n        \n         {{alarm.description}} \n      \n\n      \n      \n        \n           Actions \n        \n        \n          \n          \n          \n        \n      \n\n      \n      \n    \n  \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Alarms                                              All / Set only     -->                                                                   -->           Show only set alarms                                                                                       Status                                                                        Alarm Name                  {{alarm.name}}                                      Mode                  {{alarm.mode}}                                      Last Change Time                  {{ alarm.timestamp | date: dateFormat: timezone }}                                      Description                  {{alarm.description}}                                      Actions                                                                                 '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabularViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WikiButtonComponent.html":{"url":"components/WikiButtonComponent.html","title":"component - WikiButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WikiButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/wiki-button/wiki-button.component.ts\n\n\n    \n        Description\n    \n    \n        Button used to trigger the event to open the documentation of an Alarm\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wiki-button\n            \n\n            \n                styleUrls\n                wiki-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wiki-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/wiki-button/wiki-button.component.ts:16\n                            \n                        \n\n                \n                    \n                            Builds an instance of the component \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                    \n                        Url of the wiki documentation page\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/wiki-button/wiki-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/wiki-button/wiki-button.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Instantiates the component \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Button used to trigger the event to open the documentation of an Alarm\n */\n@Component({\n  selector: 'app-wiki-button',\n  templateUrl: './wiki-button.component.html',\n  styleUrls: ['./wiki-button.component.css']\n})\nexport class WikiButtonComponent implements OnInit {\n\n  /**\n   * Url of the wiki documentation page\n   */\n  @Input() url: string;\n\n  /** Builds an instance of the component */\n  constructor() { }\n\n  /** Instantiates the component */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n     Go to wiki &nbsp;\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Go to wiki    '\n    var COMPONENTS = [{'name': 'AckButtonComponent', 'selector': 'app-ack-button'},{'name': 'AckModalComponent', 'selector': 'app-ack-modal'},{'name': 'AckTreeComponent', 'selector': 'app-ack-tree'},{'name': 'AlarmComponent', 'selector': 'app-alarm'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'IasHealthOverviewComponent', 'selector': 'app-ias-health-overview'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'OverviewCardComponent', 'selector': 'app-overview-card'},{'name': 'OverviewComponent', 'selector': 'app-overview'},{'name': 'OverviewWeatherCardContentComponent', 'selector': 'app-overview-weather-card-content'},{'name': 'ShelveButtonComponent', 'selector': 'app-shelve-button'},{'name': 'ShelveModalComponent', 'selector': 'app-shelve-modal'},{'name': 'StatusViewComponent', 'selector': 'app-status-view'},{'name': 'TabularViewComponent', 'selector': 'app-tabular-view'},{'name': 'WikiButtonComponent', 'selector': 'app-wiki-button'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WikiButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/ack-button/ack-button.component.ts\n            \n            \n                component\n            \n            \n                AckButtonComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/ack-modal/ack-modal.component.ts\n            \n            \n                component\n            \n            \n                AckModalComponent\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                    src/app/ack-tree/ack-tree.component.ts\n            \n            \n                component\n            \n            \n                AckTreeComponent\n            \n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                    src/app/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemFlatNode\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/ack-tree/ack-tree.component.ts\n            \n            \n                class\n            \n            \n                AlarmItemNode\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/alarm.service.ts\n            \n            \n                injectable\n            \n            \n                AlarmService\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    src/app/alarm.ts\n            \n            \n                class\n            \n            \n                Alarm\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    src/app/alarm/alarm.component.ts\n            \n            \n                component\n            \n            \n                AlarmComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/alarm/alarm.component.ts\n            \n            \n                class\n            \n            \n                AlarmImageSet\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    src/app/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/alarm/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockImageUnreliableSet\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/cdb.service.ts\n            \n            \n                injectable\n            \n            \n                CdbService\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/displayed-alarm.ts\n            \n            \n                class\n            \n            \n                DisplayedAlarm\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/http-client.service.ts\n            \n            \n                injectable\n            \n            \n                HttpClientService\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/ias-health-overview/ias-health-overview.component.ts\n            \n            \n                component\n            \n            \n                IasHealthOverviewComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    src/app/iasio.ts\n            \n            \n                class\n            \n            \n                Iasio\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/legend/legend.component.ts\n            \n            \n                component\n            \n            \n                LegendComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/overview-card/overview-card.component.ts\n            \n            \n                component\n            \n            \n                OverviewCardComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/overview-weather-card-content/overview-weather-card-content.component.ts\n            \n            \n                component\n            \n            \n                OverviewWeatherCardContentComponent\n            \n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                    src/app/overview/overview.component.ts\n            \n            \n                component\n            \n            \n                OverviewComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/routing.service.ts\n            \n            \n                injectable\n            \n            \n                RoutingService\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Assets\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                BackendUrls\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Locale\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                StorageItems\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/settings.ts\n            \n            \n                variable\n            \n            \n                Streams\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/shelve-button/shelve-button.component.ts\n            \n            \n                component\n            \n            \n                ShelveButtonComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/shelve-modal/shelve-modal.component.ts\n            \n            \n                component\n            \n            \n                ShelveModalComponent\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    src/app/status-view/status-view.component.ts\n            \n            \n                component\n            \n            \n                StatusViewComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                alarms_date\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                datepipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedFilteredTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                ExpectedTableRows\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockAlarms\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular-view/fixtures.ts\n            \n            \n                variable\n            \n            \n                MockIasios\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/tabular-view/tabular-view.component.ts\n            \n            \n                component\n            \n            \n                TabularViewComponent\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    src/app/wiki-button/wiki-button.component.ts\n            \n            \n                component\n            \n            \n                WikiButtonComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.4\n        \n            @angular/cdk : ^6.2.1\n        \n            @angular/common : 6.0.4\n        \n            @angular/compiler : 6.0.4\n        \n            @angular/core : 6.0.4\n        \n            @angular/forms : 6.0.4\n        \n            @angular/http : 6.0.4\n        \n            @angular/material : ^6.2.1\n        \n            @angular/platform-browser : 6.0.4\n        \n            @angular/platform-browser-dynamic : 6.0.4\n        \n            @angular/platform-server : 6.0.4\n        \n            @angular/router : 6.0.4\n        \n            @ng-bootstrap/ng-bootstrap : ^2.1.0\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.7\n        \n            django-channels : ^1.1.8\n        \n            hammerjs : ^2.0.8\n        \n            ionicons : ^3.0.0\n        \n            jquery : ^3.3.1\n        \n            ngx-spinner : ^6.0.0\n        \n            popper.js : ^1.14.3\n        \n            rxjs : ^6.2.0\n        \n            rxjs-compat : ^6.2.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OperationalMode   (src/.../alarm.ts)\n                        \n                        \n                            Validity   (src/.../alarm.ts)\n                        \n                        \n                            Value   (src/.../alarm.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/alarm.ts\n    \n        \n            \n                \n                    \n                        \n                        OperationalMode\n                    \n                \n                    \n                        \n                            List of the possible Operational Modes\n\n                        \n                    \n                        \n                            \n                                 startup\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 initialization\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 closing\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 shuttedown\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 maintenance\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n                        \n                            \n                                 operational\n                            \n                        \n                        \n                            \n                                Value: 5\n                            \n                        \n                        \n                            \n                                 degraded\n                            \n                        \n                        \n                            \n                                Value: 6\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value: 7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Validity\n                    \n                \n                    \n                        \n                            List of the possible Validity values\n\n                        \n                    \n                        \n                            \n                                 unreliable\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 reliable\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Value\n                    \n                \n                    \n                        \n                            List of the possible Values of an Alarm\n\n                        \n                    \n                        \n                            \n                                 cleared\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 set_low\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 set_medium\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 set_high\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 set_critical\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIasDisplay\nThis project was generated with Angular CLI version 1.4.5.\nCurrent instructions are related to a development environment under CentOS Linux release 7.\nDocumentation\nDocumentation is available here:\nhttps://integratedalarmsystem-group.github.io/ias-display/index.html\nPlease note that the documentation here corresponds to the master branch version\nInstalling\nConsider the following instructions from the root project folder.\nTo install Nodejs, npm and angular-cli\n[ias-display]$ sudo yum install nodejs\n[ias-display]$ sudo yum install npm\n[ias-display]$ sudo npm install -g @angular/cliTo install the required local libraries\n[ias-display]$ npm installDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nUpdating documentation\nRun npm run compodoc\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nGNU LESSER GENERAL PUBLIC LICENSE\nVersion 3, 29 June 2007\nCopyright (C) 2007 Free Software Foundation, Inc.\nhttps://fsf.org/\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\nThis version of the GNU Lesser General Public License incorporates the\nterms and conditions of version 3 of the GNU General Public License,\nsupplemented by the additional permissions listed below.\n0. Additional Definitions.\nAs used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the\nGNU General Public License.\n\"The Library\" refers to a covered work governed by this License, other\nthan an Application or a Combined Work as defined below.\nAn \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\nA \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library. The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\nThe \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\nThe \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n1. Exception to Section 3 of the GNU GPL.\nYou may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n2. Conveying Modified Versions.\nIf you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\na) under this License, provided that you make a good faith effort\nto ensure that, in the event an Application does not supply the\nfunction or data, the facility still operates, and performs\nwhatever part of its purpose remains meaningful, or\nb) under the GNU GPL, with none of the additional permissions of\nthis License applicable to that copy.\n\n3. Object Code Incorporating Material from Library Header Files.\nThe object code form of an Application may incorporate material from a\nheader file that is part of the Library. You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\na) Give prominent notice with each copy of the object code that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the object code with a copy of the GNU GPL and this\nlicense document.\n\n4. Combined Works.\nYou may convey a Combined Work under terms of your choice that, taken\ntogether, effectively do not restrict modification of the portions of\nthe Library contained in the Combined Work and reverse engineering for\ndebugging such modifications, if you also do each of the following:\n\na) Give prominent notice with each copy of the Combined Work that\nthe Library is used in it and that the Library and its use are\ncovered by this License.\nb) Accompany the Combined Work with a copy of the GNU GPL and this\nlicense document.\nc) For a Combined Work that displays copyright notices during\nexecution, include the copyright notice for the Library among\nthese notices, as well as a reference directing the user to the\ncopies of the GNU GPL and this license document.\nd) Do one of the following:\n0) Convey the Minimal Corresponding Source under the terms of\nthis License, and the Corresponding Application Code in a form\nsuitable for, and under terms that permit, the user to\nrecombine or relink the Application with a modified version of\nthe Linked Version to produce a modified Combined Work, in the\nmanner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.\n1) Use a suitable shared library mechanism for linking with\nthe Library. A suitable mechanism is one that (a) uses at run\ntime a copy of the Library already present on the user's\ncomputer system, and (b) will operate properly with a modified\nversion of the Library that is interface-compatible with the\nLinked Version.\n\n\ne) Provide Installation Information, but only if you would\notherwise be required to provide such information under section 6\nof the GNU GPL, and only to the extent that such information is\nnecessary to install and execute a modified version of the\nCombined Work produced by recombining or relinking the Application\nwith a modified version of the Linked Version. (If you use option\n4d0, the Installation Information must accompany the Minimal\nCorresponding Source and Corresponding Application Code. If you\nuse option 4d1, you must provide the Installation Information in\nthe manner specified by section 6 of the GNU GPL for conveying\nCorresponding Source.)\n\n5. Combined Libraries.\nYou may place library facilities that are a work based on the Library\nside by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\na) Accompany the combined library with a copy of the same work\nbased on the Library, uncombined with any other library\nfacilities, conveyed under the terms of this License.\nb) Give prominent notice with the combined library that part of it\nis a work based on the Library, and explaining where to find the\naccompanying uncombined form of the same work.\n\n6. Revised Versions of the GNU Lesser General Public License.\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Library\nas you received it specifies that a certain numbered version of the\nGNU Lesser General Public License \"or any later version\" applies to\nit, you have the option of following the terms and conditions either\nof that published version or of any later version published by the\nFree Software Foundation. If the Library as you received it does not\nspecify a version number of the GNU Lesser General Public License, you\nmay choose any version of the GNU Lesser General Public License ever\npublished by the Free Software Foundation.\nIf the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IasMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAckButtonComponent\n\nAckButtonComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAckButtonComponent->AppModule\n\n\n\n\n\nAckModalComponent\n\nAckModalComponent\n\nAppModule -->\n\nAckModalComponent->AppModule\n\n\n\n\n\nAckTreeComponent\n\nAckTreeComponent\n\nAppModule -->\n\nAckTreeComponent->AppModule\n\n\n\n\n\nAlarmComponent\n\nAlarmComponent\n\nAppModule -->\n\nAlarmComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIasHealthOverviewComponent\n\nIasHealthOverviewComponent\n\nAppModule -->\n\nIasHealthOverviewComponent->AppModule\n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nAppModule -->\n\nLegendComponent->AppModule\n\n\n\n\n\nOverviewCardComponent\n\nOverviewCardComponent\n\nAppModule -->\n\nOverviewCardComponent->AppModule\n\n\n\n\n\nOverviewComponent\n\nOverviewComponent\n\nAppModule -->\n\nOverviewComponent->AppModule\n\n\n\n\n\nOverviewWeatherCardContentComponent\n\nOverviewWeatherCardContentComponent\n\nAppModule -->\n\nOverviewWeatherCardContentComponent->AppModule\n\n\n\n\n\nShelveButtonComponent\n\nShelveButtonComponent\n\nAppModule -->\n\nShelveButtonComponent->AppModule\n\n\n\n\n\nShelveModalComponent\n\nShelveModalComponent\n\nAppModule -->\n\nShelveModalComponent->AppModule\n\n\n\n\n\nStatusViewComponent\n\nStatusViewComponent\n\nAppModule -->\n\nStatusViewComponent->AppModule\n\n\n\n\n\nTabularViewComponent\n\nTabularViewComponent\n\nAppModule -->\n\nTabularViewComponent->AppModule\n\n\n\n\n\nWikiButtonComponent\n\nWikiButtonComponent\n\nAppModule -->\n\nWikiButtonComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nIasMaterialModule\n\nIasMaterialModule\n\nAppModule -->\n\nIasMaterialModule->AppModule\n\n\n\n\n\nAlarmService\n\nAlarmService\n\nAppModule -->\n\nAlarmService->AppModule\n\n\n\n\n\nCdbService\n\nCdbService\n\nAppModule -->\n\nCdbService->AppModule\n\n\n\n\n\nHttpClientService\n\nHttpClientService\n\nAppModule -->\n\nHttpClientService->AppModule\n\n\n\n\n\nRoutingService\n\nRoutingService\n\nAppModule -->\n\nRoutingService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        15 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 classes\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alarms_date   (src/.../fixtures.ts)\n                        \n                        \n                            Assets   (src/.../settings.ts)\n                        \n                        \n                            BackendUrls   (src/.../settings.ts)\n                        \n                        \n                            datepipe   (src/.../fixtures.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            ExpectedFilteredTableRows   (src/.../fixtures.ts)\n                        \n                        \n                            ExpectedTableRows   (src/.../fixtures.ts)\n                        \n                        \n                            Locale   (src/.../settings.ts)\n                        \n                        \n                            MockAlarms   (src/.../fixtures.ts)\n                        \n                        \n                            MockAlarms   (src/.../fixtures.ts)\n                        \n                        \n                            MockIasios   (src/.../fixtures.ts)\n                        \n                        \n                            MockImageSet   (src/.../fixtures.ts)\n                        \n                        \n                            MockImageUnreliableSet   (src/.../fixtures.ts)\n                        \n                        \n                            StorageItems   (src/.../settings.ts)\n                        \n                        \n                            Streams   (src/.../settings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/tabular-view/fixtures.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alarms_date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alarms_date:     \n\n                    \n                \n                    \n                        \n                            Default value : new Date(Date.parse('27 Feb 2010 06:34:00 GMT'))\n                        \n                    \n\n                \n                    \n                        Fixed date to use on the tests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepipe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datepipe:     \n\n                    \n                \n                    \n                        \n                            Default value : new DatePipe('en')\n                        \n                    \n\n                \n                    \n                        Object used to format the dates as needed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ExpectedFilteredTableRows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ExpectedFilteredTableRows:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ExpectedTableRows[4],\n  ExpectedTableRows[11],\n  ExpectedTableRows[12],\n  ExpectedTableRows[13],\n  ExpectedTableRows[14],\n  ExpectedTableRows[21],\n]\n                        \n                    \n\n                \n                    \n                        Set of the rows the that the test expects on the Table after the filter \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ExpectedTableRows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ExpectedTableRows:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  // SET VALID NOT-ACK\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[21]), 'Alarm 44 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[0]), 'Alarm 1 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[20]), 'Alarm 43 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[22]), 'Alarm 47 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[1]), 'Alarm 2 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[2]), 'Alarm 3 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[3]), 'Alarm 4 description', 'https://www.alma.cl/'),\n\n  // SET VALID ACK\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[5]), 'Alarm 11 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[6]), 'Alarm 12 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[7]), 'Alarm 13 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[8]), 'Alarm 14 description', 'https://www.alma.cl/'),\n\n  // SET INVALID NOT-ACK\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[10]), 'Alarm 21 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[11]), 'Alarm 22 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[12]), 'Alarm 23 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[13]), 'Alarm 24 description', 'https://www.alma.cl/'),\n\n  // SET INVALID ACK\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[15]), 'Alarm 31 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[16]), 'Alarm 32 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[17]), 'Alarm 33 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[18]), 'Alarm 34 description', 'https://www.alma.cl/'),\n\n  // CLEARED:\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[4]), 'Alarm 5 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[9]), 'Alarm 15 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[14]), 'Alarm 25 description', 'https://www.alma.cl/'),\n  new DisplayedAlarm(Alarm.asAlarm(MockAlarms[19]), 'Alarm 35 description', 'https://www.alma.cl/'),\n]\n                        \n                    \n\n                \n                    \n                        Set of the rows the that the test expects on the Table \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MockAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockAlarms:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  // VALID NOT-ACK\n  {\n    'value': 4,\n    'core_id': 'coreid$1',\n    'running_id': 'coreid$1',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'coreid$2',\n    'running_id': 'coreid$2',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'coreid$3',\n    'running_id': 'coreid$3',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'coreid$4',\n    'running_id': 'coreid$4',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'coreid$5',\n    'running_id': 'coreid$5',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n\n  // VALID ACK\n  {\n    'value': 4,\n    'core_id': 'coreid$11',\n    'running_id': 'coreid$11',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'coreid$12',\n    'running_id': 'coreid$12',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'coreid$13',\n    'running_id': 'coreid$13',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'coreid$14',\n    'running_id': 'coreid$14',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'coreid$15',\n    'running_id': 'coreid$15',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n\n  // INVALID NOT-ACK\n  {\n    'value': 4,\n    'core_id': 'coreid$21',\n    'running_id': 'coreid$21',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'coreid$22',\n    'running_id': 'coreid$22',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'coreid$23',\n    'running_id': 'coreid$23',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'coreid$24',\n    'running_id': 'coreid$24',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'coreid$25',\n    'running_id': 'coreid$25',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n\n  // INVALID ACK\n  {\n    'value': 4,\n    'core_id': 'coreid$31',\n    'running_id': 'coreid$31',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'coreid$32',\n    'running_id': 'coreid$32',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'coreid$33',\n    'running_id': 'coreid$33',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'coreid$34',\n    'running_id': 'coreid$34',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'coreid$35',\n    'running_id': 'coreid$35',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': true,\n    'shelved': false,\n    'dependencies': [],\n  },\n\n  // Repetitions weith different modes:\n  {\n    'value': 4,\n    'core_id': 'coreid$43',\n    'running_id': 'coreid$43',\n    'mode': 3,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 4,\n    'core_id': 'coreid$44',\n    'running_id': 'coreid$44',\n    'mode': 4,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 4,\n    'core_id': 'coreid$47',\n    'running_id': 'coreid$47',\n    'mode': 7,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n]\n                        \n                    \n\n                \n                    \n                        Set of mock Alarms for the tests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MockIasios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockIasios:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n      io_id: 'coreid$1',\n      short_desc: 'Alarm 1 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$2',\n      short_desc: 'Alarm 2 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$3',\n      short_desc: 'Alarm 3 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$4',\n      short_desc: 'Alarm 4 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$5',\n      short_desc: 'Alarm 5 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$11',\n      short_desc: 'Alarm 11 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$12',\n      short_desc: 'Alarm 12 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$13',\n      short_desc: 'Alarm 13 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$14',\n      short_desc: 'Alarm 14 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$15',\n      short_desc: 'Alarm 15 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$21',\n      short_desc: 'Alarm 21 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$22',\n      short_desc: 'Alarm 22 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$23',\n      short_desc: 'Alarm 23 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$24',\n      short_desc: 'Alarm 24 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$25',\n      short_desc: 'Alarm 25 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$31',\n      short_desc: 'Alarm 31 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$32',\n      short_desc: 'Alarm 32 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$33',\n      short_desc: 'Alarm 33 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$34',\n      short_desc: 'Alarm 34 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$35',\n      short_desc: 'Alarm 35 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$40',\n      short_desc: 'Alarm 41 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$41',\n      short_desc: 'Alarm 41 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$42',\n      short_desc: 'Alarm 42 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$43',\n      short_desc: 'Alarm 43 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$44',\n      short_desc: 'Alarm 44 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$45',\n      short_desc: 'Alarm 45 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$46',\n      short_desc: 'Alarm 46 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$47',\n      short_desc: 'Alarm 47 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$48',\n      short_desc: 'Alarm 48 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n  {\n      io_id: 'coreid$49',\n      short_desc: 'Alarm 49 description',\n      ias_type: 'ALARM',\n      doc_url: 'https://www.alma.cl/'\n  },\n\n]\n                        \n                    \n\n                \n                    \n                        Set of mock IASIOS for the tests \n\n                    \n                \n\n            \n        \n\n    src/app/settings.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Assets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Assets:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  ICONS: '/assets/img/',\n}\n                        \n                    \n\n                \n                    \n                        Set that defines the locations of assets in the applicaiton \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BackendUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BackendUrls:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  TOKEN: '/get-token/',\n  CDB: '/cdb-api/',\n  CDB_IAS: '/cdb-api/ias/',\n  TICKETS: '/tickets/',\n  TICKETS_MULTIPLE_ACK: '/tickets-api/tickets/acknowledge/',\n  TICKETS_INFO: '/tickets-api/tickets/old_open_info/',\n  SHELVE_API: '/tickets-api/shelve-registries/',\n  UNSHELVE_API: '/tickets-api/shelve-registries/unshelve/',\n}\n                        \n                    \n\n                \n                    \n                        Set of URLs used to request data from the Backend \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Locale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Locale:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  DATE_FORMAT: 'yyyy-MM-ddTHH:mm:ss',\n  TIMEZONE: '+0000',\n}\n                        \n                    \n\n                \n                    \n                        Set of properties to set the formatting of dates \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            StorageItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        StorageItems:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  TOKEN: 'token',\n}\n                        \n                    \n\n                \n                    \n                        Set of items to store in the browser cache \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Streams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Streams:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  ALARMS: 'alarms',\n  UPDATES: 'requests',\n}\n                        \n                    \n\n                \n                    \n                        Set of websocket streams from where the applications to receives data from the Backend \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n  /** Indicates wether the environment is production or development */\n  production: true,\n\n  /** Path for websocket connection */\n  websocketPath: '/stream',\n\n  /** Base URL for HTTP requests */\n  httpUrl: '',\n\n  /** URL for HTTP requests to the CDB app */\n  cdbApiUrl: '/cdb-api',\n}\n                        \n                    \n\n                \n                    \n                        Environment variables related to the production environment \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\n  /** Indicates wether the environment is production or development */\n  production: false,\n\n  /** Path for websocket connection */\n  websocketPath: 'ws://127.0.0.1:8000/stream/',\n\n  /** Base URL for HTTP requests */\n  httpUrl: 'http://127.0.0.1:8000',\n\n  /** URL for HTTP requests to the CDB app */\n  cdbApiUrl: 'http://127.0.0.1:8000/cdb-api',\n}\n                        \n                    \n\n                \n                    \n                        Environment variables related to the production environment \n\n                    \n                \n\n            \n        \n\n    src/app/alarm/fixtures.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MockAlarms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockAlarms:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    'value': 4,\n    'core_id': 'critical',\n    'running_id': 'critical',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'high',\n    'running_id': 'high',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'medium',\n    'running_id': 'medium',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'low',\n    'running_id': 'low',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'clear',\n    'running_id': 'clear',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'unknown',\n    'running_id': 'unknown',\n    'mode': 7,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'maintenance',\n    'running_id': 'maintenance',\n    'mode': 4,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 1,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 4,\n    'core_id': 'critical_unreliable',\n    'running_id': 'critical_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 3,\n    'core_id': 'high_unreliable',\n    'running_id': 'high_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 2,\n    'core_id': 'medium_unreliable',\n    'running_id': 'medium_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 1,\n    'core_id': 'low_unreliable',\n    'running_id': 'low_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'clear_unreliable',\n    'running_id': 'clear_unreliable',\n    'mode': 5,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'unknown_unreliable',\n    'running_id': 'unknown_unreliable',\n    'mode': 7,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  },\n  {\n    'value': 0,\n    'core_id': 'maintenance_unreliable',\n    'running_id': 'maintenance_unreliable',\n    'mode': 4,\n    'core_timestamp': 1267252440000,\n    'state_change_timestamp': 1267252440000,\n    'validity': 0,\n    'ack': false,\n    'shelved': false,\n    'dependencies': [],\n  }\n]\n                        \n                    \n\n                \n                    \n                        Set of mock Alarms for the tests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MockImageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockImageSet:     \n\n                    \n                \n                    \n                        \n                            Default value : new AlarmImageSet({\n  clear: 'clear',\n  set_low: 'low',\n  set_medium: 'medium',\n  set_high: 'high',\n  set_critical: 'critical',\n  unknown: 'unknown',\n  maintenance: 'maintenance',\n  shelved: 'shelved',\n})\n                        \n                    \n\n                \n                    \n                        Set of mock icons alarms for the tests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MockImageUnreliableSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MockImageUnreliableSet:     \n\n                    \n                \n                    \n                        \n                            Default value : new AlarmImageSet({\n  clear: 'clear_unreliable',\n  set_low: 'low_unreliable',\n  set_medium: 'medium_unreliable',\n  set_high: 'high_unreliable',\n  set_critical: 'critical_unreliable',\n  unknown: 'unknown_unreliable',\n  maintenance: 'maintenance_unreliable',\n  shelved: 'shelved_unreliable',\n})\n                        \n                    \n\n                \n                    \n                        Set of mock icons for unreliable alarms for the tests \n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
